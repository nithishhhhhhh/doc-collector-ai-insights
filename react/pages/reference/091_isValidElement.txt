URL: https://react.dev/reference/react/isValidElement
Section: Reference
============================================================

# isValidElement
# isValidElement
isValidElement checks whether a value is a React element.
``````
- Reference isValidElement(value)
- Usage Checking if something is a React element
- isValidElement(value)
- Checking if something is a React element
## Reference
### isValidElement(value)
Call isValidElement(value) to check whether value is a React element.
``````
See more examples below.
#### Parameters
- value: The value you want to check. It can be any a value of any type.
#### Returns
isValidElement returns true if the value is a React element. Otherwise, it returns false.
#### Caveats
- Only JSX tags and objects returned by createElement are considered to be React elements. For example, even though a number like 42 is a valid React node (and can be returned from a component), it is not a valid React element. Arrays and portals created with createPortal are also not considered to be React elements.
## Usage
### Checking if something is a React element
Call isValidElement to check if some value is a React element.
React elements are:
- Values produced by writing a JSX tag
- Values produced by calling createElement
For React elements, isValidElement returns true:
``````
Any other values, such as strings, numbers, or arbitrary objects and arrays, are not React elements.
For them, isValidElement returns false:
``````
It is very uncommon to need isValidElement. It’s mostly useful if you’re calling another API that only accepts elements (like cloneElement does) and you want to avoid an error when your argument is not a React element.
Unless you have some very specific reason to add an isValidElement check, you probably don’t need it.
##### Deep Dive
#### React elements vs React nodes
When you write a component, you can return any kind of React node from it:
``````
A React node can be:
- A React element created like <div /> or createElement('div')
- A portal created with createPortal
- A string
- A number
- true, false, null, or undefined (which are not displayed)
- An array of other React nodes
Note isValidElement checks whether the argument is a React element, not whether it’s a React node. For example, 42 is not a valid React element. However, it is a perfectly valid React node:
``````
This is why you shouldn’t use isValidElement as a way to check whether something can be rendered.