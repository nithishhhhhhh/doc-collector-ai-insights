URL: https://fastapi.tiangolo.com/hu/
================================================================================

FastAPI
FastAPI keretrendszer, nagy teljes√≠tm√©ny, k√∂nnyen tanulhat√≥, gyorsan k√≥dolhat√≥, productionre k√©sz
Dokument√°ci√≥
:
https://fastapi.tiangolo.com
Forr√°s k√≥d
:
https://github.com/fastapi/fastapi
A FastAPI egy modern, gyors (nagy teljes√≠tm√©ny≈±), webes keretrendszer API-ok √©p√≠t√©s√©hez Python -al, a Python szabv√°nyos t√≠pusjel√∂l√©seire √©p√≠tve.
Kulcs funkci√≥k:
Gyors
: Nagyon nagy teljes√≠tm√©ny, a
NodeJS
-el √©s a
Go
-val egyenrang√∫ (a Starlettenek √©s a Pydantic-nek k√∂sz√∂nhet≈ëen).
Az egyik leggyorsabb Python keretrendszer
.
Gyorsan k√≥dolhat√≥
: A funkci√≥k fejleszt√©si sebess√©g√©t 200-300 sz√°zal√©kkal megn√∂veli. *
Kevesebb hiba
: K√∂r√ºlbel√ºl 40%-al cs√∂kkenti az emberi (fejleszt≈ëi) hib√°k sz√°m√°t. *
Intuit√≠v
: Kiv√°l√≥ szerkeszt≈ë t√°mogat√°s.
Kieg√©sz√≠t√©s
mindenhol. Kevesebb hibakeres√©ssel t√∂lt√∂tt id≈ë.
Egyszer≈±
: Egyszer≈± tanul√°sra √©s haszn√°latra tervezve. Kevesebb dokument√°ci√≥ olvas√°ssal t√∂lt√∂tt id≈ë.
R√∂vid
: K√≥d duplik√°ci√≥ minimaliz√°l√°sa. T√∂bb funkci√≥ minden param√©ter deklar√°l√°s√°val. Kevesebb hiba.
Robosztus
: Production ready k√≥d. Automatikus interakt√≠v dokument√°ci√≥ val.
Szabv√°ny alap√∫
: Az API-ok ny√≠lt szabv√°nyaira alapul√≥ (√©s azokkal teljesen kompatibilis):
OpenAPI
(kor√°bban Swagger n√©ven ismert) √©s a
JSON Schema
.
* Egy production alkalmaz√°sokat √©p√≠t≈ë bels≈ë fejleszt≈ëi csapat tesztjein alapul√≥ becsl√©s.
Szponzorok
Tov√°bbi szponzorok
V√©lem√©nyek
"
[...] I'm using
FastAPI
a ton these days. [...] I'm actually planning to use it for all of my team's
ML services at Microsoft
. Some of them are getting integrated into the core
Windows
product and some
Office
products.
"
Kabir Khan -
Microsoft
(ref)
"
We adopted the
FastAPI
library to spawn a
REST
server that can be queried to obtain
predictions
. [for Ludwig]
"
Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala -
Uber
(ref)
"
Netflix
is pleased to announce the open-source release of our
crisis management
orchestration framework:
Dispatch
! [built with
FastAPI
]
"
Kevin Glisson, Marc Vilanova, Forest Monsen -
Netflix
(ref)
"
I‚Äôm over the moon excited about
FastAPI
. It‚Äôs so fun!
"
Brian Okken -
Python Bytes
podcast host
(ref)
"
Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted
Hug
to be - it's really inspiring to see someone build that.
"
Timothy Crosley -
Hug
creator
(ref)
"
If you're looking to learn one
modern framework
for building REST APIs, check out
FastAPI
[...] It's fast, easy to use and easy to learn [...]
"
"
We've switched over to
FastAPI
for our
APIs
[...] I think you'll like it [...]
"
Ines Montani - Matthew Honnibal -
Explosion AI
founders -
spaCy
creators
(ref)
-
(ref)
"
If anyone is looking to build a production Python API, I would highly recommend
FastAPI
. It is
beautifully designed
,
simple to use
and
highly scalable
, it has become a
key component
in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.
"
Deon Pillsbury -
Cisco
(ref)
Typer
, a CLI-ok FastAPI-ja
Ha egy olyan CLI alkalmaz√°st fejlesztesz amit a parancssorban kell haszn√°lni webes API helyett, tekintsd meg:
Typer
.
Typer
a FastAPI kistestv√©re. A
CLI-k FastAPI-ja
. ‚å®Ô∏è üöÄ
K√∂vetelm√©nyek
A FastAPI √≥ri√°sok v√°ll√°n √°ll:
Starlette
a webes r√©szekhez.
Pydantic
az adat r√©szekhez.
Telep√≠t√©s
fast ‚Üí
pip install fastapi
restart ‚Üª
A production-h√∂z egy ASGI szerverre is sz√ºks√©g lesz, mint p√©ld√°ul az
Uvicorn
vagy a
Hypercorn
.
fast ‚Üí
pip install "uvicorn[standard]"
restart ‚Üª
P√©lda
Hozd l√©tre
Hozz l√©tre a
main.py
f√°jlt a k√∂vetkez≈ë tartalommal:
from
typing
import
Union
from
fastapi
import
FastAPI
app
=
FastAPI
()
@app
.
get
(
"/"
)
def
read_root
():
return
{
"Hello"
:
"World"
}
@app
.
get
(
"/items/
{item_id}
"
)
def
read_item
(
item_id
:
int
,
q
:
Union
[
str
,
None
]
=
None
):
return
{
"item_id"
:
item_id
,
"q"
:
q
}
Vagy haszn√°ld az
async def
-et...
Ha a k√≥dod
async
/
await
-et, haszn√°l
async def
:
from
typing
import
Union
from
fastapi
import
FastAPI
app
=
FastAPI
()
@app
.
get
(
"/"
)
async
def
read_root
():
return
{
"Hello"
:
"World"
}
@app
.
get
(
"/items/
{item_id}
"
)
async
def
read_item
(
item_id
:
int
,
q
:
Union
[
str
,
None
]
=
None
):
return
{
"item_id"
:
item_id
,
"q"
:
q
}
Megjegyz√©s
:
Ha nem tudod, tekintsd meg a
"Sietsz?"
szekci√≥t
async
√©s
await
-r≈ël dokument√°ci√≥ba
.
Futtasd le
Ind√≠tsd el a szervert a k√∂vetkez≈ë paranccsal:
fast ‚Üí
uvicorn main:app --reload
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [28720]
INFO:     Started server process [28722]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
restart ‚Üª
A parancsr√≥l
uvicorn main:app --reload
...
A
uvicorn main:app
parancs a k√∂vetkez≈ëre utal:
main
: f√°jl
main.py
(a Python "modul").
app
: a
main.py
-ban a
app = FastAPI()
sorral l√©trehozott objektum.
--reload
: k√≥d v√°ltoztat√°s eset√©n √∫jra ind√≠tja a szervert. Csak fejleszt√©s k√∂zben haszn√°land√≥.
Ellen≈ërizd
Nyisd meg a b√∂ng√©sz≈ëd a k√∂vetkez≈ë c√≠men:
http://127.0.0.1:8000/items/5?q=somequery
.
A k√∂vetkez≈ë JSON v√°laszt fogod l√°tni:
{
"item_id"
:
5
,
"q"
:
"somequery"
}
M√°ris l√©trehozt√°l egy API-t ami:
HTTP k√©r√©seket fogad a
/
√©s
/items/{item_id}
√∫tvonalakon
.
Mindk√©t
√∫tvonal
a
GET
m≈±veletet
haszn√°lja (m√°sik elnevez√©s: HTTP
met√≥dus
).
A
/items/{item_id}
√∫tvonalnak
van egy
path param√©tere
, az
item_id
, aminek
int
t√≠pus√∫nak kell lennie.
A
/items/{item_id}
√∫tvonalnak
m√©g van egy opcion√°lis,
str
t√≠pus√∫
query param√©tere
is, a
q
.
Interakt√≠v API dokument√°ci√≥
Most nyisd meg a
http://127.0.0.1:8000/docs
c√≠met.
Az automatikus interakt√≠v API dokument√°ci√≥t fogod l√°tni (amit a
Swagger UI
-al hozunk l√©tre):
Alternat√≠v API dokument√°ci√≥
√âs most menj el a
http://127.0.0.1:8000/redoc
c√≠mre.
Az alternat√≠v automatikus dokument√°ci√≥t fogod l√°tni. (l√°sd
ReDoc
):
P√©lda friss√≠t√©se
M√≥dos√≠tsuk a
main.py
f√°jlt, hogy
PUT
k√©r√©sek eset√©n tudjon body-t fogadni.
Deklar√°ld a body-t standard Python t√≠pusokkal, a Pydantic-nak k√∂sz√∂nhet≈ëen.
from
typing
import
Union
from
fastapi
import
FastAPI
from
pydantic
import
BaseModel
app
=
FastAPI
()
class
Item
(
BaseModel
):
name
:
str
price
:
float
is_offer
:
Union
[
bool
,
None
]
=
None
@app
.
get
(
"/"
)
def
read_root
():
return
{
"Hello"
:
"World"
}
@app
.
get
(
"/items/
{item_id}
"
)
def
read_item
(
item_id
:
int
,
q
:
Union
[
str
,
None
]
=
None
):
return
{
"item_id"
:
item_id
,
"q"
:
q
}
@app
.
put
(
"/items/
{item_id}
"
)
def
update_item
(
item_id
:
int
,
item
:
Item
):
return
{
"item_name"
:
item
.
name
,
"item_id"
:
item_id
}
A szerver automatikusan √∫jraindul (mert hozz√°adtuk a --reload param√©tert a fenti
uvicorn
parancshoz).
Interakt√≠v API dokument√°ci√≥ friss√≠t√©se
Most menj el a
http://127.0.0.1:8000/docs
c√≠mre.
Az interakt√≠v API dokument√°ci√≥ automatikusan friss√ºlt √≠gy m√°r benne van az √∫j body.
Kattints r√° a "Try it out" gombra, ennek seg√≠ts√©g√©vel kit√∂ltheted a param√©tereket √©s k√∂zvetlen haszn√°lhatod az API-t:
Ezut√°n kattints az "Execute" gompra, a felhaszn√°l√≥i fel√ºlet kommunik√°lni fog az API-oddal. Elk√ºldi a param√©tereket √©s a visszakapott v√°laszt megmutatja a k√©perny≈ëd√∂n.
Alternat√≠v API dokument√°ci√≥ friss√≠t√©s
Most menj el a
http://127.0.0.1:8000/redoc
c√≠mre.
Az alternat√≠v dokument√°ci√≥ szint√∫gy t√ºkr√∂zni fogja az √∫j k√©r√©si param√©ter √©s body-t.
√ñsszefoglal√°s
√ñsszegz√©s√ºl, deklar√°lod
egyszer
a param√©terek, body, stb t√≠pus√°t funkci√≥s param√©terekk√©nt.
Ezt standard modern Python t√≠pusokkal csin√°lod.
Nem kell √∫j szintaxist, vagy specifikus k√∂nyvt√°r mert met√≥d√≥sait, stb. megtanulnod.
Csak standard
Python
.
P√©ld√°ul egy
int
-nek:
item_id
:
int
Egy komplexebb
Item
modellnek:
item
:
Item
... √âs csup√°n egy deklar√°ci√≥val megkapod a:
Szerkeszt≈ë t√°mogat√°st, bele√©rtve:
Sz√∂vegkieg√©sz√≠t√©s.
T√≠pus ellen≈ërz√©s.
Adatok valid√°ci√≥ja:
Automatikus √©s √©rthet≈ë hib√°k amikor az adatok hib√°sak.
Valid√°ci√≥ m√©lyen √°gyazott objektumok eset√©n is.
Bemeneti adatok
√°tv√°lt√°sa
: a h√°l√≥zatr√≥l √©rkez≈ë Python adatokk√° √©s t√≠pusokk√°. Adatok olvas√°sa k√∂vetkez≈ë forr√°sokb√≥l:
JSON.
C√≠m param√©terek.
Query param√©terek.
Cookie-k.
Header-√∂k.
Formok.
F√°jlok.
Kimeneti adatok
√°tv√°lt√°sa
: Python adatok is t√≠pusokr√≥l h√°l√≥zati adatokk√°:
v√°lts √°t Python t√≠pusokat (
str
,
int
,
float
,
bool
,
list
, etc).
datetime
csak objektumokat.
UUID
objektumokat.
Adatb√°zis modelleket.
...√âs sok m√°st.
Automatikus interakt√≠v dokument√°ci√≥, bele√©rtve k√©t alternat√≠v dokument√°ci√≥t is:
Swagger UI.
ReDoc.
Visszat√©rve az el≈ëz≈ë k√≥d p√©ld√°hoz. A
FastAPI
:
Valid√°lja hogy van egy
item_id
mez≈ë a
GET
√©s
PUT
k√©r√©sekben.
Valid√°lja hogy az
item_id
int
t√≠pus√∫ a
GET
√©s
PUT
k√©r√©sekben.
Ha nem akkor l√°tni fogunk egy tiszta hib√°t ezzel kapcsolatban.
ellen≈ërzi hogyha van egy opcion√°lis query param√©ter
q
n√©vvel (azaz
http://127.0.0.1:8000/items/foo?q=somequery
)
GET
k√©r√©sek eset√©n.
Mivel a
q
param√©ter
= None
-al van deklar√°lva, ez√©rt opcion√°lis.
None
n√©lk√ºl ez a mez≈ë k√∂telez≈ë lenne (mint p√©ld√°ul a body
PUT
k√©r√©sek eset√©n).
a
/items/{item_id}
c√≠mre √©rkez≈ë
PUT
k√©r√©sek eset√©n, a JSON-t a k√∂vetkez≈ëk√©ppen olvassa be:
Ellen≈ërzi hogy l√©tezik a k√∂telez≈ë
name
nev≈± attrib√∫tum √©s
string
.
Ellen≈ërzi hogy l√©tezik a k√∂telez≈ë
price
nev≈± attrib√∫tum √©s
float
.
Ellen≈ërzi hogy l√©tezik a
is_offer
nev≈± opcion√°lis param√©ter, ami ha l√©tezik akkor
bool
Ez √°gyazott JSON objektumokkal is m≈±k√∂dik
JSONr≈ël val√≥ automatikus konvert√°l√°s.
dokument√°ljuk mindent OpenAPI-al amit haszn√°lhat√≥:
Interakt√≠v dokument√°ci√≥s rendszerekkel.
Automatikus kliens k√≥d gener√°l√≥ a rendszerekkel, t√∂bb nyelven.
Hozz√° tartozik kett≈ë interakt√≠v dokument√°ci√≥s web fel√ºlet.
Eddig csak a felsz√≠nt kapargattuk, de a l√©nyeg hogy most m√°r k√∂nnyebben √©rthet≈ë hogyan m≈±k√∂dik.
Pr√≥b√°ld kicser√©lni a k√∂vetkez≈ë sorban:
return
{
"item_name"
:
item
.
name
,
"item_id"
:
item_id
}
...ezt:
...
"item_name"
:
item
.
name
...
...erre:
...
"item_price"
:
item
.
price
...
... √âs figyeld meg hogy a szerkeszt≈ë automatikusan tudni fogja a t√≠pusokat √©s kieg√©sz√≠ti azokat:
Teljesebb p√©ld√°k√©rt √©s funkci√≥k√©rt tekintsd meg a
Tutorial - User Guide
-t.
Spoiler vesz√©ly
: a Tutorial - User Guidehoz tartozik:
Param√©terek
deklar√°ci√≥ja k√ºl√∂nb√∂z≈ë helyekr≈ël:
header-√∂k
,
cookie-k
,
form mez≈ëk
√©s
f√°jlok
.
Hogyan √°ll√≠ts be
valid√°ci√≥s felt√©teleket
mint a
maximum_length
vagy a
regex
.
Nagyon hat√©kony √©s er≈ës
F√ºgg≈ës√©g Injekci√≥
rendszerek.
Biztons√°g √©s autentik√°ci√≥ bele√©rtve,
OAuth2
,
JWT tokens
√©s
HTTP Basic
t√°mogat√°st.
T√∂bb halad√≥ (de ugyanannyira k√∂nny≈±) technika
m√©lyen √°gyazott JSON modellek deklar√°ci√≥j√°ra
(Pydantic-nek k√∂sz√∂nhet≈ëen).
GraphQL
integr√°ci√≥
Strawberry
-vel √©s m√°s k√∂nyvt√°rakkal.
t√∂bb extra funkci√≥ (Starlette-nek k√∂sz√∂nhet≈ëen) pl.:
WebSockets
rendk√≠v√ºl k√∂nny≈± tesztek HTTPX √©s
pytest
alapokra √©p√≠tve
CORS
Cookie Sessions
...√©s t√∂bb.
Teljes√≠tm√©ny
A f√ºggetlen TechEmpower benchmarkok szerint az Uvicorn alatt fut√≥
FastAPI
alkalmaz√°sok az
egyik leggyorsabb Python keretrendszerek k√∂z√© tartoznak
, √©ppen lemaradva a Starlette √©s az Uvicorn (melyeket a FastAPI bels≈ëleg haszn√°l) m√∂g√∂tt.(*)
Ezeknek a tov√°bbi meg√©rt√©s√©hez:
Benchmarks
.
Opcion√°lis k√∂vetelm√©nyek
Pydantic √°ltal haszn√°lt:
email-validator
- e-mail valid√°ci√≥kra.
pydantic-settings
- Be√°ll√≠t√°sok k√∂vet√©s√©re.
pydantic-extra-types
- Extra t√≠pusok Pydantic-hoz.
Starlette √°ltal haszn√°lt:
httpx
- K√∂vetelm√©ny ha a
TestClient
-et akarod haszn√°lni.
jinja2
- K√∂vetelm√©ny ha az alap template konfigur√°ci√≥t akarod haszn√°lni.
python-multipart
- K√∂vetelm√©ny ha
"parsing"
-ot akarsz t√°mogatni,
request.form()
-al.
itsdangerous
- K√∂vetelm√©ny
SessionMiddleware
t√°mogat√°shoz.
pyyaml
- K√∂vetelm√©ny a Starlette
SchemaGenerator
-√°nak t√°mogat√°s√°hoz (val√≥sz√≠n≈±leg erre nincs sz√ºks√©g FastAPI haszn√°l√°sa eset√©n).
FastAPI / Starlette √°ltal haszn√°lt
uvicorn
- Szerverekhez am√≠g bet√∂ltik √©s szolg√°ltatj√°k az applik√°ci√≥dat.
orjson
- K√∂vetelm√©ny ha
ORJSONResponse
-t akarsz haszn√°lni.
ujson
- K√∂vetelm√©ny ha
UJSONResponse
-t akarsz haszn√°lni.
Ezeket mind telep√≠theted a
pip install "fastapi[all]"
paranccsal.
Licensz
Ez a projekt az MIT license, licensz alatt fut