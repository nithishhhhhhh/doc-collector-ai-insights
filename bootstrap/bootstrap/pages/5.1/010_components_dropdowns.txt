URL: https://getbootstrap.com/docs/5.1/components/dropdowns
==================================================

Overview
Dropdowns are toggleable, contextual overlays for displaying lists of links and more. They’re made interactive with the included Bootstrap dropdown JavaScript plugin. They’re toggled by clicking, not by hovering; this is
an intentional design decision
Dropdowns are built on a third party library,
Popper
, which provides dynamic positioning and viewport detection. Be sure to include
popper.min.js
before Bootstrap’s JavaScript or use
which contains Popper. Popper isn’t used to position dropdowns in navbars though as dynamic positioning isn’t required.
Accessibility
ARIA
standard defines an actual
role="menu"
widget
, but this is specific to application-like menus which trigger actions or functions.
ARIA
menus can only contain menu items, checkbox menu items, radio button menu items, radio button groups, and sub-menus.
role
aria-
attributes required for true
ARIA
menus. Authors will have to include these more specific attributes themselves.
However, Bootstrap does add built-in support for most standard keyboard menu interactions, such as the ability to move through individual
.dropdown-item
elements using the cursor keys and close the menu with the
key.
Examples
Wrap the dropdown’s toggle (your button or link) and the dropdown menu within
.dropdown
, or another element that declares
position: relative;
. Dropdowns can be triggered from
<button>
elements to better fit your potential needs. The examples shown here use semantic
<ul>
elements where appropriate, but custom markup is supported.
Single button
Any single
.btn
can be turned into a dropdown toggle with some markup changes. Here’s how you can put them to work with either
<button>
elements:
Dropdown button
Action
Another action
Something else here
class
"dropdown"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenuButton1"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropdown button
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuButton1"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
And with
elements:
Dropdown link
Action
Another action
Something else here
class
"dropdown"
class
"btn btn-secondary dropdown-toggle"
href
role
"button"
"dropdownMenuLink"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropdown link
class
"dropdown-menu"
aria-labelledby
"dropdownMenuLink"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
The best part is you can do this with any button variant, too:
Primary
Action
Another action
Something else here
Separated link
Secondary
Action
Another action
Something else here
Separated link
Success
Action
Another action
Something else here
Separated link
Info
Action
Another action
Something else here
Separated link
Warning
Action
Another action
Something else here
Separated link
Danger
Action
Another action
Something else here
Separated link
<!-- Example single danger button -->
class
"btn-group"
button
type
"button"
class
"btn btn-danger dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Action
button
class
"dropdown-menu"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"dropdown-divider"
class
"dropdown-item"
href
Separated link
Split button
Similarly, create split button dropdowns with virtually the same markup as single button dropdowns, but with the addition of
.dropdown-toggle-split
for proper spacing around the dropdown caret.
We use this extra class to reduce the horizontal
padding
on either side of the caret by 25% and remove the
margin-left
that’s added for regular button dropdowns. Those extra changes keep the caret centered in the split button and provide a more appropriately sized hit area next to the main button.
Primary
Toggle Dropdown
Action
Another action
Something else here
Separated link
Secondary
Toggle Dropdown
Action
Another action
Something else here
Separated link
Success
Toggle Dropdown
Action
Another action
Something else here
Separated link
Info
Toggle Dropdown
Action
Another action
Something else here
Separated link
Warning
Toggle Dropdown
Action
Another action
Something else here
Separated link
Danger
Toggle Dropdown
Action
Another action
Something else here
Separated link
<!-- Example split danger button -->
class
"btn-group"
button
type
"button"
class
"btn btn-danger"
Action
button
button
type
"button"
class
"btn btn-danger dropdown-toggle dropdown-toggle-split"
data-bs-toggle
"dropdown"
aria-expanded
"false"
span
class
"visually-hidden"
Toggle Dropdown
span
button
class
"dropdown-menu"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"dropdown-divider"
class
"dropdown-item"
href
Separated link
Sizing
Button dropdowns work with buttons of all sizes, including default and split dropdown buttons.
Large button
Action
Another action
Something else here
Separated link
Large split button
Toggle Dropdown
Action
Another action
Something else here
Separated link
<!-- Large button groups (default and split) -->
class
"btn-group"
button
class
"btn btn-secondary btn-lg dropdown-toggle"
type
"button"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Large button
button
class
"dropdown-menu"
class
"btn-group"
button
class
"btn btn-secondary btn-lg"
type
"button"
Large split button
button
button
type
"button"
class
"btn btn-lg btn-secondary dropdown-toggle dropdown-toggle-split"
data-bs-toggle
"dropdown"
aria-expanded
"false"
span
class
"visually-hidden"
Toggle Dropdown
span
button
class
"dropdown-menu"
Small button
Action
Another action
Something else here
Separated link
Small split button
Toggle Dropdown
Action
Another action
Something else here
Separated link
class
"btn-group"
button
class
"btn btn-secondary btn-sm dropdown-toggle"
type
"button"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Small button
button
class
"dropdown-menu"
class
"btn-group"
button
class
"btn btn-secondary btn-sm"
type
"button"
Small split button
button
button
type
"button"
class
"btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split"
data-bs-toggle
"dropdown"
aria-expanded
"false"
span
class
"visually-hidden"
Toggle Dropdown
span
button
class
"dropdown-menu"
Dark dropdowns
Opt into darker dropdowns to match a dark navbar or custom style by adding
.dropdown-menu-dark
onto an existing
.dropdown-menu
. No changes are required to the dropdown items.
Dropdown button
Action
Another action
Something else here
Separated link
class
"dropdown"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenuButton2"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropdown button
button
class
"dropdown-menu dropdown-menu-dark"
aria-labelledby
"dropdownMenuButton2"
class
"dropdown-item active"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"dropdown-divider"
class
"dropdown-item"
href
Separated link
And putting it to use in a navbar:
class
"navbar navbar-expand-lg navbar-dark bg-dark"
class
"container-fluid"
class
"navbar-brand"
href
Navbar
button
class
"navbar-toggler"
type
"button"
data-bs-toggle
"collapse"
data-bs-target
"#navbarNavDarkDropdown"
aria-controls
"navbarNavDarkDropdown"
aria-expanded
"false"
aria-label
"Toggle navigation"
span
class
"navbar-toggler-icon"
span
button
class
"collapse navbar-collapse"
"navbarNavDarkDropdown"
class
"navbar-nav"
class
"nav-item dropdown"
class
"nav-link dropdown-toggle"
href
"navbarDarkDropdownMenuLink"
role
"button"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropdown
class
"dropdown-menu dropdown-menu-dark"
aria-labelledby
"navbarDarkDropdownMenuLink"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
Directions
Directions are mirrored when using Bootstrap in RTL, meaning
.dropstart
will appear on the right side.
Dropup
Trigger dropdown menus above elements by adding
.dropup
to the parent element.
Dropup
Action
Another action
Something else here
Separated link
Split dropup
Toggle Dropdown
Action
Another action
Something else here
Separated link
<!-- Default dropup button -->
class
"btn-group dropup"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropup
button
class
"dropdown-menu"
<!-- Dropdown menu links -->
<!-- Split dropup button -->
class
"btn-group dropup"
button
type
"button"
class
"btn btn-secondary"
Split dropup
button
button
type
"button"
class
"btn btn-secondary dropdown-toggle dropdown-toggle-split"
data-bs-toggle
"dropdown"
aria-expanded
"false"
span
class
"visually-hidden"
Toggle Dropdown
span
button
class
"dropdown-menu"
<!-- Dropdown menu links -->
Dropright
Trigger dropdown menus at the right of the elements by adding
.dropend
to the parent element.
Dropright
Action
Another action
Something else here
Separated link
Split dropend
Toggle Dropright
Action
Another action
Something else here
Separated link
<!-- Default dropend button -->
class
"btn-group dropend"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropright
button
class
"dropdown-menu"
<!-- Dropdown menu links -->
<!-- Split dropend button -->
class
"btn-group dropend"
button
type
"button"
class
"btn btn-secondary"
Split dropend
button
button
type
"button"
class
"btn btn-secondary dropdown-toggle dropdown-toggle-split"
data-bs-toggle
"dropdown"
aria-expanded
"false"
span
class
"visually-hidden"
Toggle Dropright
span
button
class
"dropdown-menu"
<!-- Dropdown menu links -->
Dropleft
Trigger dropdown menus at the left of the elements by adding
.dropstart
to the parent element.
Dropleft
Action
Another action
Something else here
Separated link
Toggle Dropleft
Action
Another action
Something else here
Separated link
Split dropstart
<!-- Default dropstart button -->
class
"btn-group dropstart"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropstart
button
class
"dropdown-menu"
<!-- Dropdown menu links -->
<!-- Split dropstart button -->
class
"btn-group"
class
"btn-group dropstart"
role
"group"
button
type
"button"
class
"btn btn-secondary dropdown-toggle dropdown-toggle-split"
data-bs-toggle
"dropdown"
aria-expanded
"false"
span
class
"visually-hidden"
Toggle Dropstart
span
button
class
"dropdown-menu"
<!-- Dropdown menu links -->
button
type
"button"
class
"btn btn-secondary"
Split dropstart
button
Menu items
You can use
<button>
elements as dropdown items.
Dropdown
Action
Another action
Something else here
class
"dropdown"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenu2"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropdown
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenu2"
button
class
"dropdown-item"
type
"button"
Action
button
button
class
"dropdown-item"
type
"button"
Another action
button
button
class
"dropdown-item"
type
"button"
Something else here
button
You can also create non-interactive dropdown items with
.dropdown-item-text
. Feel free to style further with custom CSS or text utilities.
Dropdown item text
Action
Another action
Something else here
class
"dropdown-menu"
span
class
"dropdown-item-text"
Dropdown item text
span
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
Active
.active
to items in the dropdown to
style them as active
. To convey the active state to assistive technologies, use the
aria-current
attribute — using the
page
value for the current page, or
true
for the current item in a set.
Regular link
Active link
Another link
class
"dropdown-menu"
class
"dropdown-item"
href
Regular link
class
"dropdown-item active"
href
aria-current
"true"
Active link
class
"dropdown-item"
href
Another link
Disabled
.disabled
to items in the dropdown to
style them as disabled
Regular link
Disabled link
Another link
class
"dropdown-menu"
class
"dropdown-item"
href
Regular link
class
"dropdown-item disabled"
Disabled link
class
"dropdown-item"
href
Another link
Menu alignment
By default, a dropdown menu is automatically positioned 100% from the top and along the left side of its parent. You can change this with the directional
.drop*
classes, but you can also control them with additional modifier classes.
.dropdown-menu-end
to a
.dropdown-menu
to right align the dropdown menu. Directions are mirrored when using Bootstrap in RTL, meaning
.dropdown-menu-end
will appear on the left side.
Heads up!
Dropdowns are positioned thanks to Popper except when they are contained in a navbar.
Right-aligned menu example
Action
Another action
Something else here
class
"btn-group"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Right-aligned menu example
button
class
"dropdown-menu dropdown-menu-end"
button
class
"dropdown-item"
type
"button"
Action
button
button
class
"dropdown-item"
type
"button"
Another action
button
button
class
"dropdown-item"
type
"button"
Something else here
button
Responsive alignment
If you want to use responsive alignment, disable dynamic positioning by adding the
data-bs-display="static"
attribute and use the responsive variation classes.
To align
right
the dropdown menu with the given breakpoint or larger, add
.dropdown-menu{-sm|-md|-lg|-xl|-xxl}-end
Left-aligned but right aligned when large screen
Action
Another action
Something else here
class
"btn-group"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
data-bs-display
"static"
aria-expanded
"false"
Left-aligned but right aligned when large screen
button
class
"dropdown-menu dropdown-menu-lg-end"
button
class
"dropdown-item"
type
"button"
Action
button
button
class
"dropdown-item"
type
"button"
Another action
button
button
class
"dropdown-item"
type
"button"
Something else here
button
To align
left
the dropdown menu with the given breakpoint or larger, add
.dropdown-menu-end
.dropdown-menu{-sm|-md|-lg|-xl|-xxl}-start
Right-aligned but left aligned when large screen
Action
Another action
Something else here
class
"btn-group"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
data-bs-display
"static"
aria-expanded
"false"
Right-aligned but left aligned when large screen
button
class
"dropdown-menu dropdown-menu-end dropdown-menu-lg-start"
button
class
"dropdown-item"
type
"button"
Action
button
button
class
"dropdown-item"
type
"button"
Another action
button
button
class
"dropdown-item"
type
"button"
Something else here
button
Note that you don’t need to add a
data-bs-display="static"
attribute to dropdown buttons in navbars, since Popper isn’t used in navbars.
Alignment options
Taking most of the options shown above, here’s a small kitchen sink demo of various dropdown alignment options in one place.
Dropdown
Menu item
Menu item
Menu item
Right-aligned menu
Menu item
Menu item
Menu item
Left-aligned, right-aligned lg
Menu item
Menu item
Menu item
Right-aligned, left-aligned lg
Menu item
Menu item
Menu item
Dropstart
Menu item
Menu item
Menu item
Dropend
Menu item
Menu item
Menu item
Dropup
Menu item
Menu item
Menu item
class
"btn-group"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenuButton"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropdown
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuButton"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Right-aligned menu
button
class
"dropdown-menu dropdown-menu-end"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
data-bs-display
"static"
aria-expanded
"false"
Left-aligned, right-aligned lg
button
class
"dropdown-menu dropdown-menu-lg-end"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
data-bs-display
"static"
aria-expanded
"false"
Right-aligned, left-aligned lg
button
class
"dropdown-menu dropdown-menu-end dropdown-menu-lg-start"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group dropstart"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropstart
button
class
"dropdown-menu"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group dropend"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropend
button
class
"dropdown-menu"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group dropup"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropup
button
class
"dropdown-menu"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
Menu content
Headers
Add a header to label sections of actions in any dropdown menu.
Dropdown header
Action
Another action
class
"dropdown-menu"
class
"dropdown-header"
Dropdown header
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
Dividers
Separate groups of related menu items with a divider.
Action
Another action
Something else here
Separated link
class
"dropdown-menu"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"dropdown-divider"
class
"dropdown-item"
href
Separated link
Text
Place any freeform text within a dropdown menu with text and use
spacing utilities
. Note that you’ll likely need additional sizing styles to constrain the menu width.
Some example text that's free-flowing within the dropdown menu.
And this is more example text.
class
"dropdown-menu p-4 text-muted"
style
"max-width: 200px;"
Some example text that's free-flowing within the dropdown menu.
class
"mb-0"
And this is more example text.
Forms
Put a form within a dropdown menu, or make it into a dropdown menu, and use
margin or padding utilities
to give it the negative space you require.
Email address
Password
Remember me
Sign in
New around here? Sign up
Forgot password?
class
"dropdown-menu"
form
class
"px-4 py-3"
class
"mb-3"
label
"exampleDropdownFormEmail1"
class
"form-label"
Email address
label
input
type
"email"
class
"form-control"
"exampleDropdownFormEmail1"
placeholder
"email@example.com"
class
"mb-3"
label
"exampleDropdownFormPassword1"
class
"form-label"
Password
label
input
type
"password"
class
"form-control"
"exampleDropdownFormPassword1"
placeholder
"Password"
class
"mb-3"
class
"form-check"
input
type
"checkbox"
class
"form-check-input"
"dropdownCheck"
label
class
"form-check-label"
"dropdownCheck"
Remember me
label
button
type
"submit"
class
"btn btn-primary"
Sign in
button
form
class
"dropdown-divider"
class
"dropdown-item"
href
New around here? Sign up
class
"dropdown-item"
href
Forgot password?
Email address
Password
Remember me
Sign in
form
class
"dropdown-menu p-4"
class
"mb-3"
label
"exampleDropdownFormEmail2"
class
"form-label"
Email address
label
input
type
"email"
class
"form-control"
"exampleDropdownFormEmail2"
placeholder
"email@example.com"
class
"mb-3"
label
"exampleDropdownFormPassword2"
class
"form-label"
Password
label
input
type
"password"
class
"form-control"
"exampleDropdownFormPassword2"
placeholder
"Password"
class
"mb-3"
class
"form-check"
input
type
"checkbox"
class
"form-check-input"
"dropdownCheck2"
label
class
"form-check-label"
"dropdownCheck2"
Remember me
label
button
type
"submit"
class
"btn btn-primary"
Sign in
button
form
Dropdown options
data-bs-offset
data-bs-reference
to change the location of the dropdown.
Offset
Action
Another action
Something else here
Reference
Toggle Dropdown
Action
Another action
Something else here
Separated link
class
"d-flex"
class
"dropdown me-1"
button
type
"button"
class
"btn btn-secondary dropdown-toggle"
"dropdownMenuOffset"
data-bs-toggle
"dropdown"
aria-expanded
"false"
data-bs-offset
"10,20"
Offset
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuOffset"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"btn-group"
button
type
"button"
class
"btn btn-secondary"
Reference
button
button
type
"button"
class
"btn btn-secondary dropdown-toggle dropdown-toggle-split"
"dropdownMenuReference"
data-bs-toggle
"dropdown"
aria-expanded
"false"
data-bs-reference
"parent"
span
class
"visually-hidden"
Toggle Dropdown
span
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuReference"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"dropdown-divider"
class
"dropdown-item"
href
Separated link
Auto close behavior
By default, the dropdown menu is closed when clicking inside or outside the dropdown menu. You can use the
autoClose
option to change this behavior of the dropdown.
Default dropdown
Menu item
Menu item
Menu item
Clickable outside
Menu item
Menu item
Menu item
Clickable inside
Menu item
Menu item
Menu item
Manual close
Menu item
Menu item
Menu item
class
"btn-group"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"defaultDropdown"
data-bs-toggle
"dropdown"
data-bs-auto-close
"true"
aria-expanded
"false"
Default dropdown
button
class
"dropdown-menu"
aria-labelledby
"defaultDropdown"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenuClickableOutside"
data-bs-toggle
"dropdown"
data-bs-auto-close
"inside"
aria-expanded
"false"
Clickable outside
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuClickableOutside"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenuClickableInside"
data-bs-toggle
"dropdown"
data-bs-auto-close
"outside"
aria-expanded
"false"
Clickable inside
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuClickableInside"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"btn-group"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenuClickable"
data-bs-toggle
"dropdown"
data-bs-auto-close
"false"
aria-expanded
"false"
Manual close
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuClickable"
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
class
"dropdown-item"
href
Menu item
Sass
Variables
Variables for all dropdowns:
$dropdown-min-width
$dropdown-padding-x
$dropdown-padding-y
$dropdown-spacer
.125
$dropdown-font-size
$font-size-base
$dropdown-color
$body-color
$dropdown-bg
$white
$dropdown-border-color
rgba
$black
$dropdown-border-radius
$border-radius
$dropdown-border-width
$border-width
$dropdown-inner-border-radius
subtract
$dropdown-border-radius
$dropdown-border-width
$dropdown-divider-bg
$dropdown-border-color
$dropdown-divider-margin-y
$spacer
$dropdown-box-shadow
$box-shadow
$dropdown-link-color
$gray-900
$dropdown-link-hover-color
shade-color
$dropdown-link-color
$dropdown-link-hover-bg
$gray-200
$dropdown-link-active-color
$component-active-color
$dropdown-link-active-bg
$component-active-bg
$dropdown-link-disabled-color
$gray-500
$dropdown-item-padding-y
$spacer
$dropdown-item-padding-x
$spacer
$dropdown-header-color
$gray-600
$dropdown-header-padding
$dropdown-padding-y
$dropdown-item-padding-x
Variables for the
dark dropdown
$dropdown-dark-color
$gray-300
$dropdown-dark-bg
$gray-800
$dropdown-dark-border-color
$dropdown-border-color
$dropdown-dark-divider-bg
$dropdown-divider-bg
$dropdown-dark-box-shadow
null
$dropdown-dark-link-color
$dropdown-dark-color
$dropdown-dark-link-hover-color
$white
$dropdown-dark-link-hover-bg
rgba
$white
$dropdown-dark-link-active-color
$dropdown-link-active-color
$dropdown-dark-link-active-bg
$dropdown-link-active-bg
$dropdown-dark-link-disabled-color
$gray-500
$dropdown-dark-header-color
$gray-500
Variables for the CSS-based carets that indicate a dropdown’s interactivity:
$caret-width
$caret-vertical-align
$caret-width
$caret-spacing
$caret-width
Mixins
Mixins are used to generate the CSS-based carets and can be found in
scss/mixins/_caret.scss
@mixin
caret-down
border-top
$caret-width
solid
border-right
$caret-width
solid
transparent
border-bottom
border-left
$caret-width
solid
transparent
@mixin
caret-up
border-top
border-right
$caret-width
solid
transparent
border-bottom
$caret-width
solid
border-left
$caret-width
solid
transparent
@mixin
caret-end
border-top
$caret-width
solid
transparent
border-right
border-bottom
$caret-width
solid
transparent
border-left
$caret-width
solid
@mixin
caret-start
border-top
$caret-width
solid
transparent
border-right
$caret-width
solid
border-bottom
$caret-width
solid
transparent
@mixin
caret
$direction
down
$enable-caret
::after
display
inline-block
margin-left
$caret-spacing
vertical-align
$caret-vertical-align
content
$direction
down
@include
caret-down
@else if
$direction
@include
caret-up
@else if
$direction
@include
caret-end
$direction
start
::after
display
none
::before
display
inline-block
margin-right
$caret-spacing
vertical-align
$caret-vertical-align
content
@include
caret-start
:empty::after
margin-left
Usage
Via data attributes or JavaScript, the dropdown plugin toggles hidden content (dropdown menus) by toggling the
.show
class on the parent
.dropdown-menu
. The
data-bs-toggle="dropdown"
attribute is relied on for closing dropdown menus at an application level, so it’s a good idea to always use it.
On touch-enabled devices, opening a dropdown adds empty
mouseover
handlers to the immediate children of the
<body>
element. This admittedly ugly hack is necessary to work around a
quirk in iOS' event delegation
, which would otherwise prevent a tap anywhere outside of the dropdown from triggering the code that closes the dropdown. Once the dropdown is closed, these additional empty
mouseover
handlers are removed.
Via data attributes
data-bs-toggle="dropdown"
to a link or button to toggle a dropdown.
class
"dropdown"
button
"dLabel"
type
"button"
data-bs-toggle
"dropdown"
aria-expanded
"false"
Dropdown trigger
button
class
"dropdown-menu"
aria-labelledby
"dLabel"
Via JavaScript
Call the dropdowns via JavaScript:
dropdownElementList
slice
call
document
querySelectorAll
'.dropdown-toggle'
dropdownList
dropdownElementList
function
dropdownToggleEl
return
Dropdown
dropdownToggleEl
data-bs-toggle="dropdown"
still required
Regardless of whether you call your dropdown via JavaScript or instead use the data-api,
data-bs-toggle="dropdown"
is always required to be present on the dropdown’s trigger element.
Options
Options can be passed via data attributes or JavaScript. For data attributes, append the option name to
data-bs-
, as in
data-bs-offset=""
. Make sure to change the case type of the option name from camelCase to kebab-case when passing the options via data attributes. For example, instead of using
data-bs-autoClose="false"
, use
data-bs-auto-close="false"
Name
Type
Default
Description
boundary
string | element
'clippingParents'
Overflow constraint boundary of the dropdown menu (applies only to Popper's preventOverflow modifier). By default it's
'clippingParents'
and can accept an HTMLElement reference (via JavaScript only). For more information refer to Popper's
detectOverflow docs
reference
string | element | object
'toggle'
Reference element of the dropdown menu. Accepts the values of
'toggle'
'parent'
, an HTMLElement reference or an object providing
getBoundingClientRect
. For more information refer to Popper's
constructor docs
virtual element docs
display
string
'dynamic'
By default, we use Popper for dynamic positioning. Disable this with
static
offset
array | string | function
[0, 2]
Offset of the dropdown relative to its target. You can pass a string in data attributes with comma separated values like:
data-bs-offset="10,20"
When a function is used to determine the offset, it is called with an object containing the popper placement, the reference, and popper rects as its first argument. The triggering element DOM node is passed as the second argument. The function must return an array with two numbers:
skidding
distance
For more information refer to Popper's
offset docs
autoClose
boolean | string
true
Configure the auto close behavior of the dropdown:
true
- the dropdown will be closed by clicking outside or inside the dropdown menu.
false
- the dropdown will be closed by clicking the toggle button and manually calling
hide
toggle
method. (Also will not be closed by pressing
key)
'inside'
- the dropdown will be closed (only) by clicking inside the dropdown menu.
'outside'
- the dropdown will be closed (only) by clicking outside the dropdown menu.
popperConfig
null | object | function
null
To change Bootstrap's default Popper config, see
Popper's configuration
When a function is used to create the Popper configuration, it's called with an object that contains the Bootstrap's default Popper configuration. It helps you use and merge the default with your own configuration. The function must return a configuration object for Popper.
Using function with
popperConfig
dropdown
Dropdown
element
popperConfig
function
defaultBsPopperConfig
// var newPopperConfig = {...}
// use defaultBsPopperConfig if needed...
// return newPopperConfig
Methods
Method
Description
toggle
Toggles the dropdown menu of a given navbar or tabbed navigation.
show
Shows the dropdown menu of a given navbar or tabbed navigation.
hide
Hides the dropdown menu of a given navbar or tabbed navigation.
update
Updates the position of an element's dropdown.
dispose
Destroys an element's dropdown. (Removes stored data on the DOM element)
getInstance
Static method which allows you to get the dropdown instance associated to a DOM element, you can use it like this:
getOrCreateInstance
Static method which returns a dropdown instance associated to a DOM element or create a new one in case it wasn't initialized.
You can use it like this:
Events
All dropdown events are fired at the toggling element and then bubbled up. So you can also add event listeners on the
.dropdown-menu
’s parent element.
hide.bs.dropdown
hidden.bs.dropdown
events have a
clickEvent
property (only when the original Event type is
click
) that contains an Event Object for the click event.
Method
Description
show.bs.dropdown
Fires immediately when the show instance method is called.
shown.bs.dropdown
Fired when the dropdown has been made visible to the user and CSS transitions have completed.
hide.bs.dropdown
Fires immediately when the hide instance method has been called.
hidden.bs.dropdown
Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.
myDropdown
document
getElementById
'myDropdown'
myDropdown
addEventListener
'show.bs.dropdown'
function
// do something...