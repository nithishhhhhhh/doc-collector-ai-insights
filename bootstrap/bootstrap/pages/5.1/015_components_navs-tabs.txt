URL: https://getbootstrap.com/docs/5.1/components/navs-tabs
==================================================

Base nav
Navigation available in Bootstrap share general markup and styles, from the base
.nav
class to the active and disabled states. Swap modifier classes to switch between each style.
The base
.nav
component is built with flexbox and provide a strong foundation for building all types of navigation components. It includes some style overrides (for working with lists), some link padding for larger hit areas, and basic disabled styling.
The base
.nav
component does not include any
.active
state. The following examples include the class, mainly to demonstrate that this particular class does not trigger any special styling.
To convey the active state to assistive technologies, use the
aria-current
attribute — using the
page
value for current page, or
true
for the current item in a set.
Active
Link
Link
Disabled
class
"nav"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Classes are used throughout, so your markup can be super flexible. Use
<ul>
s like above,
<ol>
if the order of your items is important, or roll your own with a
<nav>
element. Because the
.nav
uses
display: flex
, the nav links behave the same as nav items would, but without the extra markup.
class
"nav"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-link"
href
Link
class
"nav-link"
href
Link
class
"nav-link disabled"
Disabled
Available styles
Change the style of
.nav
s component with modifiers and utilities. Mix and match as needed, or build your own.
Horizontal alignment
Change the horizontal alignment of your nav with
flexbox utilities
. By default, navs are left-aligned, but you can easily change them to center or right aligned.
Centered with
.justify-content-center
Active
Link
Link
Disabled
class
"nav justify-content-center"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Right-aligned with
.justify-content-end
Active
Link
Link
Disabled
class
"nav justify-content-end"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Vertical
Stack your navigation by changing the flex item direction with the
.flex-column
utility. Need to stack them on some viewports but not others? Use the responsive versions (e.g.,
.flex-sm-column
Active
Link
Link
Disabled
class
"nav flex-column"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
As always, vertical navigation is possible without
<ul>
s, too.
class
"nav flex-column"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-link"
href
Link
class
"nav-link"
href
Link
class
"nav-link disabled"
Disabled
Tabs
Takes the basic nav from above and adds the
.nav-tabs
class to generate a tabbed interface. Use them to create tabbable regions with our
tab JavaScript plugin
Active
Link
Link
Disabled
class
"nav nav-tabs"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Pills
Take that same HTML, but use
.nav-pills
instead:
Active
Link
Link
Disabled
class
"nav nav-pills"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Fill and justify
Force your
.nav
’s contents to extend the full available width one of two modifier classes. To proportionately fill all available space with your
.nav-item
s, use
.nav-fill
. Notice that all horizontal space is occupied, but not every nav item has the same width.
Active
Much longer nav link
Link
Disabled
class
"nav nav-pills nav-fill"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Much longer nav link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
When using a
<nav>
-based navigation, you can safely omit
.nav-item
as only
.nav-link
is required for styling
elements.
class
"nav nav-pills nav-fill"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-link"
href
Much longer nav link
class
"nav-link"
href
Link
class
"nav-link disabled"
Disabled
For equal-width elements, use
.nav-justified
. All horizontal space will be occupied by nav links, but unlike the
.nav-fill
above, every nav item will be the same width.
Active
Much longer nav link
Link
Disabled
class
"nav nav-pills nav-justified"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item"
class
"nav-link"
href
Much longer nav link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Similar to the
.nav-fill
example using a
<nav>
-based navigation.
class
"nav nav-pills nav-justified"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-link"
href
Much longer nav link
class
"nav-link"
href
Link
class
"nav-link disabled"
Disabled
Working with flex utilities
If you need responsive nav variations, consider using a series of
flexbox utilities
. While more verbose, these utilities offer greater customization across responsive breakpoints. In the example below, our nav will be stacked on the lowest breakpoint, then adapt to a horizontal layout that fills the available width starting from the small breakpoint.
class
"nav nav-pills flex-column flex-sm-row"
class
"flex-sm-fill text-sm-center nav-link active"
aria-current
"page"
href
Active
class
"flex-sm-fill text-sm-center nav-link"
href
Longer nav link
class
"flex-sm-fill text-sm-center nav-link"
href
Link
class
"flex-sm-fill text-sm-center nav-link disabled"
Disabled
Regarding accessibility
If you’re using navs to provide a navigation bar, be sure to add a
role="navigation"
to the most logical parent container of the
<ul>
, or wrap a
<nav>
element around the whole navigation. Do not add the role to the
<ul>
itself, as this would prevent it from being announced as an actual list by assistive technologies.
Note that navigation bars, even if visually styled as tabs with the
.nav-tabs
class, should
be given
role="tablist"
role="tab"
role="tabpanel"
attributes. These are only appropriate for dynamic tabbed interfaces, as described in the
ARIA
Authoring Practices
. See
JavaScript behavior
for dynamic tabbed interfaces in this section for an example. The
aria-current
attribute is not necessary on dynamic tabbed interfaces since our JavaScript handles the selected state by adding
aria-selected="true"
on the active tab.
Using dropdowns
Add dropdown menus with a little extra HTML and the
dropdowns JavaScript plugin
Tabs with dropdowns
Active
Dropdown
Action
Another action
Something else here
Separated link
Link
Disabled
class
"nav nav-tabs"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item dropdown"
class
"nav-link dropdown-toggle"
data-bs-toggle
"dropdown"
href
role
"button"
aria-expanded
"false"
Dropdown
class
"dropdown-menu"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"dropdown-divider"
class
"dropdown-item"
href
Separated link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Pills with dropdowns
Active
Dropdown
Action
Another action
Something else here
Separated link
Link
Disabled
class
"nav nav-pills"
class
"nav-item"
class
"nav-link active"
aria-current
"page"
href
Active
class
"nav-item dropdown"
class
"nav-link dropdown-toggle"
data-bs-toggle
"dropdown"
href
role
"button"
aria-expanded
"false"
Dropdown
class
"dropdown-menu"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
class
"dropdown-divider"
class
"dropdown-item"
href
Separated link
class
"nav-item"
class
"nav-link"
href
Link
class
"nav-item"
class
"nav-link disabled"
Disabled
Sass
Variables
$nav-link-padding-y
$nav-link-padding-x
$nav-link-font-size
null
$nav-link-font-weight
null
$nav-link-color
$link-color
$nav-link-hover-color
$link-hover-color
$nav-link-transition
color
ease-in-out
background-color
ease-in-out
border-color
ease-in-out
$nav-link-disabled-color
$gray-600
$nav-tabs-border-color
$gray-300
$nav-tabs-border-width
$border-width
$nav-tabs-border-radius
$border-radius
$nav-tabs-link-hover-border-color
$gray-200
$gray-200
$nav-tabs-border-color
$nav-tabs-link-active-color
$gray-700
$nav-tabs-link-active-bg
$body-bg
$nav-tabs-link-active-border-color
$gray-300
$gray-300
$nav-tabs-link-active-bg
$nav-pills-border-radius
$border-radius
$nav-pills-link-active-color
$component-active-color
$nav-pills-link-active-bg
$component-active-bg
JavaScript behavior
Use the tab JavaScript plugin—include it individually or through the compiled
file—to extend our navigational tabs and pills to create tabbable panes of local content.
Dynamic tabbed interfaces, as described in the
ARIA
Authoring Practices
, require
role="tablist"
role="tab"
role="tabpanel"
, and additional
aria-
attributes in order to convey their structure, functionality and current state to users of assistive technologies (such as screen readers). As a best practice, we recommend using
<button>
elements for the tabs, as these are controls that trigger a dynamic change, rather than links that navigate to a new page or location.
Note that dynamic tabbed interfaces should
contain dropdown menus, as this causes both usability and accessibility issues. From a usability perspective, the fact that the currently displayed tab’s trigger element is not immediately visible (as it’s inside the closed dropdown menu) can cause confusion. From an accessibility point of view, there is currently no sensible way to map this sort of construct to a standard WAI ARIA pattern, meaning that it cannot be easily made understandable to users of assistive technologies.
Home
Profile
Contact
This is some placeholder content the Home tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Profile tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Contact tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
class
"nav nav-tabs"
"myTab"
role
"tablist"
class
"nav-item"
role
"presentation"
button
class
"nav-link active"
"home-tab"
data-bs-toggle
"tab"
data-bs-target
"#home"
type
"button"
role
"tab"
aria-controls
"home"
aria-selected
"true"
Home
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"profile-tab"
data-bs-toggle
"tab"
data-bs-target
"#profile"
type
"button"
role
"tab"
aria-controls
"profile"
aria-selected
"false"
Profile
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"contact-tab"
data-bs-toggle
"tab"
data-bs-target
"#contact"
type
"button"
role
"tab"
aria-controls
"contact"
aria-selected
"false"
Contact
button
class
"tab-content"
"myTabContent"
class
"tab-pane fade show active"
"home"
role
"tabpanel"
aria-labelledby
"home-tab"
class
"tab-pane fade"
"profile"
role
"tabpanel"
aria-labelledby
"profile-tab"
class
"tab-pane fade"
"contact"
role
"tabpanel"
aria-labelledby
"contact-tab"
To help fit your needs, this works with
<ul>
-based markup, as shown above, or with any arbitrary “roll your own” markup. Note that if you’re using
<nav>
, you shouldn’t add
role="tablist"
directly to it, as this would override the element’s native role as a navigation landmark. Instead, switch to an alternative element (in the example below, a simple
<div>
) and wrap the
<nav>
around it.
This is some placeholder content the Home tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Profile tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Contact tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
class
"nav nav-tabs"
"nav-tab"
role
"tablist"
button
class
"nav-link active"
"nav-home-tab"
data-bs-toggle
"tab"
data-bs-target
"#nav-home"
type
"button"
role
"tab"
aria-controls
"nav-home"
aria-selected
"true"
Home
button
button
class
"nav-link"
"nav-profile-tab"
data-bs-toggle
"tab"
data-bs-target
"#nav-profile"
type
"button"
role
"tab"
aria-controls
"nav-profile"
aria-selected
"false"
Profile
button
button
class
"nav-link"
"nav-contact-tab"
data-bs-toggle
"tab"
data-bs-target
"#nav-contact"
type
"button"
role
"tab"
aria-controls
"nav-contact"
aria-selected
"false"
Contact
button
class
"tab-content"
"nav-tabContent"
class
"tab-pane fade show active"
"nav-home"
role
"tabpanel"
aria-labelledby
"nav-home-tab"
class
"tab-pane fade"
"nav-profile"
role
"tabpanel"
aria-labelledby
"nav-profile-tab"
class
"tab-pane fade"
"nav-contact"
role
"tabpanel"
aria-labelledby
"nav-contact-tab"
The tabs plugin also works with pills.
Home
Profile
Contact
This is some placeholder content the Home tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Profile tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Contact tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
class
"nav nav-pills mb-3"
"pills-tab"
role
"tablist"
class
"nav-item"
role
"presentation"
button
class
"nav-link active"
"pills-home-tab"
data-bs-toggle
"pill"
data-bs-target
"#pills-home"
type
"button"
role
"tab"
aria-controls
"pills-home"
aria-selected
"true"
Home
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"pills-profile-tab"
data-bs-toggle
"pill"
data-bs-target
"#pills-profile"
type
"button"
role
"tab"
aria-controls
"pills-profile"
aria-selected
"false"
Profile
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"pills-contact-tab"
data-bs-toggle
"pill"
data-bs-target
"#pills-contact"
type
"button"
role
"tab"
aria-controls
"pills-contact"
aria-selected
"false"
Contact
button
class
"tab-content"
"pills-tabContent"
class
"tab-pane fade show active"
"pills-home"
role
"tabpanel"
aria-labelledby
"pills-home-tab"
class
"tab-pane fade"
"pills-profile"
role
"tabpanel"
aria-labelledby
"pills-profile-tab"
class
"tab-pane fade"
"pills-contact"
role
"tabpanel"
aria-labelledby
"pills-contact-tab"
And with vertical pills.
Home
Profile
Messages
Settings
This is some placeholder content the Home tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Profile tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Messages tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
This is some placeholder content the Settings tab's associated content.
Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other
.nav
-powered navigation.
class
"d-flex align-items-start"
class
"nav flex-column nav-pills me-3"
"v-pills-tab"
role
"tablist"
aria-orientation
"vertical"
button
class
"nav-link active"
"v-pills-home-tab"
data-bs-toggle
"pill"
data-bs-target
"#v-pills-home"
type
"button"
role
"tab"
aria-controls
"v-pills-home"
aria-selected
"true"
Home
button
button
class
"nav-link"
"v-pills-profile-tab"
data-bs-toggle
"pill"
data-bs-target
"#v-pills-profile"
type
"button"
role
"tab"
aria-controls
"v-pills-profile"
aria-selected
"false"
Profile
button
button
class
"nav-link"
"v-pills-messages-tab"
data-bs-toggle
"pill"
data-bs-target
"#v-pills-messages"
type
"button"
role
"tab"
aria-controls
"v-pills-messages"
aria-selected
"false"
Messages
button
button
class
"nav-link"
"v-pills-settings-tab"
data-bs-toggle
"pill"
data-bs-target
"#v-pills-settings"
type
"button"
role
"tab"
aria-controls
"v-pills-settings"
aria-selected
"false"
Settings
button
class
"tab-content"
"v-pills-tabContent"
class
"tab-pane fade show active"
"v-pills-home"
role
"tabpanel"
aria-labelledby
"v-pills-home-tab"
class
"tab-pane fade"
"v-pills-profile"
role
"tabpanel"
aria-labelledby
"v-pills-profile-tab"
class
"tab-pane fade"
"v-pills-messages"
role
"tabpanel"
aria-labelledby
"v-pills-messages-tab"
class
"tab-pane fade"
"v-pills-settings"
role
"tabpanel"
aria-labelledby
"v-pills-settings-tab"
Using data attributes
You can activate a tab or pill navigation without writing any JavaScript by simply specifying
data-bs-toggle="tab"
data-bs-toggle="pill"
on an element. Use these data attributes on
.nav-tabs
.nav-pills
<!-- Nav tabs -->
class
"nav nav-tabs"
"myTab"
role
"tablist"
class
"nav-item"
role
"presentation"
button
class
"nav-link active"
"home-tab"
data-bs-toggle
"tab"
data-bs-target
"#home"
type
"button"
role
"tab"
aria-controls
"home"
aria-selected
"true"
Home
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"profile-tab"
data-bs-toggle
"tab"
data-bs-target
"#profile"
type
"button"
role
"tab"
aria-controls
"profile"
aria-selected
"false"
Profile
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"messages-tab"
data-bs-toggle
"tab"
data-bs-target
"#messages"
type
"button"
role
"tab"
aria-controls
"messages"
aria-selected
"false"
Messages
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"settings-tab"
data-bs-toggle
"tab"
data-bs-target
"#settings"
type
"button"
role
"tab"
aria-controls
"settings"
aria-selected
"false"
Settings
button
<!-- Tab panes -->
class
"tab-content"
class
"tab-pane active"
"home"
role
"tabpanel"
aria-labelledby
"home-tab"
class
"tab-pane"
"profile"
role
"tabpanel"
aria-labelledby
"profile-tab"
class
"tab-pane"
"messages"
role
"tabpanel"
aria-labelledby
"messages-tab"
class
"tab-pane"
"settings"
role
"tabpanel"
aria-labelledby
"settings-tab"
Via JavaScript
Enable tabbable tabs via JavaScript (each tab needs to be activated individually):
triggerTabList
slice
call
document
querySelectorAll
'#myTab button'
triggerTabList
forEach
function
triggerEl
tabTrigger
triggerEl
triggerEl
addEventListener
'click'
function
event
event
preventDefault
tabTrigger
show
You can activate individual tabs in several ways:
triggerEl
document
querySelector
'#myTab button[data-bs-target="#profile"]'
getInstance
triggerEl
show
// Select tab by name
triggerFirstTabEl
document
querySelector
'#myTab li:first-child button'
getInstance
triggerFirstTabEl
show
// Select first tab
Fade effect
To make tabs fade in, add
.fade
to each
.tab-pane
. The first tab pane must also have
.show
to make the initial content visible.
class
"tab-content"
class
"tab-pane fade show active"
"home"
role
"tabpanel"
aria-labelledby
"home-tab"
class
"tab-pane fade"
"profile"
role
"tabpanel"
aria-labelledby
"profile-tab"
class
"tab-pane fade"
"messages"
role
"tabpanel"
aria-labelledby
"messages-tab"
class
"tab-pane fade"
"settings"
role
"tabpanel"
aria-labelledby
"settings-tab"
Methods
Asynchronous methods and transitions
All API methods are
asynchronous
and start a
transition
. They return to the caller as soon as the transition is started but
before it ends
. In addition, a method call on a
transitioning component will be ignored
See our JavaScript documentation for more information
constructor
Activates a tab element and content container. Tab should have either a
data-bs-target
or, if using a link, an
href
attribute, targeting a container node in the DOM.
class
"nav nav-tabs"
"myTab"
role
"tablist"
class
"nav-item"
role
"presentation"
button
class
"nav-link active"
"home-tab"
data-bs-toggle
"tab"
data-bs-target
"#home"
type
"button"
role
"tab"
aria-controls
"home"
aria-selected
"true"
Home
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"profile-tab"
data-bs-toggle
"tab"
data-bs-target
"#profile"
type
"button"
role
"tab"
aria-controls
"profile"
aria-selected
"false"
Profile
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"messages-tab"
data-bs-toggle
"tab"
data-bs-target
"#messages"
type
"button"
role
"tab"
aria-controls
"messages"
aria-selected
"false"
Messages
button
class
"nav-item"
role
"presentation"
button
class
"nav-link"
"settings-tab"
data-bs-toggle
"tab"
data-bs-target
"#settings"
type
"button"
role
"tab"
aria-controls
"settings"
aria-selected
"false"
Settings
button
class
"tab-content"
class
"tab-pane active"
"home"
role
"tabpanel"
aria-labelledby
"home-tab"
class
"tab-pane"
"profile"
role
"tabpanel"
aria-labelledby
"profile-tab"
class
"tab-pane"
"messages"
role
"tabpanel"
aria-labelledby
"messages-tab"
class
"tab-pane"
"settings"
role
"tabpanel"
aria-labelledby
"settings-tab"
script
firstTabEl
document
querySelector
'#myTab li:last-child button'
firstTab
firstTabEl
firstTab
show
script
show
Selects the given tab and shows its associated pane. Any other tab that was previously selected becomes unselected and its associated pane is hidden.
Returns to the caller before the tab pane has actually been shown
(i.e. before the
shown.bs.tab
event occurs).
someTabTriggerEl
document
querySelector
'#someTabTrigger'
someTabTriggerEl
show
dispose
Destroys an element’s tab.
getInstance
Static
method which allows you to get the tab instance associated with a DOM element
triggerEl
document
querySelector
'#trigger'
getInstance
triggerEl
// Returns a Bootstrap tab instance
getOrCreateInstance
Static
method which allows you to get the tab instance associated with a DOM element, or create a new one in case it wasn’t initialized
triggerEl
document
querySelector
'#trigger'
getOrCreateInstance
triggerEl
// Returns a Bootstrap tab instance
Events
When showing a new tab, the events fire in the following order:
hide.bs.tab
(on the current active tab)
show.bs.tab
(on the to-be-shown tab)
hidden.bs.tab
(on the previous active tab, the same one as for the
hide.bs.tab
event)
shown.bs.tab
(on the newly-active just-shown tab, the same one as for the
show.bs.tab
event)
If no tab was already active, then the
hide.bs.tab
hidden.bs.tab
events will not be fired.
Event type
Description
show.bs.tab
This event fires on tab show, but before the new tab has been shown. Use
event.target
event.relatedTarget
to target the active tab and the previous active tab (if available) respectively.
shown.bs.tab
This event fires on tab show after a tab has been shown. Use
event.target
event.relatedTarget
to target the active tab and the previous active tab (if available) respectively.
hide.bs.tab
This event fires when a new tab is to be shown (and thus the previous active tab is to be hidden). Use
event.target
event.relatedTarget
to target the current active tab and the new soon-to-be-active tab, respectively.
hidden.bs.tab
This event fires after a new tab is shown (and thus the previous active tab is hidden). Use
event.target
event.relatedTarget
to target the previous active tab and the new active tab, respectively.
tabEl
document
querySelector
'button[data-bs-toggle="tab"]'
tabEl
addEventListener
'shown.bs.tab'
function
event
event
target
// newly activated tab
event
relatedTarget
// previous active tab