URL: https://getbootstrap.com/docs/5.1/components/offcanvas
==================================================

How it works
Offcanvas is a sidebar component that can be toggled via JavaScript to appear from the left, right, or bottom edge of the viewport. Buttons or anchors are used as triggers that are attached to specific elements you toggle, and
data
attributes are used to invoke our JavaScript.
Offcanvas shares some of the same JavaScript code as modals. Conceptually, they are quite similar, but they are separate plugins.
Similarly, some
source Sass
variables for offcanvas’s styles and dimensions are inherited from the modal’s variables.
When shown, offcanvas includes a default backdrop that can be clicked to hide the offcanvas.
Similar to modals, only one offcanvas can be shown at a time.
Heads up!
Given how CSS handles animations, you cannot use
margin
translate
on an
.offcanvas
element. Instead, use the class as an independent wrapping element.
The animation effect of this component is dependent on the
prefers-reduced-motion
media query. See the
reduced motion section of our accessibility documentation
Examples
Offcanvas components
Below is an offcanvas example that is shown by default (via
.show
.offcanvas
). Offcanvas includes support for a header with a close button and an optional body class for some initial
padding
. We suggest that you include offcanvas headers with dismiss actions whenever possible, or provide an explicit dismiss action.
Offcanvas
Content for the offcanvas goes here. You can place just about any Bootstrap component or custom elements here.
class
"offcanvas offcanvas-start"
tabindex
"-1"
"offcanvas"
aria-labelledby
"offcanvasLabel"
class
"offcanvas-header"
class
"offcanvas-title"
"offcanvasLabel"
Offcanvas
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body"
Content for the offcanvas goes here. You can place just about any Bootstrap component or custom elements here.
Live demo
Use the buttons below to show and hide an offcanvas element via JavaScript that toggles the
.show
class on an element with the
.offcanvas
class.
.offcanvas
hides content (default)
.offcanvas.show
shows content
You can use a link with the
href
attribute, or a button with the
data-bs-target
attribute. In both cases, the
data-bs-toggle="offcanvas"
is required.
Link with href
Button with data-bs-target
Offcanvas
Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
Dropdown button
Action
Another action
Something else here
class
"btn btn-primary"
data-bs-toggle
"offcanvas"
href
"#offcanvasExample"
role
"button"
aria-controls
"offcanvasExample"
Link with href
button
class
"btn btn-primary"
type
"button"
data-bs-toggle
"offcanvas"
data-bs-target
"#offcanvasExample"
aria-controls
"offcanvasExample"
Button with data-bs-target
button
class
"offcanvas offcanvas-start"
tabindex
"-1"
"offcanvasExample"
aria-labelledby
"offcanvasExampleLabel"
class
"offcanvas-header"
class
"offcanvas-title"
"offcanvasExampleLabel"
Offcanvas
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body"
Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
class
"dropdown mt-3"
button
class
"btn btn-secondary dropdown-toggle"
type
"button"
"dropdownMenuButton"
data-bs-toggle
"dropdown"
Dropdown button
button
class
"dropdown-menu"
aria-labelledby
"dropdownMenuButton"
class
"dropdown-item"
href
Action
class
"dropdown-item"
href
Another action
class
"dropdown-item"
href
Something else here
Placement
There’s no default placement for offcanvas components, so you must add one of the modifier classes below;
.offcanvas-start
places offcanvas on the left of the viewport (shown above)
.offcanvas-end
places offcanvas on the right of the viewport
.offcanvas-top
places offcanvas on the top of the viewport
.offcanvas-bottom
places offcanvas on the bottom of the viewport
Try the top, right, and bottom examples out below.
Toggle top offcanvas
Offcanvas top
button
class
"btn btn-primary"
type
"button"
data-bs-toggle
"offcanvas"
data-bs-target
"#offcanvasTop"
aria-controls
"offcanvasTop"
Toggle top offcanvas
button
class
"offcanvas offcanvas-top"
tabindex
"-1"
"offcanvasTop"
aria-labelledby
"offcanvasTopLabel"
class
"offcanvas-header"
"offcanvasTopLabel"
Offcanvas top
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body"
Toggle right offcanvas
Offcanvas right
button
class
"btn btn-primary"
type
"button"
data-bs-toggle
"offcanvas"
data-bs-target
"#offcanvasRight"
aria-controls
"offcanvasRight"
Toggle right offcanvas
button
class
"offcanvas offcanvas-end"
tabindex
"-1"
"offcanvasRight"
aria-labelledby
"offcanvasRightLabel"
class
"offcanvas-header"
"offcanvasRightLabel"
Offcanvas right
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body"
Toggle bottom offcanvas
Offcanvas bottom
button
class
"btn btn-primary"
type
"button"
data-bs-toggle
"offcanvas"
data-bs-target
"#offcanvasBottom"
aria-controls
"offcanvasBottom"
Toggle bottom offcanvas
button
class
"offcanvas offcanvas-bottom"
tabindex
"-1"
"offcanvasBottom"
aria-labelledby
"offcanvasBottomLabel"
class
"offcanvas-header"
class
"offcanvas-title"
"offcanvasBottomLabel"
Offcanvas bottom
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body small"
Backdrop
Scrolling the
<body>
element is disabled when an offcanvas and its backdrop are visible. Use the
data-bs-scroll
attribute to toggle
<body>
scrolling and
data-bs-backdrop
to toggle the backdrop.
Enable body scrolling
Enable backdrop (default)
Enable both scrolling & backdrop
Colored with scrolling
Try scrolling the rest of the page to see this option in action.
Offcanvas with backdrop
.....
Backdrop with scrolling
Try scrolling the rest of the page to see this option in action.
button
class
"btn btn-primary"
type
"button"
data-bs-toggle
"offcanvas"
data-bs-target
"#offcanvasScrolling"
aria-controls
"offcanvasScrolling"
Enable body scrolling
button
button
class
"btn btn-primary"
type
"button"
data-bs-toggle
"offcanvas"
data-bs-target
"#offcanvasWithBackdrop"
aria-controls
"offcanvasWithBackdrop"
Enable backdrop (default)
button
button
class
"btn btn-primary"
type
"button"
data-bs-toggle
"offcanvas"
data-bs-target
"#offcanvasWithBothOptions"
aria-controls
"offcanvasWithBothOptions"
Enable both scrolling
backdrop
button
class
"offcanvas offcanvas-start"
data-bs-scroll
"true"
data-bs-backdrop
"false"
tabindex
"-1"
"offcanvasScrolling"
aria-labelledby
"offcanvasScrollingLabel"
class
"offcanvas-header"
class
"offcanvas-title"
"offcanvasScrollingLabel"
Colored with scrolling
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body"
Try scrolling the rest of the page to see this option in action.
class
"offcanvas offcanvas-start"
tabindex
"-1"
"offcanvasWithBackdrop"
aria-labelledby
"offcanvasWithBackdropLabel"
class
"offcanvas-header"
class
"offcanvas-title"
"offcanvasWithBackdropLabel"
Offcanvas with backdrop
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body"
.....
class
"offcanvas offcanvas-start"
data-bs-scroll
"true"
tabindex
"-1"
"offcanvasWithBothOptions"
aria-labelledby
"offcanvasWithBothOptionsLabel"
class
"offcanvas-header"
class
"offcanvas-title"
"offcanvasWithBothOptionsLabel"
Backdrop with scrolling
button
type
"button"
class
"btn-close text-reset"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
class
"offcanvas-body"
Try scrolling the rest of the page to see this option in action.
Accessibility
Since the offcanvas panel is conceptually a modal dialog, be sure to add
aria-labelledby="..."
—referencing the offcanvas title—to
.offcanvas
. Note that you don’t need to add
role="dialog"
since we already add it via JavaScript.
Sass
Variables
$offcanvas-padding-y
$modal-inner-padding
$offcanvas-padding-x
$modal-inner-padding
$offcanvas-horizontal-width
$offcanvas-vertical-height
$offcanvas-transition-duration
$offcanvas-border-color
$modal-content-border-color
$offcanvas-border-width
$modal-content-border-width
$offcanvas-title-line-height
$modal-title-line-height
$offcanvas-bg-color
$modal-content-bg
$offcanvas-color
$modal-content-color
$offcanvas-box-shadow
$modal-content-box-shadow-xs
$offcanvas-backdrop-bg
$modal-backdrop-bg
$offcanvas-backdrop-opacity
$modal-backdrop-opacity
Usage
The offcanvas plugin utilizes a few classes and attributes to handle the heavy lifting:
.offcanvas
hides the content
.offcanvas.show
shows the content
.offcanvas-start
hides the offcanvas on the left
.offcanvas-end
hides the offcanvas on the right
.offcanvas-bottom
hides the offcanvas on the bottom
Add a dismiss button with the
data-bs-dismiss="offcanvas"
attribute, which triggers the JavaScript functionality. Be sure to use the
<button>
element with it for proper behavior across all devices.
Via data attributes
Toggle
data-bs-toggle="offcanvas"
and a
data-bs-target
href
to the element to automatically assign control of one offcanvas element. The
data-bs-target
attribute accepts a CSS selector to apply the offcanvas to. Be sure to add the class
offcanvas
to the offcanvas element. If you’d like it to default open, add the additional class
show
Dismiss
Dismissal can be achieved with the
data
attribute on a button
within the offcanvas
as demonstrated below:
button
type
"button"
class
"btn-close"
data-bs-dismiss
"offcanvas"
aria-label
"Close"
button
or on a button
outside the offcanvas
using the
data-bs-target
as demonstrated below:
button
type
"button"
class
"btn-close"
data-bs-dismiss
"offcanvas"
data-bs-target
"#my-offcanvas"
aria-label
"Close"
button
While both ways to dismiss an offcanvas are supported, keep in mind that dismissing from outside an offcanvas does not match
the WAI-ARIA modal dialog design pattern
. Do this at your own risk.
Via JavaScript
Enable manually with:
offcanvasElementList
slice
call
document
querySelectorAll
'.offcanvas'
offcanvasList
offcanvasElementList
function
offcanvasEl
return
Offcanvas
offcanvasEl
Options
Options can be passed via data attributes or JavaScript. For data attributes, append the option name to
data-bs-
, as in
data-bs-backdrop=""
Name
Type
Default
Description
backdrop
boolean
true
Apply a backdrop on body while offcanvas is open
keyboard
boolean
true
Closes the offcanvas when escape key is pressed
scroll
boolean
false
Allow body scrolling while offcanvas is open
Methods
Asynchronous methods and transitions
All API methods are
asynchronous
and start a
transition
. They return to the caller as soon as the transition is started but
before it ends
. In addition, a method call on a
transitioning component will be ignored
See our JavaScript documentation for more information
Activates your content as an offcanvas element. Accepts an optional options
object
You can create an offcanvas instance with the constructor, for example:
myOffcanvas
document
getElementById
'myOffcanvas'
bsOffcanvas
Offcanvas
myOffcanvas
Method
Description
toggle
Toggles an offcanvas element to shown or hidden.
Returns to the caller before the offcanvas element has actually been shown or hidden
(i.e. before the
shown.bs.offcanvas
hidden.bs.offcanvas
event occurs).
show
Shows an offcanvas element.
Returns to the caller before the offcanvas element has actually been shown
(i.e. before the
shown.bs.offcanvas
event occurs).
hide
Hides an offcanvas element.
Returns to the caller before the offcanvas element has actually been hidden
(i.e. before the
hidden.bs.offcanvas
event occurs).
getInstance
Static
method which allows you to get the offcanvas instance associated with a DOM element
getOrCreateInstance
Static
method which allows you to get the offcanvas instance associated with a DOM element, or create a new one in case it wasn’t initialized
Events
Event type
Description
show.bs.offcanvas
This event fires immediately when the
show
instance method is called.
shown.bs.offcanvas
This event is fired when an offcanvas element has been made visible to the user (will wait for CSS transitions to complete).
hide.bs.offcanvas
This event is fired immediately when the
hide
method has been called.
hidden.bs.offcanvas
This event is fired when an offcanvas element has been hidden from the user (will wait for CSS transitions to complete).
myOffcanvas
document
getElementById
'myOffcanvas'
myOffcanvas
addEventListener
'hidden.bs.offcanvas'
function
// do something...