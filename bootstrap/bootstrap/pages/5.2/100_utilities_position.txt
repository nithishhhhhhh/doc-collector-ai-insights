URL: https://getbootstrap.com/docs/5.2/utilities/position
==================================================

Position values
Quick positioning classes are available, though they are not responsive.
class
"position-static"
class
"position-relative"
class
"position-absolute"
class
"position-fixed"
class
"position-sticky"
Arrange elements
Arrange elements easily with the edge positioning utilities. The format is
{property}-{position}
Where
property
is one of:
- for the vertical
position
start
- for the horizontal
left
position (in LTR)
bottom
- for the vertical
bottom
position
- for the horizontal
right
position (in LTR)
Where
position
is one of:
- for
edge position
- for
edge position
- for
100%
edge position
(You can add more position values by adding entries to the
$position-values
Sass map variable.)
html
class
"position-relative"
class
"position-absolute top-0 start-0"
class
"position-absolute top-0 end-0"
class
"position-absolute top-50 start-50"
class
"position-absolute bottom-50 end-50"
class
"position-absolute bottom-0 start-0"
class
"position-absolute bottom-0 end-0"
Center elements
In addition, you can also center the elements with the transform utility class
.translate-middle
This class applies the transformations
translateX(-50%)
translateY(-50%)
to the element which, in combination with the edge positioning utilities, allows you to absolute center an element.
html
class
"position-relative"
class
"position-absolute top-0 start-0 translate-middle"
class
"position-absolute top-0 start-50 translate-middle"
class
"position-absolute top-0 start-100 translate-middle"
class
"position-absolute top-50 start-0 translate-middle"
class
"position-absolute top-50 start-50 translate-middle"
class
"position-absolute top-50 start-100 translate-middle"
class
"position-absolute top-100 start-0 translate-middle"
class
"position-absolute top-100 start-50 translate-middle"
class
"position-absolute top-100 start-100 translate-middle"
By adding
.translate-middle-x
.translate-middle-y
classes, elements can be positioned only in horizontal or vertical direction.
html
class
"position-relative"
class
"position-absolute top-0 start-0"
class
"position-absolute top-0 start-50 translate-middle-x"
class
"position-absolute top-0 end-0"
class
"position-absolute top-50 start-0 translate-middle-y"
class
"position-absolute top-50 start-50 translate-middle"
class
"position-absolute top-50 end-0 translate-middle-y"
class
"position-absolute bottom-0 start-0"
class
"position-absolute bottom-0 start-50 translate-middle-x"
class
"position-absolute bottom-0 end-0"
Examples
Here are some real life examples of these classes:
Mails
unread messages
Marker
Alerts
unread messages
html
button
type
"button"
class
"btn btn-primary position-relative"
Mails
span
class
"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary"
span
class
"visually-hidden"
unread messages
span
span
button
button
type
"button"
class
"btn btn-dark position-relative"
Marker
width
"1em"
height
"1em"
viewBox
"0 0 16 16"
class
"position-absolute top-100 start-50 translate-middle mt-1"
fill
"#212529"
xmlns
"http://www.w3.org/2000/svg"
path
"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"
/></
button
button
type
"button"
class
"btn btn-primary position-relative"
Alerts
span
class
"position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2"
span
class
"visually-hidden"
unread messages
span
span
button
You can use these classes with existing components to create new ones. Remember that you can extend its functionality by adding entries to the
$position-values
variable.
html
class
"position-relative m-4"
class
"progress"
style
"height: 1px;"
class
"progress-bar"
role
"progressbar"
aria-label
"Progress"
style
"width: 50%;"
aria-valuenow
"50"
aria-valuemin
aria-valuemax
"100"
button
type
"button"
class
"position-absolute top-0 start-0 translate-middle btn btn-sm btn-primary rounded-pill"
style
"width: 2rem; height:2rem;"
button
button
type
"button"
class
"position-absolute top-0 start-50 translate-middle btn btn-sm btn-primary rounded-pill"
style
"width: 2rem; height:2rem;"
button
button
type
"button"
class
"position-absolute top-0 start-100 translate-middle btn btn-sm btn-secondary rounded-pill"
style
"width: 2rem; height:2rem;"
button
Sass
Maps
Default position utility values are declared in a Sass map, then used to generate our utilities.
$position-values
Utilities API
Position utilities are declared in our utilities API in
scss/_utilities.scss
Learn how to use the utilities API.
"position"
property
position
values
static
relative
absolute
fixed
sticky
"top"
property
values
position-values
"bottom"
property
bottom
values
position-values
"start"
property
left
class
start
values
position-values
"end"
property
right
class
values
position-values
"translate-middle"
property
transform
class
translate-middle
values
null
translate
translateX
translateY