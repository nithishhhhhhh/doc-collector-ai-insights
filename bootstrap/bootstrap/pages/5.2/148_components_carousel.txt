URL: https://getbootstrap.com/docs/5.2/components/carousel
==================================================

How it works
The carousel is a slideshow for cycling through a series of content, built with CSS 3D transforms and a bit of JavaScript. It works with a series of images, text, or custom markup. It also includes support for previous/next controls and indicators.
In browsers where the
Page Visibility API
is supported, the carousel will avoid sliding when the webpage is not visible to the user (such as when the browser tab is inactive, the browser window is minimized, etc.).
The animation effect of this component is dependent on the
prefers-reduced-motion
media query. See the
reduced motion section of our accessibility documentation
Please be aware that nested carousels are not supported, and carousels are generally not compliant with accessibility standards.
Example
Carousels don’t automatically normalize slide dimensions. As such, you may need to use additional utilities or custom styles to appropriately size content. While carousels support previous/next controls and indicators, they’re not explicitly required. Add and customize as you see fit.
.active
class needs to be added to one of the slides
otherwise the carousel will not be visible. Also be sure to set a unique
on the
.carousel
for optional controls, especially if you’re using multiple carousels on a single page. Control and indicator elements must have a
data-bs-target
attribute (or
href
for links) that matches the
of the
.carousel
element.
Slides only
Here’s a carousel with slides only. Note the presence of the
.d-block
.w-100
on carousel images to prevent browser default image alignment.
Placeholder
First slide
Placeholder
Second slide
Placeholder
Third slide
html
"carouselExampleSlidesOnly"
class
"carousel slide"
data-bs-ride
"carousel"
class
"carousel-inner"
class
"carousel-item active"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
With controls
Adding in the previous and next controls. We recommend using
<button>
elements, but you can also use
elements with
role="button"
Placeholder
First slide
Placeholder
Second slide
Placeholder
Third slide
Previous
Next
html
"carouselExampleControls"
class
"carousel slide"
data-bs-ride
"carousel"
class
"carousel-inner"
class
"carousel-item active"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
button
class
"carousel-control-prev"
type
"button"
data-bs-target
"#carouselExampleControls"
data-bs-slide
"prev"
span
class
"carousel-control-prev-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Previous
span
button
button
class
"carousel-control-next"
type
"button"
data-bs-target
"#carouselExampleControls"
data-bs-slide
"next"
span
class
"carousel-control-next-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Next
span
button
With indicators
You can also add the indicators to the carousel, alongside the controls, too.
Placeholder
First slide
Placeholder
Second slide
Placeholder
Third slide
Previous
Next
html
"carouselExampleIndicators"
class
"carousel slide"
data-bs-ride
"true"
class
"carousel-indicators"
button
type
"button"
data-bs-target
"#carouselExampleIndicators"
data-bs-slide-to
class
"active"
aria-current
"true"
aria-label
"Slide 1"
button
button
type
"button"
data-bs-target
"#carouselExampleIndicators"
data-bs-slide-to
aria-label
"Slide 2"
button
button
type
"button"
data-bs-target
"#carouselExampleIndicators"
data-bs-slide-to
aria-label
"Slide 3"
button
class
"carousel-inner"
class
"carousel-item active"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
button
class
"carousel-control-prev"
type
"button"
data-bs-target
"#carouselExampleIndicators"
data-bs-slide
"prev"
span
class
"carousel-control-prev-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Previous
span
button
button
class
"carousel-control-next"
type
"button"
data-bs-target
"#carouselExampleIndicators"
data-bs-slide
"next"
span
class
"carousel-control-next-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Next
span
button
With captions
Add captions to your slides easily with the
.carousel-caption
element within any
.carousel-item
. They can be easily hidden on smaller viewports, as shown below, with optional
display utilities
. We hide them initially with
.d-none
and bring them back on medium-sized devices with
.d-md-block
Placeholder
First slide
First slide label
Some representative placeholder content for the first slide.
Placeholder
Second slide
Second slide label
Some representative placeholder content for the second slide.
Placeholder
Third slide
Third slide label
Some representative placeholder content for the third slide.
Previous
Next
html
"carouselExampleCaptions"
class
"carousel slide"
data-bs-ride
"false"
class
"carousel-indicators"
button
type
"button"
data-bs-target
"#carouselExampleCaptions"
data-bs-slide-to
class
"active"
aria-current
"true"
aria-label
"Slide 1"
button
button
type
"button"
data-bs-target
"#carouselExampleCaptions"
data-bs-slide-to
aria-label
"Slide 2"
button
button
type
"button"
data-bs-target
"#carouselExampleCaptions"
data-bs-slide-to
aria-label
"Slide 3"
button
class
"carousel-inner"
class
"carousel-item active"
"..."
class
"d-block w-100"
"..."
class
"carousel-caption d-none d-md-block"
First slide label
Some representative placeholder content for the first slide.
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-caption d-none d-md-block"
Second slide label
Some representative placeholder content for the second slide.
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-caption d-none d-md-block"
Third slide label
Some representative placeholder content for the third slide.
button
class
"carousel-control-prev"
type
"button"
data-bs-target
"#carouselExampleCaptions"
data-bs-slide
"prev"
span
class
"carousel-control-prev-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Previous
span
button
button
class
"carousel-control-next"
type
"button"
data-bs-target
"#carouselExampleCaptions"
data-bs-slide
"next"
span
class
"carousel-control-next-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Next
span
button
Crossfade
.carousel-fade
to your carousel to animate slides with a fade transition instead of a slide. Depending on your carousel content (e.g., text only slides), you may want to add
.bg-body
or some custom CSS to the
.carousel-item
s for proper crossfading.
Placeholder
First slide
Placeholder
Second slide
Placeholder
Third slide
Previous
Next
html
"carouselExampleFade"
class
"carousel slide carousel-fade"
data-bs-ride
"carousel"
class
"carousel-inner"
class
"carousel-item active"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
button
class
"carousel-control-prev"
type
"button"
data-bs-target
"#carouselExampleFade"
data-bs-slide
"prev"
span
class
"carousel-control-prev-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Previous
span
button
button
class
"carousel-control-next"
type
"button"
data-bs-target
"#carouselExampleFade"
data-bs-slide
"next"
span
class
"carousel-control-next-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Next
span
button
Individual
.carousel-item
interval
data-bs-interval=""
to a
.carousel-item
to change the amount of time to delay between automatically cycling to the next item.
Placeholder
First slide
Placeholder
Second slide
Placeholder
Third slide
Previous
Next
html
"carouselExampleInterval"
class
"carousel slide"
data-bs-ride
"carousel"
class
"carousel-inner"
class
"carousel-item active"
data-bs-interval
"10000"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
data-bs-interval
"2000"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
button
class
"carousel-control-prev"
type
"button"
data-bs-target
"#carouselExampleInterval"
data-bs-slide
"prev"
span
class
"carousel-control-prev-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Previous
span
button
button
class
"carousel-control-next"
type
"button"
data-bs-target
"#carouselExampleInterval"
data-bs-slide
"next"
span
class
"carousel-control-next-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Next
span
button
Disable touch swiping
Carousels support swiping left/right on touchscreen devices to move between slides. This can be disabled using the
data-bs-touch
attribute. The example below also does not include the
data-bs-ride
attribute so it doesn’t autoplay.
Placeholder
First slide
Placeholder
Second slide
Placeholder
Third slide
Previous
Next
html
"carouselExampleControlsNoTouching"
class
"carousel slide"
data-bs-touch
"false"
class
"carousel-inner"
class
"carousel-item active"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
button
class
"carousel-control-prev"
type
"button"
data-bs-target
"#carouselExampleControlsNoTouching"
data-bs-slide
"prev"
span
class
"carousel-control-prev-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Previous
span
button
button
class
"carousel-control-next"
type
"button"
data-bs-target
"#carouselExampleControlsNoTouching"
data-bs-slide
"next"
span
class
"carousel-control-next-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Next
span
button
Dark variant
.carousel-dark
to the
.carousel
for darker controls, indicators, and captions. Controls have been inverted from their default white fill with the
filter
CSS property. Captions and controls have additional Sass variables that customize the
color
background-color
Placeholder
First slide
First slide label
Some representative placeholder content for the first slide.
Placeholder
Second slide
Second slide label
Some representative placeholder content for the second slide.
Placeholder
Third slide
Third slide label
Some representative placeholder content for the third slide.
Previous
Next
html
"carouselExampleDark"
class
"carousel carousel-dark slide"
data-bs-ride
"carousel"
class
"carousel-indicators"
button
type
"button"
data-bs-target
"#carouselExampleDark"
data-bs-slide-to
class
"active"
aria-current
"true"
aria-label
"Slide 1"
button
button
type
"button"
data-bs-target
"#carouselExampleDark"
data-bs-slide-to
aria-label
"Slide 2"
button
button
type
"button"
data-bs-target
"#carouselExampleDark"
data-bs-slide-to
aria-label
"Slide 3"
button
class
"carousel-inner"
class
"carousel-item active"
data-bs-interval
"10000"
"..."
class
"d-block w-100"
"..."
class
"carousel-caption d-none d-md-block"
First slide label
Some representative placeholder content for the first slide.
class
"carousel-item"
data-bs-interval
"2000"
"..."
class
"d-block w-100"
"..."
class
"carousel-caption d-none d-md-block"
Second slide label
Some representative placeholder content for the second slide.
class
"carousel-item"
"..."
class
"d-block w-100"
"..."
class
"carousel-caption d-none d-md-block"
Third slide label
Some representative placeholder content for the third slide.
button
class
"carousel-control-prev"
type
"button"
data-bs-target
"#carouselExampleDark"
data-bs-slide
"prev"
span
class
"carousel-control-prev-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Previous
span
button
button
class
"carousel-control-next"
type
"button"
data-bs-target
"#carouselExampleDark"
data-bs-slide
"next"
span
class
"carousel-control-next-icon"
aria-hidden
"true"
span
span
class
"visually-hidden"
Next
span
button
Custom transition
The transition duration of
.carousel-item
can be changed with the
$carousel-transition-duration
Sass variable before compiling or custom styles if you’re using the compiled CSS. If multiple transitions are applied, make sure the transform transition is defined first (e.g.
transition: transform 2s ease, opacity .5s ease-out
Sass
Variables
Variables for all carousels:
$carousel-control-color
$white
$carousel-control-width
$carousel-control-opacity
$carousel-control-hover-opacity
$carousel-control-transition
opacity
ease
$carousel-indicator-width
$carousel-indicator-height
$carousel-indicator-hit-area-height
$carousel-indicator-spacer
$carousel-indicator-opacity
$carousel-indicator-active-bg
$white
$carousel-indicator-active-opacity
$carousel-indicator-transition
opacity
ease
$carousel-caption-width
$carousel-caption-color
$white
$carousel-caption-padding-y
$carousel-caption-spacer
$carousel-control-icon-width
$carousel-control-prev-icon-bg
url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='
$carousel-control-color
'><path d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/></svg>")
$carousel-control-next-icon-bg
url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='
$carousel-control-color
'><path d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/></svg>")
$carousel-transition-duration
$carousel-transition
transform
$carousel-transition-duration
ease-in-out
// Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)
Variables for the
dark carousel
$carousel-dark-indicator-active-bg
$black
$carousel-dark-caption-color
$black
$carousel-dark-control-icon-filter
invert
grayscale
Usage
Via data attributes
Use data attributes to easily control the position of the carousel.
data-bs-slide
accepts the keywords
prev
next
, which alters the slide position relative to its current position. Alternatively, use
data-bs-slide-to
to pass a raw slide index to the carousel
data-bs-slide-to="2"
, which shifts the slide position to a particular index beginning with
data-bs-ride="carousel"
attribute is used to mark a carousel as animating starting at page load. If you don’t use
data-bs-ride="carousel"
to initialize your carousel, you have to initialize it yourself.
It cannot be used in combination with (redundant and unnecessary) explicit JavaScript initialization of the same carousel.
Via JavaScript
Call carousel manually with:
const
carousel
Carousel
'#myCarousel'
Options
As options can be passed via data attributes or JavaScript, you can append an option name to
data-bs-
, as in
data-bs-animation="{value}"
. Make sure to change the case type of the option name from “
camelCase
” to “
kebab-case
” when passing the options via data attributes. For example, use
data-bs-custom-class="beautifier"
instead of
data-bs-customClass="beautifier"
As of Bootstrap 5.2.0, all components support an
experimental
reserved data attribute
data-bs-config
that can house simple component configuration as a JSON string. When an element has
data-bs-config='{"delay":0, "title":123}'
data-bs-title="456"
attributes, the final
title
value will be
and the separate data attributes will override values given on
data-bs-config
. In addition, existing data attributes are able to house JSON values like
data-bs-delay='{"show":0,"hide":150}'
Name
Type
Default
Description
interval
number
5000
The amount of time to delay between automatically cycling an item.
keyboard
boolean
true
Whether the carousel should react to keyboard events.
pause
string, boolean
"hover"
If set to
"hover"
, pauses the cycling of the carousel on
mouseenter
and resumes the cycling of the carousel on
mouseleave
. If set to
false
, hovering over the carousel won’t pause it. On touch-enabled devices, when set to
"hover"
, cycling will pause on
touchend
(once the user finished interacting with the carousel) for two intervals, before automatically resuming. This is in addition to the mouse behavior.
ride
string, boolean
false
If set to
true
, autoplays the carousel after the user manually cycles the first item. If set to
"carousel"
, autoplays the carousel on load.
touch
boolean
true
Whether the carousel should support left/right swipe interactions on touchscreen devices.
wrap
boolean
true
Whether the carousel should cycle continuously or have hard stops.
Methods
Asynchronous methods and transitions
All API methods are
asynchronous
and start a
transition
. They return to the caller as soon as the transition is started but
before it ends
. In addition, a method call on a
transitioning component will be ignored
See our JavaScript documentation for more information
You can create a carousel instance with the carousel constructor, for example, to initialize with additional options and start cycling through items:
const
myCarouselElement
document
querySelector
'#myCarousel'
const
carousel
Carousel
myCarouselElement
interval
2000
wrap
false
Method
Description
cycle
Cycles through the carousel items from left to right.
dispose
Destroys an element’s carousel. (Removes stored data on the DOM element)
getInstance
Static method which allows you to get the carousel instance associated to a DOM element, you can use it like this:
getOrCreateInstance
Static method which returns a carousel instance associated to a DOM element or create a new one in case it wasn’t initialized. You can use it like this:
next
Cycles to the next item.
Returns to the caller before the next item has been shown
(e.g., before the
slid.bs.carousel
event occurs).
nextWhenVisible
Don’t cycle carousel to next when the page isn’t visible or the carousel or its parent isn’t visible.
Returns to the caller before the target item has been shown
pause
Stops the carousel from cycling through items.
prev
Cycles to the previous item.
Returns to the caller before the previous item has been shown
(e.g., before the
slid.bs.carousel
event occurs).
Cycles the carousel to a particular frame (0 based, similar to an array).
Returns to the caller before the target item has been shown
(e.g., before the
slid.bs.carousel
event occurs).
Events
direction
: The direction in which the carousel is sliding (either
"left"
"right"
relatedTarget
: The DOM element that is being slid into place as the active item.
from
: The index of the current item
: The index of the next item
All carousel events are fired at the carousel itself (i.e. at the
<div class="carousel">
Event type
Description
slid.bs.carousel
Fired when the carousel has completed its slide transition.
slide.bs.carousel
Fires immediately when the
slide
instance method is invoked.
const
myCarousel
document
getElementById
'myCarousel'
myCarousel
addEventListener
'slide.bs.carousel'
event
// do something...