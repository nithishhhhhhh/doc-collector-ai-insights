URL: https://getbootstrap.com/docs/4.6/utilities/spacing
==================================================

View on GitHub
Spacing
How it works
Assign responsive-friendly
margin
padding
values to an element or a subset of its sides with shorthand classes. Includes support for individual properties, all properties, and vertical and horizontal properties. Classes are built from a default Sass map ranging from
.25rem
3rem
Notation
Spacing utilities that apply to all breakpoints, from
, have no breakpoint abbreviation in them. This is because those classes are applied from
min-width: 0
and up, and thus are not bound by a media query. The remaining breakpoints, however, do include a breakpoint abbreviation.
The classes are named using the format
{property}{sides}-{size}
{property}{sides}-{breakpoint}-{size}
, and
Where
property
is one of:
- for classes that set
margin
- for classes that set
padding
Where
sides
is one of:
- for classes that set
margin-top
padding-top
- for classes that set
margin-bottom
padding-bottom
- for classes that set
margin-left
padding-left
- for classes that set
margin-right
padding-right
- for classes that set both
*-left
*-right
- for classes that set both
*-top
*-bottom
blank - for classes that set a
margin
padding
on all 4 sides of the element
Where
size
is one of:
- for classes that eliminate the
margin
padding
by setting it to
- (by default) for classes that set the
margin
padding
$spacer * .25
- (by default) for classes that set the
margin
padding
$spacer * .5
- (by default) for classes that set the
margin
padding
$spacer
- (by default) for classes that set the
margin
padding
$spacer * 1.5
- (by default) for classes that set the
margin
padding
$spacer * 3
auto
- for classes that set the
margin
to auto
(You can add more sizes by adding entries to the
$spacers
Sass map variable.)
Examples
Here are some representative examples of these classes:
.mt-0
margin-top
!important
.ml-1
margin-left
$spacer
!important
.px-2
padding-left
$spacer
!important
padding-right
$spacer
!important
.p-3
padding
$spacer
!important
Horizontal centering
Additionally, Bootstrap also includes an
.mx-auto
class for horizontally centering fixed-width block level content—that is, content that has
display: block
and a
width
set—by setting the horizontal margins to
auto
Centered element
class
"mx-auto"
style
"width: 200px;"
Centered element
Negative margin
In CSS,
margin
properties can utilize negative values (
padding
cannot). As of 4.2, we’ve added negative margin utilities for every non-zero integer size listed above (e.g.,
). These utilities are ideal for customizing grid column gutters across breakpoints.
The syntax is nearly the same as the default, positive margin utilities, but with the addition of
before the requested size. Here’s an example class that’s the opposite of
.mt-1
.mt-n1
margin-top
!important
Here’s an example of customizing the Bootstrap grid at the medium (
) breakpoint and above. We’ve increased the
.col
padding with
.px-md-5
and then counteracted that with
.mx-md-n5
on the parent
.row
Custom column padding
Custom column padding
class
"row mx-md-n5"
class
"col px-md-5"
class
"p-3 border bg-light"
Custom column padding
class
"col px-md-5"
class
"p-3 border bg-light"
Custom column padding