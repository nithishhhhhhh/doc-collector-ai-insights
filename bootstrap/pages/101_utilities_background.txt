URL: https://getbootstrap.com/docs/5.3/utilities/background
==================================================

Accessibility tip:
Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies like screen readers. Please ensure the meaning is obvious from the content itself (e.g., the visible text with a
sufficient
color contrast
) or is included through alternative means, such as additional text hidden with the
.visually-hidden
class.
Background color
Similar to the contextual text color classes, set the background of an element to any contextual class. Background utilities
do not set
color
, so in some cases you’ll want to use
.text-*
color utilities
Background utilities like
.bg-*
that generated from our original
$theme-colors
Sass map don’t yet respond to color modes, however, any
.bg-*-subtle
utility will. This will be resolved in v6.
.bg-primary
.bg-primary-subtle
.bg-secondary
.bg-secondary-subtle
.bg-success
.bg-success-subtle
.bg-danger
.bg-danger-subtle
.bg-warning
.bg-warning-subtle
.bg-info
.bg-info-subtle
.bg-light
.bg-light-subtle
.bg-dark
.bg-dark-subtle
.bg-body-secondary
.bg-body-tertiary
.bg-body
.bg-black
.bg-white
.bg-transparent
html
class
p-3 mb-2 bg-primary text-white
.bg-primary
class
p-3 mb-2 bg-primary-subtle text-primary-emphasis
.bg-primary-subtle
class
p-3 mb-2 bg-secondary text-white
.bg-secondary
class
p-3 mb-2 bg-secondary-subtle text-secondary-emphasis
.bg-secondary-subtle
class
p-3 mb-2 bg-success text-white
.bg-success
class
p-3 mb-2 bg-success-subtle text-success-emphasis
.bg-success-subtle
class
p-3 mb-2 bg-danger text-white
.bg-danger
class
p-3 mb-2 bg-danger-subtle text-danger-emphasis
.bg-danger-subtle
class
p-3 mb-2 bg-warning text-dark
.bg-warning
class
p-3 mb-2 bg-warning-subtle text-warning-emphasis
.bg-warning-subtle
class
p-3 mb-2 bg-info text-dark
.bg-info
class
p-3 mb-2 bg-info-subtle text-info-emphasis
.bg-info-subtle
class
p-3 mb-2 bg-light text-dark
.bg-light
class
p-3 mb-2 bg-light-subtle text-light-emphasis
.bg-light-subtle
class
p-3 mb-2 bg-dark text-white
.bg-dark
class
p-3 mb-2 bg-dark-subtle text-dark-emphasis
.bg-dark-subtle
class
p-3 mb-2 bg-body-secondary
.bg-body-secondary
class
p-3 mb-2 bg-body-tertiary
.bg-body-tertiary
class
p-3 mb-2 bg-body text-body
.bg-body
class
p-3 mb-2 bg-black text-white
.bg-black
class
p-3 mb-2 bg-white text-dark
.bg-white
class
p-3 mb-2 bg-transparent text-body
.bg-transparent
Background gradient
By adding a
.bg-gradient
class, a linear gradient is added as background image to the backgrounds. This gradient starts with a semi-transparent white which fades out to the bottom.
Do you need a gradient in your custom CSS? Just add
background-image: var(--bs-gradient);
.bg-primary.bg-gradient
.bg-secondary.bg-gradient
.bg-success.bg-gradient
.bg-danger.bg-gradient
.bg-warning.bg-gradient
.bg-info.bg-gradient
.bg-light.bg-gradient
.bg-dark.bg-gradient
.bg-black.bg-gradient
Opacity
Added in v5.1.0
As of v5.1.0,
background-color
utilities are generated with Sass using CSS variables. This allows for real-time color changes without compilation and dynamic alpha transparency changes.
How it works
Consider our default
.bg-success
utility.
.bg-success
--bs-bg-opacity
background-color
rgba
--bs-success-rgb
--bs-bg-opacity
!important
We use an RGB version of our
--bs-success
(with the value of
25, 135, 84
) CSS variable and attached a second CSS variable,
--bs-bg-opacity
, for the alpha transparency (with a default value
thanks to a local CSS variable). That means anytime you use
.bg-success
now, your computed
color
value is
rgba(25, 135, 84, 1)
. The local CSS variable inside each
.bg-*
class avoids inheritance issues so nested instances of the utilities don’t automatically have a modified alpha transparency.
Example
To change that opacity, override
--bs-bg-opacity
via custom styles or inline styles.
This is default success background
This is 50% opacity success background
html
class
bg-success p-2 text-white
This is default success background
class
bg-success p-2
style
--bs-bg-opacity
This is 50% opacity success background
Or, choose from any of the
.bg-opacity
utilities:
This is default success background
This is 75% opacity success background
This is 50% opacity success background
This is 25% opacity success background
This is 10% opacity success background
html
class
bg-success p-2 text-white
This is default success background
class
bg-success p-2 text-white bg-opacity-75
This is 75% opacity success background
class
bg-success p-2 text-dark bg-opacity-50
This is 50% opacity success background
class
bg-success p-2 text-dark bg-opacity-25
This is 25% opacity success background
class
bg-success p-2 text-dark bg-opacity-10
This is 10% opacity success background
In addition to the following Sass functionality, consider reading about our included
CSS custom properties
(aka CSS variables) for colors and more.
Sass variables
Most
background-color
utilities are generated by our theme colors, reassigned from our generic color palette variables.
scss/_variables.scss
$blue
#0d6efd
$indigo
#6610f2
$purple
#6f42c1
$pink
#d63384
$red
#dc3545
$orange
#fd7e14
$yellow
#ffc107
$green
#198754
$teal
#20c997
$cyan
#0dcaf0
scss/_variables.scss
$primary
$blue
$secondary
$gray-600
$success
$green
$info
$cyan
$warning
$yellow
$danger
$red
$light
$gray-100
$dark
$gray-900
scss/_variables.scss
$gradient
linear-gradient
180deg
rgba
$white
rgba
$white
Grayscale colors are also available, but only a subset are used to generate any utilities.
scss/_variables.scss
$white
#fff
$gray-100
#f8f9fa
$gray-200
#e9ecef
$gray-300
#dee2e6
$gray-400
#ced4da
$gray-500
#adb5bd
$gray-600
#6c757d
$gray-700
#495057
$gray-800
#343a40
$gray-900
#212529
$black
#000
Variables for setting
background-color
.bg-*-subtle
utilities in light and dark mode:
scss/_variables.scss
$primary-bg-subtle
tint-color
$primary
$secondary-bg-subtle
tint-color
$secondary
$success-bg-subtle
tint-color
$success
$info-bg-subtle
tint-color
$info
$warning-bg-subtle
tint-color
$warning
$danger-bg-subtle
tint-color
$danger
$light-bg-subtle
$gray-100
$white
$dark-bg-subtle
$gray-400
scss/_variables-dark.scss
$primary-bg-subtle-dark
shade-color
$primary
$secondary-bg-subtle-dark
shade-color
$secondary
$success-bg-subtle-dark
shade-color
$success
$info-bg-subtle-dark
shade-color
$info
$warning-bg-subtle-dark
shade-color
$warning
$danger-bg-subtle-dark
shade-color
$danger
$light-bg-subtle-dark
$gray-800
$dark-bg-subtle-dark
$gray-800
$black
Sass maps
Theme colors are then put into a Sass map so we can loop over them to generate our utilities, component modifiers, and more.
scss/_variables.scss
$theme-colors
"primary"
$primary
"secondary"
$secondary
"success"
$success
"info"
$info
"warning"
$warning
"danger"
$danger
"light"
$light
"dark"
$dark
Grayscale colors are also available as a Sass map.
This map is not used to generate any utilities.
scss/_variables.scss
$grays
"100"
$gray-100
"200"
$gray-200
"300"
$gray-300
"400"
$gray-400
"500"
$gray-500
"600"
$gray-600
"700"
$gray-700
"800"
$gray-800
"900"
$gray-900
RGB colors are generated from a separate Sass map:
scss/_maps.scss
$theme-colors-rgb
map-loop
$theme-colors
to-rgb
"$value"
Background color opacities build on that with their own map that’s consumed by the utilities API:
scss/_maps.scss
$utilities-bg
map-merge
$utilities-colors
"black"
to-rgb
$black
"white"
to-rgb
$white
"body"
to-rgb
$body-bg
$utilities-bg-colors
map-loop
$utilities-bg
rgba-css-var
"$key"
"bg"
$utilities-bg-subtle
"primary-subtle"
#{$prefix}
primary-bg-subtle
"secondary-subtle"
#{$prefix}
secondary-bg-subtle
"success-subtle"
#{$prefix}
success-bg-subtle
"info-subtle"
#{$prefix}
info-bg-subtle
"warning-subtle"
#{$prefix}
warning-bg-subtle
"danger-subtle"
#{$prefix}
danger-bg-subtle
"light-subtle"
#{$prefix}
light-bg-subtle
"dark-subtle"
#{$prefix}
dark-bg-subtle
Color mode background colors are also available as a Sass map:
scss/_maps.scss
$theme-colors-bg-subtle
"primary"
$primary-bg-subtle
"secondary"
$secondary-bg-subtle
"success"
$success-bg-subtle
"info"
$info-bg-subtle
"warning"
$warning-bg-subtle
"danger"
$danger-bg-subtle
"light"
$light-bg-subtle
"dark"
$dark-bg-subtle
scss/_maps.scss
$theme-colors-bg-subtle-dark
"primary"
$primary-bg-subtle-dark
"secondary"
$secondary-bg-subtle-dark
"success"
$success-bg-subtle-dark
"info"
$info-bg-subtle-dark
"warning"
$warning-bg-subtle-dark
"danger"
$danger-bg-subtle-dark
"light"
$light-bg-subtle-dark
"dark"
$dark-bg-subtle-dark
Sass mixins
No mixins are used to generate our background utilities
, but we do have some additional mixins for other situations where you’d like to create your own gradients.
scss/mixins/_gradients.scss
@mixin
gradient-bg
$color
null
background-color
$color
$enable-gradients
background-image
#{$prefix}
gradient
scss/mixins/_gradients.scss
// Horizontal gradient, from left to right
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin
gradient-x
$start-color
$gray-700
$end-color
$gray-800
$start-percent
$end-percent
100%
background-image
linear-gradient
to right
$start-color
$start-percent
$end-color
$end-percent
// Vertical gradient, from top to bottom
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin
gradient-y
$start-color
$gray-700
$end-color
$gray-800
$start-percent
null
$end-percent
null
background-image
linear-gradient
to bottom
$start-color
$start-percent
$end-color
$end-percent
@mixin
gradient-directional
$start-color
$gray-700
$end-color
$gray-800
$deg
45deg
background-image
linear-gradient
$deg
$start-color
$end-color
@mixin
gradient-x-three-colors
$start-color
$blue
$mid-color
$purple
$color-stop
$end-color
$red
background-image
linear-gradient
to right
$start-color
$mid-color
$color-stop
$end-color
@mixin
gradient-y-three-colors
$start-color
$blue
$mid-color
$purple
$color-stop
$end-color
$red
background-image
linear-gradient
$start-color
$mid-color
$color-stop
$end-color
@mixin
gradient-radial
$inner-color
$gray-700
$outer-color
$gray-800
background-image
radial-gradient
circle
$inner-color
$outer-color
@mixin
gradient-striped
$color
rgba
$white
$angle
45deg
background-image
linear-gradient
$angle
$color
transparent 25%
transparent 50%
$color
$color
transparent 75%
transparent
Sass utilities API
Background utilities are declared in our utilities API in
scss/_utilities.scss
Learn how to use the utilities API.
scss/_utilities.scss
"background-color"
property
background-color
class
local-vars
"bg-opacity"
values
map-merge
$utilities-bg-colors
"transparent"
transparent
"body-secondary"
rgba
#{$prefix}
secondary-bg-rgb
#{$prefix}
bg-opacity
"body-tertiary"
rgba
#{$prefix}
tertiary-bg-rgb
#{$prefix}
bg-opacity
"bg-opacity"
css-var
true
class
bg-opacity
values
"subtle-background-color"
property
background-color
class
values
$utilities-bg-subtle