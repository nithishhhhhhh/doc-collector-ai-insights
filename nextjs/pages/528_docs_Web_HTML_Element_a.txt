SOURCE URL: https://developer.mozilla.org/docs/Web/HTML/Element/a
SCRAPED: 2025-06-19 18:10:53
================================================================================

--- CODE BLOCK 6 ---
<p>You can reach Michael at:</p>
<ul>
<li><a href="https://example.com">Website</a></li>
<li><a href="mailto:m.bluth@example.com">Email</a></li>
<li><a href="tel:+123456789">Phone</a></li>
</ul>
--- END CODE BLOCK ---
HTML
element (or
anchor
element), with
--- CODE BLOCK 7 ---
<p>You can reach Michael at:</p>
<ul>
<li><a href="https://example.com">Website</a></li>
<li><a href="mailto:m.bluth@example.com">Email</a></li>
<li><a href="tel:+123456789">Phone</a></li>
</ul>
--- END CODE BLOCK ---
attribute
, creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.
Content within each
--- CODE BLOCK 8 ---
li {
margin-bottom: 0.5rem;
--- END CODE BLOCK ---
should
indicate the link's destination. If the
--- CODE BLOCK 9 ---
li {
margin-bottom: 0.5rem;
--- END CODE BLOCK ---
attribute is present, pressing the enter key while focused on the
--- CODE BLOCK 10 ---
attributionsrc
--- END CODE BLOCK ---
element will activate it.
Try it
--- CODE BLOCK 11 ---
Attribution-Reporting-Eligible
--- END CODE BLOCK ---
--- CODE BLOCK 13 ---
Attribution-Reporting-Register-Source
--- END CODE BLOCK ---
Attributes
This element's attributes include the
global attributes
--- CODE BLOCK 15 ---
Attribution-Reporting-Eligible
--- END CODE BLOCK ---
Experimental
Specifies that you want the browser to send an
--- CODE BLOCK 17 ---
attributionsrc="https://a.example/register-source
https://b.example/register-source"
--- END CODE BLOCK ---
header. On the server-side this is used to trigger sending an
--- CODE BLOCK 18 ---
attributionsrc="https://a.example/register-source
https://b.example/register-source"
--- END CODE BLOCK ---
header in the response, to register a
navigation-based attribution source
The browser stores the source data associated with the navigation-based attribution source (as provided in the
--- CODE BLOCK 19 ---
attributionsrc
--- END CODE BLOCK ---
response header) when the user clicks the link. See the
Attribution Reporting API
for more details.
There are two versions of this attribute that you can set:
Boolean, i.e., just the
--- CODE BLOCK 20 ---
Attribution-Reporting-Eligible
--- END CODE BLOCK ---
name. This specifies that you want the
--- CODE BLOCK 21 ---
attributionsrc
--- END CODE BLOCK ---
header sent to the same server as the
--- CODE BLOCK 22 ---
Attribution-Reporting-Register-Source
--- END CODE BLOCK ---
attribute points to. This is fine when you are handling the attribution source registration on the same server.
Value containing one or more URLs, for example:
html
Copy to Clipboard
--- CODE BLOCK 26 ---
Content-Disposition
--- END CODE BLOCK ---
This is useful in cases where the requested resource is not on a server you control, or you just want to handle registering the attribution source on a different server. In this case, you can specify one or more URLs as the value of
--- CODE BLOCK 38 ---
Content-Disposition
--- END CODE BLOCK ---
. When the resource request occurs, the
--- CODE BLOCK 47 ---
javascript:
--- END CODE BLOCK ---
header will be sent to the URL(s) specified in
--- CODE BLOCK 48 ---
registerProtocolHandler()
--- END CODE BLOCK ---
in addition to the resource origin. These URLs can then respond with the
--- CODE BLOCK 54 ---
referrerpolicy
--- END CODE BLOCK ---
to complete registration.
Note:
Specifying multiple URLs means that multiple attribution sources can be registered on the same feature. You might for example have different campaigns that you are trying to measure the success of, which involve generating different reports on different data.
--- CODE BLOCK 55 ---
no-referrer
--- END CODE BLOCK ---
elements cannot be used as attribution triggers, only sources.
--- CODE BLOCK 57 ---
no-referrer-when-downgrade
--- END CODE BLOCK ---
Causes the browser to treat the linked URL as a download. Can be used with or without a
--- CODE BLOCK 60 ---
origin-when-cross-origin
--- END CODE BLOCK ---
value:
Without a value, the browser will suggest a filename/extension, generated from various sources:
--- CODE BLOCK 61 ---
same-origin
--- END CODE BLOCK ---
HTTP header
The final segment in the URL
path
media type
(from the
--- CODE BLOCK 62 ---
strict-origin
--- END CODE BLOCK ---
header, the start of a
--- CODE BLOCK 63 ---
strict-origin-when-cross-origin
--- END CODE BLOCK ---
, or
--- CODE BLOCK 74 ---
_unfencedTop
--- END CODE BLOCK ---
for a
--- CODE BLOCK 75 ---
target="_blank"
--- END CODE BLOCK ---
--- CODE BLOCK 78 ---
rel="noopener"
--- END CODE BLOCK ---
: defining a value suggests it as the filename.
--- CODE BLOCK 79 ---
window.opener
--- END CODE BLOCK ---
--- CODE BLOCK 82 ---
Content-Type
--- END CODE BLOCK ---
characters are converted to underscores (
--- CODE BLOCK 94 ---
<p>Learn more about our products <a href="/products">here</a>.</p>
--- END CODE BLOCK ---
). Filesystems may forbid other characters in filenames, so browsers will adjust the suggested name if necessary.
Note:
--- CODE BLOCK 95 ---
<p>Learn more about our products <a href="/products">here</a>.</p>
--- END CODE BLOCK ---
only works for
same-origin URLs
, or the
--- CODE BLOCK 96 ---
<p>Learn more <a href="/products">about our products</a>.</p>
--- END CODE BLOCK ---
--- CODE BLOCK 97 ---
<p>Learn more <a href="/products">about our products</a>.</p>
--- END CODE BLOCK ---
schemes.
How browsers treat downloads varies by browser, user settings, and other factors. The user may be prompted before a download starts, or the file may be saved automatically, or it may open automatically, either in an external application or in the browser itself.
If the
--- CODE BLOCK 100 ---
javascript:void(0)
--- END CODE BLOCK ---
header has different information from the
--- CODE BLOCK 104 ---
target="_blank"
--- END CODE BLOCK ---
attribute, resulting behavior may differ:
If the header specifies a
--- CODE BLOCK 105 ---
<a target="_blank" href="https://www.wikipedia.org">
Wikipedia (opens in new tab)
</a>
--- END CODE BLOCK ---
, it takes priority over a filename specified in the
--- CODE BLOCK 106 ---
<a target="_blank" href="https://www.wikipedia.org">
Wikipedia (opens in new tab)
</a>
--- END CODE BLOCK ---
attribute.
If the header specifies a disposition of
--- CODE BLOCK 109 ---
<a href="https://www.wikipedia.org/" target="_blank">
Wikipedia
<img src="new-tab.svg" width="14" alt="(Opens in new tab)" />
</a>
<br />
<a href="2017-annual-report.ppt">
2017 annual report
<img src="powerpoint.svg" width="14" alt="(PowerPoint file)" />
</a>
</p>
<a href="https://www.wikipedia.org/" target="_blank">
Wikipedia
<img src="missing-icon.svg" width="14" alt="(Opens in new tab)" />
</a>
<br />
<a href="2017-annual-report.ppt">
2017 annual report
<img src="missing-icon.svg" width="14" alt="(PowerPoint file)" />
</a>
</p>
--- END CODE BLOCK ---
, Chrome and Firefox prioritize the attribute and treat it as a download. Old Firefox versions (before 82) prioritize the header and will display the content inline.
--- CODE BLOCK 110 ---
<a href="https://www.wikipedia.org/" target="_blank">
Wikipedia
<img src="new-tab.svg" width="14" alt="(Opens in new tab)" />
</a>
<br />
<a href="2017-annual-report.ppt">
2017 annual report
<img src="powerpoint.svg" width="14" alt="(PowerPoint file)" />
</a>
</p>
<a href="https://www.wikipedia.org/" target="_blank">
Wikipedia
<img src="missing-icon.svg" width="14" alt="(Opens in new tab)" />
</a>
<br />
<a href="2017-annual-report.ppt">
2017 annual report
<img src="missing-icon.svg" width="14" alt="(PowerPoint file)" />
</a>
</p>
--- END CODE BLOCK ---
The URL that the hyperlink points to. Links are not restricted to HTTP-based URLs — they can use any URL scheme supported by browsers:
Telephone numbers with
--- CODE BLOCK 112 ---
<body>
<a href="#content" class="skip-link">Skip to main content</a>
<header>…</header>
<!-- The skip link jumps to here -->
<main id="content"></main>
</body>
--- END CODE BLOCK ---
URLs
Email addresses with
--- CODE BLOCK 113 ---
<body>
<a href="#content" class="skip-link">Skip to main content</a>
<header>…</header>
<!-- The skip link jumps to here -->
<main id="content"></main>
</body>
--- END CODE BLOCK ---
URLs
SMS text messages with
--- CODE BLOCK 114 ---
.skip-link {
position: absolute;
top: -3em;
background: #fff;
.skip-link:focus {
top: 0;
--- END CODE BLOCK ---
URLs
Executable code with
--- CODE BLOCK 115 ---
.skip-link {
position: absolute;
top: -3em;
background: #fff;
.skip-link:focus {
top: 0;
--- END CODE BLOCK ---
URLs
While web browsers may not support other URL schemes, websites can with
--- CODE BLOCK 117 ---
<a href="https://www.mozilla.com">Mozilla</a>
--- END CODE BLOCK ---
Moreover other URL features can locate specific parts of the resource, including:
Sections of a page with document fragments
Specific text portions with
text fragments
Pieces of media files with media fragments
--- CODE BLOCK 118 ---
<a href="https://www.mozilla.com">Mozilla</a>
--- END CODE BLOCK ---
Hints at the human language of the linked URL. No built-in functionality. Allowed values are the same as
the global
--- CODE BLOCK 119 ---
<a href="//example.com">Scheme-relative URL</a>
<a href="/en-US/docs/Web/HTML">Origin-relative URL</a>
<a href="p">Directory-relative URL</a>
<a href="./p">Directory-relative URL</a>
<a href="../p">Parent-directory-relative URL</a>
--- END CODE BLOCK ---
attribute
--- CODE BLOCK 120 ---
<a href="//example.com">Scheme-relative URL</a>
<a href="/en-US/docs/Web/HTML">Origin-relative URL</a>
<a href="p">Directory-relative URL</a>
<a href="./p">Directory-relative URL</a>
<a href="../p">Parent-directory-relative URL</a>
--- END CODE BLOCK ---
A space-separated list of URLs. When the link is followed, the browser will send
--- CODE BLOCK 121 ---
display: block;
margin-bottom: 0.5em;
--- END CODE BLOCK ---
requests with the body
--- CODE BLOCK 122 ---
display: block;
margin-bottom: 0.5em;
--- END CODE BLOCK ---
to the URLs. Typically for tracking.
--- CODE BLOCK 123 ---
<!-- <a> element links to the section below -->
<p><a href="#Section_further_down">Jump to the heading below</a></p>
<!-- Heading to link to -->
<h2 id="Section_further_down">Section further down</h2>
--- END CODE BLOCK ---
How much of the
referrer
to send when following the link.
--- CODE BLOCK 124 ---
<!-- <a> element links to the section below -->
<p><a href="#Section_further_down">Jump to the heading below</a></p>
<!-- Heading to link to -->
<h2 id="Section_further_down">Section further down</h2>
--- END CODE BLOCK ---
: The
--- CODE BLOCK 125 ---
href="#top"
--- END CODE BLOCK ---
header will not be sent.
--- CODE BLOCK 128 ---
<a href="mailto:nowhere@mozilla.org">Send email to nowhere</a>
--- END CODE BLOCK ---
: The
--- CODE BLOCK 129 ---
<a href="mailto:nowhere@mozilla.org">Send email to nowhere</a>
--- END CODE BLOCK ---
header will not be sent to
origin
s without
HTTPS
--- CODE BLOCK 131 ---
<a href="tel:+49.157.0156">+49 157 0156</a>
<a href="tel:+1(800)555-0123">(800) 555-0123</a>
--- END CODE BLOCK ---
: The sent referrer will be limited to the origin of the referring page: its
scheme
host
, and
port
--- CODE BLOCK 132 ---
<a href="tel:+49.157.0156">+49 157 0156</a>
<a href="tel:+1(800)555-0123">(800) 555-0123</a>
--- END CODE BLOCK ---
: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.
--- CODE BLOCK 134 ---
registerProtocolHandler
--- END CODE BLOCK ---
: A referrer will be sent for
same origin
, but cross-origin requests will contain no referrer information.
--- CODE BLOCK 135 ---
web.skype.com
--- END CODE BLOCK ---
: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP).
--- CODE BLOCK 141 ---
Paint by holding down the mouse button and moving it.
<a href="" download="my_painting.png">Download my painting</a>
</p>
<canvas width="300" height="300"></canvas>
--- END CODE BLOCK ---
(default): Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).
--- CODE BLOCK 142 ---
Paint by holding down the mouse button and moving it.
<a href="" download="my_painting.png">Download my painting</a>
</p>
<canvas width="300" height="300"></canvas>
--- END CODE BLOCK ---
: The referrer will include the origin
the path (but not the
fragment
password
, or
username
This value is unsafe
, because it leaks origins and paths from TLS-protected resources to insecure origins.
--- CODE BLOCK 143 ---
html {
font-family: sans-serif;
canvas {
background: #fff;
border: 1px dashed;
display: inline-block;
background: #69c;
color: #fff;
padding: 5px 10px;
--- END CODE BLOCK ---
The relationship of the linked URL as space-separated link types.
--- CODE BLOCK 144 ---
html {
font-family: sans-serif;
canvas {
background: #fff;
border: 1px dashed;
display: inline-block;
background: #69c;
color: #fff;
padding: 5px 10px;
--- END CODE BLOCK ---
Where to display the linked URL, as the name for a
browsing context
(a tab, window, or
--- CODE BLOCK 145 ---
const canvas = document.querySelector("canvas");
const c = canvas.getContext("2d");
c.fillStyle = "hotpink";
let isDrawing;
function draw(x, y) {
if (isDrawing) {
c.beginPath();
c.arc(x, y, 10, 0, Math.PI * 2);
c.closePath();
c.fill();
canvas.addEventListener("mousemove", (event) =>
draw(event.offsetX, event.offsetY),
canvas.addEventListener("mousedown", () => (isDrawing = true));
canvas.addEventListener("mouseup", () => (isDrawing = false));
document
.querySelector("a")
.addEventListener(
"click",
(event) => (event.target.href = canvas.toDataURL()),
--- END CODE BLOCK ---
). The following keywords have special meanings for where to load the URL:
--- CODE BLOCK 146 ---
const canvas = document.querySelector("canvas");
const c = canvas.getContext("2d");
c.fillStyle = "hotpink";
let isDrawing;
function draw(x, y) {
if (isDrawing) {
c.beginPath();
c.arc(x, y, 10, 0, Math.PI * 2);
c.closePath();
c.fill();
canvas.addEventListener("mousemove", (event) =>
draw(event.offsetX, event.offsetY),
canvas.addEventListener("mousedown", () => (isDrawing = true));
canvas.addEventListener("mouseup", () => (isDrawing = false));
document
.querySelector("a")
.addEventListener(
"click",
(event) => (event.target.href = canvas.toDataURL()),
--- END CODE BLOCK ---
: The current browsing context. (Default)
--- CODE BLOCK 149 ---
target="_blank"
--- END CODE BLOCK ---
: Usually a new tab, but users can configure browsers to open a new window instead.
--- CODE BLOCK 150 ---
rel="noreferrer"
--- END CODE BLOCK ---
: The parent browsing context of the current one. If no parent, behaves as
--- CODE BLOCK 151 ---
rel="noopener"
--- END CODE BLOCK ---
--- CODE BLOCK 152 ---
window.opener
--- END CODE BLOCK ---
: The topmost browsing context. To be specific, this means the "highest" context that's an ancestor of the current one. If no ancestors, behaves as
--- CODE BLOCK 153 ---
target="_blank"
--- END CODE BLOCK ---
--- CODE BLOCK 154 ---
rel="noopener"
--- END CODE BLOCK ---
: Allows embedded
fenced frames
to navigate the top-level frame (i.e., traversing beyond the root of the fenced frame, unlike other reserved destinations). Note that the navigation will still succeed if this is used outside of a fenced frame context, but it will not act like a reserved keyword.
Note:
Setting
--- CODE BLOCK 164 ---
menuitemcheckbox
--- END CODE BLOCK ---
--- CODE BLOCK 165 ---
menuitemradio
--- END CODE BLOCK ---
elements implicitly provides the same
--- CODE BLOCK 172 ---
HTMLAnchorElement
--- END CODE BLOCK ---
behavior as setting
[CODE_BLOCK_78]
which does not set
[CODE_BLOCK_79]
[CODE_BLOCK_80]
Hints at the linked URL's format with a
MIME type
. No built-in functionality.
Deprecated attributes
[CODE_BLOCK_81]
Deprecated
Hinted at the
character encoding
of the linked URL.
Note:
This attribute is deprecated and
should not be used by authors
. Use the HTTP
[CODE_BLOCK_82]
header on the linked URL.
[CODE_BLOCK_83]
Deprecated
Used with
[CODE_BLOCK_84]
attribute
. A comma-separated list of coordinates.
[CODE_BLOCK_85]
Deprecated
Was required to define a possible target location in a page. In HTML 4.01,
[CODE_BLOCK_86]
[CODE_BLOCK_87]
could both be used on
[CODE_BLOCK_88]
, as long as they had identical values.
Note:
Use the global attribute
[CODE_BLOCK_89]
instead.
[CODE_BLOCK_90]
Deprecated
Specified a reverse link; the opposite of
[CODE_BLOCK_91]
attribute
. Deprecated for being very confusing.
[CODE_BLOCK_92]
Deprecated
The shape of the hyperlink's region in an image map.
Note:
Use the
[CODE_BLOCK_93]
element for image maps instead.
Accessibility
Strong link text
The content inside a link should indicate where the link goes
, even out of context.
Inaccessible, weak link text
A sadly common mistake is to only link the words "click here" or "here":
html
Copy to Clipboard
play
[CODE_BLOCK_94]
Result
play
Strong link text
Luckily, this is an easy fix, and it's actually shorter than the inaccessible version!
html
Copy to Clipboard
play
[CODE_BLOCK_96]
Result
play
Assistive software has shortcuts to list all links on a page. However, strong link text benefits all users — the "list all links" shortcut emulates how sighted users quickly scan pages.
onclick events
Anchor elements are often abused as fake buttons by setting their
[CODE_BLOCK_98]
[CODE_BLOCK_99]
[CODE_BLOCK_100]
to prevent the page from refreshing, then listening for their
[CODE_BLOCK_101]
events.
These bogus
[CODE_BLOCK_102]
values cause unexpected behavior when copying/dragging links, opening links in a new tab/window, bookmarking, or when JavaScript is loading, errors, or is disabled. They also convey incorrect semantics to assistive technologies, like screen readers.
Use a
[CODE_BLOCK_103]
instead. In general,
you should only use a hyperlink for navigation to a real URL
External links and linking to non-HTML resources
Links that open in a new tab/window via
[CODE_BLOCK_104]
, or links that point to a download file should indicate what will happen when the link is followed.
People experiencing low vision conditions, navigating with the aid of screen reading technology, or with cognitive concerns may be confused when a new tab, window, or application opens unexpectedly. Older screen-reading software may not even announce the behavior.
Link that opens a new tab/window
html
Copy to Clipboard
play
[CODE_BLOCK_105]
Result
play
Link to a non-HTML resource
If an icon is used to signify link behavior, make sure it has an
[CODE_BLOCK_107]
attribute
to describe its purpose. In case the icon is missing, the
[CODE_BLOCK_108]
attribute's content will still convey the link's behavior.
html
Copy to Clipboard
play
[CODE_BLOCK_109]
Result
play
WebAIM: Links and Hypertext - Hypertext Links
MDN / Understanding WCAG, Guideline 3.2
G200: Opening new windows and tabs from a link only when necessary
G201: Giving users advanced warning when opening a new window
Skip links
skip link
is a link placed as early as possible in
[CODE_BLOCK_111]
content that points to the beginning of the page's main content. Usually, CSS hides a skip link offscreen until focused.
html
Copy to Clipboard
play
[CODE_BLOCK_112]
Copy to Clipboard
play
[CODE_BLOCK_114]
Result
play
Skip links let keyboard users bypass content repeated throughout multiple pages, such as header navigation.
Skip links are especially useful for people who navigate with the aid of assistive technology such as switch control, voice command, or mouth sticks/head wands, where the act of moving through repetitive links can be laborious.
WebAIM: "Skip Navigation" Links
How-to: Use Skip Navigation links
MDN / Understanding WCAG, Guideline 2.4 explanations
Understanding Success Criterion 2.4.1
Size and proximity
Size
Interactive elements, like links, should provide an area large enough that it is easy to activate them. This helps a variety of people, including those with motor control issues and those using imprecise inputs such as a touchscreen. A minimum size of 44×44
CSS pixels
is recommended.
Text-only links in prose content are exempt from this requirement, but it's still a good idea to make sure enough text is hyperlinked to be easily activated.
Understanding Success Criterion 2.5.5: Target Size
Target Size and 2.5.5
Quick test: Large touch targets
Proximity
Interactive elements, like links, placed in close visual proximity should have space separating them. Spacing helps people with motor control issues, who may otherwise accidentally activate the wrong interactive content.
Spacing may be created using CSS properties like
[CODE_BLOCK_116]
Hand tremors and the giant-button-problem
Examples
Linking to an absolute URL
HTML
html
Copy to Clipboard
play
[CODE_BLOCK_117]
Result
play
Linking to relative URLs
HTML
html
Copy to Clipboard
play
[CODE_BLOCK_119]
[CODE_BLOCK_121]
Result
play
Linking to an element on the same page
html
Copy to Clipboard
play
[CODE_BLOCK_123]
Result
play
Note:
You can use
[CODE_BLOCK_125]
or the empty fragment (
[CODE_BLOCK_126]
) to link to the top of the current page,
as defined in the HTML specification
Linking to an email address
To create links that open in the user's email program to let them send a new message, use the
[CODE_BLOCK_127]
scheme:
html
Copy to Clipboard
play
[CODE_BLOCK_128]
Result
play
For details about
[CODE_BLOCK_130]
URLs, such as including a subject or body, see
Email links
RFC 6068
Linking to telephone numbers
html
Copy to Clipboard
play
[CODE_BLOCK_131]
Result
play
[CODE_BLOCK_133]
link behavior varies with device capabilities:
Cellular devices autodial the number.
Most operating systems have programs that can make calls, like Skype or FaceTime.
Websites can make phone calls with
[CODE_BLOCK_134]
, such as
[CODE_BLOCK_135]
Other behaviors include saving the number to contacts, or sending the number to another device.
RFC 3966
for syntax, additional features, and other details about the
[CODE_BLOCK_136]
URL scheme.
Using the download attribute to save a <canvas> as a PNG
To save a
[CODE_BLOCK_137]
element's contents as an image, you can create a link where the
[CODE_BLOCK_138]
is the canvas data as a
[CODE_BLOCK_139]
URL created with JavaScript and the
[CODE_BLOCK_140]
attribute provides the file name for the downloaded PNG file:
Example painting app with save link
HTML
html
Copy to Clipboard
play
[CODE_BLOCK_141]
Copy to Clipboard
play
[CODE_BLOCK_143]
JavaScript
Copy to Clipboard
play
[CODE_BLOCK_145]
Result
play
Security and privacy
[CODE_BLOCK_147]
elements can have consequences for users' security and privacy. See
[CODE_BLOCK_148]
header: privacy and security concerns
for information.
Using
[CODE_BLOCK_149]
without
[CODE_BLOCK_150]
[CODE_BLOCK_151]
makes the website vulnerable to
[CODE_BLOCK_152]
API exploitation attacks, although note that, in newer browser versions setting
[CODE_BLOCK_153]
implicitly provides the same protection as setting
[CODE_BLOCK_154]
. See
browser compatibility
for details.
Technical summary
Content categories
Flow content
phrasing content
interactive content
, palpable content.
Permitted content
Transparent
, except that no descendant may be
interactive content
or an
[CODE_BLOCK_155]
element, and no descendant may have a specified
tabindex
attribute.
Tag omission
None, both the starting and ending tag are mandatory.
Permitted parents
Any element that accepts
flow content
, but not other
[CODE_BLOCK_156]
elements.
Implicit ARIA role
[CODE_BLOCK_157]
when
[CODE_BLOCK_158]
attribute is
present, otherwise
[CODE_BLOCK_159]
Permitted ARIA roles
When
[CODE_BLOCK_160]
attribute is present:
[CODE_BLOCK_161]
[CODE_BLOCK_162]
[CODE_BLOCK_163]
[CODE_BLOCK_164]
[CODE_BLOCK_165]
[CODE_BLOCK_166]
[CODE_BLOCK_167]
[CODE_BLOCK_168]
[CODE_BLOCK_169]
[CODE_BLOCK_170]
When
[CODE_BLOCK_171]
attribute is not present:
DOM interface
[CODE_BLOCK_172]
Specifications
Specification
HTML
the-a-element
Browser compatibility
See also
[CODE_BLOCK_173]
is similar to
[CODE_BLOCK_174]
, but for metadata hyperlinks that are invisible to users.
[CODE_BLOCK_175]
is a CSS pseudo-class that will match
[CODE_BLOCK_176]
elements with URL in
[CODE_BLOCK_177]
attribute that was not yet visited by the user.
[CODE_BLOCK_178]
is a CSS pseudo-class that will match
[CODE_BLOCK_179]
elements with URL in
[CODE_BLOCK_180]
attribute that was visited by the user in the past.
[CODE_BLOCK_181]
is a CSS pseudo-class that will match
[CODE_BLOCK_182]
elements with
[CODE_BLOCK_183]
attribute.
Text fragments
are user-agent instructions added to URLs that allow content authors to link to specific text on a page, without IDs being required.
Help improve MDN
Was this page helpful to you?
Learn how to contribute
This page was last modified on
Jun 7, 2025
MDN contributors
View this page on GitHub
Report a problem with this content