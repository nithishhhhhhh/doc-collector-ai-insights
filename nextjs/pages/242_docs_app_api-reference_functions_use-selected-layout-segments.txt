SOURCE URL: https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments
SCRAPED: 2025-06-19 17:37:47
================================================================================

Menu
Using App Router
Features available in /app
Using Latest Version
15.3.4
Using App Router
Features available in /app
Using Latest Version
15.3.4
API Reference
Functions
useSelectedLayoutSegments
useSelectedLayoutSegments
--- CODE BLOCK 1 ---
useSelectedLayoutSegments
--- END CODE BLOCK ---
is a
Client Component
hook that lets you read the active route segments
below
the Layout it is called from.
It is useful for creating UI in parent Layouts that need knowledge of active child segments such as breadcrumbs.
app/example-client-component.tsx
TypeScript
JavaScript
TypeScript
--- CODE BLOCK 2 ---
'use client'
import { useSelectedLayoutSegments } from 'next/navigation'
export default function ExampleClientComponent() {
const segments = useSelectedLayoutSegments()
return (
<ul>
{segments.map((segment, index) => (
<li key={index}>{segment}</li>
</ul>
--- END CODE BLOCK ---
Good to know
Since
--- CODE BLOCK 4 ---
useSelectedLayoutSegments
--- END CODE BLOCK ---
is a
Client Component
hook, and Layouts are
Server Components
by default,
--- CODE BLOCK 5 ---
useSelectedLayoutSegments
--- END CODE BLOCK ---
is usually called via a Client Component that is imported into a Layout.
The returned segments include
Route Groups
, which you might not want to be included in your UI. You can use the
--- CODE BLOCK 7 ---
const segments = useSelectedLayoutSegments(parallelRoutesKey?: string)
--- END CODE BLOCK ---
array method to remove items that start with a bracket.
Parameters
--- CODE BLOCK 8 ---
const segments = useSelectedLayoutSegments(parallelRoutesKey?: string)
--- END CODE BLOCK ---
--- CODE BLOCK 10 ---
parallelRoutesKey
--- END CODE BLOCK ---
optionally
accepts a
--- CODE BLOCK 11 ---
useSelectedLayoutSegments
--- END CODE BLOCK ---
, which allows you to read the active route segment within that slot.
Returns
--- CODE BLOCK 12 ---
app/layout.js
--- END CODE BLOCK ---
returns an array of strings containing the active segments one level down from the layout the hook was called from. Or an empty array if none exist.
For example, given the Layouts and URLs below, the returned segments would be:
Layout
Visited URL
Returned Segments
--- CODE BLOCK 15 ---
app/layout.js
--- END CODE BLOCK ---
--- CODE BLOCK 17 ---
['dashboard']
--- END CODE BLOCK ---
--- CODE BLOCK 18 ---
app/layout.js
--- END CODE BLOCK ---
--- CODE BLOCK 19 ---
/dashboard/settings
--- END CODE BLOCK ---
--- CODE BLOCK 20 ---
['dashboard', 'settings']
--- END CODE BLOCK ---
--- CODE BLOCK 21 ---
app/dashboard/layout.js
--- END CODE BLOCK ---
--- CODE BLOCK 24 ---
app/dashboard/layout.js
--- END CODE BLOCK ---
--- CODE BLOCK 25 ---
/dashboard/settings
--- END CODE BLOCK ---
--- CODE BLOCK 26 ---
['settings']
--- END CODE BLOCK ---
--- CODE BLOCK 28 ---
useSelectedLayoutSegments
--- END CODE BLOCK ---
[CODE_BLOCK_22]
[CODE_BLOCK_23]
[CODE_BLOCK_24]
[CODE_BLOCK_25]
[CODE_BLOCK_26]
Version History
Version
Changes
[CODE_BLOCK_27]
[CODE_BLOCK_28]
introduced.
Was this helpful?
supported.
Send