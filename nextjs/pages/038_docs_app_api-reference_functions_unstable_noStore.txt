SOURCE URL: https://nextjs.org/docs/app/api-reference/functions/unstable_noStore
SCRAPED: 2025-06-19 17:13:27
================================================================================

Menu
Using App Router
Features available in /app
Using Latest Version
15.3.4
Using App Router
Features available in /app
Using Latest Version
15.3.4
API Reference
Functions
unstable_noStore
unstable_noStore
This is a legacy API and no longer recommended. It's still supported for backward compatibility.
In version 15, we recommend using
--- CODE BLOCK 2 ---
unstable_noStore
--- END CODE BLOCK ---
instead of
--- CODE BLOCK 3 ---
unstable_noStore
--- END CODE BLOCK ---
--- CODE BLOCK 4 ---
import { unstable_noStore as noStore } from 'next/cache';
export default async function ServerComponent() {
noStore();
const result = await db.query(...);
--- END CODE BLOCK ---
can be used to declaratively opt out of static rendering and indicate a particular component should not be cached.
--- CODE BLOCK 5 ---
import { unstable_noStore as noStore } from 'next/cache';
export default async function ServerComponent() {
noStore();
const result = await db.query(...);
--- END CODE BLOCK ---
Good to know
--- CODE BLOCK 7 ---
cache: 'no-store'
--- END CODE BLOCK ---
is equivalent to
--- CODE BLOCK 9 ---
unstable_noStore
--- END CODE BLOCK ---
on a
--- CODE BLOCK 10 ---
export const dynamic = 'force-dynamic'
--- END CODE BLOCK ---
--- CODE BLOCK 11 ---
unstable_noStore
--- END CODE BLOCK ---
is preferred over
--- CODE BLOCK 12 ---
unstable_cache
--- END CODE BLOCK ---
as it is more granular and can be used on a per-component basis
Using
--- CODE BLOCK 14 ---
cache: 'no-store'
--- END CODE BLOCK ---
inside
--- CODE BLOCK 15 ---
next: { revalidate: 0 }
--- END CODE BLOCK ---
will not opt out of static generation. Instead, it will defer to the cache configuration to determine whether to cache the result or not.
Usage
If you prefer not to pass additional options to
--- CODE BLOCK 18 ---
import { unstable_noStore as noStore } from 'next/cache';
export default async function ServerComponent() {
noStore();
const result = await db.query(...);
--- END CODE BLOCK ---
, like
--- CODE BLOCK 19 ---
import { unstable_noStore as noStore } from 'next/cache';
export default async function ServerComponent() {
noStore();
const result = await db.query(...);
--- END CODE BLOCK ---
--- CODE BLOCK 21 ---
unstable_noStore
--- END CODE BLOCK ---
or in cases where
--- CODE BLOCK 24 ---
unstable_noStore
--- END CODE BLOCK ---
is not available, you can use
[CODE_BLOCK_17]
as a replacement for all of these use cases.
[CODE_BLOCK_18]
Version History
Version
Changes
[CODE_BLOCK_20]
[CODE_BLOCK_21]
deprecated for
[CODE_BLOCK_22]
[CODE_BLOCK_23]
[CODE_BLOCK_24]
introduced.
Was this helpful?
supported.
Send