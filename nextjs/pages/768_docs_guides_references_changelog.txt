SOURCE URL: https://docs.cypress.io/guides/references/changelog#13-6-3
SCRAPED: 2025-06-19 18:36:41
================================================================================

On this page
Cypress App
Changelog
14.5.0
Released 6/17/2025
Features:
Install Cypress
--- CODE BLOCK 2 ---
win32-arm64
--- END CODE BLOCK ---
binary on Windows
--- CODE BLOCK 3 ---
Cypress.stop()
--- END CODE BLOCK ---
systems. Cypress runs in emulation. Addresses
#30252
Bugfixes:
Fixed an issue when using
--- CODE BLOCK 4 ---
cy.session()
--- END CODE BLOCK ---
where a run may be aborted prior to receiving the required runner events causing Test Replay to not be available. Addresses
#31781
14.4.1
Released 6/3/2025
Bugfixes:
Fixed an issue where
--- CODE BLOCK 5 ---
about:blank
--- END CODE BLOCK ---
may fail internally if navigating to
--- CODE BLOCK 6 ---
defaultCommandTimeout
--- END CODE BLOCK ---
takes longer than the
--- CODE BLOCK 8 ---
cy.session()
--- END CODE BLOCK ---
. Addresses
#29496
Misc:
The design of commands that display as grouped (such as
--- CODE BLOCK 9 ---
@sinonjs/fake-timers
--- END CODE BLOCK ---
--- CODE BLOCK 12 ---
@cypress/webpack-dev-server
--- END CODE BLOCK ---
) has been updated to provide better clarity when collapsing groups. Addressed in
#31739
Dependency Updates:
Updated
--- CODE BLOCK 13 ---
@cypress/webpack-batteries-included-preprocessor
--- END CODE BLOCK ---
from
--- CODE BLOCK 14 ---
DEBUG=cypress-verbose:webpack-dev-server:bundle-analyzer
--- END CODE BLOCK ---
--- CODE BLOCK 15 ---
DEBUG=cypress-verbose:webpack-batteries-included-preprocessor:bundle-analyzer
--- END CODE BLOCK ---
. Addressed in
#31746
14.4.0
Released 5/20/2025
Features:
--- CODE BLOCK 16 ---
top.window.location
--- END CODE BLOCK ---
--- CODE BLOCK 17 ---
experimentalModifyObstructiveThirdPartyCode
--- END CODE BLOCK ---
now ship with
webpack-bundle-analyzer
as a diagnostic tool to determine bundle statistics, which can be enabled via
--- CODE BLOCK 19 ---
Chainable<null>
--- END CODE BLOCK ---
(component tests using webpack) or
--- CODE BLOCK 23 ---
--load-extension
--- END CODE BLOCK ---
(e2e tests using webpack, which is the default preprocessor), respectively. Addresses
#30461
Bugfixes:
Fixed an issue where framebusting was occurring when
--- CODE BLOCK 24 ---
@cypress/puppeteer
--- END CODE BLOCK ---
was being set explicitly. This fix does not require the
--- CODE BLOCK 27 ---
launchOptions.extensions
--- END CODE BLOCK ---
configuration option. Addresses
#31687
--- CODE BLOCK 29 ---
@sinonjs/fake-timers
--- END CODE BLOCK ---
now has a return type of
--- CODE BLOCK 38 ---
trashAssetsBeforeRuns=false
--- END CODE BLOCK ---
instead of
--- CODE BLOCK 39 ---
videosFolder
--- END CODE BLOCK ---
to match the convention of other commands that yield
--- CODE BLOCK 40 ---
cypress run
--- END CODE BLOCK ---
. Addressed in
#31698
Fixed an issue with the experimental usage of WebKit where Cypress incorrectly displayed
--- CODE BLOCK 41 ---
@cypress/grep
--- END CODE BLOCK ---
as the WebKit version. Addresses
#31684
Misc:
Chrome 137+ no longer supports
--- CODE BLOCK 44 ---
about:blank
--- END CODE BLOCK ---
in branded Chrome, breaking the
--- CODE BLOCK 45 ---
experimentalStudio
--- END CODE BLOCK ---
plugin in
--- CODE BLOCK 47 ---
CYPRESS_INITIAL_PREFLIGHT_TIMEOUT
--- END CODE BLOCK ---
mode and headed
--- CODE BLOCK 50 ---
babel-loader
--- END CODE BLOCK ---
mode and
--- CODE BLOCK 51 ---
@cypress/webpack-preprocessor
--- END CODE BLOCK ---
. We recommend using Electron, Chrome for Testing or Chromium to continue using these features. See Cypress Docker image examples for
Chrome for Testing
Chromium
. Addresses
#31702
#31703
Cursor is now available as an IDE option for opening files in Cypress, if it is installed on your system. Addressed in
#31691
The error shown when the
--- CODE BLOCK 52 ---
injectDocumentDomain
--- END CODE BLOCK ---
flag is missing has been updated to be shorter. Addressed in
#31676
Dependency Updates:
Upgraded
--- CODE BLOCK 59 ---
win-version-info
--- END CODE BLOCK ---
from
--- CODE BLOCK 63 ---
@cypress/webpack-batteries-included-preprocessor
--- END CODE BLOCK ---
--- CODE BLOCK 64 ---
@cypress/webpack-preprocessor
--- END CODE BLOCK ---
. Addressed in
#31725
#31737
Upgraded
--- CODE BLOCK 65 ---
@cypress/request
--- END CODE BLOCK ---
from
--- CODE BLOCK 68 ---
cross-fetch
--- END CODE BLOCK ---
--- CODE BLOCK 80 ---
systeminformation
--- END CODE BLOCK ---
. Addressed in
#31667
Upgraded
--- CODE BLOCK 83 ---
Cypress.stop()
--- END CODE BLOCK ---
from
--- CODE BLOCK 90 ---
.readFile()
--- END CODE BLOCK ---
--- CODE BLOCK 91 ---
.scrollTo()
--- END CODE BLOCK ---
. Addressed in
#31689
14.3.3
Released 5/6/2025
Performance:
Ensure the previous pausing event handlers are removed before new ones are added. Addressed in
#31596
Bugfixes:
Fixed an issue where the configuration setting
--- CODE BLOCK 92 ---
Cypress.dom
--- END CODE BLOCK ---
was ignored for assets in the
--- CODE BLOCK 95 ---
chrome-remote-interface
--- END CODE BLOCK ---
. These assets were incorrectly deleted before running tests with
--- CODE BLOCK 101 ---
compression
--- END CODE BLOCK ---
. Addresses
#8280
Fixed a potential hang condition when
--- CODE BLOCK 105 ---
@cypress/request
--- END CODE BLOCK ---
would match many files and
--- CODE BLOCK 108 ---
compression
--- END CODE BLOCK ---
--- CODE BLOCK 120 ---
about:blank
--- END CODE BLOCK ---
was piped to a file. Fixes
#31625
. Addressed in
#31631
Fixed a potential hang condition when navigating to
--- CODE BLOCK 127 ---
document.domain
--- END CODE BLOCK ---
. Addressed in
#31634
Misc:
The Assertions menu when you right click in
--- CODE BLOCK 131 ---
minSupportedVersion
--- END CODE BLOCK ---
tests now displays in dark mode. Addresses
#10621
. Addressed in
#31598
The URL in the Cypress App no longer displays a white background when the URL is loading. Fixes
#31556
Dependency Updates:
Downgraded
--- CODE BLOCK 132 ---
Cypress.browser
--- END CODE BLOCK ---
to 0.6.1. Addressed in
#31631
14.3.2
Released 4/22/2025
Bugfixes:
Fixed an issue where auto scroll in the Cypress Command Log was not scrolling correctly. Fixes
#31530
Fixed an issue where a message pointing users to the Cypress Cloud was not displaying on runs with failures in CI. Fixes
#31550
14.3.1
Released 4/17/2025
Performance:
Reduced the initial timeout for the preflight API request to determine proxy conditions from sixty seconds to five, and made this timeout duration configurable with the
--- CODE BLOCK 133 ---
cy.origin()
--- END CODE BLOCK ---
environment variable. Addresses
#28423
. Addressed in
#31283
Bugfixes:
--- CODE BLOCK 134 ---
injectDocumentDomain
--- END CODE BLOCK ---
command no longer errors when used in specs subsequent to the first spec in run mode. Fixes
#31466
Fixed an issue where certain proxy conditions prevented test runs from being recorded. Fixes
#31485
Misc:
Suppress benign warnings that reference OOM score of renderer. Addresses
#29563
. Addressed in
#31521
The UI of the reporter and URL were updated to a darker gray background for better color contrast. Addressed in
#31475
Fixed an issue where the error message output when attempting to install Cypress on an unsupported architecture included an outdated documentation link to Cypress system requirements. Fixes
#31512
14.3.0
Released 4/8/2025
Features:
--- CODE BLOCK 136 ---
document.domain
--- END CODE BLOCK ---
command is now available. It supports dispatching native Tab keyboard events to the browser. Addresses
#31050
. Addresses
#299
. Addressed in
#31398
Bugfixes:
Allows for
--- CODE BLOCK 138 ---
experimentalSkipDomainInjection
--- END CODE BLOCK ---
version 10 to be a peer dependency of
--- CODE BLOCK 139 ---
injectDocumentDomain
--- END CODE BLOCK ---
. Fixed in
#31218
Fixed an issue where Firefox BiDi was prematurely removing prerequests on pending requests. Fixes
#31376
Fixed an
issue
with Electron causing slow animations and increased test times by starting a CDP screencast with a noop configuration. Fixes
#30980
Misc:
Added an automation command for dispatching key press events to CDP and BiDi automated browsers. Addressed in
#31366
Updated error message around
--- CODE BLOCK 141 ---
XMLHttpRequest
--- END CODE BLOCK ---
removal to mention a future version of Cypress instead of Cypress 15. Addresses
#31373
. Addressed in
#31375
Dependency Updates:
Upgraded
--- CODE BLOCK 142 ---
about:blank
--- END CODE BLOCK ---
from
--- CODE BLOCK 143 ---
cy.window().then((win) => win.fetch('<some-url>'))
--- END CODE BLOCK ---
--- CODE BLOCK 146 ---
experimentalJustInTimeCompile
--- END CODE BLOCK ---
. Addressed in
#31423
#31432
Upgraded
--- CODE BLOCK 147 ---
justInTimeCompile
--- END CODE BLOCK ---
from
--- CODE BLOCK 149 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 150 ---
cypress run
--- END CODE BLOCK ---
. Addressed in
#31315
Upgraded
--- CODE BLOCK 151 ---
justInTimeCompile
--- END CODE BLOCK ---
from
--- CODE BLOCK 153 ---
create-react-app
--- END CODE BLOCK ---
--- CODE BLOCK 154 ---
@vue/cli-service
--- END CODE BLOCK ---
. Addressed in
#31358
14.2.1
Released 3/26/2025
Bugfixes:
Applies a fix from
#30730
#30099
related to Node.js turning on ESM flags by default in Node.js version
--- CODE BLOCK 162 ---
cypress/react18
--- END CODE BLOCK ---
. Fixed in
#31308
Fixed an issue where Firefox BiDi was not correctly removing prerequests on expected network request failures. Fixes
#31325
Fixed an issue in
--- CODE BLOCK 163 ---
cypress/react
--- END CODE BLOCK ---
--- CODE BLOCK 164 ---
cypress/angular-signals
--- END CODE BLOCK ---
where sourceMaps were not being set correctly in TypeScript 5. This should now make error code frames accurate for TypeScript 5 users. Fixes
#29614
Misc:
The UI above the application under test now displays in dark mode. Addresses
#31106
. Addressed in
#31360
Dependency Updates:
Upgraded
--- CODE BLOCK 165 ---
cypress/angular
--- END CODE BLOCK ---
from
--- CODE BLOCK 167 ---
peerDependency
--- END CODE BLOCK ---
--- CODE BLOCK 168 ---
@cypress/webpack-dev-server
--- END CODE BLOCK ---
. Addressed in
#31311
Upgraded
--- CODE BLOCK 169 ---
webpack-dev-server
--- END CODE BLOCK ---
from
--- CODE BLOCK 170 ---
@cypress/webpack-dev-server
--- END CODE BLOCK ---
--- CODE BLOCK 171 ---
webpack-dev-server
--- END CODE BLOCK ---
. Addressed in
#31327
Upgraded
--- CODE BLOCK 172 ---
webpack-dev-server
--- END CODE BLOCK ---
from
--- CODE BLOCK 174 ---
@cypress/vite-dev-server
--- END CODE BLOCK ---
--- CODE BLOCK 177 ---
cy.intercept()
--- END CODE BLOCK ---
. Addressed in
#31330
Upgraded
--- CODE BLOCK 179 ---
experimentalFetchPolyfill
--- END CODE BLOCK ---
from
--- CODE BLOCK 180 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 181 ---
before:browser:launch
--- END CODE BLOCK ---
. Addressed in
#31333
Upgraded
--- CODE BLOCK 182 ---
cypress open-ct
--- END CODE BLOCK ---
from
--- CODE BLOCK 183 ---
cypress run-ct
--- END CODE BLOCK ---
--- CODE BLOCK 184 ---
cypress open --component
--- END CODE BLOCK ---
. Addressed in
#31341
Upgraded
--- CODE BLOCK 185 ---
cypress run --component
--- END CODE BLOCK ---
from
--- CODE BLOCK 186 ---
Cypress.backend('firefox:force:gc')
--- END CODE BLOCK ---
--- CODE BLOCK 187 ---
Cypress.backend('log:memory:pressure')
--- END CODE BLOCK ---
. Addressed in
#31281
14.2.0
Released 3/12/2025
Features:
--- CODE BLOCK 188 ---
resourceType
--- END CODE BLOCK ---
is now available to stop the Cypress App on the current machine while tests are running. This can be useful for stopping test execution upon failures or other predefined conditions. Addresses
#518
. Addressed in
#31225
Misc:
The browser dropdown now has a more minimal design - showing only the icon of the browser selected to the left of the URL. The currently selected browser also now shows at the top of the browser dropdown. Browsers with longer names will now have their names correctly left aligned in the browser dropdown. Addresses
#21755
#30998
. Addressed in
#31216
Additional CLI options will be displayed in the terminal for some Cloud error messages. Addressed in
#31211
Updated Cypress Studio with url routing to support maintaining state when reloading. Addresses
#31000
#30996
Dependency Updates:
Upgraded
--- CODE BLOCK 189 ---
cy.intercept
--- END CODE BLOCK ---
from
--- CODE BLOCK 190 ---
resourceType
--- END CODE BLOCK ---
--- CODE BLOCK 191 ---
resourceType
--- END CODE BLOCK ---
. Addressed in
#31166
Upgraded
--- CODE BLOCK 192 ---
injectDocumentDomain
--- END CODE BLOCK ---
from
--- CODE BLOCK 193 ---
injectDocumentDomain
--- END CODE BLOCK ---
--- CODE BLOCK 195 ---
document.domain
--- END CODE BLOCK ---
. Addressed in
#31198
14.1.0
Released 2/25/2025
Features:
Firefox versions 135 and above are now automated with
WebDriver BiDi
instead of
Chrome Devtools Protocol
. Addresses
#30220
Bugfixes:
Fixed the calculation of upload throughput units when displaying the 'stream stalled' error message during Test Replay archive uploads. Fixes
#31075
. Addressed in
#31160
Misc:
Viewport width, height, and scale now display in a badge above the application under test. The dropdown describing how to set viewport height and width has been removed from the UI. Additionally, component tests now show a notice about URL navigation being disabled in component tests. Addresses
#30999
. Addressed in
#31119
Updated types around
--- CODE BLOCK 201 ---
display: contents
--- END CODE BLOCK ---
--- CODE BLOCK 205 ---
textContent
--- END CODE BLOCK ---
arguments and
--- CODE BLOCK 206 ---
overflow: clip
--- END CODE BLOCK ---
methods. Addressed in
#31055
Updated types around
--- CODE BLOCK 209 ---
cy.origin()
--- END CODE BLOCK ---
--- CODE BLOCK 210 ---
cy.window()
--- END CODE BLOCK ---
options. Addressed in
#31154
Dependency Updates:
Upgraded
--- CODE BLOCK 211 ---
cy.document()
--- END CODE BLOCK ---
from
--- CODE BLOCK 214 ---
cy.location()
--- END CODE BLOCK ---
--- CODE BLOCK 217 ---
cy.reload()
--- END CODE BLOCK ---
. Addressed in
#31128
Upgraded
--- CODE BLOCK 218 ---
cy.scrollTo()
--- END CODE BLOCK ---
from
--- CODE BLOCK 219 ---
cy.origin()
--- END CODE BLOCK ---
--- CODE BLOCK 223 ---
@electron/rebuild
--- END CODE BLOCK ---
. Addressed in
#31132
Upgraded
--- CODE BLOCK 226 ---
118.0.5993.159
--- END CODE BLOCK ---
from
--- CODE BLOCK 227 ---
130.0.6723.137
--- END CODE BLOCK ---
--- CODE BLOCK 237 ---
@vue/test-utils
--- END CODE BLOCK ---
. Addressed in
#31151
14.0.3
Released 2/11/2025
Bugfixes:
Fixed an issue in Cypress
--- CODE BLOCK 240 ---
--browser chrome-for-testing
--- END CODE BLOCK ---
where privileged commands did not run correctly when a spec file or support file contained certain encoded characters. Fixes
#31034
#31060
Dependency Updates:
Upgraded
--- CODE BLOCK 241 ---
Network.enable
--- END CODE BLOCK ---
from
--- CODE BLOCK 242 ---
userChrome.css
--- END CODE BLOCK ---
--- CODE BLOCK 243 ---
cypress.config.ts
--- END CODE BLOCK ---
. Addressed in
#31063
Upgraded
--- CODE BLOCK 245 ---
supportFile
--- END CODE BLOCK ---
from
--- CODE BLOCK 249 ---
defaultBrowser
--- END CODE BLOCK ---
--- CODE BLOCK 259 ---
@cypress/request
--- END CODE BLOCK ---
. Addressed in
#31004
14.0.2
Released 2/05/2025
Bugfixes:
Fixed a regression introduced in
--- CODE BLOCK 262 ---
xulstore.json
--- END CODE BLOCK ---
where error codeframes in the runner UI were not populated with the correct data in failed retry attempts. Fixes
#30927
All commands performed in
--- CODE BLOCK 268 ---
createSnapshot
--- END CODE BLOCK ---
--- CODE BLOCK 269 ---
@cypress/request
--- END CODE BLOCK ---
hooks will now correctly retry when a test fails. Commands that are actions like
--- CODE BLOCK 275 ---
launch-editor
--- END CODE BLOCK ---
--- CODE BLOCK 278 ---
loader-utils
--- END CODE BLOCK ---
will now perform the action in this situation also. Fixes
#2831
Fixed an issue in Cypress
--- CODE BLOCK 284 ---
WebSocket Connection Closed
--- END CODE BLOCK ---
where privileged commands did not run correctly when a spec file or support file contained characters that required encoding. Fixes
#30933
Re-enabled retrying Cloud instance creation for runs that are parallel or recorded. Fixes
#31002
Misc:
Updated the mismatched dependencies warning message to be neutral, avoiding assumptions about upgrading or downgrading. Fixes
#30990
Dependency Updates:
Upgraded
--- CODE BLOCK 285 ---
cy.screenshot()
--- END CODE BLOCK ---
from
--- CODE BLOCK 286 ---
GLib-GIO-ERROR
--- END CODE BLOCK ---
--- CODE BLOCK 287 ---
experimentalJustInTimeCompile
--- END CODE BLOCK ---
. Addressed in
#30966
14.0.1
Released 1/28/2025
Bugfixes:
Fixed an issue where Cypress would incorrectly navigate to
--- CODE BLOCK 288 ---
experimentalJustInTimeCompile
--- END CODE BLOCK ---
when test isolation was disabled and the last test would fail and then retry. Fixes
#28527
Fixed a regression introduced in
--- CODE BLOCK 289 ---
cypress open
--- END CODE BLOCK ---
where an element would not return the correct visibility if its offset parent was within the clipping element. Fixes
#30922
Fixed a regression introduced in
--- CODE BLOCK 290 ---
cypress run
--- END CODE BLOCK ---
where the incorrect visiblity would be returned when either
--- CODE BLOCK 291 ---
experimentalJustInTimeCompile
--- END CODE BLOCK ---
--- CODE BLOCK 294 ---
.type({upArrow})
--- END CODE BLOCK ---
was visible but the other one was clipping. Fixed in
#30934
Fixed an issue where an
--- CODE BLOCK 295 ---
.type({downArrow})
--- END CODE BLOCK ---
element would not return the correct visibility if its parent element has a clipping overflow. Fixed in
#30934
Fixed an issue where non-HTMLElement(s) may fail during assertions. Fixes
#30944
Misc:
Corrected the broken documentation links displayed in Cypress 14.0.0. Addresses
#30951
. Addressed in
#30953
Benign Mesa/GLX related warnings are now hidden in the terminal output when running Cypress in certain Linux environments or containers. Addresses
#29521
#29554
14.0.0
Released 1/16/2025
Summary:
Cypress v14.0.0 improves performance of component testing and adds support for new framework and dev server versions.
v14.0.0 also includes breaking changes to
--- CODE BLOCK 296 ---
CYPRESS_SKIP_VERIFY
--- END CODE BLOCK ---
that are necessary to handle
Chrome's deprecation of
--- CODE BLOCK 298 ---
file:preprocessor
--- END CODE BLOCK ---
injection
, which should fix issues for some users in recent Chrome versions. Support for older versions of Node.js, Linux distributions, browsers and component testing frameworks and dev servers is removed.
Overall, we don't anticipate this release to be too disruptive for most users. We recommend bumping your version to see if your
tests still run as expected. As always, open any issues you find
here
Breaking Changes:
info
Refer to the
v14 Migration Guide
for help migrating your code.
Removed support for Node.js 16 and Node.js 21. Addresses
#29930
Upgraded bundled Node.js version from
--- CODE BLOCK 302 ---
--ozone-platform-hint=auto
--- END CODE BLOCK ---
--- CODE BLOCK 303 ---
detect-port
--- END CODE BLOCK ---
. Addresses
#29547
Prebuilt binaries for Linux are no longer compatible with Linux distributions based on glibc
--- CODE BLOCK 306 ---
cypress open
--- END CODE BLOCK ---
, for example: Ubuntu 14-18, RHEL 7, CentOS 7, Amazon Linux 2. Addresses
#29601
Cypress now only officially supports the latest 3 major versions of Chrome, Firefox, and Edge - older browser versions may still work, but we recommend keeping your browsers up to date to ensure compatibility with Cypress. A warning will no longer be displayed on browser selection in the Launchpad for any 'unsupported' browser versions. Additionally, the undocumented
--- CODE BLOCK 311 ---
@cypress/webpack-batteries-included-preprocessor
--- END CODE BLOCK ---
property has been removed from
--- CODE BLOCK 312 ---
@cypress/request
--- END CODE BLOCK ---
. Addressed in
#30462
--- CODE BLOCK 315 ---
chrome-remote-interface
--- END CODE BLOCK ---
command must now be used when navigating between subdomains. Because this is a fairly disruptive change for users who frequently navigate between subdomains, a new configuration option is being introduced.
--- CODE BLOCK 324 ---
WebSocket connection closed
--- END CODE BLOCK ---
can be set to
--- CODE BLOCK 325 ---
cy.origin()
--- END CODE BLOCK ---
in order to re-enable the injection of
--- CODE BLOCK 330 ---
json-parse-even-better-errors
--- END CODE BLOCK ---
setters in Cypress. This configuration option is marked as deprecated and you'll receive a warning when Cypress is launched with this option set to
--- CODE BLOCK 334 ---
experimentalSourceRewriting
--- END CODE BLOCK ---
. It will be removed in a future version of Cypress. Addressed in
#30770
--- CODE BLOCK 335 ---
launch-editor
--- END CODE BLOCK ---
configuration has been removed and replaced with an
--- CODE BLOCK 350 ---
{downArrow}
--- END CODE BLOCK ---
configuration. Addressed in
#30770
It is no longer possible to make a
--- CODE BLOCK 352 ---
input[type=number]
--- END CODE BLOCK ---
--- CODE BLOCK 353 ---
inlineSourceMaps
--- END CODE BLOCK ---
request from the
--- CODE BLOCK 361 ---
Cypress.log
--- END CODE BLOCK ---
page in Electron (i.e.
--- CODE BLOCK 362 ---
IGNORE_CHROME_PREFERENCES
--- END CODE BLOCK ---
). You must use
--- CODE BLOCK 365 ---
cy.intercept()
--- END CODE BLOCK ---
instead or perform some form of initial navigation via
--- CODE BLOCK 370 ---
@cypress/vite-dev-server
--- END CODE BLOCK ---
. Addressed in
#30394
--- CODE BLOCK 371 ---
x-cypress-file-path
--- END CODE BLOCK ---
configuration option for component testing has been replaced with a
--- CODE BLOCK 377 ---
cy.origin()
--- END CODE BLOCK ---
option that is
--- CODE BLOCK 378 ---
navigator.webdriver
--- END CODE BLOCK ---
by default. This option will only compile resources directly related to your spec, compiling them 'just-in-time' before spec execution. This should result in improved memory management and performance for component tests in
--- CODE BLOCK 382 ---
Error: WebSocket connection closed
--- END CODE BLOCK ---
--- CODE BLOCK 387 ---
webpack-dev-server
--- END CODE BLOCK ---
modes, in particular for large component testing suites.
--- CODE BLOCK 389 ---
@cypress/webpack-dev-server
--- END CODE BLOCK ---
is now only supported for
--- CODE BLOCK 390 ---
SEMAPHORE_GIT_PR_NUMBER
--- END CODE BLOCK ---
. Addresses
#30234
. Addressed in
#30641
Cypress Component Testing no longer supports:
--- CODE BLOCK 391 ---
cypress run
--- END CODE BLOCK ---
. Addresses
#30028
--- CODE BLOCK 392 ---
cypress.config
--- END CODE BLOCK ---
. Addresses
#30481
--- CODE BLOCK 395 ---
cypress run
--- END CODE BLOCK ---
versions 13, 14, 15, and 16. The minimum supported version is now
--- CODE BLOCK 399 ---
{ force: true }
--- END CODE BLOCK ---
in order to fully support Angular
signals
. Addresses
#29582
. Addressed in
#30539
--- CODE BLOCK 406 ---
http-proxy-middleware
--- END CODE BLOCK ---
versions 10, 11, 12, and 13. Addresses
#29583
--- CODE BLOCK 409 ---
signal-exit
--- END CODE BLOCK ---
version 2. Addresses
#30468
--- CODE BLOCK 412 ---
cypress verify
--- END CODE BLOCK ---
versions 16 and 17. Addresses
#29607
--- CODE BLOCK 414 ---
dom.getContainsSelector
--- END CODE BLOCK ---
versions 3 and 4. Addresses
#30492
#30692
--- CODE BLOCK 420 ---
114.0.5735.289
--- END CODE BLOCK ---
version 2. Addresses
#30295
--- CODE BLOCK 421 ---
118.0.5993.117
--- END CODE BLOCK ---
test harness is no longer included in the Cypress binary. Instead, React 18 support is now shipped with
--- CODE BLOCK 430 ---
Cypress.spec
--- END CODE BLOCK ---
! Addresses
#29607
--- CODE BLOCK 431 ---
moduleResolution
--- END CODE BLOCK ---
test harness is no longer included in the Cypress binary. Instead, signals support is now shipped with
--- CODE BLOCK 435 ---
node_modules
--- END CODE BLOCK ---
! This requires
--- CODE BLOCK 437 ---
Cypress.currentRetry
--- END CODE BLOCK ---
to be installed as a
--- CODE BLOCK 438 ---
cy.origin()
--- END CODE BLOCK ---
. Addresses
#29606
The Cypress configuration wizard for Component Testing supports TypeScript 4.0 or greater. Addresses
#30493
--- CODE BLOCK 439 ---
cy.intercept()
--- END CODE BLOCK ---
no longer supports
--- CODE BLOCK 442 ---
@types/node
--- END CODE BLOCK ---
version 3. Additionally,
--- CODE BLOCK 443 ---
@cypress/unique-selector
--- END CODE BLOCK ---
now ships with
--- CODE BLOCK 444 ---
CircularJSON
--- END CODE BLOCK ---
version 5 by default.
--- CODE BLOCK 447 ---
better-sqlite3
--- END CODE BLOCK ---
version 4 will need to be installed alongside Cypress if you are still using
--- CODE BLOCK 453 ---
cypress run
--- END CODE BLOCK ---
version 4. Addresses
#29308
#30347
, and
#30141
--- CODE BLOCK 454 ---
cypress open
--- END CODE BLOCK ---
no longer supports
--- CODE BLOCK 456 ---
tsconfig.json
--- END CODE BLOCK ---
versions 2 and 3. Addresses
#29377
#29378
--- CODE BLOCK 462 ---
must only be invoked from the spec file or support file
--- END CODE BLOCK ---
option of
--- CODE BLOCK 464 ---
component.indexHtmlFile
--- END CODE BLOCK ---
has been removed. This option was deprecated in Cypress 6.4.0. Please use the
--- CODE BLOCK 465 ---
cy.intercept()
--- END CODE BLOCK ---
option instead. Addressed in
#30463
--- CODE BLOCK 466 ---
cy.get(@alias.all)
--- END CODE BLOCK ---
configuration option was removed. This option was deprecated in Cypress 6.0.0. We recommend using
--- CODE BLOCK 467 ---
chrome-remote-interface
--- END CODE BLOCK ---
for handling fetch requests. Addressed in
#30466
We removed yielding the second argument of
--- CODE BLOCK 471 ---
experimentalStrategy
--- END CODE BLOCK ---
as an array of browser arguments. This behavior has been deprecated since Cypress 4.0.0. Addressed in
#30460
--- CODE BLOCK 472 ---
experimentalOptions
--- END CODE BLOCK ---
--- CODE BLOCK 474 ---
cy.intercept
--- END CODE BLOCK ---
CLI commands were removed. Please use
--- CODE BLOCK 475 ---
@babel/core
--- END CODE BLOCK ---
--- CODE BLOCK 478 ---
@babel/traverse
--- END CODE BLOCK ---
respectively instead. Addressed in
#30456
The undocumented methods
--- CODE BLOCK 481 ---
react-docgen
--- END CODE BLOCK ---
--- CODE BLOCK 482 ---
6.0.0-alpha.3
--- END CODE BLOCK ---
were removed. Addresses
#30222
Deprecations:
--- CODE BLOCK 484 ---
cy.intercept
--- END CODE BLOCK ---
option on
--- CODE BLOCK 486 ---
cy.intercept
--- END CODE BLOCK ---
has been deprecated. We anticipate the resource types to change or be completely removed in the future. Our intention is to replace essential functionality dependent on the
--- CODE BLOCK 488 ---
cy.intercept()
--- END CODE BLOCK ---
within Cypress in a future version (like hiding network logs that are not fetch/xhr). Please leave feedback on any essential uses of
--- CODE BLOCK 496 ---
106.0.5249.51
--- END CODE BLOCK ---
in this
GitHub issue
. Addresses
#30433
The new
--- CODE BLOCK 497 ---
114.0.5735.289
--- END CODE BLOCK ---
configuration option is released as deprecated. It will be removed in a future version of Cypress. Addressed in
#30770
Features:
--- CODE BLOCK 503 ---
stats.skipped
--- END CODE BLOCK ---
, a new configuration option, can be set to
--- CODE BLOCK 508 ---
videoCompression
--- END CODE BLOCK ---
in order to re-enable the injection of
--- CODE BLOCK 510 ---
videoUploadOnPasses
--- END CODE BLOCK ---
setters in Cypress. Addressed in
#30770
Cypress Component Testing now supports:
--- CODE BLOCK 513 ---
videoCompression
--- END CODE BLOCK ---
version 19. Addresses
#29470
--- CODE BLOCK 515 ---
videoUploadOnPasses
--- END CODE BLOCK ---
version 19. Addresses
#30175
--- CODE BLOCK 516 ---
cy.readFile()
--- END CODE BLOCK ---
version >=15.0.4. Versions 15.0.0 - 15.0.3 depend on the React 19 Release Candidate and are not officially supported by Cypress, but should still work. Addresses
#30445
--- CODE BLOCK 517 ---
Cypress.Commands.overwrite()
--- END CODE BLOCK ---
version 5. Addresses
#29641
--- CODE BLOCK 518 ---
nodeVersion
--- END CODE BLOCK ---
version 6. Addresses
#30591
Bugfixes:
Elements with
--- CODE BLOCK 521 ---
capture: runner
--- END CODE BLOCK ---
will no longer use box model calculations for visibility, and correctly show as visible when they are visible. Fixed in
#29680
. Fixes
#29605
Fixed a visibility issue when the element is positioned
--- CODE BLOCK 522 ---
capture: viewport
--- END CODE BLOCK ---
--- CODE BLOCK 523 ---
--runner-ui
--- END CODE BLOCK ---
and the element's offset parent is positioned
--- CODE BLOCK 524 ---
cy.intercept
--- END CODE BLOCK ---
, a descendent of the ancestor, and has no clippable overflow. Fixed in
#29689
. Fixes
#28638
Fixed a visibility issue for elements with
--- CODE BLOCK 527 ---
--runner-ui
--- END CODE BLOCK ---
but without a width or height. Fixed in
#29688
. Fixes
#29687
Elements whose parent elements has
--- CODE BLOCK 528 ---
--no-runner-ui
--- END CODE BLOCK ---
and no height/width will now correctly show as hidden. Fixed in
#29778
. Fixes
#23852
The CSS pseudo-class
--- CODE BLOCK 530 ---
tsconfig.json
--- END CODE BLOCK ---
is now supported when testing in Electron. Addresses
#29766
Fixed an issue where the spec filename was not updating correctly when changing specs in
--- CODE BLOCK 532 ---
moduleResolution
--- END CODE BLOCK ---
mode. Fixes
#30852
--- CODE BLOCK 533 ---
process/browser
--- END CODE BLOCK ---
now correctly errors when the
--- CODE BLOCK 534 ---
@cypress/webpack-batteries-included-preprocessor
--- END CODE BLOCK ---
--- CODE BLOCK 535 ---
process/browser.js
--- END CODE BLOCK ---
--- CODE BLOCK 540 ---
@cypress/request
--- END CODE BLOCK ---
--- CODE BLOCK 543 ---
cypress.config
--- END CODE BLOCK ---
--- CODE BLOCK 544 ---
component-index.html
--- END CODE BLOCK ---
--- CODE BLOCK 552 ---
tough-cookie
--- END CODE BLOCK ---
--- CODE BLOCK 555 ---
@cypress/request
--- END CODE BLOCK ---
--- CODE BLOCK 558 ---
@cypress/request-promise
--- END CODE BLOCK ---
--- CODE BLOCK 562 ---
X-Cypress-Is-XHR-Or-Fetch
--- END CODE BLOCK ---
commands are used outside of the
--- CODE BLOCK 563 ---
must only be invoked from the spec file or support file
--- END CODE BLOCK ---
command
after the AUT has navigated away from the primary origin.
Fixes
#30848
Fixed in
#30858
Misc:
Removed some component testing API stubs that were removed in
Cypress v11.0.0
. Addressed in
#30696
. Addresses
#30623
Dependency Updates:
Upgraded
--- CODE BLOCK 564 ---
cy.writeFile()
--- END CODE BLOCK ---
from
--- CODE BLOCK 565 ---
cy.writeFile() must only be invoked from the spec file or support file
--- END CODE BLOCK ---
--- CODE BLOCK 566 ---
cy.screenshot()
--- END CODE BLOCK ---
. Addresses
#29547
#30561
Upgraded
--- CODE BLOCK 567 ---
@cypress/request
--- END CODE BLOCK ---
from
--- CODE BLOCK 570 ---
must only be invoked from the spec file or support file
--- END CODE BLOCK ---
--- CODE BLOCK 571 ---
ELECTRON_EXTRA_LAUNCH_ARGS
--- END CODE BLOCK ---
. Addresses
#28766
#30632
Upgraded bundled Chromium version from
--- CODE BLOCK 572 ---
must only be invoked from the spec file or support file
--- END CODE BLOCK ---
--- CODE BLOCK 573 ---
--headless=new
--- END CODE BLOCK ---
. Addresses
#29547
#30561
Updated
--- CODE BLOCK 576 ---
Content-Security-Policy
--- END CODE BLOCK ---
from
--- CODE BLOCK 577 ---
Content-Security-Policy-Report-Only
--- END CODE BLOCK ---
--- CODE BLOCK 578 ---
experimentalCspAllowList
--- END CODE BLOCK ---
. Addressed in
#30345
Updated
--- CODE BLOCK 579 ---
videoCompression
--- END CODE BLOCK ---
from
--- CODE BLOCK 582 ---
videoCompression
--- END CODE BLOCK ---
--- CODE BLOCK 584 ---
videoCompression
--- END CODE BLOCK ---
--- CODE BLOCK 587 ---
videoCompression
--- END CODE BLOCK ---
from
--- CODE BLOCK 588 ---
@cypress/mocha-teamcity-reporter
--- END CODE BLOCK ---
--- CODE BLOCK 589 ---
find-process
--- END CODE BLOCK ---
. Addresses
#30511
Upgraded
--- CODE BLOCK 592 ---
firefox-profile
--- END CODE BLOCK ---
from
--- CODE BLOCK 596 ---
package.json#exports
--- END CODE BLOCK ---
--- CODE BLOCK 597 ---
CYPRESS_DOWNLOAD_PATH_TEMPLATE
--- END CODE BLOCK ---
. Addresses
#26628
13.17.0
Released 12/17/2024
Features:
Added official support for the
Google Chrome for Testing
browser. Assuming the browser is in a location where it can be
auto-detected
, it can be launched by providing the
--- CODE BLOCK 604 ---
@vue/test-utils
--- END CODE BLOCK ---
option. If it can't be auto-detected, the path to the browser can also be provided. Previously
customizing the available browsers
was required. Addresses
#28123
#28554
Bugfixes:
Fixed an issue where targets may hang if
--- CODE BLOCK 607 ---
videoCompression
--- END CODE BLOCK ---
is not implemented for the target. Addresses
#29876
Updated Firefox
--- CODE BLOCK 613 ---
SYSTEM_PULLREQUEST_PULLREQUESTNUMBER
--- END CODE BLOCK ---
to correctly hide the toolbox during headless mode. Addresses
#30721
Fixed an issue loading the
--- CODE BLOCK 614 ---
--component
--- END CODE BLOCK ---
file with Node.js version
--- CODE BLOCK 615 ---
SEMAPHORE_GIT_WORKING_BRANCH
--- END CODE BLOCK ---
if it is loaded as an ESM. Addresses
#30715
Misc:
Removed a comment from the scaffolded
--- CODE BLOCK 617 ---
tsconfig.json
--- END CODE BLOCK ---
for component tests around CommonJS syntax. Addresses
#23287
Dependency Updates:
Updated
--- CODE BLOCK 619 ---
.type('{enter}')
--- END CODE BLOCK ---
from
--- CODE BLOCK 626 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 627 ---
content-length
--- END CODE BLOCK ---
. Addressed in
#30737
13.16.1
Released 12/04/2024
Bugfixes:
During recorded or parallel runs, execution will fail if Cypress is unable to confirm the creation of an instance instead of skipping the spec. Addresses
#30628
13.16.0
Released 11/19/2024
Features:
Added new
--- CODE BLOCK 628 ---
content-length
--- END CODE BLOCK ---
configuration option to specify the default browser to launch. This option only affects the first browser launch; changing this option after the browser is already launched will have no effect. Addresses
#6646
Bugfixes:
Fixed an issue where some JS assets were not properly getting sourcemaps included with the vite dev server if they had a cache busting query parameter in the URL. Fixed some scenarios to ensure that the sourcemaps that were included by the vite dev server were inlined. Addressed in
#30606
Misc:
Updated the protocol to be able to flex logic based on project config. Addresses
#30560
13.15.2
Released 11/5/2024
Bugfixes:
Fixed an issue where the Cypress runner could hang in
--- CODE BLOCK 633 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 636 ---
CYPRESS_CONNECT_RETRY_THRESHOLD
--- END CODE BLOCK ---
hooks that run Cypress commands after a page load timeout error occurs. Addresses
#30238
Misc:
Fixed a typo in CLI
--- CODE BLOCK 637 ---
Cypress.require()
--- END CODE BLOCK ---
option help text. Addresses
#30531
Dependency Updates:
Updated
--- CODE BLOCK 638 ---
Cannot find module 'typescript'
--- END CODE BLOCK ---
from
--- CODE BLOCK 639 ---
before:spec
--- END CODE BLOCK ---
--- CODE BLOCK 643 ---
mocha-junit-reporter
--- END CODE BLOCK ---
--- CODE BLOCK 646 ---
[suiteFilename]
--- END CODE BLOCK ---
from
--- CODE BLOCK 647 ---
[suiteName]
--- END CODE BLOCK ---
--- CODE BLOCK 649 ---
cy.setCookie()
--- END CODE BLOCK ---
. Addresses
#30509
Updated
--- CODE BLOCK 650 ---
cy.reload()
--- END CODE BLOCK ---
from
--- CODE BLOCK 651 ---
cy.intercept
--- END CODE BLOCK ---
--- CODE BLOCK 652 ---
req.continue()
--- END CODE BLOCK ---
. Addressed in
#30488
13.15.1
Released 10/24/2024
Bugfixes:
Patched
find-process
to fix an issue where trying to clean up browser profiles can throw an error on Windows. Addresses
#30378
Fixed an issue where requests to the same resource in rapid succession may not have the appropriate static response intercept applied if there are multiple intercepts that apply for that resource. Addresses
#30375
Misc:
Cypress now consumes
geckodriver
to help automate the Firefox browser instead of
marionette-client
. Addresses
#30217
Cypress now consumes
webdriver
to help automate the Firefox browser and
firefox-profile
to create a firefox profile and convert it to Base64 to save user screen preferences via
--- CODE BLOCK 653 ---
--auto-cancel-after-failures
--- END CODE BLOCK ---
. Addresses
#30300
#30301
Spec information is now passed to protocol's
--- CODE BLOCK 654 ---
Cypress.Commands.overwriteQuery
--- END CODE BLOCK ---
to improve troubleshooting when reporting on errors. Addressed in
#30316
Dependency Updates:
Updated
--- CODE BLOCK 655 ---
Cypress.require()
--- END CODE BLOCK ---
from
--- CODE BLOCK 656 ---
cy.origin()
--- END CODE BLOCK ---
--- CODE BLOCK 659 ---
cy.origin()
--- END CODE BLOCK ---
. Addressed in
#30076
13.15.0
Released 9/25/2024
Features:
Cypress now displays more actionable errors when a Test Replay upload takes too long, and more verbose messages when uncategorized errors occur during the upload process. Addressed in
#30235
Bugfixes:
Fixed an issue where Firefox was incorrectly mutating the state of click events on checkboxes after Firefox version
--- CODE BLOCK 660 ---
specPattern
--- END CODE BLOCK ---
and up. Addressed in
#30245
Fixed a regression introduced in
13.13.0
where 'Open in IDE' would not work for filepaths containing spaces and various other characters on Windows. Addresses
#29820
Misc:
Pass along the related log to the
--- CODE BLOCK 664 ---
test:after:run
--- END CODE BLOCK ---
function for protocol usage. Addressed in
#30244
Dependency Updates:
Update
--- CODE BLOCK 669 ---
underscore.string
--- END CODE BLOCK ---
from
--- CODE BLOCK 674 ---
ua-parser-js
--- END CODE BLOCK ---
--- CODE BLOCK 677 ---
experimentalMemoryManagement
--- END CODE BLOCK ---
. Addressed in
#30194
Updated
--- CODE BLOCK 678 ---
experimentalMemoryManagement=true
--- END CODE BLOCK ---
from
--- CODE BLOCK 679 ---
experimentalMemoryManagement
--- END CODE BLOCK ---
--- CODE BLOCK 680 ---
experimentalSkipDomainInjection
--- END CODE BLOCK ---
. This removes the
CVE-2024-43796
CVE-2024-45590
, and
CVE-2024-43800
vulnerabilities being reported in security scans. Addresses
#30241
Update
--- CODE BLOCK 681 ---
document.domain
--- END CODE BLOCK ---
from
--- CODE BLOCK 682 ---
document.domain
--- END CODE BLOCK ---
--- CODE BLOCK 683 ---
experimentalSkipDomainInjection
--- END CODE BLOCK ---
. Addressed in
#30247
Updated
--- CODE BLOCK 687 ---
component.specPattern
--- END CODE BLOCK ---
from
--- CODE BLOCK 688 ---
component.specPattern
--- END CODE BLOCK ---
--- CODE BLOCK 692 ---
data-testid
--- END CODE BLOCK ---
. This removes the
CVE-2022-37601
vulnerability being reported in security scans. Addresses
#28208
Updated
--- CODE BLOCK 693 ---
cypress run
--- END CODE BLOCK ---
from
--- CODE BLOCK 694 ---
CYPRESS_PULL_REQUEST_ID
--- END CODE BLOCK ---
--- CODE BLOCK 695 ---
CYPRESS_PULL_REQUEST_URL
--- END CODE BLOCK ---
. This removes the
CVE-2024-43799
vulnerability being reported in security scans. Addressed in
#30241
13.14.2
Released 9/4/2024
Bugfixes:
Fixed an issue where Cypress could crash with a
--- CODE BLOCK 696 ---
CYPRESS_CI_BUILD_URL
--- END CODE BLOCK ---
error. Fixes
#30100
Fixed an issue where
--- CODE BLOCK 697 ---
Cypress.currentRetry
--- END CODE BLOCK ---
was timing out and Cypress was failing to start due to
--- CODE BLOCK 700 ---
mochaawesome
--- END CODE BLOCK ---
error. Reverts
#30109
, the change to allow HiDPI screen for Wayland users. Fixes
#30172
#30160
13.14.1
Released 8/29/2024
Bugfixes:
Fixed an issue where no description was available for the
--- CODE BLOCK 701 ---
.contains()
--- END CODE BLOCK ---
feature inside the Cypress application settings page. Addresses
#30126
13.14.0
Released 8/27/2024
Performance:
Fixed a potential memory leak in the Cypress server when re-connecting to an unintentionally disconnected CDP connection. Fixes
#29744
. Addressed in
#29988
Features:
Added new
--- CODE BLOCK 712 ---
resourceType
--- END CODE BLOCK ---
configuration option for component testing. This option will only compile resources directly related to your spec, compiling
them 'just-in-time' before spec execution. This should result in improved memory management and performance for component
tests in
--- CODE BLOCK 713 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 714 ---
req.resourceType
--- END CODE BLOCK ---
modes, in particular for large component testing suites.
--- CODE BLOCK 715 ---
CYPRESS_EVERY_NTH_FRAME
--- END CODE BLOCK ---
is currently supported for
--- CODE BLOCK 717 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 720 ---
withinSubject
--- END CODE BLOCK ---
. Addresses
#29244
--- CODE BLOCK 722 ---
cy.nextUntil()
--- END CODE BLOCK ---
--- CODE BLOCK 724 ---
cy.getAllCookies()
--- END CODE BLOCK ---
now also works for date, month, week, time, datetime-local and range input types. Addresses
#29665
Added a
--- CODE BLOCK 725 ---
cy.clearAllCookies()
--- END CODE BLOCK ---
flag to enable suppressing Cypress verification checks. Addresses
#22243
Updated the protocol to allow making Cloud API requests. Addressed in
#30066
Passing
--- CODE BLOCK 727 ---
.select(index)
--- END CODE BLOCK ---
flag alone will automatically launch browser after being guided through project and/or testing type selection. Addressed in
#28538
Bugfixes:
Fixed an issue where files outside the Cypress project directory were not calculating the bundle output path correctly for the
--- CODE BLOCK 729 ---
cypress run
--- END CODE BLOCK ---
. Addresses
#8599
Fixed an issue where Cypress would not run if Node.js version
--- CODE BLOCK 730 ---
chromeWebSecurity
--- END CODE BLOCK ---
was being used with TypeScript and ES Modules. Fixes
#30084
Correctly determines current browser family when choosing between
--- CODE BLOCK 731 ---
supportFile
--- END CODE BLOCK ---
--- CODE BLOCK 732 ---
.contains()
--- END CODE BLOCK ---
options in App Runner. Fixes
#29880
Misc:
Allow HiDPI screen running Wayland to use Cypress window/browser by adding
--- CODE BLOCK 733 ---
.contains()
--- END CODE BLOCK ---
flag to Electron's runtime argument. Addresses
#20891
Dependency Updates:
Updated
--- CODE BLOCK 736 ---
e2e.testIsolation=false
--- END CODE BLOCK ---
from
--- CODE BLOCK 737 ---
cypress run --component
--- END CODE BLOCK ---
--- CODE BLOCK 738 ---
cy.origin()
--- END CODE BLOCK ---
. Addressed in
#30038
13.13.3
Released 8/14/2024
Bugfixes:
A console error will no longer display in Chrome about a deprecated unload call originating from jQuery. Addressed in
#29944
Fixed an issue where certain Test Replay upload error messages were too vague. Connection failures now report the precise system error, and the stall error message is reported rather than the vague, "The user aborted a request." Addressed in
#29959
Misc:
Updated
--- CODE BLOCK 739 ---
localStorage
--- END CODE BLOCK ---
hints displayed after Cypress binary install. Addresses
#29935
Dependency Updates:
Updated
--- CODE BLOCK 740 ---
sessionStorage
--- END CODE BLOCK ---
from
--- CODE BLOCK 741 ---
testIsolation
--- END CODE BLOCK ---
--- CODE BLOCK 742 ---
testIsolation
--- END CODE BLOCK ---
. Addressed in
#30023
13.13.2
Released 7/31/2024
Performance:
Fixed a memory leak with command logs with Test Replay enabled. Addressed in
#29939
Improved performance of
--- CODE BLOCK 747 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
in a method within our proxy. Addressed in
#29887
Bugfixes:
Fixed an issue where Yarn PnP was not working correctly with Cypress and
--- CODE BLOCK 750 ---
cy.origin()
--- END CODE BLOCK ---
. Fixes
#27947
Dependency Updates:
Updated
--- CODE BLOCK 751 ---
cy.origin()
--- END CODE BLOCK ---
from
--- CODE BLOCK 752 ---
e2e.experimentalOriginDependencies
--- END CODE BLOCK ---
--- CODE BLOCK 754 ---
Cookies.defaults
--- END CODE BLOCK ---
. Addresses
#29863
Updated
--- CODE BLOCK 755 ---
Cookies.preserveOnce
--- END CODE BLOCK ---
from
--- CODE BLOCK 756 ---
cy.session()
--- END CODE BLOCK ---
--- CODE BLOCK 757 ---
cy.server()
--- END CODE BLOCK ---
. Addressed in
#29932
Updated
--- CODE BLOCK 759 ---
Cypress.Server.defaults
--- END CODE BLOCK ---
from
--- CODE BLOCK 760 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 762 ---
superdomain
--- END CODE BLOCK ---
. Addressed in
#29870
Updated
--- CODE BLOCK 763 ---
cy.getCookie()
--- END CODE BLOCK ---
from
--- CODE BLOCK 764 ---
cy.setCookie()
--- END CODE BLOCK ---
--- CODE BLOCK 765 ---
cy.clearCookies()
--- END CODE BLOCK ---
. Addressed in
#29931
13.13.1
Released 7/16/2024
Bugfixes:
Fixed an issue where unhandled
--- CODE BLOCK 773 ---
cy.request()
--- END CODE BLOCK ---
exceptions would be thrown when CDP connections rapidly connect, disconnect, and connect again while there are pending commands. Fixes
#29572
CLI output properly displays non-JSON response bodies when a Test Replay upload attempt returns a non-JSON response body for a non-200 status code. Addressed in
#29801
Fixed an issue where the ReadStream used to upload a Test Replay recording could erroneously be re-used when retrying in cases of retryable upload failures. Fixes
#29227
Fixed an issue where command snapshots were not being captured within the
--- CODE BLOCK 774 ---
querystringify
--- END CODE BLOCK ---
command within Test Replay. Addressed in
#29828
Dependency Updates:
Updated
--- CODE BLOCK 777 ---
testIsolation
--- END CODE BLOCK ---
from
--- CODE BLOCK 780 ---
cy.origin()
--- END CODE BLOCK ---
--- CODE BLOCK 781 ---
cy.session()
--- END CODE BLOCK ---
. Addresses
#29822
. Addressed in
#29837
Replaced
--- CODE BLOCK 783 ---
localStorage
--- END CODE BLOCK ---
with
--- CODE BLOCK 784 ---
sessionStorage
--- END CODE BLOCK ---
. This removes the
CVE-2021-23358
vulnerability being reported in security scans. Addresses
#28207
Updated
--- CODE BLOCK 785 ---
cy.getAllLocalStorage()
--- END CODE BLOCK ---
from
--- CODE BLOCK 786 ---
localStorage
--- END CODE BLOCK ---
--- CODE BLOCK 787 ---
cy.clearAllLocalStorage()
--- END CODE BLOCK ---
. Addressed in
#29821
13.13.0
Released 7/02/2024
Performance:
Improved performance of
--- CODE BLOCK 788 ---
localStorage
--- END CODE BLOCK ---
option. Fixed in
#29540
Features:
Adds Signal support for Angular Component Testing versions 17.2 and up. Addresses
#29264
Bugfixes:
Fixed an issue where Chrome launch instances would not recreate the browser CRI client correctly after recovering from an unexpected browser closure. Fixes
#27657
. Fixed in
#29663
Fixed an issue where Firefox 129 (Firefox Nightly) would not launch with Cypress. Fixes
#29713
. Fixed in
#29720
Dependency Updates:
Updated
--- CODE BLOCK 789 ---
cy.getAllSessionStorage()
--- END CODE BLOCK ---
from
--- CODE BLOCK 790 ---
sessionStorage
--- END CODE BLOCK ---
--- CODE BLOCK 791 ---
cy.clearAllSessionStorage()
--- END CODE BLOCK ---
. Addressed in
#29770
Updated
--- CODE BLOCK 792 ---
sessionStorage
--- END CODE BLOCK ---
from
--- CODE BLOCK 793 ---
experimentalOriginDependencies
--- END CODE BLOCK ---
--- CODE BLOCK 797 ---
cy.origin()
--- END CODE BLOCK ---
. Addressed in
#29746
Updated
--- CODE BLOCK 798 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
from
--- CODE BLOCK 799 ---
experimentalOriginDependencies
--- END CODE BLOCK ---
--- CODE BLOCK 800 ---
Cypress.ensure
--- END CODE BLOCK ---
. Addresses
#29693
Updated
--- CODE BLOCK 801 ---
experimentalRunAllSpecs
--- END CODE BLOCK ---
from
--- CODE BLOCK 802 ---
specPattern
--- END CODE BLOCK ---
--- CODE BLOCK 803 ---
npm config set
--- END CODE BLOCK ---
. Addressed in
#29698
13.12.0
Released 6/18/2024
Features:
Added Component Testing support for Angular version 18. Addresses
#29309
Bugfixes:
We now trigger
--- CODE BLOCK 804 ---
experimentalRunAllSpecs=true
--- END CODE BLOCK ---
--- CODE BLOCK 805 ---
cy.getCookie()
--- END CODE BLOCK ---
events when typing
--- CODE BLOCK 806 ---
cy.getCookie('foo1').should('not.exist')
--- END CODE BLOCK ---
--- CODE BLOCK 807 ---
.its('value').should('equal', null)
--- END CODE BLOCK ---
--- CODE BLOCK 808 ---
experimentalRunAllSpecs
--- END CODE BLOCK ---
--- CODE BLOCK 809 ---
cy.session()
--- END CODE BLOCK ---
elements. Fixes
#29611
Fixed an issue where auto scrolling the reporter would sometimes be disabled without the user's intent. Fixes
#25084
Fixed an issue where
--- CODE BLOCK 810 ---
cy.session()
--- END CODE BLOCK ---
was still being used when
--- CODE BLOCK 812 ---
cypress run
--- END CODE BLOCK ---
was provided in a user's TypeScript config for TypeScript version 5. Fixes
#26203
When capture protocol script fails verification, an appropriate error is now displayed. Previously, an error regarding Test Replay archive location was shown. Addressed in
#29603
Fixed an issue where receiving HTTP responses with invalid headers raised an error. Now Cypress removes the invalid headers and gives a warning in the console with debug mode on. Fixes
#28865
Misc:
Report afterSpec durations to Cloud API when running in record mode with Test Replay enabled. Addressed in
#29500
Dependency Updates:
Updated firefox-profile from
--- CODE BLOCK 813 ---
testIsolation
--- END CODE BLOCK ---
--- CODE BLOCK 814 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
. Addressed in
#29662
Updated typescript from
--- CODE BLOCK 815 ---
testIsolation
--- END CODE BLOCK ---
--- CODE BLOCK 816 ---
cy.origin()
--- END CODE BLOCK ---
. Addressed in
#29568
Updated url-parse from
--- CODE BLOCK 817 ---
same-superdomain-origin
--- END CODE BLOCK ---
--- CODE BLOCK 818 ---
cy.origin()
--- END CODE BLOCK ---
. Addressed in
#29650
13.11.0
Released 6/4/2024
Performance:
Improved performance when setting console props within
--- CODE BLOCK 819 ---
cy.origin()
--- END CODE BLOCK ---
. Addressed in
#29501
Features:
Added support for
Next.js 14
for component testing. Addresses
#28185
Added an
--- CODE BLOCK 820 ---
cypress open
--- END CODE BLOCK ---
environment variable to ignore Chrome preferences when launching Chrome. Addresses
#29330
Bugfixes:
Fixed a situation where the Launchpad would hang if the project config had not been loaded when the Launchpad first queries the current project. Fixes
#29486
Pre-emptively fix behavior with Chrome for when
--- CODE BLOCK 826 ---
stylesheets
--- END CODE BLOCK ---
events are forcefully deprecated by using
--- CODE BLOCK 830 ---
supportFile
--- END CODE BLOCK ---
as a proxy. Fixes
#29241
Misc:
Enhanced the type definitions available to
--- CODE BLOCK 833 ---
cypress/react
--- END CODE BLOCK ---
--- CODE BLOCK 836 ---
cypress/react
--- END CODE BLOCK ---
. The
--- CODE BLOCK 837 ---
mountCallback
--- END CODE BLOCK ---
property of both the request and response in an interception can optionally be specified with user-defined types. Addresses
#29507
13.10.0
Released 5/21/2024
Features:
Added support for
--- CODE BLOCK 838 ---
cypress/vue
--- END CODE BLOCK ---
--- CODE BLOCK 841 ---
cypress/vue
--- END CODE BLOCK ---
--- CODE BLOCK 843 ---
cypress.config
--- END CODE BLOCK ---
. Addresses
#28347
Bugfixes:
Fixed an issue where orphaned Electron processes were inadvertently terminating the browser's CRI client. Fixes
#28397
. Fixed in
#29515
Fixed an issue where Cypress would use the wrong URL to upload Test Replay recordings when it wasn't able to determine the upload URL. It now displays an error when the upload URL cannot be determined, rather than a "Request Entity Too Large" error. Addressed in
#29512
Fixed an issue where Cypress was unable to search in the Specs list for files or folders containing numbers. Fixes
#29034
Fixed an issue setting the
--- CODE BLOCK 844 ---
vite.config.js
--- END CODE BLOCK ---
header when there are invalid header characters in the file path. Fixes
#25839
Fixed the display of some command assertions. Fixed in
#29517
Dependency Updates:
Updated js-cookie from
--- CODE BLOCK 845 ---
TestBed.configureTestingModule
--- END CODE BLOCK ---
--- CODE BLOCK 846 ---
@Injectable({ providedIn: 'root' })
--- END CODE BLOCK ---
. Addressed in
#29497
Updated randomstring from
--- CODE BLOCK 847 ---
@Component({ providers: [...] })
--- END CODE BLOCK ---
--- CODE BLOCK 848 ---
cy.mount(MyComponent, { providers: [...] })
--- END CODE BLOCK ---
. Addressed in
#29503
13.9.0
Released 5/7/2024
Features:
Added more descriptive error messages when Test Replay fails to record or upload. Addresses
#29022
Bugfixes:
Fixed a bug where promises rejected with
--- CODE BLOCK 849 ---
TestBed.overrideComponent
--- END CODE BLOCK ---
were failing inside
--- CODE BLOCK 850 ---
npm_config_ca
--- END CODE BLOCK ---
. Addresses
#23937
We now pass the same default Chromium flags to Electron as we do to Chrome. As a result of this change, the application under test's
--- CODE BLOCK 851 ---
npm_config_cafile
--- END CODE BLOCK ---
property will now correctly be
--- CODE BLOCK 852 ---
NODE_EXTRA_CA_CERTS
--- END CODE BLOCK ---
when testing in Electron. Fixes
#27939
Fixed network issues in requests using fetch for users where Cypress is run behind a proxy that performs HTTPS decryption (common among corporate proxies). Fixes
#29171
Fixed an issue where extra windows weren't being closed between specs in Firefox causing potential issues in subsequent specs. Fixes
#29473
Misc:
Improved accessibility of the Cypress App in some areas. Addressed in
#29322
Dependency Updates:
Updated electron from
--- CODE BLOCK 853 ---
cy.session()
--- END CODE BLOCK ---
--- CODE BLOCK 854 ---
cy.getCookie()
--- END CODE BLOCK ---
to address
CVE-2024-3156
. Addressed in
#29431
13.8.1
Released 4/23/2024
Performance:
Fixed a performance issue with activated service workers that aren't controlling clients which could lead to correlation timeouts. Fixes
#29333
#29126
Bugfixes:
Fixed a regression introduced in
13.6.0
where Cypress would occasionally exit with status code 1, even when a test run was successful, due to an unhandled WebSocket exception (
--- CODE BLOCK 855 ---
cy.getCookies()
--- END CODE BLOCK ---
). Addresses
#28523
Fixed an issue where Cypress would hang on some commands when an invalid
--- CODE BLOCK 856 ---
cy.setCookie()
--- END CODE BLOCK ---
option was provided. Fixes
#29323
Misc:
--- CODE BLOCK 857 ---
cy.clearCookie()
--- END CODE BLOCK ---
type now excludes null and undefined. Fixes
#28872
Dependency Updates:
Updated zod from
--- CODE BLOCK 858 ---
cy.clearCookies()
--- END CODE BLOCK ---
--- CODE BLOCK 863 ---
cy.origin()
--- END CODE BLOCK ---
. Addressed in
#29367
13.8.0
Released 4/18/2024
Features:
Added support for
--- CODE BLOCK 864 ---
cy.origin()
--- END CODE BLOCK ---
--- CODE BLOCK 865 ---
cy.session()
--- END CODE BLOCK ---
--- CODE BLOCK 866 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
. Addresses
#29305
Bugfixes:
Fixed a regression introduced in
13.7.3
where Cypress could hang handling long assertion messages. Fixes
#29350
Misc:
--- CODE BLOCK 867 ---
cy.origin()
--- END CODE BLOCK ---
environment variable from
Semaphore
CI is now captured to display the linked PR number in the Cloud. Addressed in
#29314
13.7.3
Released 4/11/2024
Bugfixes:
Fixed an issue where asserts with custom messages weren't displaying properly. Fixes
#29167
Fixed an issue where Cypress launch arguments were not being escaped correctly with multiple values inside quotes. Fixes
#27454
Misc:
Updated the Chrome flags to not show the "Enhanced Ad Privacy" dialog. Addresses
#29199
Suppresses benign warnings that reference Vulkan on GPU-less hosts. Addresses
#29085
. Addressed in
#29278
13.7.2
Released 4/2/2024
Performance:
Improvements to Test Replay upload resiliency. Fixes
#28890
. Addressed in
#29174
Bugfixes:
Fixed an issue where Cypress was not executing beyond the first spec in
--- CODE BLOCK 868 ---
document.cookie
--- END CODE BLOCK ---
for versions of Firefox 124 and up when a custom user agent was provided. Fixes
#29190
Fixed a bug where fields using arrays in
--- CODE BLOCK 871 ---
cy.origin()
--- END CODE BLOCK ---
are not correctly processed. Fixes
#27103
. Fixed in
#27312
Fixed a hang where Cypress would run indefinitely while recording to the cloud when CDP disconnects during the middle of a test. Fixes
#29209
Fixed a bug where option values containing quotation marks could not be selected. Fixes
#29213
Dependency Updates:
Updated express from
--- CODE BLOCK 874 ---
Cypress.require()
--- END CODE BLOCK ---
--- CODE BLOCK 880 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
. Addressed in
#29211
13.7.1
Released 3/21/2024
Bugfixes:
Fixed an issue where Cypress was not executing beyond the first spec in
--- CODE BLOCK 881 ---
cy.origin()
--- END CODE BLOCK ---
for versions of Firefox 124 and up. Fixes
#29172
Fixed an issue blurring shadow dom elements. Fixed in
#29125
Dependency Updates:
Updated jose from
--- CODE BLOCK 882 ---
cy.origin()
--- END CODE BLOCK ---
--- CODE BLOCK 883 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
. Addressed in
#29086
13.7.0
Released 3/13/2024
Features:
Added shadow DOM snapshot support within Test Replay in order to highlight elements correctly within the Cypress reporter. Addressed in
#28823
Added TypeScript support for
Vue 2.7+
. Addresses
#28591
Adds additional context to error messages displayed when Test Replay artifacts fail to upload. Addressed in
#28986
Performance:
Fixed a performance regression from
13.6.3
where unhandled service worker requests may not correlate correctly. Fixes
#28868
Reduces the number of attempts to retry failed Test Replay artifact uploads from 8 to 3, to reduce time spent on artifact upload attempts that will not succeed. Addressed in
#28986
Bugfixes:
Changed screenshot capture behavior in Chromium to activate the main Cypress tab before capturing. This prevents screenshot capture from timing out in certain situations. Fixed in
#29038
. Fixes
#5016
Fixed an issue where
--- CODE BLOCK 884 ---
cy.session()
--- END CODE BLOCK ---
commands on children of disabled elements would still produce "click" events -- even without
--- CODE BLOCK 885 ---
ngOnChanges
--- END CODE BLOCK ---
. Fixes
#28788
Changed RequestBody type to allow for boolean and null literals to be passed as body values.
#28789
Misc:
Changed Component Testing scaffolding instruction to
--- CODE BLOCK 886 ---
cy.origin()
--- END CODE BLOCK ---
to add framework dependencies when a project uses
--- CODE BLOCK 887 ---
cy.origin()
--- END CODE BLOCK ---
as package manager. Addresses
#29052
Command messages in the Cypress command logs will now truncate display at 100 lines instead of 50. Fixes
#29023
Capture the
--- CODE BLOCK 888 ---
cy.origin()
--- END CODE BLOCK ---
timestamp inside the browser for the purposes of accurately determining test start for Test Replay. Addressed in
#29061
Dependency Updates:
Updated
--- CODE BLOCK 889 ---
cy.origin()
--- END CODE BLOCK ---
from
--- CODE BLOCK 891 ---
cy.session()
--- END CODE BLOCK ---
--- CODE BLOCK 892 ---
cacheAcrossSpecs
--- END CODE BLOCK ---
. Addressed in
#29055
Updated
--- CODE BLOCK 893 ---
before:browser:launch
--- END CODE BLOCK ---
from
--- CODE BLOCK 895 ---
experimentalModifyObstructiveThirdPartyCode
--- END CODE BLOCK ---
--- CODE BLOCK 898 ---
experimentalWebKitSupport
--- END CODE BLOCK ---
. Addressed in
#28902
Updated
--- CODE BLOCK 899 ---
playwright-webkit
--- END CODE BLOCK ---
from
--- CODE BLOCK 900 ---
The media could not be loaded
--- END CODE BLOCK ---
--- CODE BLOCK 901 ---
videoUploadOnPasses
--- END CODE BLOCK ---
. Addressed in
#28979
13.6.6
Released 2/22/2024
Bugfixes:
Fixed a regression introduced in
13.6.5
where
--- CODE BLOCK 907 ---
cypress/react18
--- END CODE BLOCK ---
would fail for
--- CODE BLOCK 909 ---
ReactDom.Root
--- END CODE BLOCK ---
users. Fixes
#28982
13.6.5
Released 2/20/2024
Bugfixes:
Fixed tests hanging when the Chrome browser extension is disabled. Fixes
#28392
Fixed an issue which caused the browser to relaunch after closing the browser from the Launchpad. Fixes
#28852
Fixed an issue with the unzip promise never being rejected when an empty error happens. Fixed in
#28850
Fixed a regression introduced in
13.6.3
where Cypress could crash when processing service worker requests through our proxy. Fixes
#28950
Fixed incorrect type definition of
--- CODE BLOCK 910 ---
Sec-Fetch-Dest
--- END CODE BLOCK ---
. Fixed in
#28339
Misc:
Improved accessibility of the Cypress App in some areas. Addressed in
#28774
Changed references of LayerCI to webapp.io. Addressed in
#28874
Dependency Updates:
Upgraded
--- CODE BLOCK 912 ---
experimentalModifyObstructiveThirdPartyCode
--- END CODE BLOCK ---
from
--- CODE BLOCK 913 ---
403 forbidden
--- END CODE BLOCK ---
--- CODE BLOCK 916 ---
experimentalModifyObstructiveThirdPartyCode
--- END CODE BLOCK ---
Upgraded bundled Node.js version from
--- CODE BLOCK 917 ---
before:spec
--- END CODE BLOCK ---
--- CODE BLOCK 919 ---
experimentalInteractiveRunEvents
--- END CODE BLOCK ---
Upgraded bundled Chromium version from
--- CODE BLOCK 920 ---
cypress/svelte
--- END CODE BLOCK ---
--- CODE BLOCK 922 ---
testIsolation
--- END CODE BLOCK ---
Updated buffer from
--- CODE BLOCK 923 ---
modifyObstructiveCode
--- END CODE BLOCK ---
--- CODE BLOCK 924 ---
e2e.experimentalStudio
--- END CODE BLOCK ---
. Addressed in
#28934
Updated
--- CODE BLOCK 925 ---
projectConfig
--- END CODE BLOCK ---
from
--- CODE BLOCK 927 ---
setSystemTime
--- END CODE BLOCK ---
--- CODE BLOCK 928 ---
cy.session()
--- END CODE BLOCK ---
. Addressed in
#28941
Updated
--- CODE BLOCK 930 ---
cy.session()
--- END CODE BLOCK ---
from
--- CODE BLOCK 933 ---
component.devServer
--- END CODE BLOCK ---
--- CODE BLOCK 934 ---
experimentalSingleTabRunMode
--- END CODE BLOCK ---
. Addressed in
#28933
13.6.4
Released 1/30/2024
Performance:
Fixed a performance regression from
13.3.2
where aborted requests may not correlate correctly. Fixes
#28734
Bugfixes:
Fixed an issue with capturing assets for Test Replay when service workers are registered in Cypress support files. This issue would cause styles to not render properly in Test Replay. Fixes
#28747
Misc:
Added missing properties to the
--- CODE BLOCK 936 ---
CYPRESS_DOWNLOAD_PATH_TEMPLATE
--- END CODE BLOCK ---
interface for TypeScript users. Addresses
#27835
13.6.3
Released 1/16/2024
Bugfixes:
Force
--- CODE BLOCK 938 ---
cy.session()
--- END CODE BLOCK ---
--- CODE BLOCK 939 ---
supportFile
--- END CODE BLOCK ---
when TypeScript projects are detected to correctly run Cypress. This change should not have a large impact as
--- CODE BLOCK 940 ---
specPattern
--- END CODE BLOCK ---
is already forced when
--- CODE BLOCK 941 ---
testIsolation
--- END CODE BLOCK ---
is registered. This fix does not impact the ESM TypeScript configuration loader. Fixes
#27731
No longer wait for additional frames when recording a video for a spec that was skipped by the Cloud due to Auto Cancellation. Fixes
#27898
--- CODE BLOCK 943 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
will not be ignored if a project path or a provided path to spec files contains it. Fixes
#23616
Updated display of assertions and commands with a URL argument to escape markdown formatting so that values are displayed as is and assertion values display as bold. Fixes
#24960
#28100
When generating assertions via Cypress Studio, the preview of the generated assertions now correctly displays the past tense of 'expected' instead of 'expect'. Fixed in
#28593
Fixed a regression in
13.6.2
where the
--- CODE BLOCK 944 ---
cypress/react18
--- END CODE BLOCK ---
element was not highlighted correctly in Test Replay. Fixed in
#28627
Correctly sync
--- CODE BLOCK 946 ---
test:before:run
--- END CODE BLOCK ---
with secondary origin so test retries that leverage
--- CODE BLOCK 948 ---
lastMountedReactDom.unmountComponentAtNode is not a function
--- END CODE BLOCK ---
render logs as expected. Fixes
#28574
Fixed an issue where some cross-origin logs, like assertions or cy.clock(), were getting too many dom snapshots. Fixes
#28609
Fixed asset capture for Test Replay for requests that are routed through service workers. This addresses an issue where styles were not being applied properly in Test Replay and
--- CODE BLOCK 949 ---
cy.intercept()
--- END CODE BLOCK ---
was not working properly for requests in this scenario. Fixes
#28516
Fixed an issue where visiting an
--- CODE BLOCK 952 ---
about:blank
--- END CODE BLOCK ---
site would result in an infinite reload/redirect loop in Chrome 114+. Fixes
#25891
Fixed an issue where requests made from extra tabs do not include their original headers. Fixes
#28641
Fixed an issue where
--- CODE BLOCK 953 ---
cypress/react
--- END CODE BLOCK ---
would sometimes throw an error reading a property of undefined when returning responses. Fixes
#28233
Performance:
Fixed a performance regression from
13.3.2
where requests may not correlate correctly when test isolation is off. Fixes
#28545
Dependency Updates:
Remove dependency on
--- CODE BLOCK 954 ---
cypress/react18
--- END CODE BLOCK ---
package. Addresses
#28473
Updated
--- CODE BLOCK 955 ---
cy.state('subject')
--- END CODE BLOCK ---
to include a performance optimization. It's possible this could improve performance of the selector playground. Addressed in
#28571
Replace
--- CODE BLOCK 956 ---
cy.currentSubject()
--- END CODE BLOCK ---
with its successor
--- CODE BLOCK 957 ---
experimentalModifyObstructiveThirdPartyCode
--- END CODE BLOCK ---
version
--- CODE BLOCK 958 ---
experimentalModifyObstructiveThirdPartyCode
--- END CODE BLOCK ---
. This resolves decoding issues observed in complex objects sent from the browser. Addressed in
#28683
Updated
--- CODE BLOCK 959 ---
modifyObstructiveCode
--- END CODE BLOCK ---
from
--- CODE BLOCK 962 ---
document.cookie
--- END CODE BLOCK ---
--- CODE BLOCK 964 ---
CYPRESS_NO_COMMAND_LOG
--- END CODE BLOCK ---
to fix macOS Catalina issues. Addresses
#28697
Misc:
Improved accessibility of some areas of the Cypress App. Addressed in
#28628
Updated some documentation links to go through on.cypress.io. Addressed in
#28623
13.6.2
Released 12/26/2023
Bugfixes:
Fixed a regression in
13.6.1
where a malformed URI would crash Cypress. Fixes
#28521
Fixed a regression in
12.4.0
where erroneous
--- CODE BLOCK 965 ---
cy.contains()
--- END CODE BLOCK ---
tags were displaying in error messages in the Command Log making them less readable. Fixes
#28452
Performance:
Improved performance when finding unique selectors for command log snapshots for Test Replay. Addressed in
#28536
Dependency Updates:
Updated ts-node from
--- CODE BLOCK 968 ---
pluginsFile
--- END CODE BLOCK ---
--- CODE BLOCK 969 ---
pluginsFile
--- END CODE BLOCK ---
. Cypress will longer error during
--- CODE BLOCK 970 ---
cypress:server:util:process_profiler
--- END CODE BLOCK ---
--- CODE BLOCK 974 ---
cypress run --ct
--- END CODE BLOCK ---
when using typescript 5.3.2+ with
--- CODE BLOCK 975 ---
"type": "module"
--- END CODE BLOCK ---
--- CODE BLOCK 976 ---
cypress run
--- END CODE BLOCK ---
. Addresses
#28385
13.6.1
Released 12/5/2023
Bugfixes:
Fixed an issue where pages or downloads opened in a new tab were missing basic auth headers. Fixes
#28350
Fixed an issue where request logging would default the
--- CODE BLOCK 977 ---
specPattern
--- END CODE BLOCK ---
to the
--- CODE BLOCK 978 ---
require.resolve
--- END CODE BLOCK ---
of the currently running command even though those
--- CODE BLOCK 979 ---
*tsconfig.json
--- END CODE BLOCK ---
would not apply to the request log and are not displayed. If the
--- CODE BLOCK 985 ---
cypress.config.ts
--- END CODE BLOCK ---
are sufficiently large (e.g. when running the
--- CODE BLOCK 986 ---
experimentalStudio
--- END CODE BLOCK ---
from the
code-coverage
plugin) there could be performance/memory implications. Addressed in
#28411
Fixed an issue where commands would fail with the error
--- CODE BLOCK 987 ---
cypress open
--- END CODE BLOCK ---
if the project's
--- CODE BLOCK 988 ---
cypress.json
--- END CODE BLOCK ---
included basic auth credentials. Fixes
#27457
#28336
Fixed an issue where some URLs would timeout in pre-request correlation. Addressed in
#28427
Cypress will now correctly log errors and debug logs on Linux machines. Fixes
#5051
#24713
Misc:
Artifact upload duration is now reported to Cypress Cloud. Fixes
#28238
. Addressed in
#28418
13.6.0
Released 11/21/2023
Features:
Added an activity indicator to CLI output when artifacts (screenshots, videos, or Test Replay) are being uploaded to the cloud. Addresses
#28239
. Addressed in
#28277
When artifacts are uploaded to the Cypress Cloud, the duration of each upload will be displayed in the terminal. Addresses
#28237
Bugfixes:
We now allow absolute paths when setting
--- CODE BLOCK 989 ---
cypress.config.js
--- END CODE BLOCK ---
in the Cypress config. Fixes
#27750
Fixed an issue where dynamic intercept aliases now show with alias name instead of "no alias" in driver. Addresses
#24653
Fixed an issue where
aliasing individual requests
with
--- CODE BLOCK 990 ---
cypress.config.ts
--- END CODE BLOCK ---
led to an error when retrieving all of the aliases with
--- CODE BLOCK 991 ---
cypress.config.cjs
--- END CODE BLOCK ---
. Addresses
#25448
The URL of the application under test and command error "Learn more" links now open externally instead of in the Cypress-launched browser. Fixes
#24572
Fixed issue where some URLs would timeout in pre-request correlation. Addressed in
#28354
Misc:
Browser tabs and windows other than the Cypress tab are now closed between tests in Chromium-based browsers. Addressed in
#28204
Cypress now ensures the main browser tab is active before running each command in Chromium-based browsers. Addressed in
#28334
Dependency Updates:
Upgraded
--- CODE BLOCK 992 ---
cypress.config.mjs
--- END CODE BLOCK ---
from
--- CODE BLOCK 993 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 994 ---
cypress.config.{cjs,js,mjs,ts}
--- END CODE BLOCK ---
to increase the max payload from 100MB to 256MB. Addressed in
#27998
13.5.1
Released 11/14/2023
Bugfixes:
Fixed a regression in
13.5.0
where requests cached within a given spec may take longer to load than they did previously. Addresses
#28295
Fixed an issue where pages opened in a new tab were missing response headers, causing them not to load properly. Fixes
#28293
#28303
We now pass a flag to Chromium browsers to disable default component extensions. This is a common flag passed during browser automation. Fixed in
#28294
13.5.0
Released 11/8/2023
Features:
Added Component Testing support for
Angular
version 17. Addresses
#28153
Bugfixes:
Fixed an issue in chromium based browsers, where global style updates can trigger flooding of font face requests in DevTools and Test Replay. This can affect performance due to the flooding of messages in CDP. Fixes
#28150
#28215
Fixed a regression in
13.3.3
where Cypress would hang on loading shared workers when using
--- CODE BLOCK 995 ---
--config-file=false
--- END CODE BLOCK ---
to reload the page. Fixes
#28248
Fixed an issue where network requests made from tabs, or windows other than the main Cypress tab, would be delayed. Fixes
#28113
Fixed an issue with 'other' targets (e.g. pdf documents embedded in an object tag) not fully loading. Fixes
#28228
#28162
Fixed an issue where clicking a link to download a file could cause a page load timeout when the download attribute was missing. Note: download behaviors in experimental WebKit are still an issue. Fixes
#14857
Fixed an issue to account for canceled and failed downloads to correctly reflect these status in Command log as a download failure where previously it would be pending. Fixed in
#28222
Fixed an issue determining visibility when an element is hidden by an ancestor with a shared edge. Fixes
#27514
We now pass a flag to Chromium browsers to disable Chrome translation, both the manual option and the popup prompt, when a page with a differing language is detected. Fixes
#28225
Stopped processing CDP events at the end of a spec when Test Isolation is off and Test Replay is enabled. Addressed in
#28213
13.4.0
Released 10/30/2023
Features:
Introduced experimental configuration options for advanced retry logic: adds
--- CODE BLOCK 996 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 997 ---
cypress open
--- END CODE BLOCK ---
keys to the
--- CODE BLOCK 999 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
configuration key. See
Experimental Flake Detection Features
for more information. Addressed in
#27930
Bugfixes:
Fixed a regression in
13.3.2
where Cypress would crash with 'Inspected target navigated or closed' or 'Session with given id not found'. Fixes
#28141
#28148
13.3.3
Released 10/24/2023
Bugfixes:
Fixed a performance regression in
13.3.1
with proxy correlation timeouts and requests issued from web and shared workers. Fixes
#28104
Fixed a performance problem with proxy correlation when requests get aborted and then get miscorrelated with follow up requests. Addressed in
#28094
Fixed a regression in
10.0.0
, where search would not find a spec if the file name contains "-" or "_", but search prompt contains " " instead (e.g. search file "spec-file.cy.ts" with prompt "spec file"). Fixes
#25303
13.3.2
Released 10/18/2023
Bugfixes:
Fixed a performance regression in
13.3.1
with proxy correlation timeouts and requests issued from service workers. Fixes
#28054
#28056
Fixed an issue where proxy correlation would leak over from a previous spec causing performance problems,
--- CODE BLOCK 1001 ---
supportFile
--- END CODE BLOCK ---
problems, and Test Replay asset capturing issues. Addressed in
#28060
Fixed an issue where redirects of requests that knowingly don't have CDP traffic should also be assumed to not have CDP traffic. Addressed in
#28060
Fixed an issue with Accept Encoding headers by forcing gzip when no accept encoding header is sent and using identity if gzip is not sent. Fixes
#28025
Dependency Updates:
Upgraded
--- CODE BLOCK 1002 ---
slowTestThreshold
--- END CODE BLOCK ---
from
--- CODE BLOCK 1005 ---
supportFile
--- END CODE BLOCK ---
--- CODE BLOCK 1006 ---
cypress/support/index.js
--- END CODE BLOCK ---
to address the
SNYK-JS-SEMVER-3247795
security vulnerability. Addressed in
#28063
Upgraded
--- CODE BLOCK 1007 ---
e2e.supportFile
--- END CODE BLOCK ---
from
--- CODE BLOCK 1008 ---
cypress/support/e2e.{js,jsx,ts,tsx}
--- END CODE BLOCK ---
--- CODE BLOCK 1009 ---
component.supportFile
--- END CODE BLOCK ---
to address the
SNYK-JS-BABELTRAVERSE-5962462
security vulnerability. Addressed in
#28063
Upgraded
--- CODE BLOCK 1010 ---
cypress/support/component.{js,jsx,ts,tsx}
--- END CODE BLOCK ---
from
--- CODE BLOCK 1011 ---
pluginsFile
--- END CODE BLOCK ---
--- CODE BLOCK 1012 ---
setupNodeEvents()
--- END CODE BLOCK ---
to address the
SNYK-JS-BABELTRAVERSE-5962462
security vulnerability. Addressed in
#28063
13.3.1
Released 10/11/2023
Bugfixes:
Fixed an issue where requests were correlated in the wrong order in the proxy. This could cause an issue where the wrong request is used for
--- CODE BLOCK 1013 ---
devServer()
--- END CODE BLOCK ---
or assets (e.g. stylesheets or images) may not properly be available in Test Replay. Addressed in
#27892
Fixed an issue where a crashed Chrome renderer can cause the Test Replay recorder to hang. Addressed in
#27909
Fixed an issue where multiple responses yielded from calls to
--- CODE BLOCK 1015 ---
specPattern
--- END CODE BLOCK ---
would sometimes be out of order. Fixes
#27337
Fixed an issue where requests were timing out in the proxy. This could cause an issue where the wrong request is used for
--- CODE BLOCK 1016 ---
integrationFolder
--- END CODE BLOCK ---
or assets (e.g. stylesheets or images) may not properly be available in Test Replay. Addressed in
#27976
Fixed an issue where Test Replay couldn't record tests due to issues involving
--- CODE BLOCK 1017 ---
componentFolder
--- END CODE BLOCK ---
. Fixed deprecation warnings during the rebuild of better-sqlite3. Fixes
#27891
#27902
Enables test replay for executed specs in runs that have a spec that causes a browser crash. Addressed in
#27786
13.3.0
Released 09/27/2023
Features:
Introduces new layout for Runs page providing additional run information. Addresses
#27203
Bugfixes:
Fixed an issue where actionability checks trigger a flood of font requests. Removing the font requests has the potential to improve performance and removes clutter from Test Replay. Addressed in
#27860
Fixed network stubbing not permitting status code 999. Fixes
#27567
. Addressed in
#27853
13.2.0
Released 09/12/2023
Features:
Adds support for Nx users who want to run Angular Component Testing in parallel. Addressed in
#27723
Bugfixes:
Edge cases where
--- CODE BLOCK 1018 ---
specPattern
--- END CODE BLOCK ---
would not properly intercept and asset response bodies would not properly be captured for Test Replay have been addressed. Addressed in
#27771
Fixed an issue where
--- CODE BLOCK 1019 ---
ignoreTestFiles
--- END CODE BLOCK ---
--- CODE BLOCK 1020 ---
excludeSpecPattern
--- END CODE BLOCK ---
, and
--- CODE BLOCK 1021 ---
experimentalStudio
--- END CODE BLOCK ---
events were not triggering
--- CODE BLOCK 1022 ---
cypress open
--- END CODE BLOCK ---
events properly in some versions of Firefox. Addressed in
#27715
Fixed a regression in
--- CODE BLOCK 1023 ---
cypress run
--- END CODE BLOCK ---
where tests using Basic Authorization can potentially hang indefinitely on chromium browsers. Addressed in
#27781
Dependency Updates:
Upgraded Electron from
--- CODE BLOCK 1024 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 1025 ---
screenshotsFolder
--- END CODE BLOCK ---
, which updates bundled Chromium from
--- CODE BLOCK 1026 ---
videosFolder
--- END CODE BLOCK ---
--- CODE BLOCK 1027 ---
specPattern
--- END CODE BLOCK ---
Additionally, the Node version binary has been upgraded from
--- CODE BLOCK 1028 ---
cypress open-ct
--- END CODE BLOCK ---
--- CODE BLOCK 1029 ---
cypress run-ct
--- END CODE BLOCK ---
. This does
have an impact on the node version you are using with Cypress and is merely an internal update to the repository & shipped binary.
Addressed in
#27715
. Addresses
#27595
13.1.0
Released 08/31/2023
Features:
Introduces a status icon representing the
--- CODE BLOCK 1030 ---
cypress open --component
--- END CODE BLOCK ---
test run in the Sidebar for the Runs Page. Addresses
#27206
Bugfixes:
Fixed a regression introduced in Cypress
13.0.0
where the
Module API
--- CODE BLOCK 1031 ---
cypress run --component
--- END CODE BLOCK ---
, and
--- CODE BLOCK 1032 ---
cypress open
--- END CODE BLOCK ---
results did not include the
--- CODE BLOCK 1034 ---
ct.supportFile
--- END CODE BLOCK ---
field for each run result. Fixes
#27694
. Addressed in
#27695
Individual CDP errors that occur while capturing data for Test Replay will no longer prevent the entire run from being available. Addressed in
#27709
Fixed an issue where the release date on the
--- CODE BLOCK 1036 ---
node_modules
--- END CODE BLOCK ---
landing page was a day behind. Fixed in
#27711
Fixed an issue where fatal protocol errors would leak between specs causing all subsequent specs to fail to upload protocol information. Fixed in
#27720
Updated
--- CODE BLOCK 1037 ---
package.json
--- END CODE BLOCK ---
from
--- CODE BLOCK 1038 ---
@cypress/mount-utils@2.0.0
--- END CODE BLOCK ---
--- CODE BLOCK 1039 ---
@cypress/react@6.0.0
--- END CODE BLOCK ---
to address
CVE-2022-37616
CVE-2022-39353
. Fixed in
#27710
13.0.0
Released 08/29/2023
Summary:
When recording to Cypress Cloud, users now receive our newest feature:
Test Replay
. Test Replay brings the debugging experience you know and love from the Cypress app directly into your recorded tests in Cypress Cloud.
Previously, trying to debug failures and flake in CI was painful and time consuming with only videos & screenshots. Test Replay provides a way to inspect the DOM, network events, and console logs of your application from your tests exactly as they ran in CI.
Test Replay is available in all Cypress Cloud plans. To start using Test Replay, simply record a run to Cypress Cloud. Learn more in the
Test Replay documentation
Test Replay now serves as the primary replacement for debugging via video. Video capture and
--- CODE BLOCK 1040 ---
@cypress/vue@4.0.0
--- END CODE BLOCK ---
of captured video are now set to
--- CODE BLOCK 1041 ---
@cypress/vue2@1.0.0
--- END CODE BLOCK ---
by default and
--- CODE BLOCK 1042 ---
cypress.config.js|ts|cjs|mjs
--- END CODE BLOCK ---
is removed.
Read more about v13.0.0 in
our blog post
Breaking Changes:
info
Refer to the
v13 Migration Guide
for help migrating your code.
--- CODE BLOCK 1043 ---
setupNodeEvents()
--- END CODE BLOCK ---
configuration option now defaults to
--- CODE BLOCK 1046 ---
pluginsFile
--- END CODE BLOCK ---
. Addresses
#26157
--- CODE BLOCK 1049 ---
specPattern
--- END CODE BLOCK ---
configuration option now defaults to
--- CODE BLOCK 1052 ---
componentFolder
--- END CODE BLOCK ---
. Addresses
#26160
--- CODE BLOCK 1053 ---
integrationFolder
--- END CODE BLOCK ---
configuration option has been removed. Please see our
screenshots & videos guide
on how to accomplish similar functionality. Addresses
#26899
Requests for assets at relative paths for component testing are now correctly forwarded to the dev server. Fixes
#26725
--- CODE BLOCK 1055 ---
e2e.specPattern
--- END CODE BLOCK ---
command is now retry-able as a
query command
. This should not affect any tests using it; the functionality is unchanged. However, it can no longer be overwritten using
--- CODE BLOCK 1056 ---
cypress/e2e/**.cy.{js,jsx,ts,tsx}
--- END CODE BLOCK ---
. Addressed in
#25595
The deprecated configuration option
--- CODE BLOCK 1057 ---
cypress open
--- END CODE BLOCK ---
has been removed. Addresses
#27016
The properties and values returned by the
Module API
and included in the arguments of handlers for the
--- CODE BLOCK 1058 ---
specPattern
--- END CODE BLOCK ---
--- CODE BLOCK 1059 ---
component.specPattern
--- END CODE BLOCK ---
have been changed to be more consistent. Addresses
#23805
For Cypress Cloud runs with Test Replay enabled, the Cypress Runner UI is now hidden during the run. This change was made to improve performance in situations where the Runner no longer needs to be rendered. If video is recorded during the run, the Runner will not be visible. In addition, if a screenshot with
--- CODE BLOCK 1060 ---
**/*.cy.{js,jsx,ts,tsx}
--- END CODE BLOCK ---
is taken, the screenshot will be taken as if the
--- CODE BLOCK 1061 ---
excludeSpecPattern
--- END CODE BLOCK ---
option was passed. You can turn off this behavior by passing
--- CODE BLOCK 1064 ---
ignoreTestFiles
--- END CODE BLOCK ---
. Addressed in
#27482
The browser and browser page unexpectedly closing in the middle of a test run are now gracefully handled. Addressed in
#27592
Automation performance is now improved by switching away from websockets to direct CDP calls for Chrome and Electron browsers. Addressed in
#27592
Edge cases where
--- CODE BLOCK 1065 ---
e2e.excludeSpecPattern
--- END CODE BLOCK ---
would not properly intercept have been addressed. Addressed in
#27592
Node 14 support has been removed and Node 16 support has been deprecated. Node 16 may continue to work with Cypress
--- CODE BLOCK 1066 ---
ignoreTestFiles
--- END CODE BLOCK ---
, but will not be supported moving forward to closer coincide with
Node 16's end-of-life
schedule. It is recommended that users update to at least Node 18.
The minimum supported TypeScript version is
--- CODE BLOCK 1067 ---
*.hot-update.js
--- END CODE BLOCK ---
Features:
Added
--- CODE BLOCK 1068 ---
component.excludeSpecPattern
--- END CODE BLOCK ---
--- CODE BLOCK 1069 ---
['**/__snapshots__/*','**/__image_snapshots__/*']
--- END CODE BLOCK ---
CLI flags to control whether the Cypress Runner UI is visible during a run. Addressed in
#27582
Consolidates and improves terminal output when uploading test artifacts to Cypress Cloud. Addressed in
#27402
Bugfixes:
Fixed an issue where Cypress's internal
--- CODE BLOCK 1070 ---
e2e.specPattern
--- END CODE BLOCK ---
would conflict with properties set in the user's
--- CODE BLOCK 1071 ---
**/node_modules/**
--- END CODE BLOCK ---
such as
--- CODE BLOCK 1072 ---
e2e.excludeSpecPattern
--- END CODE BLOCK ---
--- CODE BLOCK 1073 ---
component.excludeSpecPattern
--- END CODE BLOCK ---
. Fixes
#26308
#27448
Clarified Svelte 4 works correctly with Component Testing and updated dependencies checks to reflect this. It was incorrectly flagged as not supported. Fixes
#27465
Resolve the
--- CODE BLOCK 1074 ---
defineConfig()
--- END CODE BLOCK ---
global inside
--- CODE BLOCK 1075 ---
defineConfig()
--- END CODE BLOCK ---
to resolve to
--- CODE BLOCK 1078 ---
cy.session()
--- END CODE BLOCK ---
in order to explicitly provide the file extension. File resolution must include the extension for
--- CODE BLOCK 1081 ---
Cypress.Commands.add()
--- END CODE BLOCK ---
--- CODE BLOCK 1082 ---
Cypress.Command.override()
--- END CODE BLOCK ---
files inside ESM packages in order to resolve correctly. Fixes
#27599
Fixed an issue where the correct
--- CODE BLOCK 1085 ---
--component
--- END CODE BLOCK ---
process was not being discovered. Fixes
#27562
Fixed incorrect type declarations for Cypress and Chai globals that asserted them to be local variables of the global scope rather than properties on the global object. Fixes
#27539
. Fixed in
#27540
Dev Servers will now respect and use the
--- CODE BLOCK 1086 ---
cypress run
--- END CODE BLOCK ---
configuration option if present. Fixes
#27675
Dependency Updates:
Upgraded
--- CODE BLOCK 1087 ---
cypress open
--- END CODE BLOCK ---
from
--- CODE BLOCK 1088 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 1089 ---
cypress open
--- END CODE BLOCK ---
to address the
CVE-2023-28155
security vulnerability. Addresses
#27535
. Addressed in
#27495
12.17.4
Released 08/15/2023
Bugfixes:
Fixed an issue where having
--- CODE BLOCK 1091 ---
cypress open
--- END CODE BLOCK ---
in a nested directory would cause problems with locating the
--- CODE BLOCK 1092 ---
cypress open
--- END CODE BLOCK ---
file when using component testing. Fixes
#26400
Dependency Updates:
Upgraded
--- CODE BLOCK 1093 ---
cypress open
--- END CODE BLOCK ---
from
--- CODE BLOCK 1094 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 1095 ---
cypress run
--- END CODE BLOCK ---
. This means that we are now bundling your
--- CODE BLOCK 1096 ---
cypress open
--- END CODE BLOCK ---
tests with webpack 5. We don't anticipate this causing any noticeable changes. However, if you'd like to keep bundling your
--- CODE BLOCK 1097 ---
cypress.json
--- END CODE BLOCK ---
tests with webpack 4 you can use the same process as before by pinning
@cypress/webpack-batteries-included-preprocessor
--- CODE BLOCK 1098 ---
cypress open
--- END CODE BLOCK ---
and hooking into the
file
:preprocessor
plugin event. This will restore the previous bundling process. Additionally, if you're using
@cypress/webpack-batteries-included-preprocessor
already, a new version has been published to support webpack
--- CODE BLOCK 1099 ---
specPattern
--- END CODE BLOCK ---
Upgraded
--- CODE BLOCK 1100 ---
Cypress.Commands.add()
--- END CODE BLOCK ---
from
--- CODE BLOCK 1101 ---
cy.screenshot()
--- END CODE BLOCK ---
--- CODE BLOCK 1102 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 1103 ---
before:browser:launch
--- END CODE BLOCK ---
from
--- CODE BLOCK 1106 ---
@cypress/mount-utils@2.0.0
--- END CODE BLOCK ---
--- CODE BLOCK 1107 ---
@cypress/react@6.0.0
--- END CODE BLOCK ---
--- CODE BLOCK 1108 ---
@cypress/vue@4.0.0
--- END CODE BLOCK ---
from
--- CODE BLOCK 1109 ---
@cypress/vue2@1.0.0
--- END CODE BLOCK ---
--- CODE BLOCK 1110 ---
setupNodesEvents
--- END CODE BLOCK ---
to address a
security vulnerability
. Fixes
#27261
12.17.3
Released 08/01/2023
Bugfixes:
Fixed an issue where unexpected branch names were being recorded for cypress runs when executed by GitHub Actions. The
--- CODE BLOCK 1111 ---
Cypress.Cookies.preserveOnce()
--- END CODE BLOCK ---
branch name will now be recorded by default for pull request workflows if a branch name cannot otherwise be detected from user overrides or from local git data. Fixes
#27389
Performance:
Fixed an issue where unnecessary requests were being paused. No longer sends
--- CODE BLOCK 1112 ---
Cypress.Cookies.defaults()
--- END CODE BLOCK ---
header and infers resource type off of the server pre-request object. Fixes
#26620
#26622
12.17.2
Released 07/20/2023
Bugfixes:
Fixed an issue where commands would fail with the error
--- CODE BLOCK 1113 ---
Cypress.Cookies.preserveOnce()
--- END CODE BLOCK ---
if their arguments were mutated. Fixes
#27200
Fixed an issue where
--- CODE BLOCK 1114 ---
Cypress.Cookies.defaults()
--- END CODE BLOCK ---
would erroneously fail with the error
--- CODE BLOCK 1115 ---
cy.session()
--- END CODE BLOCK ---
. Fixes
#27097
Fixed an issue where web workers could not be created within a spec. Fixes
#27298
12.17.1
Released 07/10/2023
Bugfixes:
Fixed invalid stored preference when enabling in-app notifications that could cause the application to crash. Fixes
#27228
Fixed an issue with the TypeScript types of
--- CODE BLOCK 1116 ---
cy.contains()
--- END CODE BLOCK ---
. Fixed in
#27130
Dependency Updates:
Upgraded
--- CODE BLOCK 1117 ---
cy.session()
--- END CODE BLOCK ---
from
--- CODE BLOCK 1118 ---
eventemitter2
--- END CODE BLOCK ---
--- CODE BLOCK 1123 ---
cypress run
--- END CODE BLOCK ---
to address
CVE-2022-24999
security vulnerability. Addressed in
#27005
12.17.0
Released 07/06/2023
Features:
Cypress Cloud users can now receive
desktop notifications
about their runs, including when one starts, finishes, or fails. Addresses
#26686
Bugfixes:
Fixed issues where commands would fail with the error
--- CODE BLOCK 1124 ---
cypress open
--- END CODE BLOCK ---
. Fixes
#27149
#27163
Fixed a regression introduced in Cypress
12.12.0
where Cypress may fail to reconnect to the Chrome DevTools Protocol in Electron. Fixes
#26900
Fixed an issue where chrome was not recovering from browser crashes properly. Fixes
#24650
Fixed a race condition that was causing a GraphQL error to appear on the
Debug page
when viewing a running Cypress Cloud build. Fixed in
#27134
Fixed a race condition in electron where the test window exiting prematurely during the browser launch process was causing the whole test run to fail. Addressed in
#27167
Fixed minor issues with TypeScript types in the CLI. Fixes
#24110
Fixed an issue where a value for the Electron debug port would not be respected if defined using the
--- CODE BLOCK 1125 ---
94.0.4606.81
--- END CODE BLOCK ---
environment variable. Fixes
#26711
Dependency Updates:
Update dependency semver to ^7.5.3. Addressed in
#27151
12.16.0
Released 06/26/2023
Features:
Added support for Angular 16.1.0 in Cypress Component Testing. Addresses
#27049
Bugfixes:
Fixed an issue where certain commands would fail with the error
--- CODE BLOCK 1126 ---
100.0.4896.75
--- END CODE BLOCK ---
when invoked with a large argument. Fixes
#27099
12.15.0
Released 06/20/2023
Features:
Added support for running Cypress tests with
Chrome's new
--- CODE BLOCK 1130 ---
cy.contains()
--- END CODE BLOCK ---
flag
Chrome versions 112 and above will now be run in the
--- CODE BLOCK 1131 ---
.should('contain', ...)
--- END CODE BLOCK ---
mode that
matches the
--- CODE BLOCK 1132 ---
.type('{enter}')
--- END CODE BLOCK ---
browser implementation. Addresses
#25972
Cypress can now test pages with targeted
--- CODE BLOCK 1134 ---
cy.session()
--- END CODE BLOCK ---
--- CODE BLOCK 1136 ---
cy.origin()
--- END CODE BLOCK ---
header directives by specifying the
allow list via the
--- CODE BLOCK 1137 ---
cy.session()
--- END CODE BLOCK ---
configuration option. Addresses
#1030
. Addressed in
#26483
--- CODE BLOCK 1138 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
configuration option now accepts both a boolean or a Constant Rate Factor
(CRF) number between
--- CODE BLOCK 1140 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
--- CODE BLOCK 1141 ---
cy.session()
--- END CODE BLOCK ---
. The
--- CODE BLOCK 1142 ---
cy.origin()
--- END CODE BLOCK ---
default value is
still
--- CODE BLOCK 1143 ---
experimentalSessionSupport
--- END CODE BLOCK ---
CRF and when
--- CODE BLOCK 1144 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
is set to
--- CODE BLOCK 1145 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
the default of
--- CODE BLOCK 1146 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
CRF will be used. Addresses
#26658
The Cypress Cloud data shown on the
Specs
page and
Runs
page will now reflect Cloud
Runs that match the current Git tree if Git is being used. Addresses
#26693
Bugfixes:
Fixed an issue where video output was not being logged to the console when
--- CODE BLOCK 1147 ---
pageLoadTimeout
--- END CODE BLOCK ---
was turned off. Videos will now log to the terminal
regardless of the compression value. Addresses
#25945
Dependency Updates:
Removed
--- CODE BLOCK 1148 ---
cy.origin()
--- END CODE BLOCK ---
as this package was no longer being referenced. Addressed in
#26938
12.14.0
Released 06/07/2023
Features:
A new testing type switcher has been added to the Spec Explorer to make it
easier to move between E2E and Component Testing. An informational overview of
each type is displayed if it hasn't already been configured to help educate
and onboard new users to each testing type. Addresses
#26448
#26836
#26837
Bugfixes:
Fixed an issue to now correctly detect Angular 16 dependencies
@angular/cli
@angular-devkit/build-angular
@angular/core
@angular/common
@angular/platform-browser-dynamic
during Component Testing onboarding. Addresses
#26852
Ensures Git-related messages on the
Runs page
remain dismissed.
Addresses
#26808
Dependency Updates:
Upgraded
--- CODE BLOCK 1149 ---
experimentalSessionAndOrigin
--- END CODE BLOCK ---
from
--- CODE BLOCK 1150 ---
.type('{enter}')
--- END CODE BLOCK ---
--- CODE BLOCK 1151 ---
Cypress.Commands.add()
--- END CODE BLOCK ---
to address this
Synk
security
vulnerability. Addressed in
#26906
Upgraded
--- CODE BLOCK 1157 ---
cy.type('{enter}')
--- END CODE BLOCK ---
from
--- CODE BLOCK 1165 ---
--headed --no-exit
--- END CODE BLOCK ---
--- CODE BLOCK 1166 ---
cypress run
--- END CODE BLOCK ---
to address security vulnerabilities within
sub-dependencies. Addressed in
#26912
12.13.0
Released 05/23/2023
Features:
Adds Git-related messages for the
Runs page
Debug page
when users aren't using Git or
there are no recorded runs for the current branch. Addresses
#26680
Bugfixes:
Reverted
#26452
which
introduced a bug that prevents users from using End to End with Yarn 3. Fixed
#26735
. Fixes
#26676
Moved
--- CODE BLOCK 1171 ---
Cypress.Command.addAll()
--- END CODE BLOCK ---
condition to the front of
--- CODE BLOCK 1172 ---
cy.session()
--- END CODE BLOCK ---
since keys
there are meant to be order-sensitive. Fixed in
#26630
Fixed an issue where newly-installed dependencies would not be detected during
Component Testing setup. Addresses
#26685
Fixed a UI regression that was flashing an "empty" state inappropriately when
loading the Debug page. Fixed in
#26761
Fixed an issue in Component Testing setup where TypeScript version 5 was not
properly detected. Fixes
#26204
Misc:
Updated styling & content of Cypress Cloud slideshows when not logged in or no
runs have been recorded. Addresses
#26181
Changed the nomenclature of 'processing' to 'compressing' when terminal video
output is printed during a run. Addresses
#26657
Changed the nomenclature of 'Upload Results' to 'Uploading Screenshots &
Videos' when terminal output is printed during a run. Addresses
#26759
12.12.0
Released 05/09/2023
Features:
Added a new informational banner to help get started with component testing
from an existing end-to-end test suite. Addresses
#26511
Bugfixes:
Fixed an issue in Electron where devtools gets out of sync with the DOM
occasionally. Addresses
#15932
Updated the Chromium renderer process crash message to be more terse.
Addressed in
#26597
Fixed an issue with
--- CODE BLOCK 1173 ---
cy.session()
--- END CODE BLOCK ---
regex to allow multiple
replacements. Addresses
#23670
Dependency Updates:
Upgraded
--- CODE BLOCK 1180 ---
cy.intercept()
--- END CODE BLOCK ---
from
--- CODE BLOCK 1182 ---
cy.readFile()
--- END CODE BLOCK ---
--- CODE BLOCK 1188 ---
CYPRESS_DOWNLOAD_PATH_TEMPLATE
--- END CODE BLOCK ---
to address
CVE-2022-26260
NVD security vulnerability. Addressed in
#26631
Upgraded
--- CODE BLOCK 1189 ---
Cypress.Buffer
--- END CODE BLOCK ---
from
--- CODE BLOCK 1205 ---
chromeWebSecurity
--- END CODE BLOCK ---
--- CODE BLOCK 1206 ---
cypress clear cache
--- END CODE BLOCK ---
to address
CVE-2023-31125
NVD security vulnerability. Addressed in
#26664
Upgraded
--- CODE BLOCK 1207 ---
Origin-Agent-Cluster
--- END CODE BLOCK ---
from
--- CODE BLOCK 1208 ---
document.domain
--- END CODE BLOCK ---
--- CODE BLOCK 1209 ---
document.domain
--- END CODE BLOCK ---
. Addresses
#26575
12.11.0
Released 04/26/2023
Features:
Added Component Testing support for Angular 16. Addresses
#26044
The run navigation component on the
Debug page
will now display a warning
message if there are more relevant runs than can be displayed in the list.
Addresses
#26288
Bugfixes:
Fixed an issue where setting
--- CODE BLOCK 1210 ---
Origin-Agent-Cluster
--- END CODE BLOCK ---
--- CODE BLOCK 1218 ---
cy.fixtures()
--- END CODE BLOCK ---
would cause the video
output to be broken.
--- CODE BLOCK 1222 ---
cy.request()
--- END CODE BLOCK ---
is now treated as false. Addresses
#5191
#24595
Fixed an issue on the
Debug page
where the
passing run status would appear even if the Cypress Cloud organization was
over its monthly test result limit. Addresses
#26528
Misc:
Cleaned up our open telemetry dependencies, reducing the size of the open
telemetry modules. Addressed in
#26522
Dependency Updates:
Upgraded
--- CODE BLOCK 1226 ---
.selectFile()
--- END CODE BLOCK ---
from
--- CODE BLOCK 1237 ---
.selectFile()
--- END CODE BLOCK ---
--- CODE BLOCK 1241 ---
Cypress.Buffer
--- END CODE BLOCK ---
Addressed in
#26555
12.10.0
Released 04/17/2023
Features:
The Component Testing setup wizard will now show a warning message if an issue
is encountered with an installed
third party framework definition
Addresses
#25838
Bugfixes:
Capture the
Azure
CI provider's environment
variable
--- CODE BLOCK 1242 ---
Cypress.Buffer
--- END CODE BLOCK ---
to display the linked PR number in the Cloud. Addressed in
#26215
Fixed an issue in the onboarding wizard where project framework & bundler
would not be auto-detected when opening directly into component testing mode
using the
--- CODE BLOCK 1243 ---
.selectFile()
--- END CODE BLOCK ---
CLI flag. Fixes
#22777
#26388
Updated to use the
--- CODE BLOCK 1245 ---
--openssl-legacy-provider
--- END CODE BLOCK ---
Semaphore
CI environment variable to correctly
associate a Cloud run to the current branch. Previously this was incorrectly
associating a run to the target branch. Fixes
#26309
Fix an edge case in Component Testing where a custom
--- CODE BLOCK 1246 ---
.type('{enter}')
--- END CODE BLOCK ---
--- CODE BLOCK 1251 ---
.selectFile()
--- END CODE BLOCK ---
for Next.js 13.2.0+ is not respected. This was partially fixed
#26005
, but an edge
case was missed. Fixes
#25951
Correctly detect and resolve dependencies when configuring Component Testing
in projects using Yarn's
Plug'n'Play feature
. Fixes
#25960
Fixed an issue where
--- CODE BLOCK 1252 ---
cypress-file-upload
--- END CODE BLOCK ---
events fired on
--- CODE BLOCK 1254 ---
Cypress.Buffer
--- END CODE BLOCK ---
did not propagate through shadow
roots. Fixes
#26392
Misc:
Removed unintentional debug logs. Addressed in
#26411
Improved styling on the
Runs Page
Addresses
#26180
Dependency Updates:
Upgraded
--- CODE BLOCK 1255 ---
CYPRESS_DOWNLOAD_PATH_TEMPLATE
--- END CODE BLOCK ---
from
--- CODE BLOCK 1257 ---
CYPRESS_VERIFY_TIMEOUT
--- END CODE BLOCK ---
--- CODE BLOCK 1258 ---
package.json
--- END CODE BLOCK ---
. Addressed in
#26226
Upgraded
--- CODE BLOCK 1260 ---
graceful-fs
--- END CODE BLOCK ---
from
--- CODE BLOCK 1263 ---
graceful-fs
--- END CODE BLOCK ---
--- CODE BLOCK 1264 ---
graceful-fs
--- END CODE BLOCK ---
to address this
CVE-2021-44906
security vulnerability. Addressed in
#26254
12.9.0
Released 03/28/2023
Features:
Debug page
now allows for navigating
between all runs recorded for a commit. Addresses
#25899
#26018
Bugfixes:
Fixed a compatibility issue so that component test projects can use
Vite
version 4.2.0 and greater. Fixes
#26138
Fixed an issue where
--- CODE BLOCK 1268 ---
--headed --no-exit
--- END CODE BLOCK ---
added an
additional
--- CODE BLOCK 1269 ---
cypress run
--- END CODE BLOCK ---
header to spied requests that did not set a
--- CODE BLOCK 1270 ---
--openssl-legacy-provider
--- END CODE BLOCK ---
header on the original request. Fixes
#24407
Changed the way that Git hashes are loaded so that non-relevant runs are
excluded from the Debug page. Fixes
#26058
Corrected the
--- CODE BLOCK 1271 ---
CYPRESS_VERIFY_TIMEOUT
--- END CODE BLOCK ---
command to account for shadow
root elements when determining whether or not focus needs to be simulated
before typing. Fixes
#26198
Fixed an issue where an incorrect working directory could be used for Git
operations on Windows. Fixes
#23317
Misc:
Made some minor styling updates to the Debug page. Addresses
#26041
12.8.1
Released 03/15/2023
Bugfixes:
Fixed a regression in Cypress
where
the reporter auto-scroll configuration inside user preferences was
unintentionally being toggled off. Users must now explicitly enable/disable
auto-scroll under user preferences, which is enabled by default. Fixes
#24171
#26113
Dependency Updates:
Upgraded
--- CODE BLOCK 1272 ---
TypeError: Expected the timeout option to be a non-negative integer
--- END CODE BLOCK ---
from
--- CODE BLOCK 1276 ---
Cypress.config()
--- END CODE BLOCK ---
--- CODE BLOCK 1278 ---
cy.writeFile()
--- END CODE BLOCK ---
address this
CVE-2022-29078
security vulnerability. Addressed in
#25279
12.8.0
Released 03/14/2023
Features:
Debug page
is now able to show
real-time results from in-progress runs. Addresses
#25759
Added the ability to control whether a request is logged to the command log
--- CODE BLOCK 1279 ---
defaultCommandTimeout
--- END CODE BLOCK ---
by passing
--- CODE BLOCK 1280 ---
maxHttpBufferSize
--- END CODE BLOCK ---
--- CODE BLOCK 1281 ---
cy.writeFile()
--- END CODE BLOCK ---
. Addresses
#7362
This can be used to override Cypress's default behavior of logging all XHRs
and fetches, see the
example
It is now possible to control the number of connection attempts to the browser
using the
--- CODE BLOCK 1282 ---
CYPRESS_VERIFY_TIMEOUT
--- END CODE BLOCK ---
Environment Variable. Learn more
here
Addressed in
#25848
Bugfixes:
Fixed an issue where using
--- CODE BLOCK 1284 ---
cypress open
--- END CODE BLOCK ---
would throw the error
--- CODE BLOCK 1289 ---
cy.intercept()
--- END CODE BLOCK ---
. Fixes
#25885
--- CODE BLOCK 1292 ---
cy.contains()
--- END CODE BLOCK ---
API was updated to correctly
support async event handlers in
--- CODE BLOCK 1296 ---
"http: //localhost/asset.js"
--- END CODE BLOCK ---
mode. Fixes
#24403
Updated the Component Testing
community framework
definition detection logic to take into account monorepo structures that hoist
dependencies. Fixes
#25993
The onboarding wizard for Component Testing will now detect installed
dependencies more reliably. Fixes
#25782
Fixed an issue where Angular components would sometimes be mounted in
unexpected DOM locations in component tests. Fixes
#25956
Fixed an issue where Cypress component testing would fail to work with
Next.js
--- CODE BLOCK 1297 ---
Cypress.Command.add()
--- END CODE BLOCK ---
. Fixes
#25951
Fixed an issue where migrating a project from a version of Cypress earlier
than
10.0.0
could fail if the project's
--- CODE BLOCK 1298 ---
Cypress.Command.override()
--- END CODE BLOCK ---
configuration
was an array of globs. Fixes
#25947
Misc:
Removed "New" badge in the navigation bar for the debug page icon. Addresses
#25925
Removed inline "Connect" buttons within the Specs Explorer. Addresses
#25926
Added an icon for "beta" versions of the Chrome browser. Addresses
#25968
Dependency Updates:
Upgraded
--- CODE BLOCK 1299 ---
prevSubject
--- END CODE BLOCK ---
from
--- CODE BLOCK 1301 ---
Cypress.session.clearAllSavedSessions()
--- END CODE BLOCK ---
--- CODE BLOCK 1306 ---
data.hasOwnProperty is not a function
--- END CODE BLOCK ---
to be able to use
new placeholders
such as
--- CODE BLOCK 1307 ---
"nodeVersion": "system"
--- END CODE BLOCK ---
--- CODE BLOCK 1311 ---
@cypress/request
--- END CODE BLOCK ---
when defining the test report name.
Addressed in
#25922
12.7.0
Released 02/24/2023
Features:
It is now possible to set
--- CODE BLOCK 1315 ---
process.env.CYPRESS
--- END CODE BLOCK ---
cookies with
--- CODE BLOCK 1316 ---
cy.stub().log(false)
--- END CODE BLOCK ---
for a given domain. Addresses
#16856
#17527
Added a Public API for third party component libraries to define a Framework
Definition, embedding their library into the Cypress onboarding workflow.
Learn more
here
Implemented in
#25780
closes
#25638
Added a Debug Page tutorial slideshow for projects that are not connected to
Cypress Cloud. Addresses
#25768
Updated the "new" status badge for the Debug page navigation link to be less
noticeable when the navigation is collapsed. Addresses
#25739
Improved various error message around interactions with the Cypress cloud.
Implemented in
#25837
Bugfixes:
Fixed an issue where cookies were being duplicated with the same hostname, but
a prepended dot. Fixed an issue where cookies may not be expiring correctly.
Fixes
#25174
#25205
#25495
Fixed an issue where cookies weren't being synced when the application was
stable. Fixed in
#25855
Fixes
#25835
Added missing TypeScript type definitions for the
--- CODE BLOCK 1320 ---
nodeVersion
--- END CODE BLOCK ---
command. Addressed in
#25779
Ensure Angular components are mounted inside the correct element. Fixes
#24385
Fix a bug where files outside the project root in a monorepo are not correctly
served when using Vite. Addressed in
#25801
Fixed an issue where using
--- CODE BLOCK 1324 ---
pluginsFile
--- END CODE BLOCK ---
--- CODE BLOCK 1326 ---
Cypress.config
--- END CODE BLOCK ---
with a non-function parameter would not provide an
appropriate error message. Fixed in
#25884
Fixed an issue where Cypress would erroneously launch and connect to multiple
browser instances. Fixes
#24377
Fixed various bugs when recording to the cloud. Fixed in
#25837
Misc:
Made updates to the way that the Debug Page header displays information.
Addresses
#25796
#25798
12.6.0
Released 02/15/2023
Features:
Added a new CLI flag, called
--- CODE BLOCK 1327 ---
cy.contains()
--- END CODE BLOCK ---
, that
overrides the project-level
"Auto Cancellation"
value when recording to the Cloud. This gives Cloud users on Business and
Enterprise plans the flexibility to alter the auto-cancellation value per run.
Addressed in
#25237
It is now possible to overwrite query commands using
--- CODE BLOCK 1331 ---
Cypress.Commands.add()
--- END CODE BLOCK ---
Addressed in
#25078
Added
--- CODE BLOCK 1332 ---
Cypress.Commands.overwrite()
--- END CODE BLOCK ---
for including
dependencies within the
--- CODE BLOCK 1335 ---
pluginsFile
--- END CODE BLOCK ---
callback. This
change removed support for using
--- CODE BLOCK 1336 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 1338 ---
cy.intercept()
--- END CODE BLOCK ---
directly within
the callback because we found that it impacted performance not only for spec
files using them within the
--- CODE BLOCK 1339 ---
cy.readFile()
--- END CODE BLOCK ---
callback,
but even for spec files that did not use them. Addresses
#24976
Added the ability to open the failing test in the IDE from the Debug page
before needing to re-run the test. Addressed in
#24850
Bugfixes:
When a Cloud user is a part of multiple Cloud organizations, the
Connect to Cloud setup
now shows the correct organizational prompts when connecting a new project.
Fixes
#25520
Fixed an issue where Cypress would fail to load any specs if the project
--- CODE BLOCK 1340 ---
cy.fixture()
--- END CODE BLOCK ---
included a resource that could not be accessed due to filesystem
permissions. Fixes
#24109
Fixed an issue where the Debug page would display a different number of specs
for in-progress runs than the in-progress specs reported in Cypress Cloud.
Fixes
#25647
Fixed an issue in middleware where error-handling code could itself generate
an error and fail to report the original issue. Fixes
#22825
Fixed an regression introduced in Cypress
12.3.0
where custom
browsers that relied on process environment variables were not found on macOS
arm64 architectures. Fixed in
#25753
Misc:
Improved the UI of the Debug page. Addresses
#25664
#25669
#25665
#25666
, and
#25667
Updated the Debug page sidebar badge to to show 0 to 99+ failing tests,
increased from showing 0 to 9+ failing tests, to provide better test failure
insights. Addresses
#25662
Dependency Updates:
Upgrade
--- CODE BLOCK 1341 ---
nodeVersion
--- END CODE BLOCK ---
--- CODE BLOCK 1343 ---
cy.readFile()
--- END CODE BLOCK ---
. Addressed
#25699
12.5.1
Released 02/2/2023
Bugfixes:
Fixed a regression introduced in Cypress
12.5.0
where the
--- CODE BLOCK 1344 ---
cy.fixture()
--- END CODE BLOCK ---
was not included in the
--- CODE BLOCK 1346 ---
cy.writeFile()
--- END CODE BLOCK ---
event. Fixes
#25663
Dependency Updates:
Upgraded
--- CODE BLOCK 1348 ---
document.referrer
--- END CODE BLOCK ---
from
--- CODE BLOCK 1350 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 1351 ---
cypress open
--- END CODE BLOCK ---
to address this
security vulnerability
where Remote Code Execution (RCE) via the clone(), pull(), push() and
listRemote() methods due to improper input sanitization was possible.
Addressed in
#25603
12.5.0
Released 01/31/2023
Features:
Easily debug failed CI test runs recorded to the Cypress Cloud from your local
Cypress app with the new Debug page. Please leave any feedback
here
. Your feedback
will help us make decisions to improve the Debug experience. For more details,
our blog post
. Addressed in
#25488
Performance:
Improved memory consumption in
--- CODE BLOCK 1359 ---
slowTestThreshold
--- END CODE BLOCK ---
mode by removing reporter logs for
successful tests. Fixes
#25230
Bugfixes:
Fixed an issue where alternative Microsoft Edge Beta, Canary, and Dev binary
versions were not being discovered by Cypress. Fixes
#25455
Dependency Updates:
Upgraded
--- CODE BLOCK 1360 ---
cypress run
--- END CODE BLOCK ---
from
--- CODE BLOCK 1361 ---
"slowTestThreshold": 75
--- END CODE BLOCK ---
--- CODE BLOCK 1362 ---
cypress run
--- END CODE BLOCK ---
to reference rebuilt assets after security patch to
fix regular expression DDOS exploit. Addressed in
#25574
12.4.1
Released 01/27/2023
Bugfixes:
Fixed a regression from Cypress
12.4.0
where Cypress was not
exiting properly when running multiple Component Testing specs in
--- CODE BLOCK 1363 ---
overwrite: true
--- END CODE BLOCK ---
--- CODE BLOCK 1364 ---
Cypress.Screenshot.defaults
--- END CODE BLOCK ---
mode. Fixes
#25568
Dependency Updates:
Upgraded
--- CODE BLOCK 1366 ---
cy.screenshot()
--- END CODE BLOCK ---
from
--- CODE BLOCK 1367 ---
projectRoot
--- END CODE BLOCK ---
--- CODE BLOCK 1368 ---
selectorPriority
--- END CODE BLOCK ---
to address this
security vulnerability
where crafting a very-very-long user-agent string with specific pattern, an
attacker can turn the script to get stuck processing for a very long time
which results in a denial of service (DoS) condition. Addressed in
#25561
12.4.0
Released 1/24/2023
Features:
Added official support for Vite 4 in component testing. Addresses
#24969
Added new
--- CODE BLOCK 1369 ---
Cypress.SelectorPlayground.defaults
--- END CODE BLOCK ---
configuration option to improve memory management in Chromium-based browsers.
Enable this option with
--- CODE BLOCK 1376 ---
ua-parser-js
--- END CODE BLOCK ---
if you have
experienced "Out of Memory" issues. Please leave any feedback around
--- CODE BLOCK 1378 ---
cy.screenshot()
--- END CODE BLOCK ---
here
. Your feedback
will help us make decisions to improve memory issues. Addresses
#23391
Added new
--- CODE BLOCK 1379 ---
overwrite: true
--- END CODE BLOCK ---
configuration option to disable Cypress from setting
--- CODE BLOCK 1380 ---
cy.select([])
--- END CODE BLOCK ---
injection, allowing users to test Salesforce domains. If you believe you are
having
--- CODE BLOCK 1382 ---
cypress run --headed --no-exit
--- END CODE BLOCK ---
issues, please see the
--- CODE BLOCK 1384 ---
cy.request()
--- END CODE BLOCK ---
guide. This config option is end-to-end only. Addresses
#2367
#23958
#24290
, and
#24418
--- CODE BLOCK 1385 ---
failOnStatusCode
--- END CODE BLOCK ---
command now accepts an options argument,
allowing an alias to be stored as type "query" or "static" value. This is
stored as "query" by default. Addresses
#25173
--- CODE BLOCK 1386 ---
retryOnStatusCodeFailure
--- END CODE BLOCK ---
command will now display a line break where the
--- CODE BLOCK 1387 ---
cypress run
--- END CODE BLOCK ---
character
is used. Addresses
#24964
--- CODE BLOCK 1388 ---
cypress open
--- END CODE BLOCK ---
utilizes a JSX/TSX file extension when generating a new empty spec file if
project contains at least one file with those extensions. This applies only to
component testing and is skipped if
--- CODE BLOCK 1389 ---
91.0.4472.164
--- END CODE BLOCK ---
has been
configured to exclude files with those extensions. Addresses
#24495
Added support for the
--- CODE BLOCK 1390 ---
93.0.4577.58
--- END CODE BLOCK ---
selector in the
Selector Playground
in addition to
--- CODE BLOCK 1397 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 1403 ---
clientCertificate
--- END CODE BLOCK ---
--- CODE BLOCK 1404 ---
cypress run-ct
--- END CODE BLOCK ---
. Addresses
#25305
Bugfixes:
Fixed an issue where component tests could incorrectly treat new major
versions of certain dependencies as supported. Fixes
#25379
Fixed an issue where new lines or spaces on new lines in the Command Log were
not maintained. Fixes
#23679
#24964
Fixed an issue where Angular component testing projects would fail to
initialize if an unsupported browserslist entry was specified in the project
configuration. Fixes
#25312
Misc
Video output link in
--- CODE BLOCK 1406 ---
cypress open
--- END CODE BLOCK ---
mode has been added to its own line to
make the video output link more easily clickable in the terminal. Addresses
#23913
12.3.0
Released 1/03/2023
Features:
Added support for mapping the
--- CODE BLOCK 1407 ---
beforeinput
--- END CODE BLOCK ---
--- CODE BLOCK 1408 ---
cy.document()
--- END CODE BLOCK ---
, and/or
--- CODE BLOCK 1415 ---
@cypress/request
--- END CODE BLOCK ---
environment
variables to the corresponding Cloud run. This provides workarounds when
supported CI provider mappings are incorrect or unsupported CI providers are
used. Addressed in
#25036
Added new Cypress API,
--- CODE BLOCK 1420 ---
cy.intercept()
--- END CODE BLOCK ---
, to easily access the
current test retry count. Addresses
#25239
Performance:
Increased the pre-request proxy cleanup interval. The previous cleanup
interval was too aggressive for projects loading a large number of JS modules,
causing applications to load very slowly and in chunks. Fixed in
#25209
Fixed an issue where browsers distributed as universal binaries (Chrome,
Firefox) on M1 Macs could be launched in the wrong architecture, resulting in
poor performance in-browser. Fixed in
#25014
Resolved a delay that could occur on startup when using a custom Cypress
configuration file location in projects with a transitive
--- CODE BLOCK 1422 ---
cy.intercept
--- END CODE BLOCK ---
dependency. Fixes
#24781
Bugfixes:
Fixes an issue where component test files that contained characters, such as
brackets (
--- CODE BLOCK 1424 ---
chromeWebSecurity
--- END CODE BLOCK ---
), would be ignored when running tests. This is a common pattern
in Next.js and Gatsby.js projects. Fixes
#24588
Updated the Jenkins environment variable mappings so pull request data is
correctly linked to the corresponding Cloud run. Fixed in
#25036
Fixed a regression in
10.11.0
where the mocha test results no
longer sent the pending boolean to reporters. This caused the
--- CODE BLOCK 1425 ---
cypress run
--- END CODE BLOCK ---
reporter to
incorrectly report pending tests as pending and skipped. Fixes
#24477
Fix for regression introduced in
12.1.0
, where
--- CODE BLOCK 1426 ---
cypress open
--- END CODE BLOCK ---
could return multiple elements instead
of one element when it was matching directly on the subject, rather than on
the subject's children. Fixes
#25225
Fixed a small visual bug in the Test Runner such that Chrome users will no
longer see a white border on the nav bar at the specific zoom levels. Fixes
#25284
Misc
Remove the redundant
--- CODE BLOCK 1432 ---
12.0.0-beta.14
--- END CODE BLOCK ---
link from the migration information modal
because the modal provides in-depth details for users already. Addresses
#21923
Minor UI updates were make to truncate the browser's name when it exceeds the
allocated space and to only show the browsers's major version in the UI.
Addresses
#21730
#21755
Removed the line break that was displayed on the Settings page when a
configuration value was an empty object. Addresses
#21790
Dependency Updates:
Upgraded
--- CODE BLOCK 1437 ---
localStorage
--- END CODE BLOCK ---
from
--- CODE BLOCK 1438 ---
sessionStorage
--- END CODE BLOCK ---
--- CODE BLOCK 1439 ---
cy.session()
--- END CODE BLOCK ---
to address this
security vulnerability
where a specially crafted HTTP request can trigger an uncaught exception on
the Engine.IO server, thus killing the Node.js process. Addressed in
#23843
Upgraded
--- CODE BLOCK 1441 ---
experimentalSessionSupport
--- END CODE BLOCK ---
from
--- CODE BLOCK 1443 ---
cy.session()
--- END CODE BLOCK ---
--- CODE BLOCK 1445 ---
experimentalFetchSupport
--- END CODE BLOCK ---
to address this
NVD security vulnerability
Addressed in
#23843
Upgraded
--- CODE BLOCK 1446 ---
cy.intercept()
--- END CODE BLOCK ---
from
--- CODE BLOCK 1447 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 1448 ---
cy.intercept()
--- END CODE BLOCK ---
to address this
NVD security vulnerability
Addressed in
#23843
12.2.0
Released 12/20/2022
Features:
Added the ability to match on
--- CODE BLOCK 1449 ---
cy.intercept()
--- END CODE BLOCK ---
with
--- CODE BLOCK 1451 ---
Cypress.currentTest
--- END CODE BLOCK ---
, and to see the resource type of
an intercepted request as
--- CODE BLOCK 1452 ---
Cypress.currentTest.title
--- END CODE BLOCK ---
. Addresses
#14525
Users working in React Component Testing projects can now generate a basic
spec file from the components that exist in their project. Addresses
#24008
Performance:
Fixed a regression introduced in the Electron browser in
Cypress 10.8.0
where the
--- CODE BLOCK 1453 ---
Cypress.currentTest.titlePath
--- END CODE BLOCK ---
environment
variable was not being set appropriately causing all frames to be captured
which slowed down tests. Fixes
#23830
Bugfixes:
Fixed an issue where the
--- CODE BLOCK 1455 ---
/etc/passwd
--- END CODE BLOCK ---
object was not available on requests from
--- CODE BLOCK 1457 ---
experimentalStudio
--- END CODE BLOCK ---
once they were yielded. Fixes
#25088
Fixed an issue with Angular Component Testing where urls within SASS/SCSS
files were not being correctly resolved which could result in incomplete
styling. Fixes
#24272
Fixed a regression introduced in
Cypress 12
where
--- CODE BLOCK 1458 ---
cypress run
--- END CODE BLOCK ---
would ignore a
--- CODE BLOCK 1459 ---
cypress run
--- END CODE BLOCK ---
value for the
--- CODE BLOCK 1460 ---
cypress run
--- END CODE BLOCK ---
option. Fixes
#25104
Fixed an issue where an unhandled promise rejection would display an
incomplete error message in the command log. Fixes
#24915
Fixed an issue where the incorrect Cypress version could be shown in the
migration wizard. Fixes
#25138
Fixed an issue where the Cypress migration wizard would fail to run in
global mode
on newer
versions of Cypress. Addressed in
#25138
Fixed an issue with Angular Component Testing where a custom
--- CODE BLOCK 1462 ---
cypress run
--- END CODE BLOCK ---
configuration would not be respected. Fixes
#24827
Fixed TypeScript typings for
--- CODE BLOCK 1463 ---
cypress run
--- END CODE BLOCK ---
include the
--- CODE BLOCK 1464 ---
cypress open
--- END CODE BLOCK ---
parameter. Fixes
#24772
12.1.0
Released 12/12/2022
Features:
Added
--- CODE BLOCK 1467 ---
Cypress.ConfigOptions
--- END CODE BLOCK ---
--- CODE BLOCK 1468 ---
Cypress.ResolvedConfigOptions
--- END CODE BLOCK ---
, which get and clear
cookies for all browser cookies across any domains. Addresses
#24265
#8956
, and
#408
Updated the error messaging to provide more context when parallel group
parameters are mismatched when sent to the Cypress Cloud. Fixes
#24734
Bugfixes:
Fixed an issue with the
--- CODE BLOCK 1469 ---
Cypress.RuntimeConfigOption
--- END CODE BLOCK ---
command where it now recollects the
session data after validation is successful to correctly store the full
browser context before the command ends. Addressed with
#25112
Fixed an issue where recent versions of Firefox in headless mode would behave
inconsistently with headed. Fixes
#24900
Fixed an issue where
--- CODE BLOCK 1470 ---
ConfigOptions
--- END CODE BLOCK ---
would fail
when multiple
--- CODE BLOCK 1471 ---
clientCertificates
--- END CODE BLOCK ---
elements have the same value property. Fixes
#24739
Cleaned up temp files generated by
--- CODE BLOCK 1472 ---
ELECTRON_RUN_AS_NODE
--- END CODE BLOCK ---
. Addressed by
#24957
The Chrome web security configuration tooltip will now be shown only if
--- CODE BLOCK 1473 ---
console.log
--- END CODE BLOCK ---
set to false when using a non-chromium browser. Fixes
#23846
Fixed an issue where updating a component would not trigger the
--- CODE BLOCK 1474 ---
console.error
--- END CODE BLOCK ---
to reload imported stylesheets. This is fixed by doing a full reload for Vite,
to ensure the spec re-runs correctly with the latest styles. Fixes
#24874
Run All Specs experiment
will now open in a new tab rather than close and reopen the browser. This will
make the run faster and help mitigate
#21743
. Fixes
#24919
12.0.2
Released 12/08/2022
Bugfixes:
Fixed a regression in
12.0.0
where
--- CODE BLOCK 1476 ---
cy.intercept()
--- END CODE BLOCK ---
received multiple elements as a
subject, it only searched inside the first one. Fixes
#25025
Fixed a regression in
12.0.0
around
--- CODE BLOCK 1478 ---
req.continue
--- END CODE BLOCK ---
where if the subject was a
--- CODE BLOCK 1481 ---
RouteMatcher
--- END CODE BLOCK ---
element, it would only consider the first
--- CODE BLOCK 1484 ---
cy.invoke()
--- END CODE BLOCK ---
element in the form,
rather than every child. Fixes
#25019
12.0.1
Released 12/06/2022
Bugfixes:
Fixed a regression in
11.2.0
where a stale spec search pattern was
shown in the spec search bar after re-launching Cypress. Fixes
#24936
Fixed a regression in
12.0.0
where tests scaffolded into new
projects were using a removed api. Fixed in
#25006
Fixed regression in
12.0.0
where setting
--- CODE BLOCK 1486 ---
experimentalStudio
--- END CODE BLOCK ---
caused invalid configuration validation when running
--- CODE BLOCK 1487 ---
preventScroll
--- END CODE BLOCK ---
. Fixes
#25007
Fixed a regression introduced in
12.0.0
that sometimes does not
allow cy.origin() to communicate correctly with the navigated to domain. Fixes
#25010
12.0.0
Released 12/06/2022
Summary:
The Session and Origin Experiment is now generally available for end-to-end
testing. This means Cypress now fully supports:
Testing multiple origins in a single test with the new
--- CODE BLOCK 1488 ---
element.focus()
--- END CODE BLOCK ---
command.
Caching and restoring cookies,
--- CODE BLOCK 1489 ---
.contains(0)
--- END CODE BLOCK ---
--- CODE BLOCK 1490 ---
showedOnBoardingModal
--- END CODE BLOCK ---
between tests
Configuring
--- CODE BLOCK 1491 ---
cypress open
--- END CODE BLOCK ---
in suites to define whether or not the browser context is cleaned or persisted
between tests
Additionally in this release, enhancements were made to how Cypress manages DOM
element resolution to reduce the likelihood of hitting detached DOM errors due
to maintaining stale DOM references. We've updated our
Retry-ability Guide
with all the details
if you'd like to learn more.
Read more about 12.0 in
our blog post
Breaking Changes:
Cypress dropped support for Node.js 12, 15 and 17. Those versions have reached
end-of-life. Installing Cypress on your system now requires Node.js 14, 16 or
18+. Addressed in
#24885
Cypress has always recommended writing tests in a clean context. In Cypress
12, we enforce running tests in a clean browser context through
test isolation
This option is configurable, but is enabled by default. Whether enabled or
disabled, this changes how Cypress cleans up the browser context before each
test and you may experience test errors with this upgrade. To better
understand the full impact of this change, please review the
migration guide
In Cypress v12, the
--- CODE BLOCK 1492 ---
.contains()
--- END CODE BLOCK ---
configuration values have changed from
--- CODE BLOCK 1493 ---
includeShadowDom
--- END CODE BLOCK ---
--- CODE BLOCK 1495 ---
Cypress.Keyboard.defaults()
--- END CODE BLOCK ---
--- CODE BLOCK 1496 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 1497 ---
cy.intercept()
--- END CODE BLOCK ---
. Addressed in
#24935
--- CODE BLOCK 1500 ---
ArrayBuffer
--- END CODE BLOCK ---
configuration option has been removed and
all functionality associated with this experiment is now enabled by default,
with the exception of using
--- CODE BLOCK 1501 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 1502 ---
dev-server:start
--- END CODE BLOCK ---
with callback supplied to
--- CODE BLOCK 1503 ---
cy.intercept()
--- END CODE BLOCK ---
command. To leverage external
dependencies in
--- CODE BLOCK 1504 ---
cy.intercept()
--- END CODE BLOCK ---
callbacks, set the new
--- CODE BLOCK 1505 ---
spawn UNKNOWN
--- END CODE BLOCK ---
configuration option to
--- CODE BLOCK 1507 ---
CyHttpMessages.BaseMessage.headers
--- END CODE BLOCK ---
. Addresses
#21471
--- CODE BLOCK 1509 ---
cy.request()
--- END CODE BLOCK ---
--- CODE BLOCK 1511 ---
--config-file
--- END CODE BLOCK ---
APIs have been removed. Use
the new
--- CODE BLOCK 1512 ---
cy.location(<key>)
--- END CODE BLOCK ---
command to preserve cookies
between tests. Addresses
#21472
--- CODE BLOCK 1513 ---
<value>.should()
--- END CODE BLOCK ---
--- CODE BLOCK 1517 ---
cy.request()
--- END CODE BLOCK ---
commands have been removed. Additionally,
the corresponding
--- CODE BLOCK 1518 ---
cy.request()
--- END CODE BLOCK ---
API has also been removed. Use the
--- CODE BLOCK 1520 ---
cy.intercept()
--- END CODE BLOCK ---
(/api/commands/intercept) command to stub network responses
and requests. Addresses
#22126
The Cookie commands now uses the
--- CODE BLOCK 1521 ---
cy.intercept()
--- END CODE BLOCK ---
as the domain by default instead
of the
--- CODE BLOCK 1522 ---
RouteMatcher
--- END CODE BLOCK ---
. This change aligns Cypress' cookie rules with the
browser cookie rules. This may affect what cookies are returned by
--- CODE BLOCK 1525 ---
cy.intercept()
--- END CODE BLOCK ---
, what cookies are set with
--- CODE BLOCK 1526 ---
cy.intercept()
--- END CODE BLOCK ---
, and the cookies cleared with
--- CODE BLOCK 1527 ---
cy.screenshot()
--- END CODE BLOCK ---
. Addresses
#363
#5723
#24526
--- CODE BLOCK 1528 ---
cypress open-ct
--- END CODE BLOCK ---
command now requires a single subject
and throws an error if given more than one subject. This change adds
consistency around how
--- CODE BLOCK 1529 ---
componentFolder
--- END CODE BLOCK ---
behaves across commands. Previously some
commands inside a
--- CODE BLOCK 1531 ---
projectRoot
--- END CODE BLOCK ---
callback would silently select the first
element, while others would use all of the previously yielded subjects, and
others would throw an error. Addressed in
#24975
Cypress now throws an error if any Cypress commands are invoked from inside a
--- CODE BLOCK 1533 ---
dependency-tree
--- END CODE BLOCK ---
callback. This previously resulted in
unusual and undefined behavior. Addresses
#5963
#14656
#22587
--- CODE BLOCK 1536 ---
extract-zip
--- END CODE BLOCK ---
command now throws an error if the
invoked function returns a promise. If you wish to call a method that returns
a promise and wait for it to resolve, use
--- CODE BLOCK 1539 ---
testingType: 'component'
--- END CODE BLOCK ---
instead of
--- CODE BLOCK 1540 ---
testingType
--- END CODE BLOCK ---
. Addressed in
#24417
--- CODE BLOCK 1541 ---
testingType
--- END CODE BLOCK ---
command now uses
--- CODE BLOCK 1543 ---
cy.intercept()
--- END CODE BLOCK ---
to stringify
& parse the
--- CODE BLOCK 1545 ---
RouteMatcher
--- END CODE BLOCK ---
options. This change aligns with how the
--- CODE BLOCK 1547 ---
cy.intercept()
--- END CODE BLOCK ---
command generates urls with query
parameters. Addressed in
#20302
Features:
Added a new configuration option called
--- CODE BLOCK 1548 ---
cy.intercept()
--- END CODE BLOCK ---
, which defaults to
--- CODE BLOCK 1549 ---
cy.intercept(url, routeMatcher, handler)
--- END CODE BLOCK ---
. This option can be set at the
--- CODE BLOCK 1552 ---
DEBUG=cypress:server:record:ci-info
--- END CODE BLOCK ---
or suite-level to determine
whether or not
test isolation
is enabled to ensure a clean browser context between tests. Addressed in
#22230
The previously experimental Cypress command,
--- CODE BLOCK 1553 ---
CYPRESS_DOWNLOAD_USE_CA
--- END CODE BLOCK ---
, is now generally available in
end-to-end testing. This command allows testing multiple origins in a single
test. Addresses
#17336
The previously experimental Cypress command,
--- CODE BLOCK 1555 ---
location.href
--- END CODE BLOCK ---
, is now generally available. This
command caches and restores
--- CODE BLOCK 1558 ---
RangeError: Maximum call stack size exceeded at _deconstructPacket
--- END CODE BLOCK ---
--- CODE BLOCK 1559 ---
cy.request()
--- END CODE BLOCK ---
--- CODE BLOCK 1560 ---
ERR_INVALID_ARG_TYPE
--- END CODE BLOCK ---
in order to recreate a consistent browser context between tests. Addresses
#20977
Added a new Cypress command,
--- CODE BLOCK 1562 ---
cy.intercept()
--- END CODE BLOCK ---
, to get
--- CODE BLOCK 1563 ---
access-control-expose-headers: '*'
--- END CODE BLOCK ---
data for all origins with which the test has interacted. Addresses
#24276
Added a new Cypress command,
--- CODE BLOCK 1564 ---
cy.intercept()
--- END CODE BLOCK ---
, to clear
--- CODE BLOCK 1566 ---
.should('contain')
--- END CODE BLOCK ---
data for all origins with which the test has interacted. Addresses
#24276
Added a new Cypress command,
--- CODE BLOCK 1567 ---
.should('be.visible')
--- END CODE BLOCK ---
, to get
--- CODE BLOCK 1568 ---
Cypress.cookies.debug(true)
--- END CODE BLOCK ---
data for all origins with which the test has interacted. Addresses
#24276
Added a new Cypress command,
--- CODE BLOCK 1579 ---
color-string
--- END CODE BLOCK ---
, to
clear
--- CODE BLOCK 1585 ---
registry-js
--- END CODE BLOCK ---
data for all origins with which the test has interacted. Addresses
#24276
Added a new configuration option called
--- CODE BLOCK 1591 ---
ERR_INVALID_ARG_TYPE
--- END CODE BLOCK ---
which defaults to
--- CODE BLOCK 1592 ---
cy.intercept()
--- END CODE BLOCK ---
. This option enables support for
--- CODE BLOCK 1593 ---
cy.intercept
--- END CODE BLOCK ---
--- CODE BLOCK 1594 ---
cypress run-ct
--- END CODE BLOCK ---
within the callback supplied to the
--- CODE BLOCK 1595 ---
Cannot read property 'name' of null
--- END CODE BLOCK ---
command in end-to-end testing.
Previously this feature was enabled through the
--- CODE BLOCK 1601 ---
componentFolder
--- END CODE BLOCK ---
configuration option.
--- CODE BLOCK 1603 ---
Cypress.Cookies.defaults()
--- END CODE BLOCK ---
was added as a
configuration option in Cypress 12, instead of being enabled by default, due
to increased Node.js memory usage associated with this option that needs to be
addressed before making this behavior generally available. See issue
#24976
for more
information. Addressed in
#24931
Added a new
--- CODE BLOCK 1606 ---
cy.intercept()
--- END CODE BLOCK ---
API which provides several methods that can be
helpful when writing customs commands. Addressed in
#24697
Added a new "Run All" button to the
--- CODE BLOCK 1607 ---
cypress run
--- END CODE BLOCK ---
experiment which enables running all spec files returned from the
--- CODE BLOCK 1608 ---
cypress open
--- END CODE BLOCK ---
glob or an array of globs, regardless of the specs sharing a
root folder. Addresses
#24759
Further improved bundling in the binary to reduce startup and unzip time.
Addressed in
#24909
Bugfixes:
Fixed a regression in
10.11.0
where the Launchpad no longer showed
a loading spinner on startup to indicate that it had successfully started and
was in a loading state. Fixed
#24950
Fixed the "Create Spec from Component" capability to correctly scaffold the
component spec from a component which contains special characters in its name.
Before this change, a spec was scaffolded with either the wrong spec name or
the incorrect component import which led to invalid JS errors. Fixes
#23492
Corrected Cypress environment variable resolution to correctly resolve
environment variables set with
--- CODE BLOCK 1609 ---
89.0.4348.1
--- END CODE BLOCK ---
. Fixes
#24556
When
--- CODE BLOCK 1610 ---
89.0.4328.0
--- END CODE BLOCK ---
the "Run N specs" directory-level buttons in the Inline Specs List now
function correctly when activated by the keyboard. Fixes
#24762
Fixed unexpected behaviors when verifying a cookie was not returned from
--- CODE BLOCK 1611 ---
systeminformation
--- END CODE BLOCK ---
. Now it's possible to explicitly
assert the cookie did not exist with
--- CODE BLOCK 1615 ---
@sinonjs/fake-timers
--- END CODE BLOCK ---
. Previously users had to verify
cookies properties did not exist with
--- CODE BLOCK 1616 ---
before:spec
--- END CODE BLOCK ---
Addressed in
#24203
Fixed the console output returned from clicking on an aliased intercept in the
Command Log. It now logs the yielded request/response object associated to the
intercepted call when clicked, where previously it did not log these details.
Fixed in
#24623
11.2.0
Released 11/22/2022
Features:
Re-implemented the 'Run All Specs' for End to End Testing for running multiple
tests sequentially in open mode. This feature had been previously removed in
Cypress 10.0. Enable 'Run All Specs' with the new experimental flag,
--- CODE BLOCK 1620 ---
experimentalInteractiveRunEvents
--- END CODE BLOCK ---
Please leave any feedback around 'Run All Specs'
here
. Your feedback
will help us make product decisions around the future of this feature.
Addresses
#24168
Added messaging after failures in CI to direct people to set up recording to
the Cypress Cloud if they are not already set up to do so. Addresses
#24000
Visually warn in the Command Log when the
--- CODE BLOCK 1621 ---
cypress.json
--- END CODE BLOCK ---
command fails to restore a session to
surface to users potential issues with their setup and validation. Addresses
#24207
Bugfixes:
--- CODE BLOCK 1622 ---
cy.intercept(routeMatcher, staticResponse)
--- END CODE BLOCK ---
command no longer clears the page
between setup and validation and will now always clear the page at the end of
the command when test isolation is on. Fixes
#21397
11.1.0
Released 11/14/2022
Features:
Next.js v13 is now supported.
#24396
--- CODE BLOCK 1627 ---
tsconfig.json
--- END CODE BLOCK ---
now accepts an extensions.directives option, which will be
registered globally for Vue2 component testing.
#24488
Bugfixes:
Fixed an 11.0.0 regression where the migration workflow would error and hang
for TypeScript projects. Fixes
#24643
Fixed an 11.0.0 regression where
--- CODE BLOCK 1628 ---
cy.intercept()
--- END CODE BLOCK ---
crashed when using the junit
reporter and an assertion failed. Fixes
#24652
Fixed TypeScript types for
--- CODE BLOCK 1629 ---
cy.intercept()
--- END CODE BLOCK ---
. Fixes
#23911
Sessions will no longer be stored if validation fails which will prevent a
previously failed session from being restored in the next test. Fixes
#24208
Experimental Breaking Changes:
Updates were made to enhance the cy.session() recovered error experience. With
this change, cy.session() will no longer fail validation when false is
returned from the validate callback. Fixes
#21398
#24205
, and
#24593
11.0.1
Released 11/09/2022
Bugfixes:
Fixed an 11.0.0 regression that caused enabling
--- CODE BLOCK 1631 ---
cy.intercept()
--- END CODE BLOCK ---
to throw a webpack error. Fixes
#24611
Fixed an 11.0.0 regression where using custom reporters would cause Cypress to
throw a 'Cannot find module' error. Fixes
#24607
Fixed
--- CODE BLOCK 1632 ---
JSON.parse(req.body)
--- END CODE BLOCK ---
configuration validation to allow configuration updates
without restarting Cypress. Fixes
#24497
Fixed an issue where
--- CODE BLOCK 1633 ---
JSON.parse(res.body)
--- END CODE BLOCK ---
would not prevent users from setting up
--- CODE BLOCK 1635 ---
StaticResponse
--- END CODE BLOCK ---
--- CODE BLOCK 1636 ---
cy.intercept()
--- END CODE BLOCK ---
blocks. In these cases
--- CODE BLOCK 1637 ---
matchUrlAgainstPath
--- END CODE BLOCK ---
is not required and users would be better served by not using the command.
Fixes
#24169
Fixed an 11.0.0 regression where modifying the currently loaded component
testing spec in open mode does not trigger a rerun of the spec. Fixed by
#24630
11.0.0
Released 11/08/2022
Summary:
Component Testing is now generally available for projects using React, Next.js,
Angular, and Vue!
Component tests allow you to see and test your application's components in a
real browser as you work. You can use your favorite Cypress commands and
features to develop your components without running your whole app. Learn more
in our
blog
post.
We have also massively improved our startup performance by shipping a snapshot
of our binary instead of the source files. The performance boost applies to the
time it takes from running a cypress command (e.g.
--- CODE BLOCK 1638 ---
RouteMatcher
--- END CODE BLOCK ---
) to when the
Cypress app is opened. Results will vary based on your situation, but we saw up
to 84% faster startup times!
Breaking Changes:
Read our
Migration Guide
which explains the breaking changes in more detail.
Component Testing:
Removed
--- CODE BLOCK 1639 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 1640 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 1641 ---
res.delay()
--- END CODE BLOCK ---
--- CODE BLOCK 1642 ---
res.throttle()
--- END CODE BLOCK ---
--- CODE BLOCK 1643 ---
res.setDelay()
--- END CODE BLOCK ---
, and
--- CODE BLOCK 1644 ---
res.setThrottle()
--- END CODE BLOCK ---
from the
--- CODE BLOCK 1645 ---
cy.route2()
--- END CODE BLOCK ---
argument to the
--- CODE BLOCK 1646 ---
cy.intercept()
--- END CODE BLOCK ---
function. We
recommend writing test-specific styles in a separate
--- CODE BLOCK 1647 ---
cy.route2()
--- END CODE BLOCK ---
file you import in
your test, or in your
--- CODE BLOCK 1648 ---
cy.route2()
--- END CODE BLOCK ---
. See
migration guide
Addresses
#24328
Subsequent
--- CODE BLOCK 1649 ---
cy.intercept()
--- END CODE BLOCK ---
calls within the same test will remove the last mounted
component from the DOM. Addresses
#24329
--- CODE BLOCK 1650 ---
cypress open
--- END CODE BLOCK ---
from
--- CODE BLOCK 1651 ---
cypress run
--- END CODE BLOCK ---
has been removed. We recommend replacing it
with
--- CODE BLOCK 1652 ---
cypress open-ct
--- END CODE BLOCK ---
and a component. See
migration guide
Addresses
#24328
--- CODE BLOCK 1653 ---
cypress run-ct
--- END CODE BLOCK ---
from
--- CODE BLOCK 1654 ---
experimentalComponentTesting
--- END CODE BLOCK ---
has been removed. We recommend using the API
React provides for unmounting components,
unmountComponentAtNode
migration guide
Addresses
#24328
--- CODE BLOCK 1655 ---
cypress.json
--- END CODE BLOCK ---
from
--- CODE BLOCK 1656 ---
file:preprocessor
--- END CODE BLOCK ---
has been removed. We recommend using
--- CODE BLOCK 1657 ---
dev-server:start
--- END CODE BLOCK ---
. See
migration guide
Addresses
#24328
--- CODE BLOCK 1658 ---
window.onerror
--- END CODE BLOCK ---
from
--- CODE BLOCK 1659 ---
uncaught:exception
--- END CODE BLOCK ---
now returns an object with both the VueWrapper
(wrapper) and the component instance (component). Addresses
#24342
When providing an inline
--- CODE BLOCK 1660 ---
redirectionLimit
--- END CODE BLOCK ---
inside of
--- CODE BLOCK 1661 ---
contextIsolation
--- END CODE BLOCK ---
, any
--- CODE BLOCK 1662 ---
before:browser:launch
--- END CODE BLOCK ---
file is not automatically merged. See
migration guide
Addresses
#24133
Angular providers passed as part of the mounting options will be assigned at
the module level using the
--- CODE BLOCK 1663 ---
Cypress.moment()
--- END CODE BLOCK ---
API. This means
that module-level providers (resolved from imports or
--- CODE BLOCK 1666 ---
pluginsFile
--- END CODE BLOCK ---
can be overridden, but providers
specified in
--- CODE BLOCK 1667 ---
cy.intercept()
--- END CODE BLOCK ---
will not be overridden when
using
--- CODE BLOCK 1668 ---
before:response
--- END CODE BLOCK ---
. To override
component-level providers, use the
--- CODE BLOCK 1670 ---
after:response
--- END CODE BLOCK ---
API. See
migration guide
Addresses
#24047
#23427
General:
Communication with the Cypress Dashboard will now verify CAs and reject any
unauthorized calls. If you use a self-signed CA you will need to set
--- CODE BLOCK 1671 ---
req.continue(cb)
--- END CODE BLOCK ---
--- CODE BLOCK 1672 ---
cy.intercept()
--- END CODE BLOCK ---
, or
--- CODE BLOCK 1675 ---
RouteMatcher
--- END CODE BLOCK ---
. Addresses
#23980
Experimental:
--- CODE BLOCK 1676 ---
req.continue(cb)
--- END CODE BLOCK ---
now requires a setup command to use
the command. Addresses
#24311
Features:
Incorporated V8 snapshots into the build process of the Electron binary to
improve startup time and reduce the time to download and unzip the binary
during installation. Startup time is the time from running a command to when
Cypress's window is first opened. Addresses
#18480
--- CODE BLOCK 1677 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 1678 ---
req.reply(cb)
--- END CODE BLOCK ---
--- CODE BLOCK 1679 ---
cy.intercept()
--- END CODE BLOCK ---
--- CODE BLOCK 1680 ---
cy.intercept(url, routeMatcher, handler)
--- END CODE BLOCK ---
, and
--- CODE BLOCK 1681 ---
routeMatcher
--- END CODE BLOCK ---
now accept a domain option. Addresses
#24264
Bugfixes:
Fix types associated with
--- CODE BLOCK 1684 ---
application/xhtml*
--- END CODE BLOCK ---
that were incorrectly typed as
--- CODE BLOCK 1687 ---
ctrl/cmd + f
--- END CODE BLOCK ---
Fixes
#24330
--- CODE BLOCK 1691 ---
NODE_OPTIONS
--- END CODE BLOCK ---
snapshot now shows the mounted component instead of a blank
page. Fixes
#24138
"Open in IDE" is no longer displayed in the command log for component tests.
Fixes
#24366
Cypress now correctly handles CSVs and other non-html MIME types. Fixes
#24297
Cypress now supports project directories mounted on read-only file systems.
Fixes
#2064
Snapshots now capture the AUT correctly when it has navigated away. Fixes
#24506
--- CODE BLOCK 1692 ---
response.body
--- END CODE BLOCK ---
now functions correctly when called within the
--- CODE BLOCK 1693 ---
cy.intercept()
--- END CODE BLOCK ---
callback. Fixes
#21495
When utilizing dependencies within the
--- CODE BLOCK 1694 ---
res.send({ fixture })
--- END CODE BLOCK ---
callback, errors now show
the correct code frame. Fixes
#23365
The select dropdown (in Front-end Framework, Bundler, Organization, Project,
Preferred Editor) now highlights and adds a checkmark to the selected option.
Fixes
#21768
The failure icon in the reporter header now displays correctly when there are
a large number of successful tests. Fixes
#21838
Cypress now allows more than twenty sessions to be created in a single test.
Fixed in
#24379
10.11.0
Released 10/25/2022
Features:
--- CODE BLOCK 1695 ---
req.continue
--- END CODE BLOCK ---
is now supported when using
WebKit (Experimental)
--- CODE BLOCK 1696 ---
before:response
--- END CODE BLOCK ---
is enabled. Addresses
#24116
#23832
Improves user experience when connecting a project to the Dashboard. Addresses
#23379
#23766
#23767
Users will be prompted to connect a project to the Dashboard when logging in
from the Cypress Launchpad after a testing type has been selected.
Users will be prompted to record runs to the Dashboard from both the Cypress
App and Cypress Launchpad if a project is connected to the Dashboard and has
no recorded runs.
Bugfixes:
When a chromium based browser tab or process crashes, Cypress will no longer
hang indefinitely but will fail the current test and move on to the next.
#6170
Fixed as issue where browser-skipped tests were incorrectly recorded to the
Dashboard which resulted in the Dashboard marking the test as "new" or
"modified" when it already existed. Fixes
#23517
Fixed issue connecting to the cloud when a self-signed cert was in the cert
chain. Fixes
#24298
--- CODE BLOCK 1700 ---
{ multiple: true }
--- END CODE BLOCK ---
now supports more than 30 unique origin
spec bridges per test. Fixes
#22874
#23967
Fixed an issue where
--- CODE BLOCK 1701 ---
Refused to apply style
--- END CODE BLOCK ---
would not reflect the correct value in
cross-origin tests. Fixes
#23531
Cypress will now restart on changes to the
--- CODE BLOCK 1703 ---
@cypress/vue
--- END CODE BLOCK ---
configuration entry.
Fixes
#22634
When shown the command to record runs to the cloud, the user can select and
copy parts of the command (like the record key), instead of only being able to
use the "Copy" button to copy the entire command. Fixes
#22091
Cleaned up inconsistencies in the UI between sentence case and title case.
Fixes
#21854
Fixed an issue where there is a visible "Project ID" section (with no
--- CODE BLOCK 1706 ---
cy.writeFile()
--- END CODE BLOCK ---
) when user has not connected to the Dashboard.
#21806
Experimental Breaking Changes:
--- CODE BLOCK 1708 ---
cypress run
--- END CODE BLOCK ---
now supports using
--- CODE BLOCK 1709 ---
cypress open
--- END CODE BLOCK ---
dynamic
--- CODE BLOCK 1717 ---
experimentalStudio
--- END CODE BLOCK ---
to include dependencies.
--- CODE BLOCK 1718 ---
scroll-behavior: smooth
--- END CODE BLOCK ---
has been
removed. Addresses
#24293
The way that Cypress handles
test isolation
has changed. The previous modes of
--- CODE BLOCK 1720 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 1721 ---
experimentalRunEvents
--- END CODE BLOCK ---
have been replaced
with
--- CODE BLOCK 1724 ---
before:spec
--- END CODE BLOCK ---
--- CODE BLOCK 1728 ---
before:spec
--- END CODE BLOCK ---
. Fixes
#24206
The default mode is
--- CODE BLOCK 1730 ---
.type('{selectall}{del}')
--- END CODE BLOCK ---
when
--- CODE BLOCK 1731 ---
experimentalStudio
--- END CODE BLOCK ---
is enabled.
cy.session()
command now inherits the test
isolation behavior for the suite it runs in.
10.10.0
Released 10/11/2022
Features:
--- CODE BLOCK 1738 ---
cypress open
--- END CODE BLOCK ---
's URL argument must be an exact origin
match to the origin of the AUT. Addresses
#23999
#23814
#24085
#22882
, and
#17166
More accurately send/set cookies in
--- CODE BLOCK 1739 ---
cypress run
--- END CODE BLOCK ---
when
--- CODE BLOCK 1749 ---
browserslist
--- END CODE BLOCK ---
is enabled. Addresses
#23551
#22670
, and
#23603
Cypress will no longer watch files when executing component tests in "run"
mode. Addresses
#22959
Bugfixes:
Cypress is now able to connect to Firefox v105. Fixes
#23897
Cypress component tests now correctly load assets with Angular. Fixes
#23797
Imports in component testing support files are no longer tree-shaken by
Webpack. Fixes
#24117
--- CODE BLOCK 1751 ---
experimentalStudio
--- END CODE BLOCK ---
commands will correctly fail when the
setup function has a failing command or assertion. Fixes
#21399
--- CODE BLOCK 1754 ---
watchForFileChanges
--- END CODE BLOCK ---
is now called after mounting an Angular component in component
testing. Fixes
#23591
Code frames for Vite project stack traces now point to the correct lines of
source code. Fixes
#23919
Uncaught exceptions are now only handled once in component testing. Fixes
#23920
Nuxt and Angular component tests now fail on uncaught exceptions. Fixes
#24122
Command log messages are once again being truncated to 50 lines. Fixes
#23995
Dependency Updates:
Upgraded Electron from v19 to v21. Addressed in
#23843
10.9.0
Released 9/27/2022
Features:
Added support for requiring dependencies within the
--- CODE BLOCK 1759 ---
@cypress/get-windows-proxy
--- END CODE BLOCK ---
callback. See the
--- CODE BLOCK 1765 ---
registry-js
--- END CODE BLOCK ---
docs for more
information.
Added support for visiting cross-origin pages outside of a
--- CODE BLOCK 1767 ---
semantic-release
--- END CODE BLOCK ---
callback. See the
--- CODE BLOCK 1769 ---
systeminformation
--- END CODE BLOCK ---
--- CODE BLOCK 1771 ---
cypress.json
--- END CODE BLOCK ---
docs for more
information and caveats. Addresses
#21485
#22282
#21300
, and
#23236
Added support for re-using session data cached by
--- CODE BLOCK 1772 ---
cypress/downloads
--- END CODE BLOCK ---
across specs via the
--- CODE BLOCK 1773 ---
downloadsFolder
--- END CODE BLOCK ---
option. Addresses
#17710
Added support for advanced dev server configuration via an async function that
can optionally modify the dev server config. Addresses
#23302
Launch options returned from the
--- CODE BLOCK 1778 ---
waitForAnimations
--- END CODE BLOCK ---
event can now
include an
--- CODE BLOCK 1790 ---
electron-builder
--- END CODE BLOCK ---
key that can be used to pass environment variables to the
browser when it is launched. Addressed by
#23624
Component tests that fail now display a code frame of the source location of
the error within the Cypress reporter. Addresses
#21720
Bugfixes:
The spec results printed stdout after a test run now show the path to the spec
and not just the file name. Fixes
#22304
The viewport dropdown in the Cypress App now displays the correct text. Fixes
#23789
Compile errors are now surfaced in the command log during tests for Angular
and Next projects. Fixes
#23219
The error "Automatic publicPath is not supported in this browser" will no
longer be displayed when using Webpack 5 and dynamic imports. Fixes
#18435
The correct source control link is now sent to the Cypress Dashboard for
failed specs when the cypress config file is not the project root. Fixes
#22971
The error "Invalid left-hand-side in assignment" will no longer be thrown when
--- CODE BLOCK 1799 ---
cypress run
--- END CODE BLOCK ---
flag is enabled. Fixes
#23647
--- CODE BLOCK 1800 ---
multipart/form-data
--- END CODE BLOCK ---
now functions correctly in Angular component tests. Fixes
#23409
--- CODE BLOCK 1801 ---
Unexpected end of multipart data
--- END CODE BLOCK ---
build option is now respected for Angular component tests.
Fixes
#23673
Configuring a custom browser no longer logs a warning when trying to use that
browser. Addressed in
#23446
Misc:
Improved the accessibility of a few components within the Cypress Launchpad
and App. Addressed in
#23745
Improved the UI of the Sessions instrument panel in the Cypress reporter.
Addresses
#21400
10.8.0
Released 9/13/2022
Features:
You can now run tests in WebKit, Safari's browser engine, by enabling the
--- CODE BLOCK 1802 ---
capture: 'runner'
--- END CODE BLOCK ---
experiment and
installing
--- CODE BLOCK 1804 ---
calledOnceWith
--- END CODE BLOCK ---
. For
more details, read
our blog post
Addresses
#6422
Performance:
Several minor changes were made to reduce Cypress's memory footprint in the
browser in an attempt to improve test times and reduce the likelihood of
crashing the launched browser under test. Addressed in
#23708
#23729
#23737
, and
#23738
Bugfixes:
The Dashboard will now correctly show whether a video of the spec was uploaded
to review. Before this change, the Dashboard would shows the error message
--- CODE BLOCK 1805 ---
calledOnceWithExactly
--- END CODE BLOCK ---
when a passing test's video was not uploaded
because
--- CODE BLOCK 1806 ---
--disable-backgrounding-occluded-windows
--- END CODE BLOCK ---
--- CODE BLOCK 1807 ---
devtools-protocol
--- END CODE BLOCK ---
. Fixes
#2939
Fixed an issue where the stack traces in
--- CODE BLOCK 1815 ---
before:spec
--- END CODE BLOCK ---
mode did not match the stack
traces shown in
--- CODE BLOCK 1820 ---
before:spec
--- END CODE BLOCK ---
mode. Now, in the terminal, users will see the source
map line and column number in the error stack trace. Fixes
#7715
Fixed a bug where projects using Node.js 16.17+ and 18.6+ with ES Modules and
TypeScript were not working with Cypress. Fixes
#22795
#23393
, and
#23552
When searching for specs we now normalize OS-specific path separators so that
Windows users can use back- and forward-slashes. Fixes
#23426
Fixed an regression introduced in Cypress
10.3.0
, and further
exposed in
10.4.0
, that omitted
--- CODE BLOCK 1822 ---
Timed out retrying
--- END CODE BLOCK ---
cookies when the URL
Scheme, Domain, and Top Level Domain matched, but the ports are different
(i.e. same-site). Fixes
#23132
Autoscrolling of the command log can no longer become disabled in
--- CODE BLOCK 1823 ---
matchUrlAgainstPath
--- END CODE BLOCK ---
mode.
This fixes an issue observed where the reporter randomly stops scrolling
during a video recording and the Command log details are not visible. Fixes
#16098
#22199
--- CODE BLOCK 1827 ---
matchUrlAgainstPath
--- END CODE BLOCK ---
--- CODE BLOCK 1831 ---
forceNetworkError
--- END CODE BLOCK ---
command's yielded rerender function has been updated to only create one
--- CODE BLOCK 1834 ---
scrollBehavior
--- END CODE BLOCK ---
element. This fixes the issue where state did not persist
between rerenders, and all lifecycle hooks were reran when executed. Fixes
#23357
Fixed a regression introduced in Cypress
10.0.0
where Cypress was
incompatible with Chrome v64 - v70. Fixes
#23509
Fixes an issue where outdated organization and project information could be
shown in dialogs when connecting a project to the Cypress Dashboard. Fixes
#23538
--- CODE BLOCK 1836 ---
file:preprocessor
--- END CODE BLOCK ---
metadata request header
is now set to
--- CODE BLOCK 1837 ---
EventEmitter
--- END CODE BLOCK ---
when the request is sent from the Application Under
Test when the
--- CODE BLOCK 1841 ---
scrollBehavior
--- END CODE BLOCK ---
experiment is enabled. This was updated to prevent Google Authentication from
returning
--- CODE BLOCK 1848 ---
scrollBehavior: false
--- END CODE BLOCK ---
in Edge and Electron. Fixes
#23720
Correctly override the Electron
--- CODE BLOCK 1849 ---
scrollBehavior
--- END CODE BLOCK ---
when the
--- CODE BLOCK 1851 ---
Access-Control-Allow-Origin
--- END CODE BLOCK ---
configuration option
is provided or
--- CODE BLOCK 1852 ---
Access-Control-Allow-Credentials
--- END CODE BLOCK ---
experiment is enabled. Fixes
#23597
Fix regression introduced by Cypress
10.0.0
where the
--- CODE BLOCK 1853 ---
Cannot read property "fireChangeEvent" of undefined
--- END CODE BLOCK ---
plugin event was not triggered in
--- CODE BLOCK 1856 ---
Cypress.dom.isVisible
--- END CODE BLOCK ---
mode when the
--- CODE BLOCK 1857 ---
position: fixed
--- END CODE BLOCK ---
experiment was enabled. Fixed #22360.
Fixed a regression introduced in
10.4.0
where referencing an
aliased custom command would return undefined. Fixes
#23652
Users can now log into the Dashboard from the "Choose a browser" page of the
Launchpad even if a browser is not open. Fixes
#23779
Fixed a bug where the
--- CODE BLOCK 1858 ---
Cypress.moment
--- END CODE BLOCK ---
--- CODE BLOCK 1859 ---
waitForAnimations
--- END CODE BLOCK ---
command was not
logging by default. Fixed in
#23771
Fixed an issue where setting the
--- CODE BLOCK 1860 ---
animationDistanceThreshold
--- END CODE BLOCK ---
configuration at
the suite-level would throw on the second test. Fixes
#23644
Removed misleading dependency warning in Launchpad for Next.js applications
using component testing. Fixes
#23598
Added
--- CODE BLOCK 1861 ---
mocha-junit-reporter
--- END CODE BLOCK ---
TypeScript types. Fixes
#22146
Assertions will no longer 'vibrate' in the command log when asserting on the
text of elements with trailing whitespace. Fixed in
#23727
Misc:
There were some minor improvements made to the UI when configuration files are
created for a project when using the Project Setup workflow. Addressed in
#21847
#23260
#23710
10.7.0
Released 8/30/2022
Features:
Re-introduces the experimental
Cypress Studio feature
. Cypress Studio
provides a visual way to generate tests within Cypress by recording
interactions against the application under test. Cypress Studio is available
only in end-to-end tests, and must be enabled via the
--- CODE BLOCK 1864 ---
Option 'sourceMap' cannot be specified with option 'inlineSourceMap'
--- END CODE BLOCK ---
flag. For more details, read
our blog post
Addresses
#23461
Adds
Svelte
component testing support. This feature is
being released as an Alpha, meaning there may be breaking changes in future
Cypress releases. Addresses
#23037
The "Latest Runs" and "Average Duration" columns in the specs list now provide
actions when hovered over to assist with the process of connecting the project
to the Cypress Dashboard. Addresses
#22932
Informational banners were added to display instructions to assist with
connecting projects to the Cypress Dashboard and recording a first test run.
Users who don't plan to use the Cypress Dashboard can dismiss the banners to
prevent seeing them in the future. Addresses
#22933
#22934
#22798
, and
#22935
Vue.js projects with a custom spec pattern configuration can now use the
"Create Spec from Component" capability introduced in v10.5.0. Addresses
#23071
Angular component testing projects can provide a custom configuration to the
Webpack dev server using the
--- CODE BLOCK 1866 ---
"offset" is out of range
--- END CODE BLOCK ---
key.
This enables support for projects that don't adhere to Angular CLI
conventions. Addresses
#23161
The Cypress
--- CODE BLOCK 1867 ---
cy.route2()
--- END CODE BLOCK ---
can now be set to a new time using the
--- CODE BLOCK 1869 ---
cy.intercept()
--- END CODE BLOCK ---
function. Addresses
#15424
Performance:
--- CODE BLOCK 1871 ---
not.visible
--- END CODE BLOCK ---
command's behavior has been enhanced to no longer clear the
dom after a validation function runs. This means a
--- CODE BLOCK 1872 ---
not.contains
--- END CODE BLOCK ---
command is no
longer required after running
--- CODE BLOCK 1873 ---
not.have.class
--- END CODE BLOCK ---
when a validation function is
used. Addresses
#22368
Bugfixes:
Fixed an issue where Cypress could crash if a websocket upgrade request was
made over HTTPS. Fixes
#22217
Fixed an issue where filtering with the
--- CODE BLOCK 1876 ---
experimentalNetworkStubbing
--- END CODE BLOCK ---
CLI flag in run mode option
would not find any specs if the project was located at the root directory of a
file system. Fixes
#23380
Fixed an issue where projects using Angular
--- CODE BLOCK 1877 ---
contenteditable
--- END CODE BLOCK ---
and above would be
unable to run component tests. Fixes
#23585
Fixed an issue where snapshots performed in XHR requests could reflect the
primary domain instead of current domain. Fixes
#21496
An update was made to correctly track Github Actions retries in the Cypress
Dashboard. Previously retries data was not being recorded. Addressed in
#23445
Fixed an issue where an internal TypeScript type was exposed globally. Fixes
#23333
Fixed an issue where an incomplete
--- CODE BLOCK 1878 ---
http.STATUS_CODES
--- END CODE BLOCK ---
configuration would cause the specs list to not display in the Cypress App
when running Component Tests in open mode. Fixes
#23486
Miscellaneous:
Display a default icon in the browser selection menu for browsers without
bundled icons. Fixes
#21766
10.6.0
Released 8/16/2022
Features:
Introduced a new Cypress experiment,
--- CODE BLOCK 1880 ---
cy.server()
--- END CODE BLOCK ---
, for
Component Testing. When enabled, all specs will execute in a single tab,
similar to the execution behavior observed in Component Testing alpha in
Cypress 9, which can improve
--- CODE BLOCK 1882 ---
cy.server()
--- END CODE BLOCK ---
mode performance, but can impact spec
isolation and reliability on large test suites. Addresses
#22353
Enhanced the
--- CODE BLOCK 1885 ---
cy.intercept()
--- END CODE BLOCK ---
environment variable interpolation to accept and replace
--- CODE BLOCK 1886 ---
experimentalFetchPolyfill
--- END CODE BLOCK ---
to allow
version-specific download paths to be honored. Addresses
#5141
#16976
, and
#22864
Bugfixes:
Fixed an issue where the Firefox browser was not downloading files to the
expected directory in Windows. Fixes
#17896
Fixed an issue in
--- CODE BLOCK 1887 ---
cy.route2()
--- END CODE BLOCK ---
where the unique session id logic was not
persisting registered session ids, which incorrectly allowed session ids to
override previously used session ids with different setups. Fixes
#22381
Fixed an issue where absolute path glob manipulation was incorrectly breaking
--- CODE BLOCK 1888 ---
cy.route2()
--- END CODE BLOCK ---
--- CODE BLOCK 1889 ---
—disable-dev-shm-usage
--- END CODE BLOCK ---
glob patterns that contained deep instances of
the working directory. Fixes
#23361
Fixed an issue with the Specs list search that prevented full path matching.
Fixes
#22463
#21879
Fixed an issue where Specs list popovers would not display a spec's full
filename. Fixes
#23064
10.5.0
Released 8/15/2022
Features:
Display a 'flaky test' indicator in the Specs Explorer for specs that are
known to be flaky in the Dashboard. Addresses
#22656
#22657
The project drop down is now populated when connecting a project with an
organization that only has one project. Addresses
#22936
Added new
--- CODE BLOCK 1893 ---
cypress version
--- END CODE BLOCK ---
configuration option to allow users to revert to
--- CODE BLOCK 1894 ---
cypress version
--- END CODE BLOCK ---
mode when
--- CODE BLOCK 1895 ---
--component
--- END CODE BLOCK ---
is set to true. Read more
about
test isolation
in Cypress to learn more. Addresses
#22279
React 18 projects will now be scaffolded with the
--- CODE BLOCK 1896 ---
contenteditable
--- END CODE BLOCK ---
mount
registration during component setup. Addresses
#23033
A list of Vue components in the project are now available for selection when
generating a new spec for component testing in projects that are using the
default spec pattern. Addresses
#22836
If the user logs in to the Dashboard from the app, but the current project
does not have a project ID, the user will now be able to enter the connect
project workflow directly. Addresses
#23022
Adds Angular component testing support, including Angular template support and
support for Angular standalone components. Addresses
#22819
Bugfixes:
Fixes an issue where usage of the
--- CODE BLOCK 1897 ---
Content-Length
--- END CODE BLOCK ---
option would result in no specs
found if the absolute project path included glob pattern characters. Fixes
#22272
Webpack entry points are no longer preserved for CT Webpack projects. Fixes
#23224
Fixes an issue where session state was not being reset when changing between
specs in open mode. Fixes
#23146
Add delay to header tooltips so they don't pop open unless hovered on. Fixes
#23115
Fixed an edge-case bug where Cypress would hang in run-mode if an error was
thrown from a
--- CODE BLOCK 1901 ---
redirectedToUrl
--- END CODE BLOCK ---
event handler. Fixes
#23039
Fixes an issue introduced in
--- CODE BLOCK 1902 ---
cypress run
--- END CODE BLOCK ---
where network logs could be missing
certain information or cause certain requests to be delayed by 500ms. Fixes
#23227
In the 'Create Blank Spec' dialog, pressing enter or return when the focus is
on the spec path input field will create the blank spec. Fixes
#21815
Fixes React 18 unmount component handling to resolve the
--- CODE BLOCK 1903 ---
cypress open
--- END CODE BLOCK ---
error. Fixes
#23081
Fixes a regression introduced in Cypress 10.0 where Cypress no longer
persisted the spec filter in the 'Search Specs' field during a session and
when a project is reopened. The same filter will be used in the main specs
list as well as the inline specs list present in the Test Runner. Fixes
#21837
Fixed an issue that could lead to infinite recursion and thus a crash when
running tests that make use of
--- CODE BLOCK 1911 ---
cy.route2()
--- END CODE BLOCK ---
. Fixes
#22693
In the Launchpad, the project's name will no longer link to the 'Choose
Testing Type' step of the launchpad. Fixes
#21911
CT projects using Vite
--- CODE BLOCK 1913 ---
content-type
--- END CODE BLOCK ---
work with Node versions
--- CODE BLOCK 1915 ---
text/html;charset=utf-8
--- END CODE BLOCK ---
. Fixes
#23042
#23114
Miscellaneous:
Updated UI styling for Cypress
--- CODE BLOCK 1916 ---
Cannot access 'continueSent' before initialization
--- END CODE BLOCK ---
pages. Addresses
#20978
Stable Firefox versions 101 and 102 are now explicitly rendered as unsupported
in Windows due to an unpatched browser incompatibility in those versions.
Addresses
#23164
Add a warning for users on the old React API,
--- CODE BLOCK 1917 ---
cy.route2()
--- END CODE BLOCK ---
, who are using
React 18. Users can now take advantage of the React 18 integration,
--- CODE BLOCK 1918 ---
cy.route2()
--- END CODE BLOCK ---
. Addresses
#23032
--- CODE BLOCK 1919 ---
cy.route2()
--- END CODE BLOCK ---
is deprecated and reading from it will log a warning to
the console. Prefer
--- CODE BLOCK 1920 ---
Cannot read property 'replace' of undefined
--- END CODE BLOCK ---
instead. Addresses
#23092
10.4.0
Released 8/2/2022
Features:
Cypress Component testing now supports React 18 via the cypress/react18
package. Addresses
#21381
#21946
Cypress Component testing now supports Vite 3. Addresses
#22784
Cypress introduces a new experimental flag, called
--- CODE BLOCK 1925 ---
cypress cache list
--- END CODE BLOCK ---
. When enabled,
--- CODE BLOCK 1932 ---
systeminformation
--- END CODE BLOCK ---
will turn on additional
--- CODE BLOCK 1935 ---
node-webkit-updater
--- END CODE BLOCK ---
options to prevent frame busting, as well as striping
integrity tags out of
--- CODE BLOCK 1937 ---
beforeInput
--- END CODE BLOCK ---
--- CODE BLOCK 1938 ---
beforeinput
--- END CODE BLOCK ---
elements and remove the electron
user agent. In the current state of this experimental flag, SRI is not
supported. Addresses
#21476
#21307
#22953
#21474
Cypress will now display a banner with a corrective action when your project
uses a projectId that cannot be found in the Cypress Dashboard and when you do
not have access to the current project in the Cypress Dashboard. Addresses
#22637
Bugfixes:
Fixes issue where cookies were not handled within cy.origin for requests other
than the AUT page request. Fixes
#22952
#21474
Tooltips are now correctly displayed behind modals. Fixes
#22595
Fixed a hang when sending video to the dashboard from the electron browser.
Fixes
#17627
Cypress will now throw an error when we receive an unexpected return value
from a custom config file. Fixes
#21948
Cypress will now warn when detecting unsupported dependencies for component
testing. Fixes
#22025
cy.type() can now be used to enter datetime values with seconds, to an input
of type datetime-local, for example 1959-09-13T10:12:13. Fixes
#22884
Next.js in Cypress is now allowed to import global styles. Fixes
#22525
Fixed an issue where 'additionalIgnorePattern' was not allowed to be an array
of strings.
#22551
Prevented timer size from changing while counting up. Fixes
#22846
Added icons to help indicate that column headers provide more information on
hover. Fixes
#22638
Fixed an issue where long "run urls" are cut off in the console. Fixes
#22619
Dependency Updates:
Upgraded electron from 18.3.0 to 19.0.8. Addressed in
#22775
Upgraded bundled Node.js version from 16.13.2 to 16.14.2. Addressed in
#22775
Upgraded bundled Chromium version from 100.0.4896.75 to 102.0.5005.148.
Addressed in
#22775
10.3.1
Released 7/19/2022
Bugfixes:
Fixed an issue where file watchers were not completely closed prior to the
Cypress App quitting, causing crashes on exit in some macOS environments.
Fixes
#22026
Fixed issues with reloading user configuration after it is updated. Fixes
#21785
#22389
Fixed issues with
--- CODE BLOCK 1939 ---
cy.route2()
--- END CODE BLOCK ---
when testing multiple origins. Fixes
#22479
#22674
Fixed an issue retrieving git information for non-bash Unix shells. Fixes
#22454
Fixed an issue that prevented displayed "Last Updated" information on Windows
for git repositories without a commit history. Addressed in
#22741
Fixed styling of the Latest Runs tooltip to keep it centered over the latest
run entry. Fixes
#22629
#22598
Fixed styling issues with the Specs Explorer at narrow viewport widths. Fixes
#22626
Fixed a visual issue in the reporter where special characters would be
incorrectly formatted with markdown. Fixes
#5679
Fixed an issue where the Proxy-Authorization header included capitalization
that would fail with certain proxies. Fixes
#22383
Added
--- CODE BLOCK 1940 ---
cy.route2()
--- END CODE BLOCK ---
as a required dependency when setting up a React project for
Component Testing. Fixes
#22371
The Spec Runner will no longer overflow unexpectedly in Firefox in certain
situations. Fixes
#21881
#22610
Fixed a regression where the
--- CODE BLOCK 1941 ---
cy.route2()
--- END CODE BLOCK ---
environment variable was
not honored. Fixes
#21721
#21271
Using
--- CODE BLOCK 1942 ---
cy.route2()
--- END CODE BLOCK ---
with a regular expression now matches submit-type input
labels correctly. Fixes
#21166
Prevent printing "Class WebSwapCGLLayer is implemented in both" warning in
stdout. Fixes
#21615
Fixed the pluralization of Match(es) under Project Settings. Fixes
#21728
Fixed a regression where absolute elements were not properly blacked out in
screenshots. Fixes
#22173
Miscellaneous:
Improved keyboard navigation for Latest Runs data in the Specs Explorer.
Addresses
#22628
Improved accessibility and styling around Specs Explorer tooltips. Addresses
#22597
Improved the styling and behavior of the Copy button seen in the Migration
workflows. Addresses
#21860
#21862
Improved the layout of the Launchpad Docs dropdown when the viewport is
narrow. Addresses
#21842
Removed autocomplete from certain inputs in the Cypress App. Addresses
#22102
Removed the Projects breadcrumb from the Launchpad when not in global mode.
Addresses
#21771
Added padding to the bottom of the projects list in the Launchpad. Addresses
#21724
Improved the display of the "Record your first run" banner at smaller widths.
Addresses
#21856
The Cypress App's sidebar will now automatically collapse at narrow widths.
Addressed in
#22393
Improved punctuation consistency and reduced the need to scroll in the Key
Differences modal. Addresses
#21852
10.3.0
Released 6/28/2022
Features:
Cypress Dashboard test data is now available real-time within Cypress. For
more details, read
our blog post
Addressed in
#21250
#22497
Added a new clear button to easily clear the search text when filtering specs
in the Cypress runner. Fixes
#21686
Bugfixes:
Fixed a memory leak in Chromium-based browsers caused by storing
--- CODE BLOCK 1943 ---
cy.route2()
--- END CODE BLOCK ---
urls
containing base64 encoded files unnecessarily. Fixed
#17853
#22462
Updated cross-origin cookie handling to align with browser behavior. This
fixed various issues with cookies when testing across multiple origins. Fixed
#21363
#20685
Updated Cypress to use posix paths to fix an issue on Windows when a project
required
--- CODE BLOCK 1944 ---
cypress.run()
--- END CODE BLOCK ---
. Fixes
#22544
#22297
Fixed a 9.x to 10.x migration bug where the migration tool would hang without
a response when it attempted to read the
--- CODE BLOCK 1949 ---
--ci-build-id
--- END CODE BLOCK ---
contents when the
--- CODE BLOCK 1956 ---
color-string
--- END CODE BLOCK ---
value was a directory path instead of a relative file path.
Fixed
#22461
Fixed the process profiler to output Cypress's summarized CPU and memory
metrics when the
--- CODE BLOCK 1959 ---
pretty-bytes
--- END CODE BLOCK ---
debug stream is
enabled. Fixed
#22022
Fix styling issue observed when long text was entered in the search when
filtering specs in the Cypress runner. Fixes
#21686
Corrected the TypeScript types to include
--- CODE BLOCK 1964 ---
cypress open --browser C:/User/App/browser.exe:chrome
--- END CODE BLOCK ---
as a valid test config
override option. Fixes
#22374
#22072
10.2.0
Released 6/21/2022
Features:
Cypress is now available natively on Apple silicon, including the M1 and M2
processor families. For more details, read
our blog post
Addresses
#19908
Cypress is now available natively on ARM64 and AArch64 systems running Linux.
Addresses
#4478
The file name input field within the Create Spec modal is now automatically
focused when the modal is opened. Addresses
#21865
Bugfixes:
Suppressed a misleading Chromium warning about CertVerifyProcBuiltin that
would appear when visiting HTTPS sites in Cypress. Fixed
#22128
Users will be able to see the custom reason-phrase in the HTTP response if the
custom reason-phrase is set. Otherwise, a default status message is returned
based on the corresponding status code as earlier. Fixed
#16973
Fixed an issue where Cypress would crash with an EMFILE error if the process
ran into the file descriptor limit. Fixed
#22023
Fixed an issue causing a "nohoist config is ignored" warning when installing
cypress with yarn. Fixed
#22147
Spec directories and file names on the Specs page are now truncated if they
exceed their column width. Fixed
#21895
Updated the file links in error views to wrap appropriately and no longer
overflow their containers. Fixed
#22103
The Cypress v10 introduction video will now be skipped if loading the video
takes longer than 3 seconds. Fixed
#21955
Updated the warning banner to use language consistent with the rest of the
Cypress application. Addressed in
#21551
Dependency Updates:
Upgraded the bundled electron version shipped with Cypress from
--- CODE BLOCK 1968 ---
CYPRESS_NO_COMMAND_LOG=1
--- END CODE BLOCK ---
--- CODE BLOCK 1969 ---
cypress open
--- END CODE BLOCK ---
. Addressed in
#22252
10.1.0
Released 6/10/2022
Features:
Cypress will show an improved error message when running
--- CODE BLOCK 1970 ---
cypress run
--- END CODE BLOCK ---
when component testing has not been configured.
Fixed
#21909
Bugfixes:
Added support for TypeScript projects using
--- CODE BLOCK 1971 ---
chromeWebSecurity
--- END CODE BLOCK ---
using
ts-node/esm. Fixed
#22096
#21939
, and
#22074
Users can now run multiple specs with
--- CODE BLOCK 1972 ---
test:after:run
--- END CODE BLOCK ---
in headed mode on linux
and windows in chrome. Fixed
#22155
The baseUrl config option will now restart the Cypress server automatically
when it is updated in a Cypress config file. Fixed
#22056
The supportFile can now be detected within projects that contain glob syntax
characters in their absolute paths. Fixed
#22040
Selector Playground "copy to clipboard" now copies full command rather than
just the selector. Fixed
#22043
The clickable area for the specs list has been expanded to include the entire
row. Fixed
#22105
Removed the trailing period from the "Learn More" button. Fixed
#21807
Clicking the application under test url will now open the application in
another tab. Fixed
#21823
10.0.3
Released 6/3/2022
Bugfixes:
Cypress will only watch files that match the provided
--- CODE BLOCK 1976 ---
cy.route2()
--- END CODE BLOCK ---
. Fixed
#22054
Cypress will no longer crash when run behind a proxy that blocks Cypress's
CDN. Fixed
#22081
Contrast increased on inline spec list header items for improved
accessibility. Fixed
#21870
Updated UI to not show the spec list as selected when in the runner. Fixed
#21873
"Cypress" is now capitalized step 3 of migration text. Fixed
#21798
The browser list in the cypress apps top nav is now scrollable with a large
number of browsers.
#22032
Newly scaffolded spec files will no longer be generated with as a failing
test. Fixed
#21921
Cypress will not crash if it fails to access the machine-id on windows. Fixed
#22110
10.0.2
Released 6/2/2022
Bugfixes:
Cypress will no longer watch files when in run mode. Fixed
#22054
Improved support for esm in windows. Fixed
#22038
Improved TypeScript detection in project:
Ensures TypeScript actually exists (via
--- CODE BLOCK 1977 ---
request.body
--- END CODE BLOCK ---
) and is specified
in dependencies or devDependencies before migrating a project to use it.
When creating a new project include
--- CODE BLOCK 1978 ---
cy.route2()
--- END CODE BLOCK ---
glob in algorithm to
detect TypeScript.
When migrating the existing files in the
--- CODE BLOCK 1979 ---
cy.route2()
--- END CODE BLOCK ---
folder should be enough
info to make the determination.
No longer includes
--- CODE BLOCK 1980 ---
cypress run
--- END CODE BLOCK ---
files when detecting TypeScript
Fixed
#22034
#22108
, and
#21997
Vite dev-server for component testing will not crash if user has vite plugins
that rely on non-empty plugins list. Fixed
#22021
Post processing ffmpeg is now run at a lower priority. Fixed
#21585
10.0.1
Released 6/1/2022
Bugfixes:
The inline spec list is now scrollable. Fixed
#21995
--- CODE BLOCK 1981 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 1989 ---
firefox-profile
--- END CODE BLOCK ---
will now properly remove the indeterminate state
from checkboxes. Fixed
#21665
An error will no longer throw warning that
--- CODE BLOCK 1995 ---
firefoxGcInterval
--- END CODE BLOCK ---
isn't a module after
migrating a project's configuration file when using the direct download of
Cypress. Fixed
#2199
Cypress will now throw a more description error when TypeScript errors are
encountered when reading a
--- CODE BLOCK 1996 ---
cy.route2()
--- END CODE BLOCK ---
file. Addressed in
#22009
, Related to
#21997
#22004
We now more correctly handle EPERM errors related to chokidar watching files
when there are permission issues. Fixed
#22002
The migration step for support file is no longer shown when the user had a
custom support file path. Fixed
#22012
Styles are now applied correctly after a user views the runs page and returns
to the specs list. Fixed
#21931
Misc:
Updated messaging displayed when the
--- CODE BLOCK 1998 ---
cy.route2()
--- END CODE BLOCK ---
configuration is
found. Addresses
#22008
10.0.0
Released 6/1/2022
Summary:
Component testing is now beta! We've also reworked the Cypress app from the
ground up to modernize the interface, streamline workflows and integrate better
into your overall development experience. Read more about 10.0 in
our blog post
Breaking Changes:
Please run
--- CODE BLOCK 2000 ---
cy.route2()
--- END CODE BLOCK ---
to go
through our interactive migration which will guide you in updating your files and
configuration options. Read our
Migration Guide
which explains some breaking changes in more detail.**
We introduced several breaking changes to the
Cypress configuration file
detailed below:
Using a
--- CODE BLOCK 2007 ---
cy.setCookie
--- END CODE BLOCK ---
configuration file is no longer supported. Replace
this configuration file with a
--- CODE BLOCK 2010 ---
Content-Security-Policy-Report-Only
--- END CODE BLOCK ---
--- CODE BLOCK 2011 ---
Content-Security-Policy
--- END CODE BLOCK ---
--- CODE BLOCK 2013 ---
CypressRunResult
--- END CODE BLOCK ---
--- CODE BLOCK 2014 ---
CYPRESS_INSTALL_BINARY
--- END CODE BLOCK ---
file. This change provides
better flexibility and extensibility of configuration. An error will be
thrown if both a
--- CODE BLOCK 2015 ---
includeShadowDom
--- END CODE BLOCK ---
file and
--- CODE BLOCK 2016 ---
followRedirect
--- END CODE BLOCK ---
file are found. Addressed in
#18221
#18300
#20554
, and
#20643
A Cypress configuration file is now required and passing the CLI flag
--- CODE BLOCK 2017 ---
cy.route2()
--- END CODE BLOCK ---
will throw an error. Addressed in
#20643
A default configuration file will no longer be auto-generated by Cypress
when a configuration file doesn't exist. Instead, you can run
--- CODE BLOCK 2019 ---
throttleKbps
--- END CODE BLOCK ---
and set up your project with a specific testing type to have this file
generated. This allows you to customize the configuration setup by
testing-type for the language and dependencies leveraged in your project.
The configuration file's JSON schema is no longer supported since the
configuration can no longer be provided via a JSON format.
Cypress has made several
configuration option changes
including renaming
options, removing options, and only allowing some options within a specific
testing type. Please run
--- CODE BLOCK 2020 ---
cy.route2()
--- END CODE BLOCK ---
to have our automated migration update
these options for you.
Many configuration options are now specific to either end-to-end or
component testing. The types have also been updated to match the new
structure. Addressed in
#20677
--- CODE BLOCK 2021 ---
CYPRESS_BINARY_INSTALL
--- END CODE BLOCK ---
--- CODE BLOCK 2022 ---
cy.contains()
--- END CODE BLOCK ---
configuration options are
no longer valid as top-level configuration options and can only be defined
within the
--- CODE BLOCK 2023 ---
cy.within()
--- END CODE BLOCK ---
configuration. Addressed in
#20589
#21588
--- CODE BLOCK 2024 ---
root.getRootNode is not a function
--- END CODE BLOCK ---
--- CODE BLOCK 2026 ---
{moveToStart}/{moveToEnd}
--- END CODE BLOCK ---
options are no longer valid as
top-level configuration options and must now be defined within the
--- CODE BLOCK 2027 ---
contenteditable
--- END CODE BLOCK ---
and/or
--- CODE BLOCK 2029 ---
KeyboardEvent
--- END CODE BLOCK ---
configurations.
Previously the
--- CODE BLOCK 2031 ---
cy.getCookie()
--- END CODE BLOCK ---
option defaulted to
--- CODE BLOCK 2032 ---
cy.route2()
--- END CODE BLOCK ---
Now the
--- CODE BLOCK 2033 ---
cy.route2()
--- END CODE BLOCK ---
option
defaults to
--- CODE BLOCK 2034 ---
experimentalShadowDomSupport
--- END CODE BLOCK ---
and the
--- CODE BLOCK 2035 ---
cy.shadow()
--- END CODE BLOCK ---
option
defaults to
--- CODE BLOCK 2036 ---
cy.route2()
--- END CODE BLOCK ---
. Addressed in
#19776
#19364
--- CODE BLOCK 2037 ---
Cypress.Commands.add()
--- END CODE BLOCK ---
option was removed. This option should be replaced with
the new
--- CODE BLOCK 2039 ---
experimentalNetworkStubbing
--- END CODE BLOCK ---
--- CODE BLOCK 2041 ---
cy.route2()
--- END CODE BLOCK ---
configuration
options. Addressed in
#18798
#20560
--- CODE BLOCK 2042 ---
XMLHttpRequest
--- END CODE BLOCK ---
option was removed. This option was replaced with the new
--- CODE BLOCK 2044 ---
cy.route2()
--- END CODE BLOCK ---
option. Addressed in
#19319
#20565
--- CODE BLOCK 2045 ---
cy.trigger()
--- END CODE BLOCK ---
--- CODE BLOCK 2046 ---
eventConstructor
--- END CODE BLOCK ---
options were removed. These
options were made obsolete by the new
--- CODE BLOCK 2048 ---
TestOptions
--- END CODE BLOCK ---
option. Addressed in
#19319
--- CODE BLOCK 2050 ---
Cypress.spec
--- END CODE BLOCK ---
option was removed. This option was replaced with the
--- CODE BLOCK 2054 ---
cy.trigger()
--- END CODE BLOCK ---
option. Addressed in
#19319
--- CODE BLOCK 2058 ---
command-exists
--- END CODE BLOCK ---
option was removed with the removal of the
experimental Cypress Studio feature. If this option is configured in your
project, a warning message will be displayed. Please leave any feedback
around Cypress Studio
here
. Addressed
#20515
During
--- CODE BLOCK 2062 ---
cypress-plugin-retries
--- END CODE BLOCK ---
, the ability to "Run all specs" and "Run filtered specs"
has been removed. Please leave feedback around the removal of this feature
here
. Your feedback
will help us make product decisions around the future of this feature.
The experimental Cypress Studio feature has been removed. Please leave
feedback around the removal of this feature
here
. Your feedback
will help us make product decisions around the future of this feature.
Addressed in
#20515
You will no longer be able to run your tests during
--- CODE BLOCK 2065 ---
blacklistHosts
--- END CODE BLOCK ---
--- CODE BLOCK 2066 ---
cy.server()
--- END CODE BLOCK ---
browser versions that are not supported by Cypress
Generated screenshots and videos will still be created inside their respective
folders (
--- CODE BLOCK 2071 ---
experimentalGetCookiesSameSite
--- END CODE BLOCK ---
--- CODE BLOCK 2072 ---
arrayBufferToBlob
--- END CODE BLOCK ---
). However, the paths of generated
files inside those folders will be stripped of any common ancestor paths
shared between spec files found by the
--- CODE BLOCK 2073 ---
base64StringToBlob
--- END CODE BLOCK ---
option and may no longer
be deterministic. Addressed in
#19319
Deprecations:
--- CODE BLOCK 2074 ---
binaryStringToBlob
--- END CODE BLOCK ---
--- CODE BLOCK 2075 ---
dataURLToBlob
--- END CODE BLOCK ---
commands have been deprecated. Use
--- CODE BLOCK 2076 ---
Promise<Blob>
--- END CODE BLOCK ---
--- CODE BLOCK 2080 ---
esModuleInterop
--- END CODE BLOCK ---
instead. Addresses
#18418
Features:
Cypress 10 now includes beta support for
component testing
. More features
around component testing are detailed below:
Component testing is now integrated directly into the main app, allowing you
to choose which testing experience you want upon launching Cypress. See our
current support for frameworks and bundlers
Addressed in
#21111
Cypress will now guide you through installing the component testing
dependencies and project setup necessary to begin component testing in
Cypress. Previously this required manual setup and referencing the
documentation.
When you use the Cypress app during
--- CODE BLOCK 2082 ---
esModuleInterop
--- END CODE BLOCK ---
to configure your project
for CT testing, a
--- CODE BLOCK 2083 ---
tsconfig.json
--- END CODE BLOCK ---
command will be
automatically scaffolded for you in a
--- CODE BLOCK 2091 ---
.snapshot()
--- END CODE BLOCK ---
You can now create an empty component testing spec file from within the
Cypress app directly and preview the specfile upon creation.
The following component testing plugins are now shipped with Cypress to
enable easy
--- CODE BLOCK 2094 ---
cy.stub().snapshot(false)
--- END CODE BLOCK ---
implementation. Your local framework dependencies
found in
--- CODE BLOCK 2095 ---
Cannot set property 'err' of undefined
--- END CODE BLOCK ---
will be referenced to prevent adding additional
dependencies or peer-dependencies to your
--- CODE BLOCK 2096 ---
Cannot read property 'isAttached' of undefined
--- END CODE BLOCK ---
. From now on, the
latest plugin version will be shipped with each Cypress release. See our
current support for frameworks and bundlers
Addressed in
#20930
--- CODE BLOCK 2097 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 2098 ---
Maximum call stack size exceeded
--- END CODE BLOCK ---
--- CODE BLOCK 2099 ---
scrollIntoView
--- END CODE BLOCK ---
--- CODE BLOCK 2100 ---
display: inline
--- END CODE BLOCK ---
We've enhanced how you can set and refresh
configuration
detailed below:
Support for
--- CODE BLOCK 2103 ---
cy.screenshot()
--- END CODE BLOCK ---
configuration files was added.
Addressed in
#20643
The Cypress app will now refresh when changes are made in the configuration
file instead of closing the app. Addressed in
#21160
We've added several
new configuration options
detailed below:
--- CODE BLOCK 2104 ---
cypress open
--- END CODE BLOCK ---
option is a new testing type specific configuration option. It must be
defined within the
--- CODE BLOCK 2105 ---
tsconfig.json
--- END CODE BLOCK ---
and/or
--- CODE BLOCK 2106 ---
reporterStats
--- END CODE BLOCK ---
configurations.
This option allows you to modify your loaded configuration, listen to events
and register plugins. This option replaces the
--- CODE BLOCK 2109 ---
ApplicationWindow
--- END CODE BLOCK ---
option.
Addressed in
#18798
#20560
--- CODE BLOCK 2110 ---
reporterOptions
--- END CODE BLOCK ---
option is a
new component testing specific option that must be defined within the
--- CODE BLOCK 2133 ---
log-symbols
--- END CODE BLOCK ---
configuration.
This option provides a mechanism for starting a component testing dev-server
when tests are running.
--- CODE BLOCK 2139 ---
Cannot set property 'err' of undefined
--- END CODE BLOCK ---
option is a new testing-type specific configuration option
that must be defined within the
--- CODE BLOCK 2144 ---
electron-context-menu
--- END CODE BLOCK ---
and/or
--- CODE BLOCK 2147 ---
cypress run
--- END CODE BLOCK ---
configurations.
This option accepts a glob or an array of globs of the spec files to load.
This option simplifies the spec discovery by replacing the
--- CODE BLOCK 2148 ---
screenshotOnRunFailure
--- END CODE BLOCK ---
--- CODE BLOCK 2149 ---
pluginsFile
--- END CODE BLOCK ---
--- CODE BLOCK 2152 ---
cypress open
--- END CODE BLOCK ---
options. Addressed in
#19319
#20565
#20853
--- CODE BLOCK 2153 ---
position: fixed
--- END CODE BLOCK ---
default
value for new projects is
--- CODE BLOCK 2154 ---
pointer-events: none
--- END CODE BLOCK ---
. For
existing projects, please run
--- CODE BLOCK 2155 ---
attributeChangedCallback
--- END CODE BLOCK ---
to have your spec files
automatically migrated to match this
--- CODE BLOCK 2159 ---
Cannot read property '__error' of null
--- END CODE BLOCK ---
. Addressed in
#21193
--- CODE BLOCK 2163 ---
npm audit fix
--- END CODE BLOCK ---
default value is
--- CODE BLOCK 2164 ---
CypressCommandLine
--- END CODE BLOCK ---
--- CODE BLOCK 2172 ---
ensureScrollability: false
--- END CODE BLOCK ---
option is a new testing type specific configuration
option that must be defined within the
--- CODE BLOCK 2173 ---
cypress.cli.parseRunArguments
--- END CODE BLOCK ---
and/or
--- CODE BLOCK 2174 ---
cypress run
--- END CODE BLOCK ---
configurations.
This option accepts a glob or an array of globs which allows you to ignore
spec files that would otherwise be shown in your list of specs. This option
replaces the
--- CODE BLOCK 2175 ---
cypress run
--- END CODE BLOCK ---
option. Addressed in
#19319
#19980
#20763
#20853
--- CODE BLOCK 2176 ---
Cannot read property 'isAttached' of undefined
--- END CODE BLOCK ---
default value is the same as the replaced
--- CODE BLOCK 2177 ---
cypress run
--- END CODE BLOCK ---
glob pattern
--- CODE BLOCK 2178 ---
invalid for option "size"
--- END CODE BLOCK ---
--- CODE BLOCK 2179 ---
viewportHeight
--- END CODE BLOCK ---
default value is
--- CODE BLOCK 2180 ---
viewportWidth
--- END CODE BLOCK ---
plus
--- CODE BLOCK 2182 ---
pluginsFile
--- END CODE BLOCK ---
glob patterns.
--- CODE BLOCK 2184 ---
requestTimeout
--- END CODE BLOCK ---
pattern is automatically added to both
--- CODE BLOCK 2185 ---
responseTimeout
--- END CODE BLOCK ---
--- CODE BLOCK 2186 ---
ELECTRON_EXTRA_LAUNCH_ARGS
--- END CODE BLOCK ---
and can't be
overridden. This is consistent with <10.0 behavior.
Intelligent Code Completion was added with the
--- CODE BLOCK 2189 ---
pluginsFile
--- END CODE BLOCK ---
helper
function. This enables configuration auto-completion and in-line
documentation in the configuration file in your IDE. While it's not strictly
necessary for Cypress to parse your configuration, we recommend wrapping
your config object with
--- CODE BLOCK 2190 ---
supportFile
--- END CODE BLOCK ---
. Addressed in
#18302
We've made some updates to
Cypress API commands
detailed below:
Enhancements were made to provide visual indication of nested commands and
logs. With this change, users are now able to click on log groups to print
additional log details to the dev tools console.
--- CODE BLOCK 2192 ---
@benmalka/foxdriver
--- END CODE BLOCK ---
command was updated to provide visual indication of logs and
commands executed in the
--- CODE BLOCK 2195 ---
firefox-profile
--- END CODE BLOCK ---
command context. Addresses
#20433
The redundant
--- CODE BLOCK 2201 ---
human-interval
--- END CODE BLOCK ---
log is now removed. Address
#7673
#21457
Users can now add custom
--- CODE BLOCK 2210 ---
proxy-from-env
--- END CODE BLOCK ---
--- CODE BLOCK 2216 ---
systeminformation
--- END CODE BLOCK ---
implementation using
--- CODE BLOCK 2230 ---
responseTimeout
--- END CODE BLOCK ---
since we don't provide a default implementation.
Previously users had to use
--- CODE BLOCK 2232 ---
experimentalShadowDomSupport
--- END CODE BLOCK ---
to provide the
custom implementation. Addresses
#18941
We've made some updates to the
Cypress CLI
detailed below:
You can now pass in testing type specific configuration options via the
--- CODE BLOCK 2233 ---
experimentalShadowDomSupport
--- END CODE BLOCK ---
CLI flag without nesting JSON. Addressed in
#20127
--- CODE BLOCK 2234 ---
@benmalka/foxdriver
--- END CODE BLOCK ---
--- CODE BLOCK 2240 ---
window.fetch
--- END CODE BLOCK ---
CLI flags were added to
--- CODE BLOCK 2245 ---
experimentalShadowDomSupport
--- END CODE BLOCK ---
--- CODE BLOCK 2246 ---
.should('have.value')
--- END CODE BLOCK ---
to allow a user to run or launch Cypress for a specific
testing-type. If a testing-type specific CLI flag is not provided when
running
--- CODE BLOCK 2250 ---
cypress run
--- END CODE BLOCK ---
, Cypress will run end-to-end tests by default.
A warning message is now displayed when
--- CODE BLOCK 2252 ---
experimentalShadowDomSupport
--- END CODE BLOCK ---
is ran with the
--- CODE BLOCK 2253 ---
Cannot read property 'length' of undefined
--- END CODE BLOCK ---
CLI flag for a browser that does not exist on the system.
Addressed in
#18473
If a testing type and browser flag are passed to
--- CODE BLOCK 2254 ---
cypress run
--- END CODE BLOCK ---
when
launching a specific project, the browser will automatically launch.
Addressed in
#21538
--- CODE BLOCK 2256 ---
fixturesFolder
--- END CODE BLOCK ---
experience has been updated to take you through our
Launchpad
with many features detailed below:
When you launch Cypress via
--- CODE BLOCK 2257 ---
pluginsFile
--- END CODE BLOCK ---
you'll be asked whether you want
to do end-to-end or component testing and taken through the configuration
necessary to set up your project. Addressed in
#18924
Having files scaffolded on new projects during end-to-end testing is now opt
in and not automatic. Addressed in
#18924
When Cypress detects you have a
--- CODE BLOCK 2258 ---
screenshotsFolders
--- END CODE BLOCK ---
during
--- CODE BLOCK 2259 ---
videoCompression
--- END CODE BLOCK ---
, it will
error and ask you to run
--- CODE BLOCK 2261 ---
cy.wait(ms)
--- END CODE BLOCK ---
to migrate. When Cypress detects you
have a
--- CODE BLOCK 2265 ---
eventemitter2
--- END CODE BLOCK ---
during
--- CODE BLOCK 2271 ---
is-installed-globally
--- END CODE BLOCK ---
, it will guide you through
project migration to ensure your project continues to work as expected.
Addressed in
#18924
After launching the browser, there are several new features in our
detailed below:
The Cypress app has been redesigned so that the Command Log and all
associated navigation display with a dark background.
You can now change specs or the browser within the same window as running
your tests.
Many git details are now shown within your current project in Cypress
including the current branch and the last commit details of each spec in the
spec explorer. Addressed in
#20648
#21139
#21436
#20744
When creating a new spec within Cypress, your project's language is detected
to provide the correct file extension and the
--- CODE BLOCK 2280 ---
signal-exit
--- END CODE BLOCK ---
is checked to
ensure the spec is found by Cypress. After creating the spec, you can
preview the spec that was generated with the option to immediately run the
spec or create another spec. Addressed in
#21225
#20567
#20657
#20962
The Settings page has been redesigned to more clearly distinguish between
settings that are specific to the project, your device, and the Dashboard.
Bugfixes:
An error message is displayed when you add a command using
--- CODE BLOCK 2283 ---
experimentalShadowDomSupport
--- END CODE BLOCK ---
that has the same name as an internal reserved
Cypress command. Addresses
#6146
A one pixel, left, vertical border was removed that was incorrectly included
on screenshot artifacts generated from the
--- CODE BLOCK 2287 ---
Cannot read property '__error' of null
--- END CODE BLOCK ---
command in
component tests. Addressed in
#21019
A memory leak was fixed during
--- CODE BLOCK 2288 ---
Request cannot be constructed from a URL that includes credentials: /__cypress/runner/./wasm/mappings.wasm
--- END CODE BLOCK ---
for end-to-end tests launched in
Chromium and Firefox browsers that reduces the overall time it takes to run a
set of specs and aligns with how the browser is launched once for all specs in
component testing. With this change, the
--- CODE BLOCK 2289 ---
pluginsFile
--- END CODE BLOCK ---
node event
will now properly only fire once per run, instead of firing before each spec.
Addressed in
#19915
The default webpack configuration's host value was changed from
--- CODE BLOCK 2290 ---
supportFile
--- END CODE BLOCK ---
--- CODE BLOCK 2291 ---
cy.on('fail', fn)
--- END CODE BLOCK ---
to support the Node 17+ changes with how DNS names are resolved.
Addressed in
#21430
Cypress will throw a detailed error when some plugin versions are no longer
supported in Cypress 10. Addressed in
#21169
Dependencies:
Added
--- CODE BLOCK 2294 ---
taskTimeout
--- END CODE BLOCK ---
dependency.
Added
--- CODE BLOCK 2295 ---
Cypress.automation
--- END CODE BLOCK ---
dependency.
Added
--- CODE BLOCK 2297 ---
chrome-remote-interface
--- END CODE BLOCK ---
dependency.
Added
--- CODE BLOCK 2305 ---
@cypress/webpack-preprocessor
--- END CODE BLOCK ---
dependency.
Misc:
The Plugins concept in Cypress still exists with the intent to tap into,
modify or extend the internal behavior(s) of Cypress. It however is expected
to be used in conjunction with our new
--- CODE BLOCK 2312 ---
module: commonJS
--- END CODE BLOCK ---
configuration
option, which was named to reflect that Plugins leverage Cypress's node
events.
9.7.0
Released 5/23/2022
Features:
The Electron version and shipped Chromium browser version has been updated.
Addressed in
#21418
Deprecations:
--- CODE BLOCK 2313 ---
tsconfig.json
--- END CODE BLOCK ---
--- CODE BLOCK 2318 ---
location.href
--- END CODE BLOCK ---
Cypress
APIs have been deprecated. In a future release, support for
--- CODE BLOCK 2319 ---
location.replace
--- END CODE BLOCK ---
--- CODE BLOCK 2320 ---
location.assign
--- END CODE BLOCK ---
will be
removed. Consider using the experimental
--- CODE BLOCK 2322 ---
window.parent
--- END CODE BLOCK ---
command instead to cache and restore
cookies and other sessions details between tests. Fixed
#21333
Bugfixes:
Updated the
--- CODE BLOCK 2323 ---
window.frames
--- END CODE BLOCK ---
command to correctly
error and retry if the provided regex pattern begins with an equal sign and a
match was not initially found. Previously the command would incorrectly fail
with a syntax error. Fixed
#21108
Corrected the
--- CODE BLOCK 2324 ---
window.parent.frames
--- END CODE BLOCK ---
command log grouping and validation verbiage.
This change provides better insights to logs associated with the command.
Fixed
#21377
Removed
--- CODE BLOCK 2327 ---
document.location
--- END CODE BLOCK ---
third-party type definitions from
--- CODE BLOCK 2328 ---
onError is not a function
--- END CODE BLOCK ---
--- CODE BLOCK 2329 ---
force: true
--- END CODE BLOCK ---
that were unintentionally exposed. Fixed
#20556
Dependency Updates:
Upgraded the bundled node version shipped with Cypress from
--- CODE BLOCK 2333 ---
experimentalComponentTesting
--- END CODE BLOCK ---
--- CODE BLOCK 2335 ---
Cypress.ConfigOptions
--- END CODE BLOCK ---
. Addressed in
#21418
Upgraded the Chromium browser version used during
--- CODE BLOCK 2336 ---
@cypress/browserify-preprocessor
--- END CODE BLOCK ---
and when
selecting Electron browser in
--- CODE BLOCK 2339 ---
cookie-parser
--- END CODE BLOCK ---
from
--- CODE BLOCK 2342 ---
cypress-multi-reporters
--- END CODE BLOCK ---
--- CODE BLOCK 2354 ---
return-deep-diff
--- END CODE BLOCK ---
. Addressed in
#21418
Upgraded
--- CODE BLOCK 2357 ---
experimentalComponentTesting
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2359 ---
modifyObstructiveCode
--- END CODE BLOCK ---
--- CODE BLOCK 2361 ---
yarn upgrade
--- END CODE BLOCK ---
. Addressed in
#21418
9.6.1
Released 5/9/2022
Bugfixes:
Cypress can now launch on systems where Firefox is installed via Snapcraft.
Fixed
#19793
Updates were made to ensure XHR calls are properly displaying the response
body in the command log. Fixed
#21361
Fixed
--- CODE BLOCK 2369 ---
Feature-Policy: document-domain 'none'
--- END CODE BLOCK ---
--- CODE BLOCK 2372 ---
This socket has been ended by the other party
--- END CODE BLOCK ---
to handle finding text that
contains backslash characters. Fixed
#19116
Updated
--- CODE BLOCK 2376 ---
cannot read property key of undefined
--- END CODE BLOCK ---
to support sending the Enter
keystroke to submit buttons that are not rendered within a form html element,
but are associated with a form via the
--- CODE BLOCK 2378 ---
cypress --version
--- END CODE BLOCK ---
attribute. Fixed
#21163
Fixed an issue with
--- CODE BLOCK 2379 ---
cypress version
--- END CODE BLOCK ---
such that re-running tests in open mode
will now correctly recreate a session. Before this change, an error was thrown
indicating the saved
--- CODE BLOCK 2380 ---
cypress cache path
--- END CODE BLOCK ---
function was not a function because it was
serialized. Fixed
#17805
9.6.0
Released 4/25/2022
Features:
Now you can easily test multi-domain workflows by using the experimental
--- CODE BLOCK 2381 ---
cypress cache list
--- END CODE BLOCK ---
command. This feature allows you to test
across different origins or domains within a single test. This experiment was
designed to work side-by-side with the
--- CODE BLOCK 2388 ---
cy.setCookie()
--- END CODE BLOCK ---
experimental feature. You can turn on use of this command by setting the
--- CODE BLOCK 2392 ---
cy.request()
--- END CODE BLOCK ---
configuration
option to
--- CODE BLOCK 2395 ---
Parse Error: Invalid header value char
--- END CODE BLOCK ---
. For more details, read
our blog post
Addressed
#17336
#944
Added a new configuration option called
--- CODE BLOCK 2396 ---
Parse Error: Header overflow
--- END CODE BLOCK ---
. This
option enables support for
--- CODE BLOCK 2397 ---
foo=bar; Domain=.cypress.test
--- END CODE BLOCK ---
--- CODE BLOCK 2398 ---
http://local.cypress.test
--- END CODE BLOCK ---
for end-to-end testing.
--- CODE BLOCK 2399 ---
vue-fragment
--- END CODE BLOCK ---
configuration option has been removed and
replaced by the
--- CODE BLOCK 2401 ---
firefoxGcInterval
--- END CODE BLOCK ---
configuration option. Please
update your configuration to use the new
--- CODE BLOCK 2404 ---
cypress run
--- END CODE BLOCK ---
option to continue to opt-in to this experimental feature.
When
--- CODE BLOCK 2405 ---
cypress open
--- END CODE BLOCK ---
is enabled, cross-origin requests will
no longer immediately fail, but instead, time out based on the
--- CODE BLOCK 2406 ---
80.0.3987.141
--- END CODE BLOCK ---
configuration. This allows the request to be appropriately handled by the
--- CODE BLOCK 2407 ---
80.0.3987.158
--- END CODE BLOCK ---
command.
When
--- CODE BLOCK 2411 ---
80.0.3987.158
--- END CODE BLOCK ---
is enabled, Cypress will no longer wait
on page loads between hooks before moving on to the next test.
Bugfixes:
Fixed an issue with Firefox 98+ where the Enter keystroke was not being sent
to an input element when using
--- CODE BLOCK 2412 ---
@benmalka/foxdriver
--- END CODE BLOCK ---
. Fixed
#21033
We now verify if an interruption while running tests was signaled by the user
or if it came from an error in a plugin before showing the error message.
Fixed
#21010
Improved the error message observed on Windows platforms when unzipping the
Cypress binary and the max file length is exceeded. Fixed in
#21047
Updated the
--- CODE BLOCK 2415 ---
@cypress/get-windows-proxy
--- END CODE BLOCK ---
TypeScript types to better reflect the
attributes of the
--- CODE BLOCK 2421 ---
extract-zip
--- END CODE BLOCK ---
utility and the JQuery element, a possible previous
subject type.
#20376
Dependency Updates:
Upgraded
--- CODE BLOCK 2424 ---
firefox-profile
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2442 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 2445 ---
CYPRESS_INTERNAL_ENV
--- END CODE BLOCK ---
to consume fixes
related to
improve performance
macOS Big Sur and later. Addressed
#21068
9.5.4
Released 4/11/2022
Bugfixes:
Updates were made to silence Electron warnings related to being unable to
connect to dbus. These errors are normal and expected, and do not result in
test failures. Because they are always present when running Electron inside
docker containers, it has incorrectly led people to believe it is the
root-cause of an error within their test run. By silencing these errors, it
will improve the debug experience to allow users to focus on meaningful
warning and error messages. Fixed
#19299
Updates were made to ensure that all
--- CODE BLOCK 2446 ---
cypress:launcher
--- END CODE BLOCK ---
events are sent if Cypress
becomes disconnected from the Chrome DevTools Protocol and must re-establish a
connection to ensure all command logs are displayed to the user. This fixes an
issue where some command logs, like download or network events, are missing
once Cypress has disconnected and then reconnected to the Chrome DevTools
Protocol. Fixed
#20618
Fixed an issue where
--- CODE BLOCK 2448 ---
cy.clearLocalStorage({ log:false })
--- END CODE BLOCK ---
was not sending the Enter key for
Firefox
--- CODE BLOCK 2449 ---
cypress run
--- END CODE BLOCK ---
. This was not an issue with Firefox
--- CODE BLOCK 2450 ---
cypress open
--- END CODE BLOCK ---
and below. Fixed
#20562
Fixed a regression in
9.3.0
where glob
patterns provided to the
--- CODE BLOCK 2456 ---
@ffmpeg-installer/ffmpeg
--- END CODE BLOCK ---
CLI parameter was incorrectly splitting the
patterns in unexpected places when it should have split on commas. Fixes
#20794
Fixed an issue with
--- CODE BLOCK 2463 ---
cypress-io/request
--- END CODE BLOCK ---
to respect the
--- CODE BLOCK 2464 ---
cypress info
--- END CODE BLOCK ---
option passed to the command.
Previously, when the
--- CODE BLOCK 2466 ---
cypress open
--- END CODE BLOCK ---
option was provided, it was ignored and the
default timeout was used. Fixed
#19985
Updates were made to decrease the length of the Cypress cache path for Windows
to ensure
installing pre-release versions
of the Cypress binary are within the maximum path length of 260 characters.
Fixed in
#20961
Fixed a regression in
8.6.0
which
prevented
--- CODE BLOCK 2467 ---
projectRoot
--- END CODE BLOCK ---
from correctly executing when passing the
--- CODE BLOCK 2469 ---
xhr.onreadystatechange
--- END CODE BLOCK ---
CLI flags to
--- CODE BLOCK 2470 ---
cypress install
--- END CODE BLOCK ---
. Fixed
#20745
Fixed a regression in
9.2.0
which would
sometimes throw an expected error on navigation with
--- CODE BLOCK 2477 ---
.should('not.contain', ...)
--- END CODE BLOCK ---
--- CODE BLOCK 2479 ---
@cypress/browserify-preprocessor
--- END CODE BLOCK ---
. Fixed
#19749
#20539
Corrected the TypeScript type for a cookie which was incorrectly typed as
--- CODE BLOCK 2482 ---
before:browser:launch
--- END CODE BLOCK ---
when the correct type is
--- CODE BLOCK 2489 ---
chrome:canary
--- END CODE BLOCK ---
. Fixed in
#20513
Added the missing
--- CODE BLOCK 2500 ---
cypress:server:util:process_profiler
--- END CODE BLOCK ---
TypeScript types. Fixed
#18886
Fixed an uncommon error observed in
--- CODE BLOCK 2501 ---
@benmalka/foxdriver
--- END CODE BLOCK ---
where an error was thrown
when no cookies had been set for the session and the user clicks the session
command log to view additional details in the DevTools console. Fixed in
#20946
Misc:
A minor visual update was made to the
--- CODE BLOCK 2502 ---
@cypress/browserify-preprocessor
--- END CODE BLOCK ---
command log visuals.
Fixed
#20433
Dependency Updates:
Upgraded
--- CODE BLOCK 2514 ---
chai-as-promised
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2529 ---
firefox-profiler
--- END CODE BLOCK ---
--- CODE BLOCK 2546 ---
log-symbols
--- END CODE BLOCK ---
to address the
CVE-2021-3807
NVD security
vulnerability. Addressed in
#20807
Upgraded
--- CODE BLOCK 2549 ---
marionette-client
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2559 ---
systeminformation
--- END CODE BLOCK ---
--- CODE BLOCK 2560 ---
support-colors
--- END CODE BLOCK ---
to address the
CVE-2022-22912
NVD security
vulnerability. Addressed in
#20808
9.5.3
Released 3/28/2022
Bugfixes:
Corrected a logging issue with
--- CODE BLOCK 2566 ---
cypress run
--- END CODE BLOCK ---
where the response status code
and response body were sometimes missing from the log details in
--- CODE BLOCK 2567 ---
could not find CRI target
--- END CODE BLOCK ---
mode.
Fixed
#18757
Fixed an issue in
--- CODE BLOCK 2568 ---
cypress verify
--- END CODE BLOCK ---
where the command would not retry or provide
a meaningful error message if
--- CODE BLOCK 2570 ---
cy.type({ force: true })
--- END CODE BLOCK ---
encoding was used and the file was not
found. Fixed
#20683
Updated the Cypress Keyboard shortcuts to only run the shortcut when the
pressed shortcut key was not used in conjunction with either the
--- CODE BLOCK 2575 ---
http-status-codes
--- END CODE BLOCK ---
--- CODE BLOCK 2579 ---
socket.io-client
--- END CODE BLOCK ---
, or
--- CODE BLOCK 2583 ---
cypress install
--- END CODE BLOCK ---
modifier keys. This fixed an issue where the Cypress
shortcut handler would override the browser native keyboard shortcut for
search (
--- CODE BLOCK 2584 ---
type="number"
--- END CODE BLOCK ---
). Fixed
#20222
Updates were made to correctly escape dollar signs in the
--- CODE BLOCK 2588 ---
transform-style: preserve-3d
--- END CODE BLOCK ---
environment variable. Issues were seen
utilizing this template when the env was provided from a package manager file.
Fixed
#19914
Fix the
--- CODE BLOCK 2589 ---
overflow: hidden
--- END CODE BLOCK ---
TypeScript type to reference the static constructor
--- CODE BLOCK 2590 ---
CI_JOB_NAME
--- END CODE BLOCK ---
, instead of incorrectly referencing the
--- CODE BLOCK 2591 ---
removeListener
--- END CODE BLOCK ---
instance which
caused Type errors. Fixes
#20542
Dependency Updates:
Upgraded
--- CODE BLOCK 2592 ---
removeAllListeners
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2596 ---
cypress.run()
--- END CODE BLOCK ---
--- CODE BLOCK 2607 ---
chrome-remote-interface
--- END CODE BLOCK ---
to address the
CVE-2022-21718
NVD security
vulnerability. Addressed in
#20750
Upgraded
--- CODE BLOCK 2619 ---
cypress run --headless --browser chrome
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2622 ---
cypress install
--- END CODE BLOCK ---
--- CODE BLOCK 2627 ---
.type({ force: true })
--- END CODE BLOCK ---
. Addressed in
#20756
Upgraded
--- CODE BLOCK 2629 ---
rotateY(90deg)
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2630 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 2632 ---
"undefined"
--- END CODE BLOCK ---
to address the
CVE-2021-23566
NVD security
vulnerability. Addressed in
#20726
Upgraded
--- CODE BLOCK 2634 ---
config.browser
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2636 ---
ELECTRON_EXTRA_LAUNCH_ARGS
--- END CODE BLOCK ---
--- CODE BLOCK 2640 ---
ansi-escapes
--- END CODE BLOCK ---
to address the
CVE-2022-24771
NVD security
vulnerability. Addressed in
#20727
9.5.2
Released 3/14/2022
Bugfixes:
Fixed an issue with
--- CODE BLOCK 2643 ---
electron-context-menu
--- END CODE BLOCK ---
where click events could be fired on the
incorrect target element because the target focus changed within a key-down
event handler callback. Fixed in
#20525
Fixed a regression in
9.5.0
where ANSI
colors were not removed from the FireFox warning message about the
--- CODE BLOCK 2647 ---
config.browsers
--- END CODE BLOCK ---
configuration option having no effect on the Firefox
browser. Fixes
#20496
Updates were made to the pre-release build setup such that Cypress will use a
unique cache folder for each
pre-release installation
on a machine. This removes the need to run
--- CODE BLOCK 2648 ---
propertyName
--- END CODE BLOCK ---
before
installing a new pre-release version of Cypress or before installing a new
released version of Cypress after a pre-release version had been installed.
Addressed in
#20296
Misc:
Updates were made to explicitly disable the
--- CODE BLOCK 2649 ---
functionName
--- END CODE BLOCK ---
header for
proxied responses to ensure
--- CODE BLOCK 2652 ---
followRedirect: false
--- END CODE BLOCK ---
can continue to be set with
Chrome v106+. This was necessary because Chrome is planning to make
--- CODE BLOCK 2657 ---
cypress run
--- END CODE BLOCK ---
immutable
in v106+ to relax the same-origin policy by interpreting the
--- CODE BLOCK 2658 ---
have.all.keys
--- END CODE BLOCK ---
--- CODE BLOCK 2659 ---
cleverapp.io
--- END CODE BLOCK ---
, whereas it is currently interpreted as
--- CODE BLOCK 2661 ---
position: fixed
--- END CODE BLOCK ---
. Addresses
#20147
Dependency Updates:
Upgraded
--- CODE BLOCK 2663 ---
config.browsers
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2664 ---
parse-domain
--- END CODE BLOCK ---
--- CODE BLOCK 2667 ---
beforeunload
--- END CODE BLOCK ---
to address these NVD
security vulnerabilities,
CVE-2022-0639
CVE-2022-0686
CVE-2022-0691
. Addressed in
#20386
#20439
9.5.1
Released 2/28/2022
Bugfixes:
Added a
--- CODE BLOCK 2670 ---
Failed to parse or set cookie named "xxx"
--- END CODE BLOCK ---
event to the Plugins process to ensure all plugins have
successfully started before the configuration is loaded and the tests start.
Fixed in
#19792
This fixes an issue where the plugin is never executed and leaves Cypress
stuck in the initialization phase, where the user can only view the loading
spinner.
This enables support for node's experimental
--- CODE BLOCK 2671 ---
TypeError: Cannot read property 'length' of null
--- END CODE BLOCK ---
flag for plugins.
Made a change to the DNS lookup to improve test performances and reliability
on MacOS machines that leverage the VMWare CBCloud SaaS solution. Before this
change, random test failures were observed, as well as hanging tests and
initially pending HTTP and HTTPS responses. Fixed in
#20062
Fixed a regression in
9.5.0
where ANSI
colors were not removed from the
--- CODE BLOCK 2673 ---
backface-visibility: hidden;
--- END CODE BLOCK ---
error code frame. Fixes
#20208
Fixed a regression in
9.5.0
where the
test config override errors were formatted incorrectly. Fixes
#20208
Fixed an issue where Cypress would throw an error when reporting or wrapping
errors with booleans or numbers. Fixes
#19561
Dependency Updates:
Upgraded
--- CODE BLOCK 2674 ---
cannot read property 'replace' of undefined
--- END CODE BLOCK ---
dependency from
--- CODE BLOCK 2676 ---
Promise.defer
--- END CODE BLOCK ---
--- CODE BLOCK 2679 ---
cypress verify
--- END CODE BLOCK ---
to avoid authorization
bypass through user-controlled key to address this
NVD security vulnerability
Addressed in
#20270
9.5.0
Released 2/15/2022
Features:
Enhancements were made to the error experience in both run mode and open mode
to improve readability and provide meaningful stack traces. Addressed in
#20124
Updated the
--- CODE BLOCK 2680 ---
--no-sandbox
--- END CODE BLOCK ---
log message to hide the origin when it matched the
browser origin to make debugging easier. This reduces the length of the log
message that could be partially hidden if a long url is requested. Addressed
#20009
Updates were made to log the
--- CODE BLOCK 2683 ---
position:fixed
--- END CODE BLOCK ---
--- CODE BLOCK 2691 ---
datetime-local
--- END CODE BLOCK ---
elements as HTML
elements. Previously these would be logged as enumerated objects, which were
difficult to evaluate. Addressed in
#20049
Updated the terminal output generated in Cypress run mode to de-emphasis the
--- CODE BLOCK 2692 ---
{multiple: true}
--- END CODE BLOCK ---
path in the run header. Addressed in
#20120
Bugfixes:
Fixed an issue where files attached during
--- CODE BLOCK 2693 ---
express-handlebars
--- END CODE BLOCK ---
could have the
wrong
--- CODE BLOCK 2695 ---
graceful-fs
--- END CODE BLOCK ---
prototype. Fixes
#20003
Updated
--- CODE BLOCK 2698 ---
--config-file
--- END CODE BLOCK ---
to only dispatch the
--- CODE BLOCK 2700 ---
--config-file
--- END CODE BLOCK ---
--- CODE BLOCK 2701 ---
nodeVersion
--- END CODE BLOCK ---
events when the
selected option is not the currently selected option. This change aligns
--- CODE BLOCK 2703 ---
integrationFolder
--- END CODE BLOCK ---
with the browser. Fixes
#19494
Updated
--- CODE BLOCK 2704 ---
supportFile
--- END CODE BLOCK ---
to align with the W3C standards where a click event
should be dispatched when the Space key is pressed and the current focus is on
a state-changing element with type
--- CODE BLOCK 2705 ---
pluginsFile
--- END CODE BLOCK ---
--- CODE BLOCK 2716 ---
samsung-s10
--- END CODE BLOCK ---
--- CODE BLOCK 2717 ---
samsung-note9
--- END CODE BLOCK ---
--- CODE BLOCK 2719 ---
CYPRESS_CACHE_FOLDER
--- END CODE BLOCK ---
Fixes
#20067
9.4.1
Released 1/31/2022
Bugfixes:
Fixed a regression in
9.4.0
where the
line endings in the public npm package prevented some users from running
Cypress. Fixes
#19986
9.4.0
Released 1/31/2022
Features
Enhancements were made to
--- CODE BLOCK 2723 ---
pointerdown
--- END CODE BLOCK ---
after receiving feedback after its
initial release in
9.3.0
The default behavior was updated to automatically infer the mime type of
files based on their extension to correctly encode file uploads. Addressed
#19751
Added the
--- CODE BLOCK 2725 ---
pointermove
--- END CODE BLOCK ---
property so you can explicitly set the mime type on
files using the
--- CODE BLOCK 2728 ---
datetime-local
--- END CODE BLOCK ---
property. Addressed in
#19751
Updated file contents types to allow either a
--- CODE BLOCK 2737 ---
ERR_SSL_VERSION_OR_CIPHER_MISMATCH
--- END CODE BLOCK ---
instance or a
--- CODE BLOCK 2739 ---
content-type
--- END CODE BLOCK ---
instance, where previously file contents were
expected to only be an instance of
--- CODE BLOCK 2740 ---
application/vnd.api+json
--- END CODE BLOCK ---
. Addressed in
#19751
Updated
--- CODE BLOCK 2742 ---
ERR_EMPTY_RESPONSE
--- END CODE BLOCK ---
to retain the fileName of files read from disk to
work with aliases. Addressed in
#19803
Bugfixes:
Fixed a regression in
9.3.0
to correctly
parse the
--- CODE BLOCK 2746 ---
"port" option should be a number or string
--- END CODE BLOCK ---
CLI parameter for glob patterns containing a range. Fixes
#19783
Fixed regression in
9.2.1
where the
--- CODE BLOCK 2748 ---
commandTimeout
--- END CODE BLOCK ---
flag was not being passed to the plugins' child
process when the user's system Node version was Node 17+ built with OpenSSL
v3+ which resulted in Cypress crashing when trying to run tests. Fixes
#19712
Update
--- CODE BLOCK 2752 ---
Content-Encoding: gzip
--- END CODE BLOCK ---
to align with the W3C standards where a click event
should be dispatched when the Enter key is pressed and the current focus is on
a state-changing element with type
--- CODE BLOCK 2753 ---
node_modules/cypress
--- END CODE BLOCK ---
--- CODE BLOCK 2754 ---
Could not start Xvfb
--- END CODE BLOCK ---
--- CODE BLOCK 2755 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 2756 ---
cy.visit('file://...)
--- END CODE BLOCK ---
Fixes
#19541
9.3.1
Released 1/19/2022
Bugfixes:
Fixed an issue where the bin file was released with windows line breaks. Fixes
#19747
9.3.0
Released 1/18/2022
Features:
Added a new Cypress command, called
--- CODE BLOCK 2757 ---
CYPRESS_ENV
--- END CODE BLOCK ---
, to select a file or files in an
HTML5 input element or simulate dragging a file or files into the browser. The
API is similar to
--- CODE BLOCK 2761 ---
cypress run
--- END CODE BLOCK ---
and we have provided a
migration guide
for previous users of that plugin. For more details, see
our blog post
Fixes
#19524
#170
Exposed the
--- CODE BLOCK 2765 ---
<-loopback>
--- END CODE BLOCK ---
polyfill, as
--- CODE BLOCK 2768 ---
--disable-backgrounding-occluded-window
--- END CODE BLOCK ---
to enable working with binary data. Addressed in
#19524
Added the
--- CODE BLOCK 2769 ---
--disable-breakpad
--- END CODE BLOCK ---
environment variable which can be
set to a string template for building the download URL for the Cypress binary.
This environment variable is useful for users who are downloading the Cypress
binary from a proxy that is not one-to-one with the Cypress's default download
url. More information can be found in the
Install Binary
documentation. Fixes
#15697
Bugfixes:
Fixed an issue where the
--- CODE BLOCK 2770 ---
--disable-ipc-flooding-protection
--- END CODE BLOCK ---
CLI parameter was not working properly when
passing multiple glob patterns that are separated by commas. Fixes
#16102
Fixed an issue with how the
--- CODE BLOCK 2771 ---
--password-store=basic
--- END CODE BLOCK ---
environment variable was
read so it can set in a project's
--- CODE BLOCK 2772 ---
--use-mock-keychain
--- END CODE BLOCK ---
or its
--- CODE BLOCK 2781 ---
--config-file
--- END CODE BLOCK ---
. Fixes
#19559
Dependency Updates:
Upgraded
--- CODE BLOCK 2782 ---
nodeVersion
--- END CODE BLOCK ---
from
--- CODE BLOCK 2783 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 2784 ---
--config-file
--- END CODE BLOCK ---
. This upgrade resolves issues
observed with using graceful-fs v4.2.0 with resolve v1.21+. Addressed in
#19676
and resolves
#19610
NOTE:
This upgrade to
--- CODE BLOCK 2788 ---
cypress-fiddle
--- END CODE BLOCK ---
breaks Cypress's compatibility with
Yarn 2. We have observed errors with Yarn 2.4.2 with
--- CODE BLOCK 2792 ---
<-loopback>
--- END CODE BLOCK ---
4.2.9.
Before this change, Cypress had minimal Yarn 2 support (see
#6377
). Between Yarn 3
fixing multiple bugs and the migration path from Yarn 2 to Yarn 3 being
minimal, we felt the best step forward was to support and recommend Yarn 3
over Yarn 2.
Upgraded
--- CODE BLOCK 2794 ---
cypress run
--- END CODE BLOCK ---
from
--- CODE BLOCK 2795 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 2807 ---
sanitize-filename
--- END CODE BLOCK ---
. Addressed in
#19351
9.2.1
Released 1/10/2022
Bugfixes:
Fixed a regression in
9.2.0
to keep
Cypress open after each spec finishes when the
--- CODE BLOCK 2810 ---
@cypress/get-windows-proxy
--- END CODE BLOCK ---
flags are
passed to
--- CODE BLOCK 2823 ---
modifyObstructiveCode
--- END CODE BLOCK ---
. Fixes
#19485
Improve heuristic for verifying when the
--- CODE BLOCK 2825 ---
mocha-teamcity-reporter
--- END CODE BLOCK ---
option
should be passed to the plugins' child process when the system Node version is
v17+. This prevents Cypress from crashing when a user has Node 17 installed
which was built with OpenSSL v1. Fixes
#19320
Correctly cast the
--- CODE BLOCK 2829 ---
npm install
--- END CODE BLOCK ---
environment variable as a number
so Cypress will no longer throw
--- CODE BLOCK 2831 ---
cy.contains(content, options)
--- END CODE BLOCK ---
. Fixes
#19476
Dependency Updates:
Update pinned resolution of
--- CODE BLOCK 2833 ---
{ parseSpecialCharSequences: false }
--- END CODE BLOCK ---
from
--- CODE BLOCK 2835 ---
@ffmpeg-installer/ffmpeg
--- END CODE BLOCK ---
--- CODE BLOCK 2841 ---
data-uri-to-buffer
--- END CODE BLOCK ---
to avoid
problems with the bug introduced in the
colors.js v1.4.44-liberty-2 release
Addresses
#19624
9.2.0
Released 12/20/2021
Features:
Cypress will throw an error when a user attempts to update a configuration
value at run-time using either the Test Configuration or using
--- CODE BLOCK 2847 ---
graceful-fs
--- END CODE BLOCK ---
that is a
readonly option
Addresses
#6407
#19001
--- CODE BLOCK 2853 ---
mocha-junit-reporter
--- END CODE BLOCK ---
option has been added to the
--- CODE BLOCK 2862 ---
contain.text
--- END CODE BLOCK ---
command, with a
default value of
--- CODE BLOCK 2863 ---
contain.html
--- END CODE BLOCK ---
. Addresses
#3350
The default
--- CODE BLOCK 2864 ---
contain.value
--- END CODE BLOCK ---
for the internal socket server has been
increased to
Node's maximum Buffer size
(size varies by OS) to allow large file writes with
--- CODE BLOCK 2865 ---
.type('{enter}')
--- END CODE BLOCK ---
Addresses
#19140
--- CODE BLOCK 2866 ---
CYPRESS_INSTALL_BINARY
--- END CODE BLOCK ---
environment variable to override the timeout
duration of the
--- CODE BLOCK 2867 ---
pointer-events: none
--- END CODE BLOCK ---
command. Addresses
#18290
Bugfixes:
Prevent unnecessary snapshotting when running default assertions that would
unnecessarily increase CPU use in
--- CODE BLOCK 2870 ---
string-to-stream
--- END CODE BLOCK ---
mode which lead to out of
memory crashes on certain browsers. Fixes
#18549
Removed automatic retries for failed HTTP requests through the proxy. This
fixes an issue where failed requests could be re-sent too many times in some
conditions. This change could increase the number of failed requests that your
app sees. Fixes
#19043
Reduced the occurrence of an issue where logs for
--- CODE BLOCK 2871 ---
@cypress/commit-info
--- END CODE BLOCK ---
--- CODE BLOCK 2874 ---
@cypress/react-tooltip
--- END CODE BLOCK ---
requests
could be associated with the wrong request. Fixes
#19043
Tests that are skipped within
--- CODE BLOCK 2877 ---
errorhandler
--- END CODE BLOCK ---
blocks will no longer throw errors
causing the test to fail. Tests that are skipped outside of
--- CODE BLOCK 2883 ---
request-progress
--- END CODE BLOCK ---
blocks will
no longer trigger the fail event. This will prevent screenshots from happening
from errors thrown by the fail event. Fixes
#14867
#17660
Fixed a regression in
9.0.0
where a
fixture provided in a static response to
--- CODE BLOCK 2887 ---
cypress open
--- END CODE BLOCK ---
did not support
passing
--- CODE BLOCK 2888 ---
numTestsKeptInMemory
--- END CODE BLOCK ---
to encoding to read the fixture as a Buffer. This identified an
undocumented 9.0.0 Breaking Change where the default read behavior of a
fixture changed from a Buffer to being read with
--- CODE BLOCK 2889 ---
numTestsKeptInMemory
--- END CODE BLOCK ---
encoding. Fixes
#19344
Fixed a regression in
9.0.0
where
--- CODE BLOCK 2890 ---
cypress run
--- END CODE BLOCK ---
attempted to ignore
--- CODE BLOCK 2896 ---
overflow: hidden
--- END CODE BLOCK ---
--- CODE BLOCK 2897 ---
position: absolute
--- END CODE BLOCK ---
elements found
within
--- CODE BLOCK 2898 ---
overflow: hidden
--- END CODE BLOCK ---
. by deleting them from the dom. This behavior was corrected to
ignore the elements without deleting them. Fixes
#19377
Cypress will no longer crash when proxying an ill formed request. For example,
if the application under test has a resource of
--- CODE BLOCK 2906 ---
visibility: collapse
--- END CODE BLOCK ---
(notice the extraneous space), Cypress will now log a debug message and the
asset will fail to load. Fixes
#9220
Correct
--- CODE BLOCK 2907 ---
.type('{enter}')
--- END CODE BLOCK ---
--- CODE BLOCK 2909 ---
content-type
--- END CODE BLOCK ---
TypeScript
types. Fixes
#18879
#19095
#18940
Custom command implementations typings take into account
--- CODE BLOCK 2913 ---
content-type
--- END CODE BLOCK ---
variants.
Custom command implementations now allows to NOT return a value.
Custom command overwrites typings take into account
--- CODE BLOCK 2920 ---
ignoreTestFiles
--- END CODE BLOCK ---
function.
Add types for
--- CODE BLOCK 2922 ---
cy.window().screenshot()
--- END CODE BLOCK ---
. Fixes
#19363
Dependencies:
Upgraded
--- CODE BLOCK 2923 ---
cy.window().scrollTo()
--- END CODE BLOCK ---
from
--- CODE BLOCK 2924 ---
cy.window().trigger()
--- END CODE BLOCK ---
--- CODE BLOCK 2925 ---
cypress open
--- END CODE BLOCK ---
to mitigate
ssri vulnerability
. Addressed in
#19351
9.1.1
Released 12/03/2021
Bugfixes:
Fixed a regression in
9.1.0
where our
built binary didn't contain patches to some dependencies. Addressed in
#19239
. This fixed some
issues including:
Requests containing
--- CODE BLOCK 2927 ---
RangeError: Maximum call stack size exceeded
--- END CODE BLOCK ---
will no longer be improperly encoded. Fixes
#19083
#19084
#19115
#19096
#19178
A TypeError displaying
--- CODE BLOCK 2928 ---
window.performance.getEntriesByType
--- END CODE BLOCK ---
will no
longer throw in some situations. Fixes
#19091
Empty extra hooks will no longer be sent as data when recording to the
Dashboard. Fixes
#19087
The Runner hanging when baseUrl is set to null to load a local file. Fixes
#19105
When using the default configuration of
--- CODE BLOCK 2930 ---
ignoreTestFiles
--- END CODE BLOCK ---
with an
installed system node >=17, Cypress will now work properly rather than throw
an error incorrectly pointing to the user's plugin file. Fixes
#18914
Shadow DOM elements no longer error as hidden during actionability when the
element is covered by its parent shadow root. Fixes
#18008
When using
--- CODE BLOCK 2932 ---
cypress run
--- END CODE BLOCK ---
events now correctly propagate out of the shadow DOM.
Fixes
#17531
--- CODE BLOCK 2933 ---
https://api.cypress.io
--- END CODE BLOCK ---
context is now properly preserved when overwriting
--- CODE BLOCK 2934 ---
CYPRESS_CRASH_REPORTS=0
--- END CODE BLOCK ---
Fixes
#19158
Dependencies:
Upgraded
--- CODE BLOCK 2935 ---
Cypress.env()
--- END CODE BLOCK ---
from
--- CODE BLOCK 2937 ---
electron-positioner
--- END CODE BLOCK ---
--- CODE BLOCK 2944 ---
dependency-tree
--- END CODE BLOCK ---
. Addressed in
#19099
9.1.0
Released 11/22/2021
Features:
--- CODE BLOCK 2951 ---
mocha-junit-reporter
--- END CODE BLOCK ---
environment variable will be set to true in child processes where
Cypress runs user code in Node.js. You can now detect that you're running in
Cypress by looking for
--- CODE BLOCK 2963 ---
cypress run
--- END CODE BLOCK ---
. Addresses
#18805
Bugfixes:
Specs with % in the filename will no longer fail to load and now behave as any
other spec. Fixes
#18871
When using the Selector Playground, the HTML attribute's value will be wrapped
in double-quotes. Fixes
#1884
The call count is now shown in the Command Log when using
--- CODE BLOCK 2964 ---
multipart/form-data
--- END CODE BLOCK ---
. Fixes
#18907
The warning message for retrying connection to a browser has been improved to
indicate when it is still waiting. Fixes
#18644
Cypress commands that rely on
--- CODE BLOCK 2966 ---
not.have.focus
--- END CODE BLOCK ---
context now have access to
--- CODE BLOCK 2968 ---
not.be.focused
--- END CODE BLOCK ---
when
overridden. Fixes
#18899
Test configuration is now correctly applied when using
--- CODE BLOCK 2971 ---
{log: false}
--- END CODE BLOCK ---
. Fixes
#18959
9.0.0
Released 11/10/2021
Breaking Changes:
--- CODE BLOCK 2975 ---
HTTPS_PROXY
--- END CODE BLOCK ---
configuration option now defaults to
--- CODE BLOCK 2978 ---
not.have.focus
--- END CODE BLOCK ---
. The behavior
of the
--- CODE BLOCK 2980 ---
not.be.focused
--- END CODE BLOCK ---
option has changed to always use the Node.js binary/version
that launched Cypress. If Cypress was not launched via the terminal, Cypress
will use the
--- CODE BLOCK 2981 ---
retryOnStatusCodeFailure
--- END CODE BLOCK ---
Node.js version. This could change the behavior of code
within your
--- CODE BLOCK 2982 ---
retryOnNetworkFailure
--- END CODE BLOCK ---
since it may be run in your
--- CODE BLOCK 2987 ---
xhr.abort()
--- END CODE BLOCK ---
Node.js
version. Addresses
#18684
Windows 32-bit is no longer supported in Cypress. Addresses
#17962
An error will now be thrown if an invalid value is passed to
--- CODE BLOCK 2988 ---
cypress run
--- END CODE BLOCK ---
Previously invalid values were ignored and could cause unexpected behavior.
Addresses
#18589
--- CODE BLOCK 2989 ---
type="module"
--- END CODE BLOCK ---
no longer yields the
--- CODE BLOCK 2992 ---
NODE_OPTIONS
--- END CODE BLOCK ---
element when it matches the
content of
--- CODE BLOCK 2996 ---
cypress verify
--- END CODE BLOCK ---
--- CODE BLOCK 2997 ---
cypress verify
--- END CODE BLOCK ---
tags. Addresses
#14861
Attempting to add an existing built-in Cypress command using
--- CODE BLOCK 2998 ---
cypress run
--- END CODE BLOCK ---
will now throw an error, indicating that
--- CODE BLOCK 3000 ---
hasOwnProperty
--- END CODE BLOCK ---
should be used instead to overwrite the
behavior of existing commands. Addresses
#18572
Custom command implementations are now typed based on the declared custom
chainables. Addresses
#17496
The bundled Node.js version was upgraded from
--- CODE BLOCK 3004 ---
Content-Type
--- END CODE BLOCK ---
--- CODE BLOCK 3005 ---
application/x-www-form-urlencoded
--- END CODE BLOCK ---
. This
could change the behavior of code within the
--- CODE BLOCK 3009 ---
Connection: keep-alive
--- END CODE BLOCK ---
when using the
bundled Node.js version of Cypress. Addressed in
#18317
The default read behavior of a fixture provided as a static response in
--- CODE BLOCK 3016 ---
Cypress.LocalStorage.clear
--- END CODE BLOCK ---
changed from being read as a Buffer to using
--- CODE BLOCK 3021 ---
retryOnStatusCodeFailure
--- END CODE BLOCK ---
encoding.
This aligns the default read behavior of
--- CODE BLOCK 3022 ---
retryOnNetworkFailure
--- END CODE BLOCK ---
--- CODE BLOCK 3023 ---
commit-info
--- END CODE BLOCK ---
--- CODE BLOCK 3026 ---
data-uri-to-buffer
--- END CODE BLOCK ---
. Addresses
#18534
Deprecations:
--- CODE BLOCK 3032 ---
electron-packager
--- END CODE BLOCK ---
configuration option has been deprecated and will be removed
in a future release.
Features:
When
--- CODE BLOCK 3035 ---
express-handlebars
--- END CODE BLOCK ---
is passed as the encoding to
--- CODE BLOCK 3038 ---
find-process
--- END CODE BLOCK ---
--- CODE BLOCK 3044 ---
http-status-codes
--- END CODE BLOCK ---
the file is treated as binary and read as a Buffer. Similarly,
--- CODE BLOCK 3050 ---
method-override
--- END CODE BLOCK ---
passed
as the encoding to
--- CODE BLOCK 3054 ---
parse-domain
--- END CODE BLOCK ---
allows direct writing of buffers. If the
encoding is unspecified, the default remains
--- CODE BLOCK 3055 ---
parse-domain
--- END CODE BLOCK ---
, matching the current
behavior. Addresses
#18534
Bugfixes:
Sticky elements within a fixed container will now be able to be properly
scrolled to during action commands. Fixes
#4233
--- CODE BLOCK 3065 ---
supports-color
--- END CODE BLOCK ---
will now correctly reflect the correct value from the
application under test after
--- CODE BLOCK 3081 ---
widest-line
--- END CODE BLOCK ---
. Fixes
#4295
Dependencies:
Upgraded Chrome browser version used during
--- CODE BLOCK 3089 ---
Accept-Language
--- END CODE BLOCK ---
and when selecting
Electron browser in
--- CODE BLOCK 3090 ---
Authorization
--- END CODE BLOCK ---
from
--- CODE BLOCK 3108 ---
UNSUBSCRIBE
--- END CODE BLOCK ---
--- CODE BLOCK 3116 ---
caljajdfkjjjdehjdoimjkkakekklcck
--- END CODE BLOCK ---
. Addressed in
#15292
Upgraded bundled Node.js version from
--- CODE BLOCK 3117 ---
item.first is not a function
--- END CODE BLOCK ---
--- CODE BLOCK 3121 ---
dependencies
--- END CODE BLOCK ---
. Addressed in
#15292
Upgraded
--- CODE BLOCK 3122 ---
devDependencies
--- END CODE BLOCK ---
from
--- CODE BLOCK 3123 ---
Cypress.config('baseUrl')
--- END CODE BLOCK ---
--- CODE BLOCK 3127 ---
setInterval
--- END CODE BLOCK ---
. Addressed in
#15292
8.7.0
Released 10/25/2021
Features:
There are changes to how "slow" tests are determined and displayed in Cypress.
Addresses
#18496
Added a
--- CODE BLOCK 3140 ---
cypress run
--- END CODE BLOCK ---
configuration option to customize when tests are considered "slow" during
--- CODE BLOCK 3142 ---
window.alert
--- END CODE BLOCK ---
. A test that runs slower than the given threshold will display
in orange text in the default 'spec' reporter. This configuration can be set
in your Cypress config file or via specific
test configuration
The default slow test threshold was changed from 75ms (Mocha's default) to
10000ms for e2e tests and 250ms for component tests. To restore the old
behavior, you can add
--- CODE BLOCK 3150 ---
{downarrow}
--- END CODE BLOCK ---
to your Cypress config file.
All tests will show the time the test ran in milliseconds during
--- CODE BLOCK 3152 ---
@cypress/commit-info
--- END CODE BLOCK ---
with the default 'spec' reporter.
Users can pass an
--- CODE BLOCK 3155 ---
@cypress/xvfb
--- END CODE BLOCK ---
option to
--- CODE BLOCK 3158 ---
@ffmpeg-installer/ffmpeg
--- END CODE BLOCK ---
change default behavior to overwrite existing screenshots without having to
--- CODE BLOCK 3170 ---
coffee-script
--- END CODE BLOCK ---
for each
--- CODE BLOCK 3176 ---
common-tags
--- END CODE BLOCK ---
command. Addresses
#7955
Bugfixes:
Fixed a regression introduced in
8.6.0
where videos recorded in
Electron to the Dashboard were not playable in the Firefox or Safari browser
and were not compatible with QuickTime player in MacOS.
Fixed a regression introduced in
8.6.0
so that the warning about the
--- CODE BLOCK 3179 ---
compression
--- END CODE BLOCK ---
directory not being writeable will now display correctly. Fixes
#18485
Improved the error message when running Cypress without non-root permissions.
Fixes
#18445
An error now throws when invalid options are passed to the
--- CODE BLOCK 3185 ---
cookie-parser
--- END CODE BLOCK ---
configuration option of
--- CODE BLOCK 3188 ---
dependency-tree
--- END CODE BLOCK ---
. Valid values
--- CODE BLOCK 3191 ---
electron-context-menu
--- END CODE BLOCK ---
--- CODE BLOCK 3194 ---
electron-packager
--- END CODE BLOCK ---
--- CODE BLOCK 3197 ---
electron-positioner
--- END CODE BLOCK ---
--- CODE BLOCK 3200 ---
errorhandler
--- END CODE BLOCK ---
--- CODE BLOCK 3206 ---
extract-zip
--- END CODE BLOCK ---
, or
--- CODE BLOCK 3221 ---
mocha-junit-reporter
--- END CODE BLOCK ---
. Fixes
#7745
Dependency Updates:
Pinned resolution of
--- CODE BLOCK 3233 ---
parse-domain
--- END CODE BLOCK ---
--- CODE BLOCK 3239 ---
request-progress
--- END CODE BLOCK ---
to avoid dependency resolution
to the compromised package versions. Please read the
security advisory
take actions advised as soon as possible. Addressed in
#18611
8.6.0
Released 10/11/2021
Features:
--- CODE BLOCK 3242 ---
request-promise
--- END CODE BLOCK ---
now accepts
--- CODE BLOCK 3245 ---
return-deep-diff
--- END CODE BLOCK ---
as an option to overwrite
existing screenshots with the same file name. Addresses
#7955
--- CODE BLOCK 3251 ---
ssl-root-cas
--- END CODE BLOCK ---
can now be used to clear any selected options in a multi-value
select. Addresses
#4318
Using
--- CODE BLOCK 3254 ---
supports-color
--- END CODE BLOCK ---
when using
--- CODE BLOCK 3263 ---
tough-cookie
--- END CODE BLOCK ---
will now pause
a test. Addresses
#4044
Bugfixes:
Fixed a regression introduced in
8.2.0
where certain XMLHttpRequests
would not display their response bodies in the DevTools Console when clicked.
Fixes
#17656
Fixed a regression in
8.3.0
where capturing videos in Chrome
versions earlier than 89 would result in choppy videos and skipped frames.
Fixes
#18021
Cypress displays the correct error when certain custom error types are thrown
within a test. Fixes
#18259
The Cypress App will no longer crash when passed a
--- CODE BLOCK 3269 ---
underscore.string
--- END CODE BLOCK ---
from the CLI
and instead error when passed an invalid object argument. Fixes
#3957
Logging a plain object no longer results in the error "Cannot convert object
to primitive value". Fixes
#18143
Misc:
Updated the
--- CODE BLOCK 3277 ---
InvalidStateError
--- END CODE BLOCK ---
error message when conflicting
--- CODE BLOCK 3278 ---
responseType
--- END CODE BLOCK ---
--- CODE BLOCK 3287 ---
ESOCKETTIMEDOUT
--- END CODE BLOCK ---
options are passed to be clearer. Fixes
#18271
Dependency Updates:
Upgraded the Chromium browser version used during
--- CODE BLOCK 3289 ---
layout.html
--- END CODE BLOCK ---
and when
selecting Electron browser in
--- CODE BLOCK 3291 ---
--no-user-gesture-required
--- END CODE BLOCK ---
from
--- CODE BLOCK 3292 ---
--use-fake-ui-for-media-stream
--- END CODE BLOCK ---
--- CODE BLOCK 3293 ---
--use-fake-device-for-media-stream
--- END CODE BLOCK ---
Upgraded
--- CODE BLOCK 3295 ---
cypress cache
--- END CODE BLOCK ---
from
--- CODE BLOCK 3296 ---
[object Object]
--- END CODE BLOCK ---
--- CODE BLOCK 3300 ---
cypress version
--- END CODE BLOCK ---
. Addressed in
#18318
#18384
8.5.0
Released 09/27/2021
Features:
You can now select an option by index within the
--- CODE BLOCK 3301 ---
cypress cache list
--- END CODE BLOCK ---
command. Addresses
#757
Cypress now captures the repository URL on Drone CI. Addresses
#18210
Bugfixes:
The download of Cypress now respects the
--- CODE BLOCK 3305 ---
display: inline
--- END CODE BLOCK ---
environment variable when
one is set. Fixes
#17702
When using a custom config file and setting it up to record to the Dashboard,
Cypress now writes the
--- CODE BLOCK 3306 ---
cy.click() failed because this element is being covered by another element
--- END CODE BLOCK ---
in the custom config file instead of
--- CODE BLOCK 3311 ---
devDependencies
--- END CODE BLOCK ---
. Fixes
#5747
Misc:
Windows 32-bit has been deprecated and support will be removed in a later
release. A deprecation warning will now display when using Cypress in a
Windows 32-bit OS. See
#17962
for more detail.
Addresses
#18094
Improved the error messages when an invalid argument type is passed to the
--- CODE BLOCK 3312 ---
onreadystatechange
--- END CODE BLOCK ---
command. Addressed in
#18234
8.4.1
Released 09/17/2021
Bugfixes:
Cypress will no longer crash when setting up a project to record to the
Dashboard or viewing the runs or record key for a previously set up project.
Fixes
#18129
The branch collected for Drone CI now correctly reflects the source PR branch
for showing in the Cypress Dashboard. Fixes
#17860
8.4.0
Released 09/13/2021
Features:
When the URL contains non-ASCII characters, you can use the new
--- CODE BLOCK 3313 ---
commit-info
--- END CODE BLOCK ---
option of
--- CODE BLOCK 3319 ---
requestAnimationFrame
--- END CODE BLOCK ---
to decode it. Addresses
#17399
Bugfixes:
Cypress now better handles situations where the extension was installed in a
read-only location. Fixes
#3852
A clearer error message is now thrown for
--- CODE BLOCK 3321 ---
windowsHide
--- END CODE BLOCK ---
--- CODE BLOCK 3322 ---
.check({ force: true })
--- END CODE BLOCK ---
when
there are no matching value attributes found.
Fixes
#7379
Hooks will no longer rerun on unrelated tests in some situations after a
domain navigation. Fixes
#17705
--- CODE BLOCK 3324 ---
requestTimeout
--- END CODE BLOCK ---
types have been added for the Cypress configuration. Fixes
#17799
8.3.1
Released 08/27/2021
Performance:
Projects will now open much faster on MacOS Big Sur with improved browser
detection performance. Fixes
#17773
Bugfixes:
Fixed a regression in
8.3.0
where the
correct exit code would not be issued during
--- CODE BLOCK 3325 ---
responseTimeout
--- END CODE BLOCK ---
while running in
the Electron browser. Fixes
#17752
#17885
Fixed a regression in
8.3.0
where
Cypress would cause a
--- CODE BLOCK 3326 ---
requestTimeout
--- END CODE BLOCK ---
error on Mac when closing the Cypress app
opened via
--- CODE BLOCK 3327 ---
responseTimeout
--- END CODE BLOCK ---
. Fixes
#17766
--- CODE BLOCK 3345 ---
Cypress.moment()
--- END CODE BLOCK ---
event now correctly fires in Firefox during keyboard events.
Fixes
#17583
Misc:
--- CODE BLOCK 3349 ---
cypress.run()
--- END CODE BLOCK ---
typings now allow for the
--- CODE BLOCK 3352 ---
screenshotsFolder
--- END CODE BLOCK ---
option. Fixes
#17695
--- CODE BLOCK 3353 ---
videosFolder
--- END CODE BLOCK ---
typings now allow for the
--- CODE BLOCK 3357 ---
window.frameElement
--- END CODE BLOCK ---
option. Fixes
#17781
Dependency Updates:
Upgraded
--- CODE BLOCK 3359 ---
readyStateChanges
--- END CODE BLOCK ---
from
--- CODE BLOCK 3362 ---
Buffer.from
--- END CODE BLOCK ---
--- CODE BLOCK 3363 ---
autoScrollingEnabled
--- END CODE BLOCK ---
. Addressed in
#17772
Upgraded
--- CODE BLOCK 3365 ---
beforeSpecRun is not a function
--- END CODE BLOCK ---
from
--- CODE BLOCK 3367 ---
cy.writeFile()
--- END CODE BLOCK ---
--- CODE BLOCK 3369 ---
CYPRESS_DOWNLOAD_MIRROR
--- END CODE BLOCK ---
. Addresses
#17622
8.3.0
Released 08/16/2021
Features:
The instructions for recording a run have been updated for some users.
Addressed in
#17317
Performance:
We addressed an issue that increased CPU usage during video recording in
Chrome 89+/Electron 12+. Fixes
#16152
Fixed a regression in
7.2.0
that would
cause
--- CODE BLOCK 3381 ---
cypress run
--- END CODE BLOCK ---
to take longer to fire its load event in some
circumstances. Fixes
#16671
Bugfixes:
Fixed an issue that could cause intermittent OpenSSL errors when the local CA
cert cache becomes corrupted. Fixes
#8705
Fixed a regression in
7.2.0
causing the
menu bar of Cypress to not be clickable in Windows. Fixes
#16323
--- CODE BLOCK 3382 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 3383 ---
cypress run
--- END CODE BLOCK ---
will no longer override JSON-related content
types. Fixes
#17084
--- CODE BLOCK 3384 ---
--ci-build-id
--- END CODE BLOCK ---
option of
--- CODE BLOCK 3389 ---
type='submit'
--- END CODE BLOCK ---
now works properly with
--- CODE BLOCK 3390 ---
cypress-browserify-preprocessor
--- END CODE BLOCK ---
Fixes
#17139
Fixed a regression in
8.0.0
where
Cypress would always warn that
--- CODE BLOCK 3392 ---
Parallelization
--- END CODE BLOCK ---
is set to "false" when it
wasn't. Fixes
#17614
Dependency Updates:
Upgraded Chrome browser version used during
--- CODE BLOCK 3393 ---
Dashboard Service
--- END CODE BLOCK ---
and when selecting
Electron browser in
--- CODE BLOCK 3394 ---
Command Line
--- END CODE BLOCK ---
from
--- CODE BLOCK 3395 ---
RootLayerScrolling
--- END CODE BLOCK ---
--- CODE BLOCK 3396 ---
RootLayerScrolling
--- END CODE BLOCK ---
. Addressed in
#17408
Upgraded bundled Node.js version from
--- CODE BLOCK 3397 ---
--disable-blink-features=RootLayerScrolling
--- END CODE BLOCK ---
--- CODE BLOCK 3398 ---
chromeWebSecurity: false
--- END CODE BLOCK ---
. Addressed in
#17408
Upgraded
--- CODE BLOCK 3399 ---
cypress.open()
--- END CODE BLOCK ---
from
--- CODE BLOCK 3400 ---
cypress.run()
--- END CODE BLOCK ---
--- CODE BLOCK 3401 ---
reporterOptions
--- END CODE BLOCK ---
. Addressed in
#17408
Upgraded
--- CODE BLOCK 3402 ---
mocha-multi-reporters
--- END CODE BLOCK ---
from
--- CODE BLOCK 3403 ---
blacklistHosts
--- END CODE BLOCK ---
--- CODE BLOCK 3412 ---
cy.type('{selectall}{backspace}')
--- END CODE BLOCK ---
. Addressed in
#17719
8.2.0
Released 08/04/2021
Features:
You can now cache and restore
cookies
--- CODE BLOCK 3415 ---
.clear().type(...)
--- END CODE BLOCK ---
--- CODE BLOCK 3416 ---
[contenteditable]
--- END CODE BLOCK ---
in order to reduce test setup times by using
--- CODE BLOCK 3417 ---
[contenteditable]
--- END CODE BLOCK ---
. The
--- CODE BLOCK 3419 ---
[contenteditable]
--- END CODE BLOCK ---
API is experimental and
can be enabled by setting the
--- CODE BLOCK 3423 ---
input[type=number]
--- END CODE BLOCK ---
flag to
--- CODE BLOCK 3424 ---
input[type=number]
--- END CODE BLOCK ---
in your Cypress config. See
our blog
and the
--- CODE BLOCK 3425 ---
input[type=number]
--- END CODE BLOCK ---
doc for more detail.
The logging experience around HTTP requests has been updated.
--- CODE BLOCK 3426 ---
selectionStart
--- END CODE BLOCK ---
requests are always displayed in the Command Log, regardless of if
--- CODE BLOCK 3427 ---
selectionEnd
--- END CODE BLOCK ---
is enabled.
Duplicate logs for XHRs, fetches, and
--- CODE BLOCK 3428 ---
{leftarrow}
--- END CODE BLOCK ---
have been
consolidated - Fixes
#14843
The user experience around the information displayed in the console when
clicking on
--- CODE BLOCK 3429 ---
{rightarrow}
--- END CODE BLOCK ---
request logs has been improved.
Request logs now indicate if a request has gone to the origin or if it has
been stubbed by displaying a filled or empty circle in the request log.
Request logs now display information about if the request and/or response
was modified by a
--- CODE BLOCK 3430 ---
datetime-local
--- END CODE BLOCK ---
The tooltip displayed when mousing over a request log now displays
information about the matched
--- CODE BLOCK 3431 ---
activeElement
--- END CODE BLOCK ---
--- CODE BLOCK 3433 ---
cy.get('body').click()
--- END CODE BLOCK ---
rules.
Fixed an issue where pending request logs were not ended between tests.
Fixes
#14655
There's now a
--- CODE BLOCK 3434 ---
activeElement
--- END CODE BLOCK ---
property to access name the currently
executing test via
--- CODE BLOCK 3436 ---
activeElement
--- END CODE BLOCK ---
--- CODE BLOCK 3441 ---
{downarrow}
--- END CODE BLOCK ---
. Addresses
#2972
Bugfixes:
A "removing cookie failed" error will no longer throw when cookies are cleared
in Firefox. Fixes
#6375
Cypress no longer throws the error "cannot read property split of undefined"
in certain circumstances when application errors are thrown. Fixes
#17378
Cypress now properly runs the final test when nested in a suite with a
--- CODE BLOCK 3442 ---
input[type=number]
--- END CODE BLOCK ---
hook. Fixes
#9026
Fixed a regression in
8.0.0
where an
error would longer throw when there is no
--- CODE BLOCK 3445 ---
{downarrow}
--- END CODE BLOCK ---
entry for the current
user, such as in some Docker and GitHub Action setups. Fixes
#17415
Cypress now throws if a function is incorrectly passed as the second argument
--- CODE BLOCK 3447 ---
[contenteditable]
--- END CODE BLOCK ---
. Fixes
#17436
8.1.0
Released 07/29/2021
Features:
When using
--- CODE BLOCK 3448 ---
cy.get('body')
--- END CODE BLOCK ---
, you can now generate assertions in
Cypress Studio
by right clicking on an
element. Addressed in
#16295
When searching specs in the Test Runner during end-to-end testing, characters
that are not letters will be ignored and don't have to be typed. Addressed in
#17346
Performance:
The Test Runner's performance has been improved when running a large number of
commands within a single test. Fixes
#6783
Bugfixes:
Add Yarn v2 pnp support to our default webpack processor. Fixes
#8008
#16111
When running Cypress in global mode, an error will no longer be thrown when
trying to add a new project to the Dashboard. Addressed in
#17514
The Test Runner will no longer crash in some instances when creating a new
spec file from the GUI.
#17430
8.0.0
Released 07/19/2021
Summary:
We've made some updates to ensure a consistent run experience across browsers.
Now all browsers run via
--- CODE BLOCK 3456 ---
videoCompression
--- END CODE BLOCK ---
run headlessly, with a device pixel ratio
of 1, and a screen size of 1280x720 by default.
Breaking Changes:
Please read our
Migration Guide
which explains the changes in more detail and how to change your code to migrate
to Cypress 8.0.**
When running
--- CODE BLOCK 3458 ---
cypress run
--- END CODE BLOCK ---
previous to 8.0, some browsers would launch headed
while others were launched headless by default. Cypress now runs all browsers
during
--- CODE BLOCK 3459 ---
cypress run
--- END CODE BLOCK ---
as headless by default. Addresses
#16832
The default screen size when running a headless browser has been reverted back
to 1280x720 pixels (pre 7.0 behavior). Addresses
#16853
When running the
--- CODE BLOCK 3460 ---
cypress run
--- END CODE BLOCK ---
Chrome browser via
--- CODE BLOCK 3461 ---
document.hasFocus()
--- END CODE BLOCK ---
, the device
pixel ratio will now be 1 by default, matching the behavior of all other
browsers. This behavior can be overridden through the
browser launch API
Addresses
#17375
Cypress now enforces version checks for browser launching and will error
during
--- CODE BLOCK 3463 ---
position: sticky
--- END CODE BLOCK ---
and not allow opening the browser in
--- CODE BLOCK 3464 ---
integrationFolder
--- END CODE BLOCK ---
when
attempting to open unsupported browser versions. Cypress supports Chrome >=
64, Firefox >= 86, and Edge >= 79. Addressed in
#17355
Arguments returned from a chained function will no longer incorrectly be of
type
--- CODE BLOCK 3467 ---
npm install cypress
--- END CODE BLOCK ---
and instead have an
--- CODE BLOCK 3468 ---
pluginsFile
--- END CODE BLOCK ---
type. Fixes
#16669
--- CODE BLOCK 3471 ---
fn.apply is not a function
--- END CODE BLOCK ---
--- CODE BLOCK 3472 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 3474 ---
before:browser:launch
--- END CODE BLOCK ---
types have been updated so that
--- CODE BLOCK 3482 ---
skipping install
--- END CODE BLOCK ---
match the JSON schema. Addressed in
#17251
Features:
You can now configure certificate authority (CA) and client certificates to
use within tests on a per-URL basis via a
--- CODE BLOCK 3483 ---
cypress/integration/foo/bar_spec.js
--- END CODE BLOCK ---
configuration
option. See
Client certificates
more detail.
Setting the environment variable
--- CODE BLOCK 3484 ---
cypress/screenshots/foo/bar_spec.js/*
--- END CODE BLOCK ---
now starts Cypress as
a normal Node.js process rather than an Electron process. Addresses
#16505
Bugfixes:
--- CODE BLOCK 3485 ---
foo/bar/baz
--- END CODE BLOCK ---
--- CODE BLOCK 3486 ---
app.spec.js
--- END CODE BLOCK ---
called within the
plugins file
will now be captured in the
--- CODE BLOCK 3487 ---
cypress/screenshots/app.spec.js/foo/bar/baz.png
--- END CODE BLOCK ---
sent to the Cypress Dashboard, making it
visible in Output logs in the Dashboard. Fixes
#7434
There are several fixes for
--- CODE BLOCK 3489 ---
test name (1).png
--- END CODE BLOCK ---
including:
--- CODE BLOCK 3490 ---
onAfterScreenshot
--- END CODE BLOCK ---
option now works correctly with
--- CODE BLOCK 3491 ---
onBeforeScreenshot
--- END CODE BLOCK ---
. Fixes
#16821
--- CODE BLOCK 3492 ---
testFailure
--- END CODE BLOCK ---
is now accepted as a valid
--- CODE BLOCK 3493 ---
cy.screenshot()
--- END CODE BLOCK ---
in the
--- CODE BLOCK 3494 ---
after:screenshot
--- END CODE BLOCK ---
Fixes
#17015
--- CODE BLOCK 3495 ---
pluginsFile
--- END CODE BLOCK ---
now works correctly with a
--- CODE BLOCK 3496 ---
Cypress.browser
--- END CODE BLOCK ---
of 204. Fixes
#15188
When using the experimental
Cypress Studio
, there should be a reduced
occurrence of "Studio failed to save commands" error messages. Fixes
#14767
--- CODE BLOCK 3497 ---
Cypress.spec
--- END CODE BLOCK ---
now retains the proper
--- CODE BLOCK 3498 ---
cy.screenshot()
--- END CODE BLOCK ---
context on
nested object methods. Fixes
#3871
We no longer trigger unnecessary snapshot re-renders when hovering over the
Command Log. Fixes
#17257
7.7.0
Released 07/07/2021
Features:
When using
--- CODE BLOCK 3499 ---
Cypress.browser
--- END CODE BLOCK ---
Cypress Studio
can now copy all commands
generated to your clipboard. Addressed in
#16912
Bugfixes:
Cypress now respects
--- CODE BLOCK 3500 ---
Cypress.spec
--- END CODE BLOCK ---
options passed to
--- CODE BLOCK 3501 ---
after:screenshot
--- END CODE BLOCK ---
calls
within the application under test. Fixes
#15294
Using
--- CODE BLOCK 3504 ---
cy.screenshot()
--- END CODE BLOCK ---
will now show the zero in the Command Log. Fixes
#1119
Cypress will no longer show a warning about allowed keys for the
--- CODE BLOCK 3505 ---
tty.getWindowSize is not a function
--- END CODE BLOCK ---
when running
--- CODE BLOCK 3508 ---
cy.screenshot()
--- END CODE BLOCK ---
. Fixes
#17095
The Cypress Studio introduction modal will now display with the correct
styling. Fixes
#17102
The types for
--- CODE BLOCK 3509 ---
cypress run
--- END CODE BLOCK ---
now correctly allow for the
--- CODE BLOCK 3511 ---
CYPRESS_BINARY_VERSION
--- END CODE BLOCK ---
option. Fixes
#17066
Misc:
We updated the messaging when Cypress fails to start to be clearer that it's
not always due to a dependency missing. Addresses
#17112
7.6.0
Released 06/23/2021
Features:
You can now override the default delay between typing characters for
--- CODE BLOCK 3512 ---
CYPRESS_INSTALL_BINARY
--- END CODE BLOCK ---
with
--- CODE BLOCK 3513 ---
CYPRESS_SKIP_BINARY_INSTALL
--- END CODE BLOCK ---
test configuration
Addresses
#566
The experience when opening a new project via
--- CODE BLOCK 3514 ---
CYPRESS_INSTALL_BINARY=0
--- END CODE BLOCK ---
has been
improved. Addressed in
#15826
The scaffolded example files have been updated to include examples tests of
the TodoMVC project.
You can now easily delete all of the scaffolded example files directly from
the Test Runner GUI.
There's now a button to create a new spec file when no spec files are found
in the project.
A new onboarding banner with be present with helpful links for new users and
new projects.
The incoming request object yielded to request handler functions passed to
--- CODE BLOCK 3515 ---
screenshotOnHeadlessFailure
--- END CODE BLOCK ---
--- CODE BLOCK 3516 ---
cypress.json
--- END CODE BLOCK ---
) now has a
--- CODE BLOCK 3517 ---
screenshotOnRunFailure
--- END CODE BLOCK ---
property, which is a
getter/setter for the query parameters on the request URL. Addresses
#16327
You can now pass an
--- CODE BLOCK 3519 ---
trashAssetsBeforeHeadlessRuns
--- END CODE BLOCK ---
as a request / response body with
--- CODE BLOCK 3520 ---
trashAssetsBeforeRuns
--- END CODE BLOCK ---
. Addresses
#16722
Bugfixes:
Cypress no longer hangs intermittently when using webpack 5. Fixes
#15447
It is no longer necessary to return the config from the plugins function when
using the
--- CODE BLOCK 3521 ---
videoRecording
--- END CODE BLOCK ---
event for component testing. Fixes
#16860
--- CODE BLOCK 3524 ---
cy.screenshot()
--- END CODE BLOCK ---
now correctly sets the response body as a string instead of
an ArrayBuffer when it contains multi-byte characters. Fixes
#16292
--- CODE BLOCK 3530 ---
cypress run
--- END CODE BLOCK ---
won't corrupt certain binary responses. Fixes
#16722
On Windows, the Cypress executable is now code signed by "Cypress.io, Inc.".
This fixes
--- CODE BLOCK 3531 ---
cy.screenshot()
--- END CODE BLOCK ---
errors when launching Cypress with code signing
required by policy on Windows. Fixes
#2543
We now warn on
--- CODE BLOCK 3532 ---
cy.screenshot()
--- END CODE BLOCK ---
errors when accessing the project directory instead of
erroring. Fixes
#16933
Cypress now better handles running when browsers with unconventional versions
are present on the machine. Fixes
#15485
Expanded the types for
--- CODE BLOCK 3533 ---
example_spec.js
--- END CODE BLOCK ---
to support the
value being an array of strings. Fixes
#16734
Dependency Updates:
Added
--- CODE BLOCK 3535 ---
cypress-example-kitchensink
--- END CODE BLOCK ---
dependency. Fixes
#16846
7.5.0
Released 06/07/2021
Features:
The Test Runner has a new 'Docs' menu with links and prompts specific to
helping you get started writing tests, set up in CI, and running tests in the
Dashboard. Addressed in
#16433
--- CODE BLOCK 3536 ---
plugins file
--- END CODE BLOCK ---
now accepts a generic in TypeScript for specifying the type of
the request body. Addresses
#9109
Bugfixes:
Cypress will not longer crash with a
--- CODE BLOCK 3541 ---
cypress run
--- END CODE BLOCK ---
infinite recursive call.
Fixes
#16476
--- CODE BLOCK 3542 ---
cypress run
--- END CODE BLOCK ---
option now correctly handles absolute paths. Fixes
#6136
--- CODE BLOCK 3543 ---
cypress run
--- END CODE BLOCK ---
will now retry if the remote location returns an empty
string, which is possible during otherwise harmless redirects. Fixes
#16463
Cypress now passes a flag to Chrome browsers to prevent update notifications
from displaying in some cases. Fixes
#16693
TypeScript will now properly error when attempting to use the chai
--- CODE BLOCK 3544 ---
media="print"
--- END CODE BLOCK ---
syntax. Fixes
#16548
Dependency Updates:
Replaced deprecated
--- CODE BLOCK 3549 ---
cypress.env.json
--- END CODE BLOCK ---
with
--- CODE BLOCK 3550 ---
--disable-blink-features=RootLayerScrolling
--- END CODE BLOCK ---
. Addressed in
#16663
7.4.0
Released 05/24/2021
Features:
Cypress now detects and supports testing in the Chrome Beta browser. Addresses
#16376
There are new keyboard shortcuts to continue (c) and to go to the next test
(n) when the Test Runner is paused via
--- CODE BLOCK 3551 ---
cypress run
--- END CODE BLOCK ---
and to toggle auto-scrolling
of the Test Runner (a). Addresses
#248
Bugfixes:
--- CODE BLOCK 3552 ---
cypress run
--- END CODE BLOCK ---
can now send binary files in form
data. Fixes
#1647
--- CODE BLOCK 3554 ---
cypress run --record
--- END CODE BLOCK ---
can now send blob data. Fixes
#6178
Fixed an issue where
--- CODE BLOCK 3556 ---
--disable-device-discovery-notifications
--- END CODE BLOCK ---
could yield the
incorrect result when used with
--- CODE BLOCK 3557 ---
cypress.open()
--- END CODE BLOCK ---
and several simultaneous requests. Fixes
#16451
Improved the way that
--- CODE BLOCK 3558 ---
cypress.run()
--- END CODE BLOCK ---
matchers are
displayed in the Command Log when using
--- CODE BLOCK 3559 ---
Cypress.off
--- END CODE BLOCK ---
properties besides
--- CODE BLOCK 3560 ---
Cypress.log
--- END CODE BLOCK ---
--- CODE BLOCK 3561 ---
cy.screenshot()
--- END CODE BLOCK ---
. Fixes
#9403
--- CODE BLOCK 3563 ---
.scrollIntoView()
--- END CODE BLOCK ---
argument validation has been
improved. Invalid hostnames and extra arguments passed to
--- CODE BLOCK 3565 ---
NODE_OPTIONS
--- END CODE BLOCK ---
result in an error. Addressed in
#16577
--- CODE BLOCK 3566 ---
cypress:cli
--- END CODE BLOCK ---
no longer incorrectly captures
parts of the Test Runner UI during component testing. Fixes
#16543
Spec files that containing spaces in the path will now properly open during
--- CODE BLOCK 3568 ---
NODE_OPTIONS
--- END CODE BLOCK ---
. Fixes
#16278
Cypress now correctly uses the
--- CODE BLOCK 3569 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 3577 ---
interactive mode
--- END CODE BLOCK ---
values from
returned from plugins in the component testing runner. Fixes
#16424
Video recordings in Chrome, Chromium, and Electron browsers will no longer
drop frames, with the frequency increasing along with the length of the video.
Fixes
#16648
Tests located outside of the
--- CODE BLOCK 3578 ---
cypress.json
--- END CODE BLOCK ---
will now open in IDE and generate
studio commands when saved. Fixes
#16255
--- CODE BLOCK 3580 ---
Screenshot API
--- END CODE BLOCK ---
in the plugins file will now display in alphabetical order. Fixes
#16564
Dependency Updates:
Upgraded
--- CODE BLOCK 3581 ---
cy.screenshot()
--- END CODE BLOCK ---
from
--- CODE BLOCK 3582 ---
Installing Cypress
--- END CODE BLOCK ---
--- CODE BLOCK 3583 ---
Writing and Organizing Tests
--- END CODE BLOCK ---
. Addressed in
#16464
Upgraded
--- CODE BLOCK 3585 ---
cypress run
--- END CODE BLOCK ---
from
--- CODE BLOCK 3586 ---
Dashboard Service
--- END CODE BLOCK ---
--- CODE BLOCK 3587 ---
Launching Browsers
--- END CODE BLOCK ---
. Fixes
#6896
7.3.0
Released 05/10/2021
Features:
Component tests can now be launched via the
Module API
by passing
--- CODE BLOCK 3588 ---
Preprocessors
--- END CODE BLOCK ---
via the new
--- CODE BLOCK 3590 ---
cypress run
--- END CODE BLOCK ---
property. The
--- CODE BLOCK 3600 ---
data-testid
--- END CODE BLOCK ---
will default to
--- CODE BLOCK 3601 ---
Selector Playground Guide
--- END CODE BLOCK ---
Addresses
#16302
--- CODE BLOCK 3602 ---
Selector Playground API
--- END CODE BLOCK ---
now accepts a
--- CODE BLOCK 3603 ---
Best Practices
--- END CODE BLOCK ---
option in the
--- CODE BLOCK 3605 ---
Introduction to Cypress
--- END CODE BLOCK ---
--- CODE BLOCK 3608 ---
package.json
--- END CODE BLOCK ---
will specify the number of times that a particular
--- CODE BLOCK 3609 ---
engineStrict
--- END CODE BLOCK ---
should be
applied. Addresses
#4460
#8531
--- CODE BLOCK 3614 ---
cypress.json
--- END CODE BLOCK ---
now accepts invocation using
--- CODE BLOCK 3618 ---
throw new Error()
--- END CODE BLOCK ---
, where
--- CODE BLOCK 3625 ---
cypress run
--- END CODE BLOCK ---
is a regular
expression. Previously, this only worked if
--- CODE BLOCK 3629 ---
Cache-Control
--- END CODE BLOCK ---
was a string. Addresses
#16390
Cypress will now automatically get environment variables for LayerCI when
recording to the Dashboard. Addresses
#16101
Setting the env var
--- CODE BLOCK 3630 ---
cy.clearCache()
--- END CODE BLOCK ---
will print commit
information and CI provider information that's sent to the Dashboard as debug
logs. Addresses
#16236
Cypress can now use the certificate authority specified in npm config if
--- CODE BLOCK 3635 ---
cy.visit(url)
--- END CODE BLOCK ---
is specified. See
"Using a custom CA"
for more information. Addresses
#8825
Bugfixes:
Cypress will no longer incorrectly redirect the AUT window to
--- CODE BLOCK 3637 ---
username/password
--- END CODE BLOCK ---
when
--- CODE BLOCK 3638 ---
cy.visit(url, options)
--- END CODE BLOCK ---
is set to a relative path within the call stack of an XHR
event handler. Fixes
#3975
#7439
Cypress now properly handles when a form submit or anchor tag target is set to
--- CODE BLOCK 3639 ---
Authorization: Basic <...>
--- END CODE BLOCK ---
--- CODE BLOCK 3643 ---
--disable-background-networking
--- END CODE BLOCK ---
so that it no longer redirects the parent frame. Fixes
#1244
Fixed a regression in
6.5.0
that could
cause Cypress to crash with a
--- CODE BLOCK 3644 ---
cypress.json
--- END CODE BLOCK ---
error.
Most commonly, this occurred when handling network errors with
--- CODE BLOCK 3647 ---
~/Library/Caches/Cypress
--- END CODE BLOCK ---
Fixes
#15101
Fixed a regression in
7.0.0
that caused
the Test Runner to crash with an
--- CODE BLOCK 3648 ---
~/.cache/Cypress
--- END CODE BLOCK ---
type error when
testing a binary file upload. Fixes
#15898
#16223
When verifying Cypress, we now listen for the 'close' event instead of the
'exit' event in an effort to fix some situations where the browser cannot be
found even though it is on the system. Addressed in
#16312
Fixed a regression in
6.5.0
that caused
a node warning about
--- CODE BLOCK 3649 ---
%APPDATA%\Cypress\cy\production\browsers
--- END CODE BLOCK ---
only accepting functions to display. Fixes
#15281
--- CODE BLOCK 3652 ---
herokuapp.com
--- END CODE BLOCK ---
now adds a
--- CODE BLOCK 3654 ---
http://app.localhost:8080
--- END CODE BLOCK ---
header by
default for CORS requests unless overridden. Fixes
#15050
Improved the way that
--- CODE BLOCK 3656 ---
test.titlePath
--- END CODE BLOCK ---
--- CODE BLOCK 3657 ---
cypress.schema.json
--- END CODE BLOCK ---
requests with multiple
aliases are displayed in the command log. Addressed in
#16382
Cypress now correctly shows all
--- CODE BLOCK 3661 ---
DEBUG=cypress:*
--- END CODE BLOCK ---
assertions when chained
after
--- CODE BLOCK 3662 ---
cypress:cli
--- END CODE BLOCK ---
. Fixes
#16006
--- CODE BLOCK 3667 ---
DEBUG=cypress:xvfb
--- END CODE BLOCK ---
will now correctly show cookie-related messages
on the console. Fixes
#15032
--- CODE BLOCK 3669 ---
example_spec.js
--- END CODE BLOCK ---
will now show all arguments, not only the first 2. Fixes
#16068
--- CODE BLOCK 3670 ---
Browser Launch API
--- END CODE BLOCK ---
now correctly selects option elements with values that have
--- CODE BLOCK 3671 ---
Plugins Guide
--- END CODE BLOCK ---
characters. Fixes
#16045
--- CODE BLOCK 3672 ---
Writing a Plugin API
--- END CODE BLOCK ---
--- CODE BLOCK 3675 ---
cypress.json
--- END CODE BLOCK ---
configuration values will now correctly show when
previewing resolved configuration in the Test Runner. Fixes
#16282
When passing the
--- CODE BLOCK 3677 ---
cypress.json
--- END CODE BLOCK ---
flag, Cypress will no longer print uploading output
to Stdout. Fixes
#16268
When pressing the
--- CODE BLOCK 3680 ---
environmentVariables
--- END CODE BLOCK ---
hotkey in Firefox, Cypress will select the SpecList's
SearchInput as it does in other browsers. Fixes
#16309
Cypress will now detect the default installation location of the Visual Studio
Code editors on Windows machines. Fixes
#15080
Changing files extensions when creating a new test file should no longer add
extra dots to the filename on Windows machines. Fixes
#16131
Dependency Updates:
Upgraded
--- CODE BLOCK 3684 ---
Configuration API
--- END CODE BLOCK ---
from
--- CODE BLOCK 3686 ---
Configuration
--- END CODE BLOCK ---
--- CODE BLOCK 3687 ---
Environment Variables
--- END CODE BLOCK ---
. Addressed in
#8337
Upgraded
--- CODE BLOCK 3688 ---
Using Cypress FAQ
--- END CODE BLOCK ---
from
--- CODE BLOCK 3689 ---
Plugins Guide
--- END CODE BLOCK ---
--- CODE BLOCK 3690 ---
Writing a Plugin API
--- END CODE BLOCK ---
. Addressed in
#16362
Upgraded
--- CODE BLOCK 3693 ---
CYPRESS_BINARY_VERSION
--- END CODE BLOCK ---
from
--- CODE BLOCK 3694 ---
CYPRESS_SKIP_BINARY_INSTALL
--- END CODE BLOCK ---
--- CODE BLOCK 3695 ---
npm install
--- END CODE BLOCK ---
. Addressed in
#16406
Upgraded
--- CODE BLOCK 3697 ---
--no-sandbox
--- END CODE BLOCK ---
from
--- CODE BLOCK 3698 ---
--disable-gpu
--- END CODE BLOCK ---
--- CODE BLOCK 3700 ---
watched:file:changed
--- END CODE BLOCK ---
. Addressed in
#16409
Upgraded
--- CODE BLOCK 3705 ---
@types/cypress
--- END CODE BLOCK ---
from
--- CODE BLOCK 3706 ---
{ failOnStatusCode: false }
--- END CODE BLOCK ---
--- CODE BLOCK 3709 ---
Cypress.version
--- END CODE BLOCK ---
. Addressed in
#16408
7.2.0
Released 04/26/2021
Features:
You can now navigate through folders in the Test Runner using the Tab keyboard
input and open or close the folder's content with the Enter & Space keyboard
inputs. Addresses
#3741
Performance:
Fixed a regression in
7.0.0
that caused
tests to run slowly, especially when run with constrained CPU resources. Fixes
#15853
Fixed a regression in
7.0.0
causing
decreased performance in Chromium browsers due to requesting screencast frames
when video is disabled. Fixes
#16030
Bugfixes:
Fixed a regression in
7.0.0
that caused
the Test Runner to crash with an
--- CODE BLOCK 3710 ---
Cypress.arch
--- END CODE BLOCK ---
type error. We now
correctly detect a utf8 request body with multi-byte Unicode characters. Fixes
#15901
Reusing
--- CODE BLOCK 3711 ---
Cypress.platform
--- END CODE BLOCK ---
aliases will now work as expected. Fixes
#15823
Fixed an issue in 7.0 where users could get a misleading "must pass a handler
as the 3rd argument" error when using
--- CODE BLOCK 3716 ---
cypress/plugins/index.js
--- END CODE BLOCK ---
. Fixes
#16117
--- CODE BLOCK 3719 ---
@cypress/browserify-preprocessor
--- END CODE BLOCK ---
no longer hangs on Windows machines. Fixes
#15976
Hovering over a command log without a snapshot will no longer cause the error
--- CODE BLOCK 3720 ---
@cypress/webpack-preprocessor
--- END CODE BLOCK ---
. Fixes
#15816
We now throw an error when attempting to
--- CODE BLOCK 3721 ---
cy.contains(selector, regexp)
--- END CODE BLOCK ---
--- CODE BLOCK 3723 ---
reporterOptions
--- END CODE BLOCK ---
within a
disabled
--- CODE BLOCK 3730 ---
cy.type(' ')
--- END CODE BLOCK ---
. Fixes
#5951
--- CODE BLOCK 3731 ---
cy.spread()
--- END CODE BLOCK ---
will no longer change the
--- CODE BLOCK 3732 ---
$(npm bin)/cypress foo
--- END CODE BLOCK ---
attribute of button-like inputs
with type button, submit, reset, image, radio, or checkbox. Fixes
#15913
Specs will now load when using a relative directory for
--- CODE BLOCK 3733 ---
CYPRESS_RECORD_KEY
--- END CODE BLOCK ---
outside of the root project when specifying
--- CODE BLOCK 3734 ---
CYPRESS_ENV=staging
--- END CODE BLOCK ---
. Fixes
#16053
The search input will now display when there are many component spec files.
Fixes
#16089
Misc:
Lodash types have been updated. Addressed in
#15860
Types for the selector playground have been added. Addressed in
#15834
--- CODE BLOCK 3735 ---
CYPRESS_BINARY_VERSION
--- END CODE BLOCK ---
now returns the correct type instead of
--- CODE BLOCK 3738 ---
cy.scrollTo
--- END CODE BLOCK ---
Addresses
#15426
--- CODE BLOCK 3740 ---
videoUploadOnPasses
--- END CODE BLOCK ---
will show the correct type when a collection of HTMLElements is
provided. Addressed in
#15869
Improved types for
--- CODE BLOCK 3741 ---
cypress.json
--- END CODE BLOCK ---
. Addressed in
#16167
Dependency Updates:
Downgraded the Chromium browser version used during
--- CODE BLOCK 3744 ---
first-timers-only
--- END CODE BLOCK ---
and when
selecting Electron browser in
--- CODE BLOCK 3748 ---
npm install
--- END CODE BLOCK ---
from
--- CODE BLOCK 3751 ---
cypress open
--- END CODE BLOCK ---
--- CODE BLOCK 3753 ---
cypress run
--- END CODE BLOCK ---
. This was done to address a performance regression introduced in
7.0.0
. Addressed in
#16113
Upgraded
--- CODE BLOCK 3757 ---
onBeforeLoad
--- END CODE BLOCK ---
from
--- CODE BLOCK 3762 ---
CYPRESS_BINARY_VERSION
--- END CODE BLOCK ---
--- CODE BLOCK 3763 ---
descendents
--- END CODE BLOCK ---
. Addressed in
#15819
Replaced
--- CODE BLOCK 3764 ---
descendants
--- END CODE BLOCK ---
with
--- CODE BLOCK 3765 ---
position: fixed
--- END CODE BLOCK ---
. Addressed in
#15595
7.1.0
Released 04/12/2021
Features:
The events
--- CODE BLOCK 3776 ---
npm install --save-dev cypress
--- END CODE BLOCK ---
--- CODE BLOCK 3777 ---
cypress install
--- END CODE BLOCK ---
--- CODE BLOCK 3778 ---
cypress-cli
--- END CODE BLOCK ---
, and
--- CODE BLOCK 3779 ---
cypress-cli
--- END CODE BLOCK ---
now fire
in interactive mode in addition to run mode. This requires the
--- CODE BLOCK 3780 ---
npm uninstall -g cypress-cli
--- END CODE BLOCK ---
flag to be enabled. Addressed in
#15787
Bugfixes:
Viewport configuration set in
--- CODE BLOCK 3784 ---
CYPRESS_VERSION
--- END CODE BLOCK ---
is now correctly applied in the
Component Test Runner. Fixes
#15899
Running specs on Windows is now supported in the Component Test Runner. Fixes
#15842
Fixed an issue where crashes in Cypress would cause a misleading "Unknown
signal: true" error after the actual crash message. Fixes
#15943
Fixed an issue introduced in 7.0.0 where requests with responses stubbed via
--- CODE BLOCK 3785 ---
CYPRESS_BINARY_VERSION
--- END CODE BLOCK ---
would still be sent to the
destination server. Fixes
#15841
7.0.1
Released 04/07/2021
Bugfixes:
Fixed a regression in 7.0.0 that caused the test runner not to check for
updates. Fixes
#15829
The component testing spec list search input no longer throws an exception
when hitting
--- CODE BLOCK 3786 ---
npm install -g cypress
--- END CODE BLOCK ---
. Addressed in
#15833
The preferred file opener modal no longer appears behind the command log.
Addressed in
#15831
Cypress no longer crashes in certain circumstances when running in Docker
without
--- CODE BLOCK 3787 ---
devDependency
--- END CODE BLOCK ---
. Fixes
#15814
#350
Node.js warnings are no longer incorrectly printed to
--- CODE BLOCK 3790 ---
DEBUG=cypress:cli
--- END CODE BLOCK ---
in production
builds of Cypress. Addressed in
#15817
Cypress no longer prints a warning to
--- CODE BLOCK 3793 ---
<option></option>
--- END CODE BLOCK ---
when the video cannot be found
after a run. Addressed in
#15828
A warning is no longer displayed when running a TypeScript spec without a
--- CODE BLOCK 3795 ---
{ force: true }
--- END CODE BLOCK ---
file present. Addressed in
#15828
Misc:
The "New Spec File" in the Desktop GUI has a less pronounced style. Addressed
#15835
7.0.0
Released 04/05/2021
Summary:
🎉 Introducing the
Cypress Component Test Runner
- now in alpha. Today's
release includes a brand new test runner designed to replace your Node-based
component tests. Our Component Test Runner tests your components in the browser,
just like a user would. And, since it runs in the browser, you get to debug your
components using your favorite developer tools. Read our
Component Testing Guide
for more details.
Breaking Changes:
Please read our
Migration Guide
which explains the changes in more detail and how to change your code to migrate
to Cypress 7.0.**
We introduced several breaking changes to
cy.intercept()
. See the
cy.intercept()
docs for full usage examples.
Breaking changes:
Request handlers supplied to
--- CODE BLOCK 3798 ---
Cypress.Dom
--- END CODE BLOCK ---
are now matched starting with
the most recently defined request interceptor. This allows users to override
request handlers by calling
--- CODE BLOCK 3799 ---
Cypress.dom
--- END CODE BLOCK ---
again. This matches the
previous behavior that was default in
--- CODE BLOCK 3800 ---
Cypress.Log.command
--- END CODE BLOCK ---
. Addresses
#9302
--- CODE BLOCK 3801 ---
chai-jQuery
--- END CODE BLOCK ---
now automatically parses more JSON MIME types, including
'application/vnd.api+json'. You can now remove
--- CODE BLOCK 3811 ---
Cypress.addParentCommand()
--- END CODE BLOCK ---
--- CODE BLOCK 3812 ---
Cypress.addChildCommand()
--- END CODE BLOCK ---
from some tests that previously required it.
Addresses
#14763
Falsy values (with the exception of
--- CODE BLOCK 3813 ---
Cypress.addDualCommand()
--- END CODE BLOCK ---
) supplied as the body of a
--- CODE BLOCK 3814 ---
chai-jQuery
--- END CODE BLOCK ---
--- CODE BLOCK 3815 ---
chai-jQuery
--- END CODE BLOCK ---
will now be JSONified and sent as the
body. Previously, an empty string was sent instead. Addresses
#15234
#14205
--- CODE BLOCK 3821 ---
--browser <browser name>
--- END CODE BLOCK ---
--- CODE BLOCK 3822 ---
cypress open
--- END CODE BLOCK ---
property has been removed from
--- CODE BLOCK 3826 ---
position: sticky
--- END CODE BLOCK ---
The "substring match" from
--- CODE BLOCK 3838 ---
cypress-cli
--- END CODE BLOCK ---
URL matching has been removed.
Previously, a URL would match if it contained the supplied string anywhere.
Now, the URL (including querystring) only matches if it is an equality match
or a minimatch.
--- CODE BLOCK 3842 ---
cy.server()
--- END CODE BLOCK ---
--- CODE BLOCK 3844 ---
cypress.json
--- END CODE BLOCK ---
have been renamed to
--- CODE BLOCK 3849 ---
type="email"
--- END CODE BLOCK ---
--- CODE BLOCK 3852 ---
input type="TEXT"
--- END CODE BLOCK ---
, respectively. Addresses
#15700
--- CODE BLOCK 3853 ---
type="number"
--- END CODE BLOCK ---
was previously aliased to
--- CODE BLOCK 3856 ---
fixturesFolder
--- END CODE BLOCK ---
. Now the alias
--- CODE BLOCK 3858 ---
overflow-y: hidden
--- END CODE BLOCK ---
has been removed. Please update usage of
--- CODE BLOCK 3860 ---
selectedIndex
--- END CODE BLOCK ---
--- CODE BLOCK 3861 ---
selectedOptions
--- END CODE BLOCK ---
. Addressed in
#14709
Component tests have been migrated to use a dedicated test runner and are
bundled differently. See the
Migration Guide
full examples on how to migrate. Addressed in
#14479
Component tests will not be executed when running
--- CODE BLOCK 3865 ---
cy.focused()
--- END CODE BLOCK ---
--- CODE BLOCK 3867 ---
package.json
--- END CODE BLOCK ---
. Now, they need to be executed by running
--- CODE BLOCK 3874 ---
window.alert()
--- END CODE BLOCK ---
--- CODE BLOCK 3875 ---
window.confirm()
--- END CODE BLOCK ---
. Addressed in
#15701
--- CODE BLOCK 3881 ---
commands.js
--- END CODE BLOCK ---
must be removed from your configuration file,
--- CODE BLOCK 3882 ---
CYPRESS_DEBUG
--- END CODE BLOCK ---
by default, or it will throw an error. Addressed in
#15701
--- CODE BLOCK 3884 ---
DEBUG=cypress:*
--- END CODE BLOCK ---
event is no longer used to compile component tests.
Now, a
--- CODE BLOCK 3885 ---
cypress.json
--- END CODE BLOCK ---
event must be registered.
Cypress now catches uncaught errors and fails the test even if the application
under test has defined
--- CODE BLOCK 3887 ---
Content-Encoding: br
--- END CODE BLOCK ---
. Addresses
#8802
Cypress now fails tests if there is an unhandled promise rejection in the
application under test. Unhandled rejections will trigger the
--- CODE BLOCK 3888 ---
cypress run
--- END CODE BLOCK ---
event with the promise as the third argument. Addresses
#243
Cypress now throws an error if the application under test redirects more than
20 times. The number of times allowed to redirect is configurable via the
--- CODE BLOCK 3890 ---
.nextUntil()
--- END CODE BLOCK ---
config. Addresses
#14445
The default preprocessor now targets a more modern version of ECMAScript.
Addressed in
#15274
We now enable
--- CODE BLOCK 3891 ---
.parentsUntil()
--- END CODE BLOCK ---
by default in the Electron browser. You can override this option if needed
within the
--- CODE BLOCK 3893 ---
.prevUntil()
--- END CODE BLOCK ---
API. Addressed in
#15493
--- CODE BLOCK 3897 ---
node_modules
--- END CODE BLOCK ---
has been removed. Please migrate to a different datetime
formatter. See
our recipe
for example replacements. Addresses
#8714
The bundled Node.js version was upgraded from
--- CODE BLOCK 3900 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 3901 ---
Cypress.version
--- END CODE BLOCK ---
. This
could change the behavior of code within the
--- CODE BLOCK 3908 ---
graceful-fs
--- END CODE BLOCK ---
when using the
bundled Node.js version of
Cypress. Addressed in
#15292
Installing Cypress on your system now requires Node.js 12+. Addresses
#9545
The default headless browser window size has been increased to 1920x1080
pixels to capture
High-definition videos and screenshots
Addresses
#15752
#15730
, and
#15481
Features:
A command log entry is now displayed when there is an uncaught exception or
unhandled rejection. Addresses
#8236
We added several features to
cy.intercept()
. See
cy.intercept()
docs for full usage examples.
Addressed in
#14543
. New
features:
There are new events on the req object for
--- CODE BLOCK 3909 ---
watchForFileChanges
--- END CODE BLOCK ---
including
--- CODE BLOCK 3911 ---
integrationFolder
--- END CODE BLOCK ---
--- CODE BLOCK 3913 ---
example_spec.js
--- END CODE BLOCK ---
, and
--- CODE BLOCK 3914 ---
cy.readFile()
--- END CODE BLOCK ---
Response handlers (supplied via event handlers or via
--- CODE BLOCK 3915 ---
node_modules
--- END CODE BLOCK ---
supplied to
--- CODE BLOCK 3916 ---
bower_components
--- END CODE BLOCK ---
will be called in reverse order until
--- CODE BLOCK 3922 ---
cypress get:key
--- END CODE BLOCK ---
is called or until there are no more response handlers.
A new option,
--- CODE BLOCK 3926 ---
CYPRESS_CI_KEY
--- END CODE BLOCK ---
, has been added to the
--- CODE BLOCK 3927 ---
CYPRESS_RECORD_KEY
--- END CODE BLOCK ---
type. If
true, the supplied request handler will be called before any non-middleware
request handlers.
A new function,
--- CODE BLOCK 3929 ---
cypress run --record --key <record_key>
--- END CODE BLOCK ---
, is available on request objects yielded
--- CODE BLOCK 3936 ---
sinon-as-promised
--- END CODE BLOCK ---
. It is functionally the same as
--- CODE BLOCK 3939 ---
integration
--- END CODE BLOCK ---
- the
request will stop propagating to other event handlers, will be sent
outgoing, and the response will be handled by cb.
--- CODE BLOCK 3950 ---
sinon-as-promised
--- END CODE BLOCK ---
can now be called with a new overload:
--- CODE BLOCK 3951 ---
.resolves(...)
--- END CODE BLOCK ---
--- CODE BLOCK 3952 ---
.rejects(...)
--- END CODE BLOCK ---
will be merged
with
--- CODE BLOCK 3953 ---
.withArgs(...)
--- END CODE BLOCK ---
, and the handler is required.
--- CODE BLOCK 3959 ---
cypress.json
--- END CODE BLOCK ---
can now visit pages with
--- CODE BLOCK 3964 ---
cypress get:key
--- END CODE BLOCK ---
content-type. Addresses
#15738
You can now pass runner specific configuration in order to pass different
configuration values to
--- CODE BLOCK 3965 ---
cypress.json
--- END CODE BLOCK ---
tests versus
--- CODE BLOCK 3969 ---
videoCompression
--- END CODE BLOCK ---
tests. Addressed in
#15526
There's a new keyboard shortcut (
--- CODE BLOCK 3971 ---
cypress.json
--- END CODE BLOCK ---
) to search spec files in the
Test Runner based on your OS. Addresses
#6229
You can now create a new spec file directly from the Test Runner in the
Desktop. Addressed in
#15335
--- CODE BLOCK 3972 ---
cypress run
--- END CODE BLOCK ---
now accepts a
--- CODE BLOCK 3976 ---
cy.fixture()
--- END CODE BLOCK ---
option. Addresses
#15180
The Cypress proxy now adds a
--- CODE BLOCK 3983 ---
cy.request()
--- END CODE BLOCK ---
header to all proxy responses.
Addressed in
#15292
Cypress no longer forces specific
--- CODE BLOCK 3987 ---
document.title
--- END CODE BLOCK ---
. Addressed in
#15292
Bugfixes:
--- CODE BLOCK 3991 ---
Accept: text/html,*/*
--- END CODE BLOCK ---
--- CODE BLOCK 3993 ---
webpack-dev-server
--- END CODE BLOCK ---
is now
correct after stubbing a response using
--- CODE BLOCK 3994 ---
cy.request()
--- END CODE BLOCK ---
in a
--- CODE BLOCK 3995 ---
Accept: */*
--- END CODE BLOCK ---
callback or a
--- CODE BLOCK 3996 ---
cy.request()
--- END CODE BLOCK ---
--- CODE BLOCK 3997 ---
cy.request()
--- END CODE BLOCK ---
handler.
Addressed in
#14543
Fixed an issue where only the first matching alias for a route would yield a
response object on
--- CODE BLOCK 3998 ---
cy.request()
--- END CODE BLOCK ---
. Fixes
#14522
--- CODE BLOCK 3999 ---
cy.request()
--- END CODE BLOCK ---
will no longer fail with "coordsHistory must
be at least 2 sets of coords" when specifying
--- CODE BLOCK 4000 ---
{followRedirect: false}
--- END CODE BLOCK ---
. Fixes
#3738
Cypress now checks visibility correctly when an element has CSS "position:
sticky". Fixes
#14938
After selecting a project in global mode and clicking the back button, Cypress
will no longer crash. Fixes
#15089
Errors
--- CODE BLOCK 4001 ---
cy.request()
--- END CODE BLOCK ---
are gone from the console in
--- CODE BLOCK 4004 ---
cy.request()
--- END CODE BLOCK ---
during
Component Testing. Addressed in
#15661
Some memory leaks were fixed in
--- CODE BLOCK 4007 ---
cy.request()
--- END CODE BLOCK ---
. Addressed in
#15275
Misc:
The types for
--- CODE BLOCK 4009 ---
cy.request()
--- END CODE BLOCK ---
allow
--- CODE BLOCK 4012 ---
x-www-form-urlencoded
--- END CODE BLOCK ---
, so the header's type has been
changed to reflect this. Addresses
#15419
The type definition for
--- CODE BLOCK 4013 ---
cy.request()
--- END CODE BLOCK ---
now allows
4 arguments. Addresses
#15353
--- CODE BLOCK 4014 ---
cy.request()
--- END CODE BLOCK ---
will show the correct type when raw
HTMLElements are provided. Addresses
#14875
The Cypress Studio icon now displays properly for tests with long titles.
Addresses
#15182
There were some minor improvements made to the UI when setting up a project in
the Test Runner. Addressed in
#15665
Dependency Updates
Upgraded Chrome browser version used during
--- CODE BLOCK 4016 ---
cy.request()
--- END CODE BLOCK ---
and when selecting
Electron browser in
--- CODE BLOCK 4020 ---
supportFile
--- END CODE BLOCK ---
from
--- CODE BLOCK 4021 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 4022 ---
watchForFileChanges
--- END CODE BLOCK ---
. Addressed in
#15292
Upgraded bundled Node.js version from
--- CODE BLOCK 4023 ---
supportFile
--- END CODE BLOCK ---
--- CODE BLOCK 4024 ---
supportFile
--- END CODE BLOCK ---
. Addressed in
#15292
Upgraded
--- CODE BLOCK 4025 ---
cypress run
--- END CODE BLOCK ---
from
--- CODE BLOCK 4027 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 4029 ---
cypress run
--- END CODE BLOCK ---
. Addressed in
#15292
6.9.1
Released 4/5/2021
This release contains the same features as 6.8.0. It was published to provide a
non-breaking alternative to 6.9.0, which was mistakenly published with breaking
changes.
6.9.0
Released 4/5/2021
This release was mistakenly published with breaking changes, is deprecated, and
should not be used. Upgrade to 6.9.1 or 7.0.0, or stay on 6.8.0.
6.8.0
Released 3/17/2021
User Experience:
Improved the specs list user interface with a new icon set and accessibility
features when in
Component Testing
mode
(alpha). Addressed in
#15513
Bugfixes:
Cypress will no longer exit with an error when recording a run to the
Dashboard with empty specfiles. Fixes
#15512
When using
--- CODE BLOCK 4030 ---
failOnStatus
--- END CODE BLOCK ---
Cypress Studio
the icon to add commands
will now fully display on long test titles. Fixes
#15182
6.7.1
Released 3/15/2021
Bugfixes:
Interacting with an element that requires scrolling within an element with
--- CODE BLOCK 4031 ---
cy.request()
--- END CODE BLOCK ---
no longer fails Cypress's actionability check. Fixes
#15453
A regression in
6.7.0
has been fixed so that the
--- CODE BLOCK 4032 ---
failOnStatusCode
--- END CODE BLOCK ---
will be
written correctly to the
--- CODE BLOCK 4034 ---
cy.request()
--- END CODE BLOCK ---
file on initial creation without an
extra config object. Fixes
#15497
6.7.0
Released 3/15/2021
Features:
--- CODE BLOCK 4038 ---
node_modules
--- END CODE BLOCK ---
configuration flag has been removed. You can now
listen to
--- CODE BLOCK 4041 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 4042 ---
cypress/support
--- END CODE BLOCK ---
--- CODE BLOCK 4043 ---
cypress/support/index.js
--- END CODE BLOCK ---
--- CODE BLOCK 4046 ---
cypress/support
--- END CODE BLOCK ---
events in
the plugins file without needing the
experimentalRunEvents
configuration option.
See the
--- CODE BLOCK 4047 ---
cypress/support/index.js
--- END CODE BLOCK ---
--- CODE BLOCK 4048 ---
cypress/support/index.js
--- END CODE BLOCK ---
--- CODE BLOCK 4049 ---
supportFile
--- END CODE BLOCK ---
--- CODE BLOCK 4050 ---
cypress.json
--- END CODE BLOCK ---
docs for more information.
Addressed in
#15276
When canceling a run from the Dashboard, previously only parallelized runs
would cancel correctly. Now all recorded runs will respect cancelation and
exit early. Addresses
#1691
Test configuration
is now captured and sent when recording to the Dashboard. Addresses
#15487
Cypress now sends test details to the Dashboard at the beginning of a recorded
run, so historical test code and other data can be provided to the Dashboard
upfront. Addressed in
#14925
The full stack trace from errors thrown in the preprocessor are now displayed.
Addressed in
#15198
Configuration values which are changed at runtime prior to tests running are
now properly shown as resolved from the spec code within the Module API to
indicate where the change originated from. Addresses
#15486
Bugfixes:
FFmpeg will no longer error ("width not divisible by 2") during video
recording in Chromium-family browsers, including Chrome, Electron, and Edge.
Fixes
#3491
#15300
cy.wait()
no longer falsely returns a timeout when the
user aborts an XHR. Fixes
#9549
.clear()
--- CODE BLOCK 4051 ---
supportFile: false
--- END CODE BLOCK ---
now behave the same when
they're used against elements that contain text inputs. Fixes
#8447
When using
--- CODE BLOCK 4056 ---
cypress run
--- END CODE BLOCK ---
Cypress Studio
now records typing by
using the value of the input rather than the keys that were pressed. Studio
also no longer records pressing special keys (such as arrows or ctrl) except
for Enter. Fixes
#15023
Empty jQuery objects are now properly shown in error messages in the Command
Log. Fixes
#14279
Length assertions on DOM elements now properly show the user-defined assertion
message if specified. Fixes
#14484
Cypress no longer scrolls on
--- CODE BLOCK 4058 ---
supportFolder
--- END CODE BLOCK ---
event, fixes
#8279
Misc:
We updated the UI when connecting a project to the Dashboard. Addressed in
#14877
"Test recordings" recorded to the Cypress Dashboard are now referred to as
recorded "test results." Addresses
#15376
Errors shown from the plugins file now display top-aligned. Addressed in
#15347
Dependency Updates:
Upgraded
--- CODE BLOCK 4059 ---
supportFile
--- END CODE BLOCK ---
from
--- CODE BLOCK 4060 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 4061 ---
cypress.json
--- END CODE BLOCK ---
. Addressed in
#15201
6.6.0
Released 2/18/2021
Features:
Cypress now extracts and sends CodeFresh CI default variables when recording
to the Dashboard. Addresses
#4609
Dependency Updates:
Upgraded
--- CODE BLOCK 4064 ---
cypress run
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4073 ---
screenshots
--- END CODE BLOCK ---
. Addressed in
#14958
6.5.0
Released 2/15/2021
Performance:
Improved the startup time of
--- CODE BLOCK 4077 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 4078 ---
trashAssetsBeforeHeadlessRuns
--- END CODE BLOCK ---
. Addresses
#15075
Bugfixes:
Fixed an issue where tests would display as failed if an event (such as an XHR
request) failed after the test was already completed. This only affects the
display of the test and not what was reported in run mode, so it would not
have had an effect on suites running in CI. Addresses
#14978
Fixed a regression introduced in 6.4.0 that caused Electron to crash when
opening outside links in the Command Log. Addresses
#14912
Fixed an issue where browser paths with double backslashes would not work as
expected on Windows. Addresses
#14719
Fixed Microsoft Edge browser detection when passing a path on Windows.
Addresses
#14716
Fixed an issue where the types for
--- CODE BLOCK 4079 ---
trashAssetsBeforeRuns
--- END CODE BLOCK ---
did not support chaining.
Addresses
#14991
Fixed an issue where, when installing two Cypress instances simultaneously,
the downloaded
--- CODE BLOCK 4081 ---
videoRecording
--- END CODE BLOCK ---
could become corrupted and break the install process.
Addresses
#4595
Misc:
Expanded search bar in desktop GUI to fill the entire width. Addresses
#14830
Added
--- CODE BLOCK 4082 ---
videoCompression
--- END CODE BLOCK ---
to the types for
--- CODE BLOCK 4083 ---
videosFolder
--- END CODE BLOCK ---
. Addresses
#9590
We collect more variables from Bitbucket pipelines to correctly display the
pull request information in the Dashboard. Addresses
#15081
Dependency Updates:
Upgraded
--- CODE BLOCK 4084 ---
document.domain
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4086 ---
cy.request()
--- END CODE BLOCK ---
. Addresses
#15056
6.4.0
Released 2/1/2021
Features:
There's now a
Command Log
entry in the Test Runner for when a file is downloaded. Addresses
#14749
Deprecations:
--- CODE BLOCK 4088 ---
cypress.json
--- END CODE BLOCK ---
option for
cy.intercept()
has been
renamed to
--- CODE BLOCK 4092 ---
responseTimeout
--- END CODE BLOCK ---
--- CODE BLOCK 4095 ---
pageLoadTimeout
--- END CODE BLOCK ---
will still work, but it is deprecated and will
be removed in a future release. Addresses
#14822
Bugfixes:
Fixed an issue causing a webpack compilation error when a
--- CODE BLOCK 4098 ---
responseTimeout
--- END CODE BLOCK ---
present in project root. Addresses
#8864
Fixed an issue with
cy.intercept()
where aliases
set via
--- CODE BLOCK 4101 ---
socket pooling exhaustion
--- END CODE BLOCK ---
containing a period character would not work as expected.
Addresses
#14444
Fixed an issue where delays set using
cy.intercept()
would not work as expected.
Addresses
#14446
#14511
Reverted a change to how the Chrome DevTools Protocol is established. Instead
of using stdio and then falling back to TCP, Cypress now only uses TCP to try
to connect to Chrome DevTools Protocol. Addresses
#14819
We now better handle spec paths containing special characters so they properly
show in the code frame and work when interacting via your IDE. Addresses
#14659
We addressed several issues with the experimental
Cypress Studio
. To enable the Cypress
Studio you can set
--- CODE BLOCK 4102 ---
opener of undefined
--- END CODE BLOCK ---
--- CODE BLOCK 4105 ---
expirationDate
--- END CODE BLOCK ---
in your Cypress
configuration. Issues addressed:
Cypress Studio now prompts to start adding commands after visiting an
inputted url. Addresses
#14688
Empty
--- CODE BLOCK 4112 ---
chromeWebSecurity
--- END CODE BLOCK ---
commands will no longer be generated when tabbing through
inputs. Addresses
#14684
Cypress Studio no longer prompt to enter a URL if the test is in an errored
state. Addresses
#14686
Cypress Studio now reloads tests when
--- CODE BLOCK 4113 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 4114 ---
cross origin
--- END CODE BLOCK ---
Addresses
#14744
An empty
--- CODE BLOCK 4116 ---
cross origin
--- END CODE BLOCK ---
command will no longer be added before
--- CODE BLOCK 4117 ---
Uncaught DOMExceptions
--- END CODE BLOCK ---
Cypress Studio when it is followed by typed characters. Addresses
#14685
Cypress Studio will now use the correct selector for an element even if the
click event changed the selectors. Addresses
#14658
Multi-select
--- CODE BLOCK 4119 ---
before each
--- END CODE BLOCK ---
are now supported in Cypress Studio. Addresses
#14743
There's an improved UI for command failures within Cypress Studio. Addresses
#14691
The Selector Playground is now closed automatically when Cypress Studio is
opened.
#14689
Misc:
The "no specs found" error now displays which directory it searched for specs.
Addresses
#14532
More types for the resolved config property have been added. Addresses
#14392
Dependency Updates:
Upgraded
--- CODE BLOCK 4121 ---
core-desktop-gui
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4123 ---
cy.request()
--- END CODE BLOCK ---
. Addressed in
#14711
Upgraded
--- CODE BLOCK 4127 ---
npm install xyz-mocha-reporter
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4129 ---
xyz-custom_reporter.js
--- END CODE BLOCK ---
. Addressed in
#14764
Upgraded
--- CODE BLOCK 4131 ---
Script error.
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4135 ---
cypress-cli
--- END CODE BLOCK ---
. Addressed in
#14623
Upgraded
--- CODE BLOCK 4137 ---
--reporter-options
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4144 ---
window.location.hash
--- END CODE BLOCK ---
. Addressed in
#14668
Upgraded
--- CODE BLOCK 4149 ---
contentType
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4151 ---
should('be.visible')
--- END CODE BLOCK ---
. Addressed in
#14713
Upgraded
--- CODE BLOCK 4166 ---
cy.request()
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4172 ---
Cannot set headers after they've been sent
--- END CODE BLOCK ---
. Addressed in
#14715
6.3.0
Released 1/19/2021
Features:
Cypress Studio
provides a visual way
to generate tests within the Test Runner, by
recording interactions
against
the application under test. Cypress Studio is an experimental feature that can
be enabled by adding the
experimentalStudio
attribute to your configuration,
--- CODE BLOCK 4176 ---
cypress-core-extension
--- END CODE BLOCK ---
by default. Address
You can now test file downloads in Cypress
without the download prompt
displaying. Any files downloaded while testing file downloads will be stored
in the
downloadsFolder
which is
set to
--- CODE BLOCK 4177 ---
executeScript
--- END CODE BLOCK ---
by default. The
--- CODE BLOCK 4178 ---
about:blank
--- END CODE BLOCK ---
will be deleted
before each run unless
trashAssetsBeforeRuns
is set to
--- CODE BLOCK 4181 ---
cypress run
--- END CODE BLOCK ---
. Addresses
#949
Bugfixes:
When an uncaught exception is thrown outside a suite with an
--- CODE BLOCK 4183 ---
about:blank
--- END CODE BLOCK ---
, the
error will now correctly display in the Command Log. Fixes
#14455
Cypress will no longer crash when no record key is provided to the
--- CODE BLOCK 4184 ---
cy.writeFile()
--- END CODE BLOCK ---
flag when followed by other CLI flags. Fixed
#14593
Extra screenshots will no longer be taken when tests are retried when there is
a failure in an
--- CODE BLOCK 4185 ---
cy.readFile()
--- END CODE BLOCK ---
hook. Fixes
#9209
Having
--- CODE BLOCK 4186 ---
cy.writeFile()
--- END CODE BLOCK ---
set to
--- CODE BLOCK 4187 ---
cy.readFile()
--- END CODE BLOCK ---
no longer affects whether Cypress
fires actions on inner elements. Fixes
#14370
We fixed a regression in
5.0.0
that would cause string
--- CODE BLOCK 4188 ---
cy.writeFile()
--- END CODE BLOCK ---
prefixed env variables containing commas to be parsed as multiple values.
Fixes
#8818
We fixed a regression in
4.9.0
where asserting
--- CODE BLOCK 4189 ---
example_spec.js
--- END CODE BLOCK ---
on an
undefined subject would throw an error. Fixes
#14359
We updated the CDP connection to attempt to use the stdio transport first with
Chrome 72 and above, before falling back to using TCP. This should remediate
issues causing sporadic "Cypress failed to make a connection to the Chrome
DevTools Protocol after retrying" errors. Fixes
#6540
#7450
#8674
, and
#8986
Misc:
We removed several Chrome flags that are no longer supported. Addressed in
#14582
You can now open the actively running spec file in your IDE. Addressed in
#14521
Dependency Updates:
Replaced deprecated
--- CODE BLOCK 4199 ---
cy.readFile()
--- END CODE BLOCK ---
with
--- CODE BLOCK 4200 ---
cy.writeFile()
--- END CODE BLOCK ---
. Addressed in
#14415
Upgraded
--- CODE BLOCK 4201 ---
defaultCommandTimeout
--- END CODE BLOCK ---
from
--- CODE BLOCK 4202 ---
commandTimeout
--- END CODE BLOCK ---
--- CODE BLOCK 4203 ---
__cypress.initial
--- END CODE BLOCK ---
. Addressed in
#14583
Upgraded
--- CODE BLOCK 4205 ---
Content-Type: text/html
--- END CODE BLOCK ---
from
--- CODE BLOCK 4206 ---
cy.fixture()
--- END CODE BLOCK ---
--- CODE BLOCK 4209 ---
cy.fixture()
--- END CODE BLOCK ---
. Addressed in
#14567
Upgraded
--- CODE BLOCK 4213 ---
cy.visit('https://cypress.io').visit('https://anotherwebsite.com')
--- END CODE BLOCK ---
from
--- CODE BLOCK 4215 ---
window.fetch
--- END CODE BLOCK ---
--- CODE BLOCK 4222 ---
cy.request()
--- END CODE BLOCK ---
. Addressed in
#14493
Upgraded
--- CODE BLOCK 4223 ---
cy.request()
--- END CODE BLOCK ---
from
--- CODE BLOCK 4238 ---
commandTimeout
--- END CODE BLOCK ---
--- CODE BLOCK 4239 ---
defaultCommandTimeout
--- END CODE BLOCK ---
. Addressed in
#14622
Upgraded
--- CODE BLOCK 4240 ---
cypress.json
--- END CODE BLOCK ---
from
--- CODE BLOCK 4243 ---
consoleProps
--- END CODE BLOCK ---
--- CODE BLOCK 4244 ---
renderProps
--- END CODE BLOCK ---
. Addressed in
#14170
6.2.1
Released 1/4/2021
Bugfixes:
Test retries, when retrying on several failed tests, will no longer cause
hanging during
--- CODE BLOCK 4246 ---
renderProps.message
--- END CODE BLOCK ---
. Fixes
#9040
--- CODE BLOCK 4261 ---
cy.contains()
--- END CODE BLOCK ---
is no longer wrongly encoded when using
cy.intercept()
. This should prevent
--- CODE BLOCK 4264 ---
cy.route('POST', '/users/*/comments', {})
--- END CODE BLOCK ---
errors on the back end service where the
request was pointing to. Fixes
#9359
cy.contains()
no longer throws an error when a
single quote is used inside its argument when RegExp. Fixes
#8626
Passing
--- CODE BLOCK 4265 ---
Cypress.minimatch
--- END CODE BLOCK ---
to a
cy.screenshot()
command inside
.within()
now screenshots the entire
Test Runner as expected. Fixes
#14253
Cypress.dom.isJquery()
now always returns a
boolean instead of
--- CODE BLOCK 4268 ---
ignoreTestFiles
--- END CODE BLOCK ---
sometimes. Fixes
#14278
--- CODE BLOCK 4270 ---
*.hot-update.js
--- END CODE BLOCK ---
--- CODE BLOCK 4272 ---
cypress/support
--- END CODE BLOCK ---
sinon matchers no longer throw an
error when used within Cypress. Fixes
#9644
We now pass
--- CODE BLOCK 4274 ---
Cypress.Server.defaults()
--- END CODE BLOCK ---
as a default flag to
Chrome to prevent backgrounding rendering when the Cypress window is occluded.
Fixes
#9604
Misc:
After login, if a name is undefined on your profile, the Test Runner will show
the profile's email and link to instructions to update the name. Addresses
#14288
Dependency Updates:
Upgraded
--- CODE BLOCK 4275 ---
urlMatchingOptions
--- END CODE BLOCK ---
from
--- CODE BLOCK 4280 ---
cy.screenshot()
--- END CODE BLOCK ---
--- CODE BLOCK 4281 ---
cypress run
--- END CODE BLOCK ---
. Addressed in
#14353
Upgraded
--- CODE BLOCK 4282 ---
screenshotOnHeadlessFailure
--- END CODE BLOCK ---
from
--- CODE BLOCK 4284 ---
screenshotsFolder
--- END CODE BLOCK ---
--- CODE BLOCK 4285 ---
cypress/screenshots
--- END CODE BLOCK ---
. Addressed in
#14352
6.2.0
Released 12/21/2020
Features:
You can now listen to
--- CODE BLOCK 4291 ---
cy.contains()
--- END CODE BLOCK ---
--- CODE BLOCK 4293 ---
{downarrow}
--- END CODE BLOCK ---
--- CODE BLOCK 4301 ---
cy.contains()
--- END CODE BLOCK ---
--- CODE BLOCK 4302 ---
cy.contains()
--- END CODE BLOCK ---
events in the plugins file when setting the
experimentalRunEvents
configuration option
--- CODE BLOCK 4306 ---
Cypress.Cookies.debug()
--- END CODE BLOCK ---
. See the
--- CODE BLOCK 4307 ---
Cypress.Cookies.debug(true, {verbose: false})
--- END CODE BLOCK ---
--- CODE BLOCK 4313 ---
Cypress.Cookies.get
--- END CODE BLOCK ---
--- CODE BLOCK 4314 ---
Cypress.Cookies.set
--- END CODE BLOCK ---
--- CODE BLOCK 4315 ---
Cypress.Cookies.remove
--- END CODE BLOCK ---
docs for more information.
Addressed in
#9646
#14178
#14238
#14263
--- CODE BLOCK 4316 ---
cy.getCookies()
--- END CODE BLOCK ---
error message now displays the amount of time Cypress
retried. Addresses
#5781
The RouteMatcher argument for
cy.intercept()
has a
--- CODE BLOCK 4317 ---
cy.clearCookies()
--- END CODE BLOCK ---
property. When set to
--- CODE BLOCK 4318 ---
Cypress.Cookies.debug()
--- END CODE BLOCK ---
, Cypress will match the
supplied
--- CODE BLOCK 4320 ---
Cypress.Cookies.defaults()
--- END CODE BLOCK ---
against incoming
--- CODE BLOCK 4321 ---
cookie object
--- END CODE BLOCK ---
s. Addressed in
#14241
Bugfixes:
Passing a URL as a string or RegExp to
cy.intercept()
will automatically set
--- CODE BLOCK 4322 ---
cookies name
--- END CODE BLOCK ---
--- CODE BLOCK 4323 ---
cy.clearCookie()
--- END CODE BLOCK ---
. This means that the supplied string or RegExp
will be matched against the
path
if matching against the
fails.
Fixes
#9379
#14256
Getting an alias of
cy.intercept()
using
cy.get()
will no longer always yield
--- CODE BLOCK 4324 ---
cy.getCookie()
--- END CODE BLOCK ---
. Fixes
#9306
cy.intercept()
will now automatically responds to
CORS preflight requests (HTTP
--- CODE BLOCK 4325 ---
cy.setCookie()
--- END CODE BLOCK ---
requests) that match defined routes.
Fixes
#9599
Response errors from
--- CODE BLOCK 4330 ---
execTimeout
--- END CODE BLOCK ---
can now be awaited using
cy.intercept()
cy.wait()
Fixes
#9062
Using
cy.log()
inside
.then()
longer breaks the subject value in the command chain. Fixes
#8084
Using
Cypress.Commands.overwrite
to overwrite
.then()
now preserves the proper
--- CODE BLOCK 4332 ---
numTestsKeptInMemory
--- END CODE BLOCK ---
context and sets aliases correctly. Fixes
#5101
Using
Cypress.Commands.overwrite
to overwrite
--- CODE BLOCK 4334 ---
input[type=tel]
--- END CODE BLOCK ---
cy.intercept()
wait on its alias now properly works. Fixes
#3890
#9580
Cypress no longer fails to find specs if you set the fixtures folder to be the
same as the integration folder. Fixes
#14226
Cypress no longer fails to show error code frames if the spec filename has a
space in it, fixes
#7553
Misc:
--- CODE BLOCK 4338 ---
cy.request()
--- END CODE BLOCK ---
is now an allowed type when passed as test configuration.
Addresses
#9643
--- CODE BLOCK 4339 ---
localhost:2020
--- END CODE BLOCK ---
type for the file argument of the
--- CODE BLOCK 4340 ---
cy.fixture()
--- END CODE BLOCK ---
event
now includes the
--- CODE BLOCK 4341 ---
responseTimeout
--- END CODE BLOCK ---
type. Addresses
#9276
Dependency Updates:
Upgraded
--- CODE BLOCK 4343 ---
cy.fixture()
--- END CODE BLOCK ---
from
--- CODE BLOCK 4346 ---
Application Data
--- END CODE BLOCK ---
--- CODE BLOCK 4348 ---
onreadystatechange
--- END CODE BLOCK ---
. Addressed in
#9409
6.1.0
Released 12/07/2020
Features:
There's a new
--- CODE BLOCK 4361 ---
data-cypress-ignore
--- END CODE BLOCK ---
configuration option that controls the viewport
position when an element is scrolled prior to action commands. Possible values
--- CODE BLOCK 4362 ---
cypress run
--- END CODE BLOCK ---
--- CODE BLOCK 4363 ---
window.open
--- END CODE BLOCK ---
--- CODE BLOCK 4364 ---
example_spec.js
--- END CODE BLOCK ---
--- CODE BLOCK 4365 ---
cy.visit('app/index.html')
--- END CODE BLOCK ---
, and
--- CODE BLOCK 4366 ---
cypress open --config waitForAnimations=false --env foo=bar,baz=quux
--- END CODE BLOCK ---
, with
--- CODE BLOCK 4367 ---
cypress.json
--- END CODE BLOCK ---
being the default.
--- CODE BLOCK 4368 ---
pageLoadTimeout
--- END CODE BLOCK ---
disables scrolling altogether.
--- CODE BLOCK 4369 ---
watchForFileChanges
--- END CODE BLOCK ---
can be specified in
global configuration
test configuration
or individual
action commands
--- CODE BLOCK 4370 ---
export CYPRESS_WATCH_FOR_FILE_CHANGES=false
--- END CODE BLOCK ---
. Addresses
#871
#4356
Tests
tab in the Test Runner now orders folders before files. This
matches the ordering of most IDEs' file explorers. Addresses
#7334
Bugfixes:
Responses stubbed from
cy.intercept()
will now
automatically set
--- CODE BLOCK 4371 ---
CYPRESS_pageLoadTimeout=100000
--- END CODE BLOCK ---
--- CODE BLOCK 4372 ---
CYPRESS_PAGE_LOAD_TIMEOUT=100000
--- END CODE BLOCK ---
to permissive values unless explicitly
overridden. Fixes
#9264
--- CODE BLOCK 4375 ---
localhost:2020
--- END CODE BLOCK ---
error will no longer
throw during a race condition when using
cy.intercept()
. Fixes
#9170
HTTP responses that cannot have a body (like HTTP 304 and HTTP 204) can now be
awaited using
cy.intercept()
. Fixes
#8934
#8999
We fixed an issue where HTTP redirects could not be awaited using
cy.intercept()
unless dynamically intercepted.
Addressed in
#9097
Tests will no longer hang in certain situations when there's an error in a
--- CODE BLOCK 4376 ---
cypress.json
--- END CODE BLOCK ---
hook. Fixes
#9162
We no longer strip
--- CODE BLOCK 4380 ---
cypress/integration/foo_spec.js
--- END CODE BLOCK ---
from URLs when they are explicitly passed with query
parameters. Fixes
#9360
Fixed the regression in
--- CODE BLOCK 4381 ---
cypress run --spec 'cypress/integration/foo_spec.js'
--- END CODE BLOCK ---
behavior for elements with
--- CODE BLOCK 4382 ---
--spec foo_spec.js
--- END CODE BLOCK ---
, addresses
#8998
#9031
Deprecations:
Deprecations still work as before but will be removed from Cypress in a future
release. We encourage you to update your code now to remove uses of
deprecations.
--- CODE BLOCK 4383 ---
watchForFileChanges
--- END CODE BLOCK ---
has been deprecated and will be replaced in a future release.
Consider migrating to a different datetime formatter. Addresses
#8714
Misc:
We collect more environment variables from Bitbucket to better detect reruns.
Addresses
#9309
--- CODE BLOCK 4385 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 4387 ---
cypress.json
--- END CODE BLOCK ---
types are now included
for all actionable commands. Addresses
#8854
Dependency Updates:
Upgraded
--- CODE BLOCK 4388 ---
cypress run
--- END CODE BLOCK ---
from
--- CODE BLOCK 4391 ---
cy.reload()
--- END CODE BLOCK ---
--- CODE BLOCK 4392 ---
commandTimeout
--- END CODE BLOCK ---
. Addressed in
#9528
6.0.1
Released 11/30/2020
Bugfixes:
Chromium based browsers on version 87 will no longer show recorded videos as
frozen or blank. Fixes
#9265
We fixed a regression introduced in
5.0.0
that would cause an
--- CODE BLOCK 4394 ---
pageLoadTimeout
--- END CODE BLOCK ---
error
to throw when setting
--- CODE BLOCK 4396 ---
integrationFolder
--- END CODE BLOCK ---
in your tsconfig. Fixes
#8477
cy.screenshot()
no longer throws an
--- CODE BLOCK 4397 ---
integration
--- END CODE BLOCK ---
error when Cypress attempts to crop the image.
Fixes
#2034
cy.screenshot()
types won't mistakenly display the
command as deprecated. Fixes
#9303
Lower-cased HTTP methods can now be used with
cy.intercept()
. Fixes
#9313
6.0.0
Released 11/23/2020
Summary:
Cypress now offers full network stubbing support with the introduction of the
cy.intercept()
command (previously
--- CODE BLOCK 4398 ---
Cypress.Dom.isHidden()
--- END CODE BLOCK ---
With
cy.intercept()
your tests can intercept, modify
and wait on any type of HTTP request originating from your app. See our guide on
Migrating
--- CODE BLOCK 4399 ---
visitTimeout
--- END CODE BLOCK ---
--- CODE BLOCK 4400 ---
pageLoadTimeout
--- END CODE BLOCK ---
Breaking Changes:
Please read our
Migration Guide
which explains the changes in more detail and how to change your code to migrate
to Cypress 6.0.**
Cypress now always throws an error when asserting on an element that doesn't
exist in the DOM (unless you're asserting that the element should
--- CODE BLOCK 4401 ---
visitTimeout
--- END CODE BLOCK ---
). Assertions such as
--- CODE BLOCK 4402 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 4403 ---
pageLoadTimeout
--- END CODE BLOCK ---
--- CODE BLOCK 4406 ---
cy.reload()
--- END CODE BLOCK ---
, etc will now fail when used on non-existent DOM elements.
Addresses
#205
DOM elements where the CSS style (or ancestors) are
--- CODE BLOCK 4407 ---
example_spec.js
--- END CODE BLOCK ---
are no longer
considered visible. However these are still considered
actionable
any action commands
used to interact with the element will perform the action. This matches
browser's implementation on how they regard elements with
--- CODE BLOCK 4408 ---
example_spec.js
--- END CODE BLOCK ---
Addresses
#4474
The type yielded by
cy.wait(alias)
has changed in order
to support use of
cy.intercept()
. Addressed in
#9266
--- CODE BLOCK 4409 ---
example_spec.js
--- END CODE BLOCK ---
option has been removed and made the default
behavior. You can safely removed this configuration option. Addressed in
#9185
When using
.type()
.click()
on elements inside a
--- CODE BLOCK 4414 ---
integration
--- END CODE BLOCK ---
element, the events are now properly
triggered on the inside elements. This may cause unintended consequences if
you were relying on the previous behavior. Addressed in
#9066
We removed several deprecation errors around APIs that were removed in
versions of Cypress prior to 4.0.0. This will not cause any changes for anyone
upgrading from a 4.0+ version of Cypress. For a full list of all APIs affected
#8946
We updated our HTTP status codes and reason phrases to match Node.js
--- CODE BLOCK 4415 ---
supportFolder
--- END CODE BLOCK ---
. If you have code that relies on a reason phrase, then
this could affect you. Addressed in
#8969
JSON request and response bodies captured by
cy.intercept()
are now automatically parsed,
removing the need to manually do
--- CODE BLOCK 4416 ---
fixturesFolder
--- END CODE BLOCK ---
. Addressed in
#9280
Deprecations:
Deprecations still work as before but will be removed from Cypress in a future
release. We encourage you to update your code now to remove uses of
deprecations.
--- CODE BLOCK 4418 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 4420 ---
cypress/integration
--- END CODE BLOCK ---
have been deprecated. In a future release,
support for
--- CODE BLOCK 4422 ---
integrationFolder
--- END CODE BLOCK ---
--- CODE BLOCK 4423 ---
cypress.json
--- END CODE BLOCK ---
will be removed. We encourage you
to use
cy.intercept()
instead. See our guide on
Migrating
--- CODE BLOCK 4425 ---
cypress-cli
--- END CODE BLOCK ---
--- CODE BLOCK 4426 ---
cypress-cli
--- END CODE BLOCK ---
Addressed in
#9185
--- CODE BLOCK 4428 ---
fileServerFolder
--- END CODE BLOCK ---
has been deprecated. We encourage you to use
cy.intercept()
to intercept requests using the
Fetch API instead.
--- CODE BLOCK 4430 ---
x-cypress-error
--- END CODE BLOCK ---
was renamed to
cy.intercept()
. We
encourage you to update usages of
--- CODE BLOCK 4431 ---
x-cypress-stack
--- END CODE BLOCK ---
to use
cy.intercept()
. Addressed in
#9182
Features:
The new
cy.intercept()
command can be used to
manage the behavior of HTTP requests at the network layer. Addressed in
#9182
We now pass
--- CODE BLOCK 4435 ---
cypress/integration
--- END CODE BLOCK ---
to the Chrome browser flags by default.
This will write shared memory files into
--- CODE BLOCK 4436 ---
cypress/integration
--- END CODE BLOCK ---
instead of
--- CODE BLOCK 4438 ---
integration
--- END CODE BLOCK ---
. If
you're passing this flag in your
--- CODE BLOCK 4441 ---
cy.getCookies()
--- END CODE BLOCK ---
file, you can now remove this code.
Addresses
#5336
A warning is now displayed when passing invalid configuration keys through the
CLI. Addresses
#428
--- CODE BLOCK 4445 ---
onBeforeLoad
--- END CODE BLOCK ---
command now also displays the current Electron and
bundled Node versions. Addresses
#9180
--- CODE BLOCK 4459 ---
cypress run
--- END CODE BLOCK ---
command now accepts a
--- CODE BLOCK 4460 ---
cypress.json
--- END CODE BLOCK ---
flag that allows you
to print the version of specific components of Cypress. ie Electron, Node,
etc. Addresses
#9214
Bugfixes:
We fixed a regression introduced in
3.5.0
that would cause
.type()
to not type the entire string when focus was
called away from the target element. Fixes
#9254
.type()
.click()
now properly
work on elements inside a
--- CODE BLOCK 4466 ---
x-cypress-error
--- END CODE BLOCK ---
element. Fixes
#2717
#7721
We fixed a regression introduced in
5.6.0
that would cause the Test Runner
to crashes and display a white page when switching tabs while tests are
running. Fixes
#9151
Fixed an issue where
--- CODE BLOCK 4467 ---
x-cypress-stack
--- END CODE BLOCK ---
--- CODE BLOCK 4468 ---
CYPRESS_DEBUG
--- END CODE BLOCK ---
request bodies could be
incorrectly recalculated. Fixes
#9166
Documentation Changes:
Migration Guide
has a new section
for 6.0 migration.
Many of our docs examples have been updated to use
cy.intercept()
in place of
--- CODE BLOCK 4471 ---
npm install -g cypress
--- END CODE BLOCK ---
including
Network Requests
doc.
Misc:
Added the type of
--- CODE BLOCK 4473 ---
cypress remove:ids
--- END CODE BLOCK ---
and changed
--- CODE BLOCK 4476 ---
cy.viewport('ipad-2')
--- END CODE BLOCK ---
optional for
Response types. Addresses
#9275
Dependency Updates
Upgraded Chrome browser version used during
--- CODE BLOCK 4483 ---
cy.reload()
--- END CODE BLOCK ---
and when selecting
Electron browser in
--- CODE BLOCK 4487 ---
Cypress.Promise
--- END CODE BLOCK ---
from
--- CODE BLOCK 4488 ---
Cypress.Blob
--- END CODE BLOCK ---
--- CODE BLOCK 4489 ---
Cypress.moment
--- END CODE BLOCK ---
. Addressed in
#9222
Upgraded bundled Node.js version from
--- CODE BLOCK 4495 ---
cy.reload()
--- END CODE BLOCK ---
--- CODE BLOCK 4496 ---
window.location.reload
--- END CODE BLOCK ---
. Addressed in
#9222
Upgraded
--- CODE BLOCK 4497 ---
cy.viewport()
--- END CODE BLOCK ---
from
--- CODE BLOCK 4498 ---
cy.viewport()
--- END CODE BLOCK ---
--- CODE BLOCK 4499 ---
cypress.json
--- END CODE BLOCK ---
. Addressed in
#9222
5.6.0
Released 11/09/2020
Features:
You can now dynamically add aliases for requests intercepted via
--- CODE BLOCK 4502 ---
Cypress Warning:
--- END CODE BLOCK ---
. See an example. Addresses
#387
You can now run all integration specs or all component specs separately (or a
filtered list of specs) by clicking the appropriate button in the Test Runner
in the
Tests
tab. Addresses
#8203
Added a new modifier syntax to
cy.type()
. You can now
type shortcuts like
--- CODE BLOCK 4506 ---
api.cypress.io
--- END CODE BLOCK ---
. Addressed in
#5694
We now show a modal with release notes when available when there is a new
version of Cypress. Addressed in
#9006
In the Test Runner's
Settings
Runs
tab you can now quickly copy the
project id configuration and record key using a copy to clipboard icon.
Addresses
#9002
Bugfixes:
Fixed a regression introduced in
4.12.0
where snapshotting caused images to load too many times. Fixes
#8679
Using
cy.visit()
on sites with
--- CODE BLOCK 4508 ---
cy.server()
--- END CODE BLOCK ---
--- CODE BLOCK 4516 ---
{force404: false}
--- END CODE BLOCK ---
followed by parameters (like
--- CODE BLOCK 4517 ---
waitForAnimations
--- END CODE BLOCK ---
) will no
longer throw an error about visiting a site with an invalid content-type.
Fixes
#8506
--- CODE BLOCK 4518 ---
animationDistanceThreshold
--- END CODE BLOCK ---
error will no longer
throw when using
--- CODE BLOCK 4526 ---
cypress.json
--- END CODE BLOCK ---
. Fixes
#8926
Awaiting a request body when providing a static response stub in
--- CODE BLOCK 4529 ---
cy.server()
--- END CODE BLOCK ---
should now work properly. Addressed in
#9059
The way that intercepted
--- CODE BLOCK 4530 ---
force404: true
--- END CODE BLOCK ---
requests are displayed in the Command
Log has been improved, including showing the progress bar correctly. Addresses
#9053
--- CODE BLOCK 4531 ---
force404: false
--- END CODE BLOCK ---
error will no longer throw
when attempting to generate the stack trace from an error thrown in the
application. Fixes
#7915
Stack traces in the Command Log originating from application errors where the
location is unavailable will no longer show as a clickable link to open in
IDE. Fixes
#9106
When using the
--- CODE BLOCK 4533 ---
.is(":visible")
--- END CODE BLOCK ---
prefix as a stubbed response to
--- CODE BLOCK 4535 ---
display: none
--- END CODE BLOCK ---
, JSON
fixtures containing only a number or boolean will no longer throw an error.
Fixes
#4899
Fixed an issue causing failed subresource integrity checks for external
scripts. Fixes
#8983
#9049
, and
#8992
Misc:
Typings for
.invoke()
.its()
now allow for a
--- CODE BLOCK 4536 ---
visibility: hidden
--- END CODE BLOCK ---
option. Addresses
#9079
Typings for
--- CODE BLOCK 4539 ---
Cypress.Dom.isHidden
--- END CODE BLOCK ---
now allow for parameterizing the task return type.
Addresses
#7136
A clearer error is printed during
--- CODE BLOCK 4549 ---
history.back
--- END CODE BLOCK ---
when no cached versions
are found. Addresses
#6303
Dependency Updates:
Upgraded
--- CODE BLOCK 4550 ---
history.forward
--- END CODE BLOCK ---
from
--- CODE BLOCK 4552 ---
should("be.hidden")
--- END CODE BLOCK ---
--- CODE BLOCK 4553 ---
<button>Save</button>
--- END CODE BLOCK ---
. Addressed in
#8979
Upgraded
--- CODE BLOCK 4554 ---
<div>...</div>
--- END CODE BLOCK ---
from
--- CODE BLOCK 4559 ---
cy.server()
--- END CODE BLOCK ---
--- CODE BLOCK 4560 ---
responseTimeout
--- END CODE BLOCK ---
. Addressed in
#9068
Upgraded
--- CODE BLOCK 4564 ---
commandTimeout
--- END CODE BLOCK ---
from
--- CODE BLOCK 4567 ---
requestTimeout
--- END CODE BLOCK ---
--- CODE BLOCK 4569 ---
responseTimeout
--- END CODE BLOCK ---
. Addressed in
#8979
Removed
--- CODE BLOCK 4571 ---
requestTimeout
--- END CODE BLOCK ---
. This should remove some security warnings that
were shown during install. Addresses
#8314
5.5.0
Released 10/26/2020
Features:
cy.viewport()
has a new
--- CODE BLOCK 4572 ---
responseTimeout
--- END CODE BLOCK ---
preset.
Addresses
#8889
.type()
now fires the
--- CODE BLOCK 4574 ---
{stub: false}
--- END CODE BLOCK ---
event during typing.
Note: Firefox does not support the
--- CODE BLOCK 4575 ---
cy.server()
--- END CODE BLOCK ---
event
. Addresses
#7088
Bugfixes:
Updated the Cypress proxy layer to proxy HTTPS traffic from non-AUT origins.
Addressed in
#8827
This fixed an issue with
--- CODE BLOCK 4577 ---
requestTimeout
--- END CODE BLOCK ---
where HTTPS requests to a non-AUT
origin would not be intercepted as expected.
--- CODE BLOCK 4578 ---
cy.request()
--- END CODE BLOCK ---
now properly handles passing a method as its first argument.
Fixes
#8729
Fixed an issue with
--- CODE BLOCK 4579 ---
responseTimeout
--- END CODE BLOCK ---
where a "Cannot set property response of
undefined" error would occasionally occur. Fixes
#8858
Headers field names passed to
--- CODE BLOCK 4580 ---
{force: true}
--- END CODE BLOCK ---
now case-insensitively match
against the field names of incoming HTTP requests. Fixes
#8921
Routes that stub fixtures for binary resources (including images) made with
--- CODE BLOCK 4581 ---
history.pushState
--- END CODE BLOCK ---
now serve the correct mime-type and content. Fixes
#8623
When
experimentalNetworkStubbing
is enabled,
using
cy.visit()
to URLs that redirect and set
Transfer-Encoding: chunked will no longer fail in Cypress with a "Parse
Error". Fixes
#8497
--- CODE BLOCK 4582 ---
history.replaceState
--- END CODE BLOCK ---
through the
Module API
now has a
--- CODE BLOCK 4584 ---
arraybuffer
--- END CODE BLOCK ---
property in the results matching the correct CLI types (
--- CODE BLOCK 4585 ---
xhr.responseBody
--- END CODE BLOCK ---
--- CODE BLOCK 4588 ---
arraybuffer
--- END CODE BLOCK ---
). Addresses
#8798
When a value containing an
--- CODE BLOCK 4592 ---
cypress run
--- END CODE BLOCK ---
character is passed to the
--- CODE BLOCK 4593 ---
undefined is not a function
--- END CODE BLOCK ---
flag, Cypress now properly reads it as a string. Fixes
#8874
Misc:
Updated type definitions to allow for passed either
--- CODE BLOCK 4597 ---
window.history.go()
--- END CODE BLOCK ---
--- CODE BLOCK 4598 ---
window.history.back()
--- END CODE BLOCK ---
--- CODE BLOCK 4599 ---
window.history.forward()
--- END CODE BLOCK ---
alone. Addresses
#8869
Dependency Updates:
Upgraded
--- CODE BLOCK 4600 ---
cypress run
--- END CODE BLOCK ---
from
--- CODE BLOCK 4602 ---
cy.commands
--- END CODE BLOCK ---
--- CODE BLOCK 4606 ---
Cannot call cy.method() because the current subject has been removed or detached from the DOM.
--- END CODE BLOCK ---
. Addressed in
#8927
#8975
This addresses a Chrome security issue, CVE-2020-15999. Addresses
#8922
Upgraded
--- CODE BLOCK 4611 ---
{multiple: true}
--- END CODE BLOCK ---
from
--- CODE BLOCK 4612 ---
{cache: false}
--- END CODE BLOCK ---
--- CODE BLOCK 4614 ---
cypress.json
--- END CODE BLOCK ---
. Addressed in
#8945
Upgraded
--- CODE BLOCK 4615 ---
cypress.json
--- END CODE BLOCK ---
from
--- CODE BLOCK 4616 ---
Cypress.config
--- END CODE BLOCK ---
--- CODE BLOCK 4617 ---
Cypress.env
--- END CODE BLOCK ---
. Addressed in
#8964
5.4.0
Released 10/14/2020
Features:
You can now run
cypress cache prune
delete all installed Cypress versions from the cache except for the
currently-installed version. Addresses
#5972
There's a new
--- CODE BLOCK 4619 ---
The XHR server is unavailable or missing...
--- END CODE BLOCK ---
option for the
cypress cache list
command
that prints the sizes of the Cypress cache folders. Addresses
#6404
For video recordings of runs, there is now a video chapter key for each test.
If your video player supports chapters, you can move to the start of each test
right away. Addresses
#3626
In Windows, you can now append the browser type to the end of the path passed
to the
--- CODE BLOCK 4620 ---
cy.server()
--- END CODE BLOCK ---
flag, like
--- CODE BLOCK 4626 ---
window.fetch
--- END CODE BLOCK ---
, to help detect the
browser type. Addresses
#6389
cy.viewport()
has new
--- CODE BLOCK 4627 ---
domain cookies
--- END CODE BLOCK ---
--- CODE BLOCK 4628 ---
visitTimeout
--- END CODE BLOCK ---
, and
--- CODE BLOCK 4629 ---
requestTimeout
--- END CODE BLOCK ---
presets. Addressed in
#8624
When there is a new version of Cypress available, the update modal has a new
design with 'copy to clipboard' buttons to copy the upgrade commands.
Addressed in
#8751
Command Log
can be hidden
by passing the
--- CODE BLOCK 4630 ---
visitTimeout
--- END CODE BLOCK ---
environment variable during
--- CODE BLOCK 4634 ---
{multiple: true}
--- END CODE BLOCK ---
--- CODE BLOCK 4635 ---
cypress.json
--- END CODE BLOCK ---
to be used as a tool to debug performance
issues. Addressed in
#8689
Bugfixes:
We fixed a regression in
5.0.0
where the
--- CODE BLOCK 4636 ---
cypress.json
--- END CODE BLOCK ---
option
had no effect in Electron. Fixes
#8399
Tests will no longer hang and now properly throw when there is an error thrown
from a
--- CODE BLOCK 4637 ---
cypress.json
--- END CODE BLOCK ---
event listener. Fixes
#2271
#8701
When a command is chained after
.within()
--- CODE BLOCK 4638 ---
Cypress.Cookies
--- END CODE BLOCK ---
is called inside it, the scope will no longer
permanently change. Fixes
#2106
#4672
#4757
, and
#5183
Dual commands like
cy.contains()
when used after an
.each()
commands now query as expected. Fixes
#4921
--- CODE BLOCK 4642 ---
content-security-policy
--- END CODE BLOCK ---
is no longer added to the URL when
--- CODE BLOCK 4646 ---
cypress.json
--- END CODE BLOCK ---
has param(s). Fixes
#2101
When using
--- CODE BLOCK 4647 ---
cypress.json
--- END CODE BLOCK ---
the route handler timeouts will no longer leak into
other tests and cause random failures. Addressed in
#8727
--- CODE BLOCK 4648 ---
cypress.json
--- END CODE BLOCK ---
is now available when using
cy.wait()
on an aliased
--- CODE BLOCK 4650 ---
cypress run
--- END CODE BLOCK ---
route which had not been intercepted. Fixes
#8695
Re-running failed build steps in Bitbucket will no longer create a new run on
the Cypress Dashboard. Fixes
#8720
The forced garbage collection timer will no longer display when using a
version of Firefox newer than 80. Fixes
#8725
The browser dropdown is no longer covered when opened from the Runs tab in the
Test Runner. Fixed in
#8745
Fixed an issue where preprocessor-related plugins would cause tests not to run
and a duplicate instance of Cypress to be spawned. Fixes
#8634
Misc:
Improved type definitions for
--- CODE BLOCK 4651 ---
cy.request()
--- END CODE BLOCK ---
. Addresses
#8694
#8782
The Test Runner now shows an indicator in the footer and a toast notification
if there is a new version available. Addressed in
#8702
#8803
Dependency Updates:
Upgraded Chrome browser version used during
--- CODE BLOCK 4654 ---
Cypress.addParentCommand("dashboard.setSlider", ...)
--- END CODE BLOCK ---
and when selecting
Electron browser in
--- CODE BLOCK 4655 ---
cy.cmd("dashboard.setSlider", arg1, arg2)
--- END CODE BLOCK ---
from
--- CODE BLOCK 4656 ---
Environment Variable
--- END CODE BLOCK ---
--- CODE BLOCK 4657 ---
Cypress.env
--- END CODE BLOCK ---
. Addressed in
#8406
Upgraded bundled Node.js version from
--- CODE BLOCK 4659 ---
cy.server({stub: false})
--- END CODE BLOCK ---
--- CODE BLOCK 4660 ---
Cypress.Server.defaults({})
--- END CODE BLOCK ---
. Addressed in
#8406
Upgraded
--- CODE BLOCK 4663 ---
FakeXMLHttpRequest
--- END CODE BLOCK ---
from
--- CODE BLOCK 4664 ---
XMLHttpRequest
--- END CODE BLOCK ---
--- CODE BLOCK 4665 ---
Fully Qualified Domain Name
--- END CODE BLOCK ---
. Addressed in
#8406
Upgraded
--- CODE BLOCK 4666 ---
requestJSON
--- END CODE BLOCK ---
from
--- CODE BLOCK 4667 ---
responseJSON
--- END CODE BLOCK ---
--- CODE BLOCK 4669 ---
Network Tab
--- END CODE BLOCK ---
. Addressed in
#8786
Upgraded
--- CODE BLOCK 4670 ---
{stub: false}
--- END CODE BLOCK ---
from
--- CODE BLOCK 4676 ---
Content-Type
--- END CODE BLOCK ---
--- CODE BLOCK 4677 ---
Content-Type
--- END CODE BLOCK ---
. Addressed in
#8800
5.3.0
Released 9/28/2020
Features:
Firefox support is now out of beta! 🎉 Firefox 80 and newer are now officially
stable when used with Cypress. Addresses
#8241
Versions of Firefox older than 80 can still be used, but will be subject to
--- CODE BLOCK 4678 ---
application/json
--- END CODE BLOCK ---
workaround. The desktop GUI will display a warning
if such versions are used.
Bugfixes:
Fixed a bug where
--- CODE BLOCK 4679 ---
Content-Type
--- END CODE BLOCK ---
would not automatically JSONify an empty array
handler. Addresses
#8532
Fixed a bug where objects yielded by using
--- CODE BLOCK 4683 ---
cy.request()
--- END CODE BLOCK ---
on a
--- CODE BLOCK 4684 ---
request body
--- END CODE BLOCK ---
alias
would not always have a
--- CODE BLOCK 4685 ---
request headers
--- END CODE BLOCK ---
property. Addresses
#8536
Fixed an issue where
--- CODE BLOCK 4686 ---
response body
--- END CODE BLOCK ---
routes would not be able to intercept
requests to HTTPS destinations on a different origin. Addresses
#8487
Fixed an issue where subjects became
--- CODE BLOCK 4687 ---
response headers
--- END CODE BLOCK ---
after certain assertion
failures. Addresses
#5763
Fixed an issue where a
--- CODE BLOCK 4688 ---
cy.server()
--- END CODE BLOCK ---
with no arguments passed would receive
--- CODE BLOCK 4690 ---
requestJSON
--- END CODE BLOCK ---
as the first argument instead of
--- CODE BLOCK 4691 ---
responseJSON
--- END CODE BLOCK ---
. Addresses
#5913
Fixed an issue preventing users from passing the config-file argument when
starting cypress through the node module API. Addresses
#8632
Fixed an issue where
--- CODE BLOCK 4699 ---
Uncaught Error
--- END CODE BLOCK ---
s to a relative URL containing
--- CODE BLOCK 4702 ---
{force: true}
--- END CODE BLOCK ---
would not
work. Addresses
#5090
Fixed an issue where Mocha hooks could still be triggered after the Test
Runner was manually stopped. Addresses
#8621
Fixed an issue where
--- CODE BLOCK 4705 ---
{force: true}
--- END CODE BLOCK ---
failed when given a cookie name with a
--- CODE BLOCK 4719 ---
cy.request()
--- END CODE BLOCK ---
prefix. Addresses
#8261
Fixed an issue where a misleading error was displayed when test code threw an
exception with a non-
--- CODE BLOCK 4720 ---
cy.fixture()
--- END CODE BLOCK ---
object. Addresses
#7870
Misc:
The proxy now omits the
--- CODE BLOCK 4723 ---
cy.should('contain', '...')
--- END CODE BLOCK ---
header the same
way that it does for
--- CODE BLOCK 4725 ---
line-height
--- END CODE BLOCK ---
. Addresses
#7936
Added a
--- CODE BLOCK 4730 ---
cy.window()
--- END CODE BLOCK ---
property to
--- CODE BLOCK 4731 ---
Command Log
--- END CODE BLOCK ---
objects. Addresses
#8580
Updated types to no longer use deprecated Mocha interfaces. Addresses
#5795
Passing an empty string to
--- CODE BLOCK 4732 ---
cy.document()
--- END CODE BLOCK ---
now takes precedence over
npm config. Addresses
#8488
5.2.0
Released 9/15/2020
Features:
Added the configuration option
--- CODE BLOCK 4733 ---
Command Log
--- END CODE BLOCK ---
for enabling shadow DOM
querying globally, per-suite, per-test, or programmatically. Addresses
#8442
Added a
--- CODE BLOCK 4734 ---
numElements
--- END CODE BLOCK ---
option to request interception with
--- CODE BLOCK 4736 ---
cypress run
--- END CODE BLOCK ---
allowing redirects to be followed before continuing to response interception.
Addresses
#7967
Added the capability to specify
--- CODE BLOCK 4742 ---
Disable Cache
--- END CODE BLOCK ---
--- CODE BLOCK 4743 ---
Network Tab
--- END CODE BLOCK ---
when stubbing
static responses with
--- CODE BLOCK 4746 ---
parent command
--- END CODE BLOCK ---
. Addresses
#7661
Installing Cypress pre-releases no longer requires setting the
--- CODE BLOCK 4749 ---
cy.wait(function)
--- END CODE BLOCK ---
environment variable. Addresses
#8482
Performance Improvements:
Fixed a performance issue which led to CPU bottlenecking during Cypress runs.
Addresses
#8012
#8297
Bugfixes:
Fixed an issue where using TypeScript path aliases in the plugins file would
error. Addresses
#8555
Fixed an issue where using
--- CODE BLOCK 4754 ---
INVALID_STATE_ERR
--- END CODE BLOCK ---
within a shadow root would not
yield the correct element. Addresses
#8494
Fixed an issue where querying the shadow DOM in a
--- CODE BLOCK 4755 ---
expected <x> element to exist
--- END CODE BLOCK ---
callback would
throw the error
--- CODE BLOCK 4757 ---
cy.server()
--- END CODE BLOCK ---
. Addresses
#8478
Fixed an issue with
--- CODE BLOCK 4761 ---
should("have.length", "1")
--- END CODE BLOCK ---
--- CODE BLOCK 4767 ---
cy.wait(Number)
--- END CODE BLOCK ---
special characters
moving the cursor to the current line instead of the entire text editable when
typing in a
--- CODE BLOCK 4768 ---
cy.wait(Function)
--- END CODE BLOCK ---
element. Addresses
#8465
Fixed an issue where typing into a manually-focused number input would prepend
the number instead of appending it. Addresses
#7170
--- CODE BLOCK 4772 ---
cypress.json
--- END CODE BLOCK ---
now fires a
--- CODE BLOCK 4773 ---
should('have.attr', 'href', '/users/1')
--- END CODE BLOCK ---
event instead of an
--- CODE BLOCK 4774 ---
eventually.have.length
--- END CODE BLOCK ---
event.
Addresses
#6125
#5650
Fixed long selectors in the selector playground text input overflowing other
page elements. Addresses
#8247
#4184
Fixed an issue where assertions on
--- CODE BLOCK 4775 ---
should('have.length')
--- END CODE BLOCK ---
would be called twice.
Addresses
#6672
Fixed an issue that caused the "Open in IDE" button on hooks and tests not to
appear in Firefox. Addresses
#8257
Fixed an issue causing Cypress to hang on test retry in run mode with certain
assertions. Addresses
#8363
Documentation Changes:
Fixed examples of delaying and throttling responses with
--- CODE BLOCK 4784 ---
{ Object (0, length, ...) }
--- END CODE BLOCK ---
Addresses
#8489
Added examples of using a response function with
--- CODE BLOCK 4785 ---
<button#primary.btn-large>
--- END CODE BLOCK ---
. Addresses
#8468
Removed unmaintained languages. English docs is the only supported language by
the Cypress team. We greatly appreciate the contributions from the community
for other languages, but these docs are largely stale, unmaintained, and
partial. The Cypress team will seek out more scalable docs internalization
implementation in the future.
Misc:
--- CODE BLOCK 4791 ---
chai-jquery
--- END CODE BLOCK ---
configuration flag has been removed. It is
no longer necessary to enable shadow DOM testing.
Improved the error message when the subject provided to
--- CODE BLOCK 4792 ---
cy.contains()
--- END CODE BLOCK ---
is not a
shadow host. Addresses
#8530
Improved the error message when the Cypress binary is not executable. It now
recommends trying to clear the cache and re-install. Addresses
#8397
Added missing type declarations for the
--- CODE BLOCK 4794 ---
input[type=submit]
--- END CODE BLOCK ---
command.
Updated the type declaration for
--- CODE BLOCK 4797 ---
{log: false}
--- END CODE BLOCK ---
, adding
--- CODE BLOCK 4800 ---
cypress.json
--- END CODE BLOCK ---
the list of allowed return types. Addresses
#7807
5.1.0
Released 9/1/2020
Features:
Introducing
experimental
full network stubbing support 🎉.
With
--- CODE BLOCK 4806 ---
{log: false}
--- END CODE BLOCK ---
enabled, the
--- CODE BLOCK 4814 ---
cy.screenshot()
--- END CODE BLOCK ---
command is
available. Addressed in
#4176
By using
--- CODE BLOCK 4816 ---
cypress driver
--- END CODE BLOCK ---
, your tests can intercept, modify, and wait on any
type of HTTP request originating from your app, including
--- CODE BLOCK 4825 ---
cy.contains()
--- END CODE BLOCK ---
--- CODE BLOCK 4827 ---
traversal commands
--- END CODE BLOCK ---
requests, beacons, and subresources (like iframes and scripts).
Outgoing HTTP requests can be modified before reaching the destination
server, and the HTTP response can be intercepted as well before it reaches
the browser.
See the
--- CODE BLOCK 4830 ---
cy.contains()
--- END CODE BLOCK ---
docs for more information on how to enable this
experiment.
--- CODE BLOCK 4833 ---
cy.contains()
--- END CODE BLOCK ---
now accepts an
--- CODE BLOCK 4854 ---
bottomRight
--- END CODE BLOCK ---
option for specifying the
constructor with which to create the event to trigger. Addresses
#5650
Bugfixes:
Improved warnings for when user is exceeding test limits of the free Dashboard
plan. Addresses
#8409
Added
--- CODE BLOCK 4858 ---
onBeforeLoad
--- END CODE BLOCK ---
--- CODE BLOCK 4863 ---
Cypress.Mouse
--- END CODE BLOCK ---
types. Addresses
#8405
Added types for
--- CODE BLOCK 4865 ---
cy.fixture()
--- END CODE BLOCK ---
field on
--- CODE BLOCK 4875 ---
cy.viewport()
--- END CODE BLOCK ---
. Addresses
#8256
Fixed a typo in type definitions. Addresses
#8417
Cypress now resolves and loads tsconfig.json for TypeScript projects starting
from the plugins directory. Addresses
#8359
Fixed an issue where, if npm config's
--- CODE BLOCK 4876 ---
orientation
--- END CODE BLOCK ---
is set, unexpected behavior
could occur. Addresses
#8287
Fixed an issue where nesting hooks within other hooks caused the test to never
finish. Addresses
#8350
Fixed an issue in where tests would unexpectedly fail with a "Can't resolve
'async_hooks'" error. Addresses
#8375
Fixed an issue where return values from blob utils were mistaken for promises
and could cause errors. Addresses
#8365
Fixed an issue with loading
--- CODE BLOCK 4880 ---
spec_helper.js
--- END CODE BLOCK ---
files. Addresses
#8361
Fixed an issue causing tests to run slowly in Electron. Addresses
#7930
Using
--- CODE BLOCK 4884 ---
Cypress.command
--- END CODE BLOCK ---
with only chainer assertions will now throw an error.
Addresses
#883
--- CODE BLOCK 4885 ---
Cypress.Log.command
--- END CODE BLOCK ---
now includes the
--- CODE BLOCK 4886 ---
cy.contains()
--- END CODE BLOCK ---
property in the event object when
appropriate. Addresses
#3686
Fixed an issue where Cypress would not detect newer 64-bit installations of
Chrome on Windows. Addresses
#8425
Fixed an issue where Cypress would not detect per-user Firefox installations
on Windows. Addresses
#8432
Dependency Updates:
Updated dependency
--- CODE BLOCK 4889 ---
{respond: false}
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4893 ---
cy.viewport()
--- END CODE BLOCK ---
. Addresses
#8387
Updated dependency
--- CODE BLOCK 4897 ---
cypress.json
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4898 ---
viewportWidth
--- END CODE BLOCK ---
. Addresses
#8388
Updated dependency
--- CODE BLOCK 4899 ---
viewportHeight
--- END CODE BLOCK ---
to version
--- CODE BLOCK 4911 ---
console.table
--- END CODE BLOCK ---
. Addresses
#8436
5.0.0
Released 8/19/2020
Summary:
Cypress now includes support for test retries! Similar to how Cypress will retry
assertions when they fail, test retries will allow you to automatically retry a
failed test prior to marking it as failed. Read our new guide on
Test Retries
for more details.
Breaking Changes:
Please read our
Migration Guide
which explains the changes in more detail and how to change your code to migrate
to Cypress 5.0.**
--- CODE BLOCK 4913 ---
preventedDefault
--- END CODE BLOCK ---
plugin has been deprecated in favor of
test retries
built into Cypress. Addresses
#1313
Cypress.Cookies.defaults()
--- CODE BLOCK 4915 ---
{selectall}
--- END CODE BLOCK ---
option
has been renamed to
--- CODE BLOCK 4917 ---
{backspace}
--- END CODE BLOCK ---
to more closely reflect its behavior. Addressed
#7782
--- CODE BLOCK 4921 ---
{leftarrow}
--- END CODE BLOCK ---
configuration has been renamed to
blockHosts
to more closely reflect
its behavior. Addressed in
#7622
--- CODE BLOCK 4922 ---
{rightarrow}
--- END CODE BLOCK ---
--- CODE BLOCK 4933 ---
preventingDefault
--- END CODE BLOCK ---
option has been renamed to
--- CODE BLOCK 4939 ---
KeyboardEvents
--- END CODE BLOCK ---
to more
closely reflect its behavior. Addresses
#6642
--- CODE BLOCK 4951 ---
action command
--- END CODE BLOCK ---
is now a requirement to run Cypress on Linux. Addressed in
#7791
Values yielded by
cy.setCookie()
cy.getCookie()
, and
cy.getCookies()
will now contain the
--- CODE BLOCK 4953 ---
input[type=number]
--- END CODE BLOCK ---
property if specified. Addresses
#6892
--- CODE BLOCK 4954 ---
[contenteditable]
--- END CODE BLOCK ---
configuration flag has been removed,
since this behavior is now the default. Addresses
#6892
The return type of the
Cypress.Blob
methods
--- CODE BLOCK 4957 ---
.dblclick()
--- END CODE BLOCK ---
--- CODE BLOCK 4958 ---
console.groups
--- END CODE BLOCK ---
--- CODE BLOCK 4963 ---
cy.contains()
--- END CODE BLOCK ---
, and
--- CODE BLOCK 4970 ---
cypress.json
--- END CODE BLOCK ---
have changed from
--- CODE BLOCK 4971 ---
cypress.json
--- END CODE BLOCK ---
--- CODE BLOCK 4983 ---
{force: true}
--- END CODE BLOCK ---
. Addresses
#6001
Cypress no longer supports file paths with a question mark
--- CODE BLOCK 4985 ---
AssertionErrors
--- END CODE BLOCK ---
or exclamation
mark
--- CODE BLOCK 4987 ---
{timeout: num}
--- END CODE BLOCK ---
in them. We now use the
webpack preprocessor
by default and it does not support files with question marks or exclamation
marks. Addressed in
#7982
For TypeScript compilation of spec, support, and plugins files, the
--- CODE BLOCK 4988 ---
{timeout: num}
--- END CODE BLOCK ---
option is no longer coerced to
--- CODE BLOCK 4989 ---
commandTimeout
--- END CODE BLOCK ---
. If you need to
utilize
--- CODE BLOCK 4990 ---
cypress.json
--- END CODE BLOCK ---
, set it in your
--- CODE BLOCK 4994 ---
crossorigin
--- END CODE BLOCK ---
. Addresses
#7575
Cypress now requires TypeScript 3.4+. Addressed in
#7856
Installing Cypress on your system now requires Node.js 10+. Addresses
#6574
In spec files, the values for the globals
--- CODE BLOCK 4995 ---
crossorigin
--- END CODE BLOCK ---
--- CODE BLOCK 4999 ---
cy.fixture()
--- END CODE BLOCK ---
longer include leading slashes. Addressed in
#7982
Features:
There's a new
--- CODE BLOCK 5012 ---
cy.document()
--- END CODE BLOCK ---
configuration option to configure the number of times
to retry a failing test. Addresses
#1313
.click()
.dblclick()
, and
.rightclick()
now accept options
--- CODE BLOCK 5022 ---
{log: false}
--- END CODE BLOCK ---
--- CODE BLOCK 5024 ---
contenteditable
--- END CODE BLOCK ---
--- CODE BLOCK 5025 ---
page loading
--- END CODE BLOCK ---
, and
--- CODE BLOCK 5033 ---
{force: true}
--- END CODE BLOCK ---
to hold down key combinations while
clicking. Addresses
#486
You can now chain
--- CODE BLOCK 5034 ---
CypressError
--- END CODE BLOCK ---
off of
--- CODE BLOCK 5042 ---
{force: true}
--- END CODE BLOCK ---
--- CODE BLOCK 5046 ---
cy.clearCookie()
--- END CODE BLOCK ---
to disabled
snapshots during those commands. For example:
--- CODE BLOCK 5047 ---
cy.clearCookies()
--- END CODE BLOCK ---
Addresses
#3849
Bugfixes:
The error
--- CODE BLOCK 5049 ---
{log: false}
--- END CODE BLOCK ---
will no longer incorrectly
throw when rerunning tests in the Test Runner. Fixes
#7874
#8193
Cypress will no longer throw a
--- CODE BLOCK 5050 ---
cy.contains()
--- END CODE BLOCK ---
error during
--- CODE BLOCK 5055 ---
action command
--- END CODE BLOCK ---
Firefox versions >= 75. Fixes
#6813
The error
--- CODE BLOCK 5062 ---
Actual Element Clicked
--- END CODE BLOCK ---
will no longer throw when calling
--- CODE BLOCK 5087 ---
cy.clearCookies()
--- END CODE BLOCK ---
on an element in the shadow dom. Fixes
#7986
Cypress
environment variables
that
accept arrays as their value will now properly evaluate as arrays. Fixes
#6810
Elements having
--- CODE BLOCK 5092 ---
content-encoding: chunked
--- END CODE BLOCK ---
will no longer be considered hidden if it
has child elements within it that are visible. Fixes
#6183
When
experimentalShadowDomSupport
enabled,
.parent()
.parentsUntil()
commands now work correctly in
shadow dom as well as passing a selector to
.parents()
when the subject is in the shadow dom.
Fixed in
#8202
Screenshots will now be correctly taken when a test fails in an
--- CODE BLOCK 5093 ---
window.location
--- END CODE BLOCK ---
--- CODE BLOCK 5098 ---
replaceState
--- END CODE BLOCK ---
hook after the hook has already passed. Fixes
#3744
Cypress will no longer report screenshots overwritten in a
--- CODE BLOCK 5099 ---
HTML5 History
--- END CODE BLOCK ---
onAfterScreenshot
option as a unique screenshot. Fixes
#8079
Taking screenshots will no longer fail when the screenshot names are too long
for the filesystem to accept. Fixes
#2403
The "last used browser" will now be correctly remembered during
--- CODE BLOCK 5101 ---
link[rel=stylesheet]
--- END CODE BLOCK ---
if a non-default-channel browser was selected. Fixes
#8281
For TypeScript projects,
--- CODE BLOCK 5104 ---
beforeunload
--- END CODE BLOCK ---
will now be loaded and used to
configure TypeScript compilation of spec and support files. Fixes
#7006
#7503
--- CODE BLOCK 5105 ---
beforeunload
--- END CODE BLOCK ---
now correctly show the number of passed and failed tests when
a test passes but the
--- CODE BLOCK 5108 ---
cypress-ruby
--- END CODE BLOCK ---
fails. Fixes
#7730
The Developer Tools menu will now always display in Electron when switching
focus from Specs to the Test Runner. Fixes
#3559
Documentation Changes:
We have a new guide on
Test Retries
Migration Guide
has a new section
for 5.0 migration.
Misc:
Cypress now uses the
webpack preprocessor
by default to preprocess spec files.
Runs
tab within the Test Runner has a new improved design when the
project has not been set up or login is required. Addressed in
#8141
The type for the
--- CODE BLOCK 5109 ---
cypress-node
--- END CODE BLOCK ---
object returned from
cy.window()
is now correct. Addresses
#7856
The type definition for Cypress's
--- CODE BLOCK 5121 ---
eventually.have.length
--- END CODE BLOCK ---
can now be extended.
Addresses
#7856
The type definition for
--- CODE BLOCK 5122 ---
{length: n}
--- END CODE BLOCK ---
has been added. Addresses
#7877
Dependency Updates
Upgraded Chrome browser version used during cypress run and when selecting
Electron browser in cypress open from
--- CODE BLOCK 5125 ---
cy.server()
--- END CODE BLOCK ---
--- CODE BLOCK 5127 ---
cy.server()
--- END CODE BLOCK ---
. Addressed in
#7791
Upgraded bundled Node.js version from
--- CODE BLOCK 5131 ---
cy.server()
--- END CODE BLOCK ---
--- CODE BLOCK 5136 ---
cy.wait('@getUsers.request')
--- END CODE BLOCK ---
. Addressed in
#7791
Upgraded
--- CODE BLOCK 5138 ---
{respond: false}
--- END CODE BLOCK ---
from
--- CODE BLOCK 5142 ---
pending command
--- END CODE BLOCK ---
--- CODE BLOCK 5152 ---
runnable.ctx
--- END CODE BLOCK ---
. Addressed in
#7650
Upgraded
--- CODE BLOCK 5167 ---
onBeforeLoad
--- END CODE BLOCK ---
from
--- CODE BLOCK 5176 ---
../../assets/app.css
--- END CODE BLOCK ---
--- CODE BLOCK 5180 ---
cy.contains()
--- END CODE BLOCK ---
. Addressed in
#7650
Upgraded
--- CODE BLOCK 5182 ---
cy.focused()
--- END CODE BLOCK ---
from
--- CODE BLOCK 5185 ---
sinon-as-promised
--- END CODE BLOCK ---
--- CODE BLOCK 5192 ---
cy.server()
--- END CODE BLOCK ---
. Addressed in
#7791
#8235
Upgraded
--- CODE BLOCK 5196 ---
onBeforeLoad
--- END CODE BLOCK ---
from
--- CODE BLOCK 5201 ---
javascripts
--- END CODE BLOCK ---
--- CODE BLOCK 5205 ---
javascripts
--- END CODE BLOCK ---
. Addressed in
#7650
Upgraded
--- CODE BLOCK 5209 ---
sinon-as-promised
--- END CODE BLOCK ---
from
--- CODE BLOCK 5215 ---
function done(err)
--- END CODE BLOCK ---
--- CODE BLOCK 5216 ---
hook.ctx.currentTest
--- END CODE BLOCK ---
. Addressed in
#8179
Upgraded
--- CODE BLOCK 5229 ---
cy.contains()
--- END CODE BLOCK ---
from
--- CODE BLOCK 5236 ---
Cypress.Log
--- END CODE BLOCK ---
--- CODE BLOCK 5237 ---
attrs:changed
--- END CODE BLOCK ---
. Addressed in
#7650
Upgraded
--- CODE BLOCK 5238 ---
state:change
--- END CODE BLOCK ---
from
--- CODE BLOCK 5239 ---
cy.focused()
--- END CODE BLOCK ---
--- CODE BLOCK 5242 ---
cy.focused()
--- END CODE BLOCK ---
. Addressed in
#7650
Upgraded
--- CODE BLOCK 5246 ---
Cypress.Log
--- END CODE BLOCK ---
from
--- CODE BLOCK 5249 ---
input[type=*]
--- END CODE BLOCK ---
--- CODE BLOCK 5252 ---
Promise.reduce
--- END CODE BLOCK ---
. Addressed in
#7650
4.12.1
Released 8/5/2020
Bugfixes:
The error
--- CODE BLOCK 5256 ---
href="assets/app.js"
--- END CODE BLOCK ---
will no longer incorrectly
throw when rerunning tests in the Test Runner. Fixes
#7874
Skipping the last test before a nested suite with a
--- CODE BLOCK 5257 ---
http:/localhost:4200/app.css.map
--- END CODE BLOCK ---
hook will now
correctly run the tests in the suite following the skipped test. Fixes
#8086
Dependency Updates:
Upgraded
--- CODE BLOCK 5261 ---
__initial=true
--- END CODE BLOCK ---
from
--- CODE BLOCK 5274 ---
cy.server()
--- END CODE BLOCK ---
--- CODE BLOCK 5275 ---
cy.server()
--- END CODE BLOCK ---
. Addressed in
#8161
Upgraded
[CODE_BLOCK_2144]
from
[CODE_BLOCK_2145]
[CODE_BLOCK_2146]
. Addressed in
#8180
4.12.0
Released 8/3/2020
Features:
Now you can control whether screenshots are automatically taken on test
failure during
[CODE_BLOCK_2147]
by setting
[CODE_BLOCK_2148]
your configuration. Addresses
#5029
[CODE_BLOCK_2149]
now has access to a readonly
[CODE_BLOCK_2150]
property within the
[CODE_BLOCK_2151]
object that returns the current Cypress version being run. This will
allow plugins to better target specific Cypress versions. Addresses
#6352
During
[CODE_BLOCK_2152]
, you can now run a subset of all specs by
entering a text search filter and clicking 'Run n tests'
Addresses
#6581
Bugfixes:
[CODE_BLOCK_2153]
elements that have a parent with
[CODE_BLOCK_2154]
will
now correctly evaluate as visible. Fixes
#6675
Applications using custom elements will no longer trigger infinite XHR request
loops. Fixes
#1068
When snapshotting the DOM, Cypress no longer causes
[CODE_BLOCK_2155]
to be triggered on custom elements. Fixes
#7187
Spec files containing
[CODE_BLOCK_2156]
characters now properly run in Cypress. Fixes
#5909
When using the
[CODE_BLOCK_2157]
shortcut in
[CODE_BLOCK_2158]
, an error is now thrown when the
fixture file cannot be found. Fixes
#7818
Cypress no longer thrown
[CODE_BLOCK_2159]
error when
passing a file containing
[CODE_BLOCK_2160]
content to
cy.fixture()
. Fixes
#8010
Values containing exponential operators passed to
[CODE_BLOCK_2161]
via the command line
are now properly read. Fixes
#6891
The "Open in IDE" button no longer disappears from hooks when the tests are
manually rerun. Fixes
#8094
When
experimentalSourceRewriting
is enabled,
AST rewriting will no longer return an output before the body is done being
written. This would happen when the response body was too large and the
response would be sent while the body was still being modified. Fixes
#8043
When using
.type()
, Cypress now properly types into an
input within an iframe that auto focuses the input. Fixes
#8111
Misc:
Dependencies for our
[CODE_BLOCK_2162]
npm package are no longer pinned to a specific
version. This allows the use of
[CODE_BLOCK_2163]
to fix security
vulnerabilities without needing a patch release from Cypress. Addresses
#8046
We now collect environment variables for AWS CodeBuild when recording to the
Dashboard. Addressed
#8101
Types inside Module API are now accessible via the
[CODE_BLOCK_2164]
namespace. Addresses
#7309
We added more type definitions for the
.should()
command. Addresses
#5573
Cookie command's
[CODE_BLOCK_2165]
property type is now a Number instead of a String.
Addresses
#8144
There are some minor visual improvements to the Test Runner's Command Log when
hovering, focusing and clicking on hook titles and pending tests. Addressed in
#8153
Dependency Updates:
Upgraded
[CODE_BLOCK_2166]
from
[CODE_BLOCK_2167]
[CODE_BLOCK_2168]
. Addressed in
#8102
Upgraded
[CODE_BLOCK_2169]
from
[CODE_BLOCK_2170]
[CODE_BLOCK_2171]
. Addressed in
#8122
4.11.0
Released 7/21/2020
Features:
You can now pass an
[CODE_BLOCK_2172]
option to
.scrollTo()
to skip checking whether the element is
scrollable. Addresses
#1924
cy.clock()
now accepts Dates as well as a Number for
now. Fixes
#7786
Module API
has a new
[CODE_BLOCK_2173]
function to assist in parsing user-supplied
command line arguments using the same logic as
[CODE_BLOCK_2174]
uses. Addresses
#7760
Bugfixes:
Running multiple specs within Firefox during
[CODE_BLOCK_2175]
on Windows will no
longer fail trying to make a connection to the browser. Fixes
#6392
Cypress will no longer throw a
[CODE_BLOCK_2176]
error during
[CODE_BLOCK_2177]
Firefox versions >= 75. Fixes
#6813
Fixed an issue where Cypress tests in Chromium-family browsers could randomly
fail with the error "WebSocket is already in CLOSING or CLOSED state." Fixes
#7180
Taking a screenshot of an element that changes height upon scroll will no
longer throw an
[CODE_BLOCK_2178]
error. Fixes
#6099
Setting
[CODE_BLOCK_2179]
[CODE_BLOCK_2180]
from within the
test configuration
now properly changes the viewport size for the duration of the suite or test.
Setting deep objects and arrays on
[CODE_BLOCK_2181]
within the
[CODE_BLOCK_2182]
now sets
the values correctly. Fixes
#7959
The progress bar for
[CODE_BLOCK_2183]
now reflects the correct
[CODE_BLOCK_2184]
[CODE_BLOCK_2185]
of the command. Fixes
#7881
The command's progress bar will not longer restart when its parent test is
collapsed in the Command Log. Fixes
#7912
Key value pairs sent to
[CODE_BLOCK_2186]
[CODE_BLOCK_2187]
will now
be properly read in. Fixes
#7994
Stubbed responses responding with an empty string to
[CODE_BLOCK_2188]
correctly display as 'xhr stub' in the Test Runner's Command Log. Fixes
#8018
Quickly reclicking the "Run All Tests" button in the Test Runners' Command Log
will no longer throw errors about undefined properties and the tests will no
longer hang. Fixes
#7968
Misc:
The error messages thrown from
[CODE_BLOCK_2189]
[CODE_BLOCK_2190]
now mention
that
[CODE_BLOCK_2191]
extensions are supported. Addresses
#7940
The style when focusing on tests in the Command Log has been updated.
Addresses
#7855
Dependency Updates:
Upgraded
[CODE_BLOCK_2192]
from
[CODE_BLOCK_2193]
[CODE_BLOCK_2194]
. Addressed in
#8040
Upgraded
[CODE_BLOCK_2195]
from
[CODE_BLOCK_2196]
[CODE_BLOCK_2197]
. Addressed in
#8000
Upgraded
[CODE_BLOCK_2198]
from
[CODE_BLOCK_2199]
[CODE_BLOCK_2200]
. Addressed in
#8028
Upgraded
[CODE_BLOCK_2201]
from
[CODE_BLOCK_2202]
[CODE_BLOCK_2203]
. Addressed in
#8031
Upgraded
[CODE_BLOCK_2204]
from
[CODE_BLOCK_2205]
[CODE_BLOCK_2206]
. Addressed in
#7954
Upgraded
[CODE_BLOCK_2207]
from
[CODE_BLOCK_2208]
[CODE_BLOCK_2209]
. Addressed in
#8045
Upgraded
[CODE_BLOCK_2210]
from
[CODE_BLOCK_2211]
[CODE_BLOCK_2212]
. Addressed in
#7900
Upgraded
[CODE_BLOCK_2213]
from
[CODE_BLOCK_2214]
[CODE_BLOCK_2215]
. Addressed in
#7989
Upgraded
[CODE_BLOCK_2216]
from
[CODE_BLOCK_2217]
[CODE_BLOCK_2218]
. Addressed in
#7975
Upgraded
[CODE_BLOCK_2219]
from
[CODE_BLOCK_2220]
[CODE_BLOCK_2221]
. Addressed in
#7976
#8002
, and
#8011
4.10.0
Released 7/7/2020
Features:
You can open a
[CODE_BLOCK_2222]
[CODE_BLOCK_2223]
[CODE_BLOCK_2224]
, and
[CODE_BLOCK_2225]
hook
definition in your IDE from the Test Runner's
Command Log
by clicking the
Open in IDE
button. Addresses
#7793
[CODE_BLOCK_2226]
[CODE_BLOCK_2227]
[CODE_BLOCK_2228]
, and
[CODE_BLOCK_2229]
hook definitions now display
separately in the Test Runner's
Command Log
when defined in
separate hook definitions. Addresses
#7779
You can now open a spec file directly from the
Tests
tab in the Test
Runner by clicking the
Open in IDE
button. Addresses
#7713
Bugfixes:
HTTP requests taking longer than the default
[CODE_BLOCK_2230]
will no longer
be prematurely canceled by the Cypress proxy layer. Fixes
#6426
Using Cypress commands to traverse the DOM on an application with a global
[CODE_BLOCK_2231]
variable will no longer throw Illegal Invocation errors. Fixes
#6412
When
[CODE_BLOCK_2232]
is enabled, using
.type()
on an input in the Shadow DOM
will not result in an error. Fixes
#7741
When
[CODE_BLOCK_2233]
is enabled, checking for visibility on a shadow dom host element will no
longer hang if the host element was the foremost element and had an ancestor
with fixed position. Fixes
#7893
Debug logs from the
[CODE_BLOCK_2234]
module will no longer appear if any
[CODE_BLOCK_2235]
environment variable was set. Fixed
#7723
Misc:
We made some minor UI updates to the Test Runner. Addresses
#7732
#7803
Dependency Updates:
Upgraded
[CODE_BLOCK_2236]
from
[CODE_BLOCK_2237]
[CODE_BLOCK_2238]
. Addressed in
#7898
4.9.0
Released 6/23/2020
Features:
An animated progress bar now displays on every command in the
Command Log
indicating how
long the command has left to run before reaching its command timeout.
Addresses
#7642
There is now an
experimentalFetchPolyfill
configuration option. When this option is
[CODE_BLOCK_2239]
, Cypress will automatically
replace
[CODE_BLOCK_2240]
with a polyfill that Cypress can spy on and stub.
Addresses
#7710
You can now pass a
[CODE_BLOCK_2241]
flag to
cypress run
to silence any Cypress
specific output from stdout. Addresses
#7714
Bugfixes:
cy.wait()
now correctly resolves when waiting for XHR
requests that contain resource-like text in the XHR's query params or hash
(like
[CODE_BLOCK_2242]
[CODE_BLOCK_2243]
[CODE_BLOCK_2244]
#7280
We fixed a regression in
4.6.0
where errors thrown from the
application under test as strings would not be correctly handled. Fixes
#7590
We fixed a regression in
4.8.0
where
.click()
would hang if the subject had a shadow root and
[CODE_BLOCK_2245]
not enabled. Fixes
#7679
We fixed a regression in
4.6.0
so that
[CODE_BLOCK_2246]
now properly asserts against
[CODE_BLOCK_2247]
[CODE_BLOCK_2248]
[CODE_BLOCK_2249]
element's values. Fixes
#7603
Cypress no longer responds with 413 responses during a recorded
[CODE_BLOCK_2250]
when the stdout is too large. Fixes
#7548
We fixed an issue where Cypress could exit successfully even with failing
tests when launched in global mode. Fixes
#7755
Assertion logs now properly display as parent commands in the
Command Log
regardless of
what is in the
[CODE_BLOCK_2251]
hook. Fixes
#7731
When
[CODE_BLOCK_2252]
is enabled, querying shadow dom in certain situations will no longer cause the
error
[CODE_BLOCK_2253]
during
[CODE_BLOCK_2254]
. Fixes
#7676
Highlighting of elements upon hover of a command in the
Command Log
are now visible
when targeting absolute positioned elements. Fixes
#7762
cypress run
will no longer crash
when provided an empty string to the
[CODE_BLOCK_2255]
flag. Fixes
#7743
Misc:
There is now a loading state to indicate when tests are loading in the
Command Log
. Addresses
#7700
The type definitions for
[CODE_BLOCK_2256]
[CODE_BLOCK_2257]
[CODE_BLOCK_2258]
[CODE_BLOCK_2259]
have been updated to allow
[CODE_BLOCK_2260]
TypeScript types.
Addresses
#7654
The type definitions for
[CODE_BLOCK_2261]
now correctly yield the type of the
previous subject. Addresses
#7682
The type definitions now allow for the 'key' keyword when chaining off 'any'
or 'all' assertion chainers. Addresses
#7665
Dependency Updates:
Upgraded
[CODE_BLOCK_2262]
from
[CODE_BLOCK_2263]
[CODE_BLOCK_2264]
. Addressed in
#7672
Upgraded
[CODE_BLOCK_2265]
from
[CODE_BLOCK_2266]
[CODE_BLOCK_2267]
. Addressed in
#7705
#7707
Upgraded
[CODE_BLOCK_2268]
from
[CODE_BLOCK_2269]
[CODE_BLOCK_2270]
. Addressed in
#7685
Upgraded
[CODE_BLOCK_2271]
from
[CODE_BLOCK_2272]
[CODE_BLOCK_2273]
. Addressed in
#7703
Upgraded
[CODE_BLOCK_2274]
from
[CODE_BLOCK_2275]
[CODE_BLOCK_2276]
. Addressed in
#7618
Upgraded
[CODE_BLOCK_2277]
from
[CODE_BLOCK_2278]
[CODE_BLOCK_2279]
. Addressed in
#7718
Upgraded
[CODE_BLOCK_2280]
from
[CODE_BLOCK_2281]
[CODE_BLOCK_2282]
. Addressed in
#7738
4.8.0
Released 6/8/2020
Features:
You can now apply certain
test configuration
the duration of a suite or test by passing a configuration object to the test
or suite as the second argument. Addresses
#7167
Cypress.isBrowser()
has been expanded to allow
for new matcher arguments to assist in filtering matching browsers. Addresses
#7168
We now display the currently running file at the top of the Test Runner's
Command Log.
That file can be opened
in your
preferred file opener
by clicking the file. Addresses
#7506
We added experimental shadow DOM support through the
[CODE_BLOCK_2283]
option. See the
Experiments page
for more information. Addresses
#144
Bugfixes:
Upon domain navigation,
[CODE_BLOCK_2284]
[CODE_BLOCK_2285]
hooks defined in completed suites
no longer erroneously rerun. Fixes
#1987
Errors thrown within root level
[CODE_BLOCK_2286]
hooks now correctly display in the
Test Runner's Command Log. Fixes
#2296
We fixed a regression in
4.6.0
where an XHR response without a body
would cause Cypress to throw
[CODE_BLOCK_2287]
. Fixes
#7518
We fixed a regression in
4.6.0
where using
cy.visit()
to an authenticated URL would error with
[CODE_BLOCK_2288]
Fixes
#7481
We now properly load code from the
[CODE_BLOCK_2289]
[CODE_BLOCK_2290]
when they
are TypeScript files. Fixes
#7459
utf-8 characters now properly display within error code frames. Fixes
#7507
Errors thrown in a
[CODE_BLOCK_2291]
fail
handler now display a stack trace and code frame pointing to the origin of the
error. Fixes
#7512
.click()
now properly clicks on wrapped inline elements
when the first child element in the parent element has no width or height.
Fixes
#7343
#7012
cy.wrap()
now properly respects the
[CODE_BLOCK_2292]
option. It
also better handles situations when passed a promise that never resolves.
Fixes
#5980
When
experimentalSourceRewriting
is enabled,
Cypress will no longer exit with SIGABRT in certain situations. Fixes
#7572
We fixed a regression in
3.8.0
where the "Tests" button in the Test
Runner wouldn't take you back to the tests list in all browsers. Fixes
#5948
Using the
[CODE_BLOCK_2293]
shortcut during
.pause()
no longer does
anything. This prevents the Test Runner from getting into a 'stuck' state.
Fixes
#6867
Misc:
The design of errors and some iconography displayed in the Test Runner's
Command Log have been updated. Addresses
#7499
#7542
#7563
The commands in the Test Runner's Command Log now display in the same casing
as the original command. Addresses
#5773
The navigation links in the Test Runner now display the correct CSS styles
when focused. Addresses
#7491
Cypress.config()
now has TypeScript types for the
[CODE_BLOCK_2294]
option. Addresses
#7531
TypeScript types for
cy.screenshot()
options and
Cypress.log()
have been updated to be more
accurate. Addresses
#7445
TypeScript types for
[CODE_BLOCK_2295]
have been added. Addresses
#7519
We now display a more accurate error message when passing a browser to the
[CODE_BLOCK_2296]
flag that is not supported by Cypress. Addresses
#6979
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#7588
#7591
Dependency Updates:
Upgraded
[CODE_BLOCK_2297]
from
[CODE_BLOCK_2298]
[CODE_BLOCK_2299]
. Addressed in
#7615
Upgraded
[CODE_BLOCK_2300]
from
[CODE_BLOCK_2301]
[CODE_BLOCK_2302]
. Addressed in
#7599
4.7.0
Released 5/26/2020
Features:
cy.request()
now supports an
[CODE_BLOCK_2303]
option that
can be used to set the encoding of the response body, defaulting to
[CODE_BLOCK_2304]
Addresses
#2029
#3576
Bugfixes:
We fixed a regression in
4.6.0
where the address bar of the
application under test would disappear when scrolling commands ran and the
application under test would visually shift after taking screenshots. Fixes
#7443
#7466
We fixed a regression in
4.6.0
where test runs could hang when
loading spec files with source maps. Fixes
#7464
Misc:
We now display a more descriptive error message when the plugins file does not
export a function. Addresses
#6611
4.6.0
Released 5/20/2020
Features:
Errors
in the Test Runner now display a
code frame to preview where the failure occurred with the relevant file, line
number, and column number highlighted. Clicking on the file link will open the
file in your
preferred file opener
and highlight the line and column in editors that support it. Addresses
#3762
Cypress now utilizes
source maps
enhance the error experience. Stack traces are translated so that your source
files are shown instead of the generated file that is loaded by the browser.
Cypress will include an inline source map in your spec file. If you
modify the preprocessor
, ensure that inline
source maps are enabled to get the same experience. Users of
[CODE_BLOCK_2305]
should upgrade to v5.4.1 or later of the
package which will correctly inline source maps. Addresses
#881
#1761
#3966
Cypress now enables AST-based JS/HTML rewriting when setting the
experimentalSourceRewriting
configuration
option to
[CODE_BLOCK_2306]
. Addresses
#5273
Number arguments passed to
[CODE_BLOCK_2307]
[CODE_BLOCK_2308]
[CODE_BLOCK_2309]
[CODE_BLOCK_2310]
[CODE_BLOCK_2311]
assertions chainers
are now
automatically cast to strings for comparison. Addresses
#7314
Bugfixes:
Default
TypeScript
options are now set
[CODE_BLOCK_2312]
which Node.js and the browser expect. This fixes a
situation where setting a different module in a
[CODE_BLOCK_2313]
would cause
errors to throw if you had
[CODE_BLOCK_2314]
[CODE_BLOCK_2315]
[CODE_BLOCK_2316]
keywords in your
code. Fixes
#7005
#7011
#7043
, and
#7151
When
experimentalSourceRewriting
is enabled,
setting
[CODE_BLOCK_2317]
[CODE_BLOCK_2318]
to a relative href, or using
[CODE_BLOCK_2319]
[CODE_BLOCK_2320]
with a relative href will no longer
navigate the AUT to the wrong URL. Fixes
#3975
#3994
When
experimentalSourceRewriting
is enabled,
the use of
[CODE_BLOCK_2321]
[CODE_BLOCK_2322]
will no longer cause the AUT to
break out of the Cypress iframe. Fixes
#5271
#1467
When
experimentalSourceRewriting
is enabled,
calls to
[CODE_BLOCK_2323]
[CODE_BLOCK_2324]
, and other
[CODE_BLOCK_2325]
will no
longer point to the wrong reference after being proxied through Cypress. Fixes
#2664
When
experimentalSourceRewriting
is enabled,
scripts using the
[CODE_BLOCK_2326]
attribute for sub-resource integrity (SRI) will
now load after being proxied through Cypress. Fixes
#2393
When
experimentalSourceRewriting
is enabled,
the use of
[CODE_BLOCK_2327]
to set the URL will no longer navigate the AUT
to the wrong URL. Fixes
#7402
Type definitions will no longer conflict when running Cypress in a project
with Jest. Fixes
#3536
We increased the timeout for launching Firefox from 2.5 seconds to 50 seconds.
Previously, users hitting this limit would encounter a "cannot open socket"
error; now, the error will be wrapped. Fixes
#7159
.click
will now click in the correct coordinates when
either x or y coordinate options are zero. Fixes
#7319
Cypress no longer displays
[CODE_BLOCK_2328]
when a browser can't
connect. Fixes
#7217
You can now pass the
[CODE_BLOCK_2329]
option to
.select()
to select options within a disabled
[CODE_BLOCK_2330]
. Addresses
#107
We now throw an error when attempting to
.select()
[CODE_BLOCK_2331]
within a disabled
[CODE_BLOCK_2332]
. Fixes
#7226
We fixed a regression in
4.3.0
where the message output during
errors were not formatted correctly. Fixes
#6924
Using
Cypress._.capitalize
now correctly behaves the same
as Lodash's capitalize method. Fixes
#7222
When
[CODE_BLOCK_2333]
is enabled, clicking on a component spec
now watches the correct file without assuming it is an integration file. Fixes
#7244
Firefox video recording no longer crashes Cypress when running very short spec
files. Fixes
#6408
Applications containing a DOM element with an id attribute containing 'jquery'
will no longer throw an error during
cy.visit()
. Fixes
#6193
Long errors generated when compiling or bundling the test file are now
horizontally scrollable. Fixes
#6898
Misc:
Cypress no longer requires write access to the root of the project, it instead
will display a warning when no write access is given. Addresses
#1281
We increased the timeout for launching Chrome from 20 seconds to 50 seconds.
Addressed in
#7372
We increased the timeout for macOS or Linux to exit from a
[CODE_BLOCK_2334]
command
when looking for available browsers from 5 seconds to 30 seconds. Addressed in
#7366
We improved error handling when Cypress launches Chromium-family browsers.
Addresses
#6518
We now export
[CODE_BLOCK_2335]
types as a partial of the full options
interface. Addresses
#7238
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#7162
#7216
#7227
#7320
#7232
, and
#7345
Dependency Updates:
Upgraded
[CODE_BLOCK_2336]
from
[CODE_BLOCK_2337]
[CODE_BLOCK_2338]
. Addressed
#7291
Upgraded
[CODE_BLOCK_2339]
from
[CODE_BLOCK_2340]
[CODE_BLOCK_2341]
. Addressed in
#7389
Upgraded
[CODE_BLOCK_2342]
from
[CODE_BLOCK_2343]
[CODE_BLOCK_2344]
. Addressed in
#7431
Upgraded
[CODE_BLOCK_2345]
from
[CODE_BLOCK_2346]
[CODE_BLOCK_2347]
. Addressed in
#7236
#7387
Upgraded
[CODE_BLOCK_2348]
from
[CODE_BLOCK_2349]
[CODE_BLOCK_2350]
. Addressed in
#7236
Upgraded
[CODE_BLOCK_2351]
from
[CODE_BLOCK_2352]
[CODE_BLOCK_2353]
. Addressed in
#7408
Upgraded
[CODE_BLOCK_2354]
from
[CODE_BLOCK_2355]
[CODE_BLOCK_2356]
. Addressed in
#7292
4.5.0
Released 4/28/2020
Features:
Cypress now supports the execution of component tests using framework-specific
adaptors when setting the
[CODE_BLOCK_2357]
configuration option
[CODE_BLOCK_2358]
. For more details see the
@cypress/react
@cypress/vue
repos. Addresses
#5922
#6968
Bugfixes:
Custom Mocha reporters
will now correctly use the
version of Mocha bundled with Cypress. Fixes
#3537
#6984
We better account for word boundaries in application scripts when
[CODE_BLOCK_2359]
[CODE_BLOCK_2360]
. Fixes
#7138
Fixed an issue where iterators in TypeScript were not properly transpiled.
Fixes
#7098
Misc:
The update window in the Test Runner now encourages yarn users to
[CODE_BLOCK_2361]
Cypress instead of
[CODE_BLOCK_2362]
to help prevent installing 2
versions of Cypress when using yarn workspaces. Addressed in
#7101
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#7031
#7097
Dependency Updates:
Upgraded
[CODE_BLOCK_2363]
from
[CODE_BLOCK_2364]
[CODE_BLOCK_2365]
. Addressed in
#7079
4.4.1
Released 4/20/2020
Bugfixes:
Cypress can now launch on systems where Chromium is installed via Snapcraft.
Fixes
#7020
We now check whether the
[CODE_BLOCK_2366]
event's target element is detached before
issuing the
[CODE_BLOCK_2367]
event during
.click()
. Fixes
#6923
We fixed a regression in
3.8.1
where the Test Runner could send an
[CODE_BLOCK_2368]
organization ID during project setup when the default organization
is preselected. Fixes
#7013
We fixed a regression in
4.4.0
that caused projects to include
bundled TypeScript. Fixes
#7036
Fixed an issue where sites that set
[CODE_BLOCK_2369]
headers would fail to load in Cypress. Fixes
#6480
Misc:
We fixed some extra spacing displaying below the project nav in the Test
Runner. Addresses
#7023
The typings for run results when using the
Module API
now indicate they can be
[CODE_BLOCK_2370]
[CODE_BLOCK_2371]
. Addresses
#6126
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#7004
4.4.0
Released 4/13/2020
Features:
TypeScript
test files are now supported
without using special preprocessors plugins. Addresses
#1859
Bugfixes:
We fixed an issue where Cypress could crash with a
[CODE_BLOCK_2372]
error when testing
applications that make use of WebSockets. Fixes
#6458
Uncaught errors thrown from within application or test code now display their
proper stack trace. Fixes
#6964
Assertion errors now include a stack trace that includes the calling code.
Fixes
#6969
We now clone the
[CODE_BLOCK_2373]
object passed into Cypress commands so that they're
not mutated and receive the proper
[CODE_BLOCK_2374]
. Fixes
#3171
We fixed an issue where invalid
[CODE_BLOCK_2375]
values could cause requests to
fail with a
[CODE_BLOCK_2376]
error. Now, invalid
[CODE_BLOCK_2377]
values will be ignored. Fixes
#6890
Misc:
Cypress no longer hides output from
[CODE_BLOCK_2378]
[CODE_BLOCK_2379]
[CODE_BLOCK_2380]
, or
[CODE_BLOCK_2381]
commands when npm log level is
[CODE_BLOCK_2382]
[CODE_BLOCK_2383]
. Addresses
#2705
cy.task()
error message is now more specific about
the promise resolution value required. Addresses
#6241
Dependency Updates:
Upgraded
[CODE_BLOCK_2384]
from
[CODE_BLOCK_2385]
[CODE_BLOCK_2386]
. Addressed in
#6934
4.3.0
Released 3/30/2020
Features:
Errors shown in the Test Runner
have a new
design including an expandable stack trace, better highlighting of code
elements, and 'Learn more' links that link to relevant Cypress documentation.
This is part of our larger improvements to error display with more exciting
features to come. Addresses
#3762
When you open a Cypress project, clicking on the
Settings
tab and clicking
into the
Experiments
panel will display the
experimental features
that are
available and whether they are enabled for your project.
Added support for setting cookie
[CODE_BLOCK_2387]
values via
[CODE_BLOCK_2388]
Addresses
#2437
Added experimental support for adding
[CODE_BLOCK_2389]
values to the objects yielded
from
cy.setCookie()
cy.getCookie()
, and
cy.getCookies()
. Users can enable this by setting
experimentalGetCookiesSameSite
configuration value to
[CODE_BLOCK_2390]
. In Cypress 5, this will be the default.
Addresses
#2437
Added support for the
[CODE_BLOCK_2391]
cookie attribute in
[CODE_BLOCK_2392]
[CODE_BLOCK_2393]
, and proxied HTTP requests. Addresses
#6757
When an assertion is retried (using
.should()
) and
fails, it now shows the diff in the
[CODE_BLOCK_2394]
. Addresses
#6722
Bugfixes:
Fixed a regression in
4.2.0
where cypress installation could fail if
Git is not installed. Fixes
#6752
Fixed a regression in
3.5.0
where certain HTTP requests could fail
with
[CODE_BLOCK_2395]
[CODE_BLOCK_2396]
. Fixes
#5602
Fixed a regression in
4.2.0
where Electron deprecation warnings were
printed to stderr in open mode. Fixes
#6750
Cookies set with a Domain containing an unknown TLD are now sent along for all
requests. For example, a cookie like
[CODE_BLOCK_2397]
will now
be sent during
cy.request()
[CODE_BLOCK_2398]
. Fixes
#6628
We fixed a situation where a cross-origin errors could incorrectly throw in
Chrome. Fixes
#5270
Visibility checks against
[CODE_BLOCK_2399]
elements no longer throw an
unexpected error. Fixes
#6745
The stack trace is now properly shown in the console when clicking the command
for tests having an
[CODE_BLOCK_2400]
that throw an error. Fixes
#6744
[CODE_BLOCK_2401]
can now correctly be set to
[CODE_BLOCK_2402]
. Fixes
#6825
Cypress will no longer crash the process if an empty video chunk is received.
Addressed in
#6818
Assertions failures on DOM elements no longer show unexpected diffs when they
weren't retried. Fixes
#6723
Misc:
Security warnings no longer show in Mac OS when opening Cypress since our
application now undergoes notarization from Apple. Addresses
#5791
The previously used spec filter in the Test Runner is now saved and restored
for projects without an ID.Addresses
#6739
We collect more env information from Travis builds for potential use in the
Cypress Dashboard. Addresses
#6808
We now collect env information from Netlify builds (for example when using
cypress-io/netlify-plugin-cypress
to send along to the Cypress Dashboard. Addresses
#6780
Type added for
[CODE_BLOCK_2403]
property when using Module API. Addresses
#6795
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#6833
Dependency Updates
Upgraded Chrome browser version used during
[CODE_BLOCK_2404]
and when selecting
Electron browser in
[CODE_BLOCK_2405]
from
[CODE_BLOCK_2406]
[CODE_BLOCK_2407]
Addressed in
#6855
Upgraded
[CODE_BLOCK_2408]
from
[CODE_BLOCK_2409]
[CODE_BLOCK_2410]
. This bumps the bundled Chromium
[CODE_BLOCK_2411]
. Addressed in
#6855
Upgraded
[CODE_BLOCK_2412]
from
[CODE_BLOCK_2413]
[CODE_BLOCK_2414]
. Addressed in
#6592
Upgraded
[CODE_BLOCK_2415]
from
[CODE_BLOCK_2416]
[CODE_BLOCK_2417]
. Addressed in
#6823
Upgraded
[CODE_BLOCK_2418]
from
[CODE_BLOCK_2419]
[CODE_BLOCK_2420]
. Addressed in
#6013
Upgraded
[CODE_BLOCK_2421]
from
[CODE_BLOCK_2422]
[CODE_BLOCK_2423]
. Addresses
#6845
#6845
Upgraded
[CODE_BLOCK_2424]
from
[CODE_BLOCK_2425]
[CODE_BLOCK_2426]
. Addressed in
#6594
Upgraded
[CODE_BLOCK_2427]
from
[CODE_BLOCK_2428]
[CODE_BLOCK_2429]
. Addressed in
#6854
Upgraded
[CODE_BLOCK_2430]
from
[CODE_BLOCK_2431]
[CODE_BLOCK_2432]
. Addressed in
#6764
Upgraded
[CODE_BLOCK_2433]
from
[CODE_BLOCK_2434]
[CODE_BLOCK_2435]
. Addressed in
#6747
Upgraded
[CODE_BLOCK_2436]
from
[CODE_BLOCK_2437]
[CODE_BLOCK_2438]
. Addressed in
#6735
4.2.0
Released 3/16/2020
Features:
Videos can now be recorded when running Electron in
[CODE_BLOCK_2439]
mode. Addresses
#1767
cypress cache list
prints the last time the cached binary was accessed for each version present.
Addresses
#6682
Bugfixes:
We fixed a regression in
3.8.3
where HTTPS requests could experience
slowdown. Fixes
#6659
We now detect some installations of Firefox that were previously undetected.
Fixes
#6669
We fixed a race condition where an asynchronous error could fail to be caught
when running the plugins file process. Fixes
#6570
We now more thoroughly ensure the parent of an element exists when recursively
calling actionability checks in order to prevent some maximum call stack
errors. Fixes
#6707
Specfiles containing
[CODE_BLOCK_2440]
[CODE_BLOCK_2441]
characters now correctly run instead of
erroring. Fixes
#4210
We added support for running tests on Jira plugins even when Jira scripts were
not minified. Fixes
#1436
We fixed a bug causing specs to hang after rerunning tests during
[CODE_BLOCK_2442]
when there was an exception if thrown in an
[CODE_BLOCK_2443]
hook. Fixes
#6619
cypress verify
no longer
incorrectly prints messaging about this being the first time using that
Cypress version. Fixes
#6607
Screenshots no longer fail to be taken in Electron when Cypress
[CODE_BLOCK_2444]
logs
are enabled. Fixes
#6662
Misc:
A warning is now printed when setting the reserved key
[CODE_BLOCK_2445]
to a non-production value. Addresses
#6436
When DEBUG logs are printed from
[CODE_BLOCK_2446]
, they now print a clearer
log during browser detection for easier reading. Addresses
#6700
The Test Runner now renders ANSI colors when there is a syntax error in the
spec file. Addresses
#6533
The Test Runner now has an icon indicating whether the specs list parent
folder is collapsed. Addresses
#6277
There's better type information for
.click
.dblclick
, and
.rightclick
command's
[CODE_BLOCK_2447]
argument.
Addresses
#6341
There's a more robust type signature for
.its()
.invoke()
. Addresses
#6431
Using
Cypress.dom.isDetached
no longer
throws a type error in TypeScript projects. Addresses
#4408
Using
[CODE_BLOCK_2448]
no longer throws a type error in TypeScript projects. Addresses
#6615
We added types for
Cypress.sinon
. Addresses
#6720
We've added the foundational work required to support experimental features in
the Test Runner. Addresses
#6257
Dependency Updates
Upgraded Chrome browser version used during
[CODE_BLOCK_2449]
and when selecting
Electron browser in
[CODE_BLOCK_2450]
from
[CODE_BLOCK_2451]
[CODE_BLOCK_2452]
. Addressed in
#6555
Upgraded
[CODE_BLOCK_2453]
from
[CODE_BLOCK_2454]
[CODE_BLOCK_2455]
. This bumps the bundled Chromium
to 80.0.3987.141 and the bundled Node to 12.13.0. Addressed in
#6555
Upgraded
[CODE_BLOCK_2456]
from
[CODE_BLOCK_2457]
[CODE_BLOCK_2458]
. Addressed in
#6686
Upgraded
[CODE_BLOCK_2459]
from
[CODE_BLOCK_2460]
[CODE_BLOCK_2461]
. Addressed in
#6726
Replaced deprecated
[CODE_BLOCK_2462]
with
[CODE_BLOCK_2463]
. Addressed in
#6679
4.1.0
Released 2/28/2020
Features:
There is a new
[CODE_BLOCK_2464]
command to see the locally detected browsers and
other information related to Cypress. Addresses
#4540
You can now click a 'Try Again' button to recheck if the server at the
designated
[CODE_BLOCK_2465]
is running within the warning message during
[CODE_BLOCK_2466]
. Addresses
#3284
There are "collapse all" and "expand all" links in the Test Runner's "Tests"
tab to collapse or expand all folders within the "Integration Tests".
Addresses
#6282
The plugins file function's
config
argument
now includes
[CODE_BLOCK_2467]
(absolute path to the root of the project) and
[CODE_BLOCK_2468]
(absolute path to the configuration file). Addresses
#5941
Bugfixes:
Fixed a regression in
4.0.2
where Cypress could throw a "Maximum
call stack size exceeded" error when transmitting a circular object over the
internal WebSocket. Fixes
#6582
We fixed an issue where using Chromium-family browsers could cause Cypress to
throw a "WebSocket is not open: readyState 3" error under certain conditions.
Fixes
#5685
We now more thoroughly ensure the parent of an element exists when recursively
calling visibility and existence checks in order to prevent some maximum call
stack errors. Fixes
#4373
We fixed an issue where a maximum call stack error would throw in some
circumstances when
[CODE_BLOCK_2469]
is accessed. Fixes
#5864
We fixed a regression in
3.5.0
where typing into an iframe with a
body element with the contenteditable attribute would throw an error. Fixes
#5930
We now set the default window size when running Chrome headlessly to 1280x720.
Fixes
#6210
We fixed an issue where
[CODE_BLOCK_2470]
would not complete on Node.js 8.0.0.
Fixes
#6512
#6568
cy.clearLocalStorage()
now properly accepts
[CODE_BLOCK_2471]
option to disable logging. Fixes
#6342
Misc:
The error messages displayed when rerouting to a non same-origin domain has
been updated to more accurately reflect the rules around same-origin policy.
Addresses
#6048
We fixed an error message that would display the wrong available browser
families during validation. Addressed in
#6517
We fixed some typos in some of our error messages. Addressed in
#6508
We're collecting more environment variables when running Cypress with GitLab
CI. Addresses
#6231
The typing of
[CODE_BLOCK_2472]
has been updated to distinguish differences between it
[CODE_BLOCK_2473]
More info here
Addresses
#2027
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#6552
#6523
, and
#6545
Dependency Updates
Upgraded
[CODE_BLOCK_2474]
from
[CODE_BLOCK_2475]
[CODE_BLOCK_2476]
. Addressed in
#6566
4.0.2
Released 2/14/2020
Bugfixes:
We fixed a bug where tests in Firefox would not open on macOS if another
instance of Firefox was open. Fixes
#6380
We fixed a regression in
4.0.0
where using
[CODE_BLOCK_2477]
chained after a
.contains()
would produce unexpected results. Fixes
#6384
We fixed a regression in
4.0.0
where non-top-level
[CODE_BLOCK_2478]
s in
tests no longer worked. Fixes
#6403
Re-running a failed workflow in GitHub Actions now properly generates a new
Dashboard run. Fixes
#6450
Misc:
We fixed incorrect type definitions for
Cypress.isBrowser
. Addresses
#6447
We improved the error experience when launching a browser fails. Addresses
#6432
We improved the error experience when visiting the Cypress server outside of a
Cypress-launched browser. Addresses
#6435
Dependency Updates
Upgraded
[CODE_BLOCK_2479]
from
[CODE_BLOCK_2480]
[CODE_BLOCK_2481]
. Addressed
#6419
4.0.1
Released 2/7/2020
Bugfixes:
Fixed a bug where Chromium could not be detected on macOS. Addresses
#6358
Fixed bugs where Edge and Firefox Nightly could not be detected on macOS.
Addresses
#6354
#6345
Fixed a bug where 64-bit editions of Firefox could not be detected on Windows.
Addresses
#6355
Fixed a bug where video recordings of Firefox would omit all frames from
before the last cross-domain navigation of the test. Addresses
#6369
Fixed a bug where Cypress could crash with the message "cannot read property
'on' of undefined" while running Firefox. Addresses
#6356
Corrected a link to the screenshot API documentation in the type definitions.
Addresses
#6359
Misc:
Updated the default preferences set on Firefox to hide update notifications
and otherwise improve the Firefox experience. Addresses
#6346
4.0.0
Released 2/6/2020
Summary:
Cypress 4.0.0 includes support for
Mozilla Firefox
browsers (beta support) and
Microsoft Edge
(Chromium based) browsers which
is a big step forward for
Cross Browser Testing
in Cypress. We've
also updated many of the
underlying tools
behind Cypress that
bring new powerful features.
Breaking Changes:
Please read our
Migration Guide
which explains the changes in more detail and how to change your code to migrate
to Cypress 4.0.**
Mocha, Chai, and Sinon.JS has been upgraded which includes a number of
breaking changes and new features. Addresses
#2528
#2529
#2866
During
[CODE_BLOCK_2482]
, we no longer yield the second argument as an
array of browser arguments and instead yield an
[CODE_BLOCK_2483]
object with an
[CODE_BLOCK_2484]
property in order to support more advanced browser launch options.
Addresses
#6306
We updated the
Cypress browser objects
all Chromium-based browsers, including Electron, to have
[CODE_BLOCK_2485]
set as
their
[CODE_BLOCK_2486]
field. Addresses
#6243
[CODE_BLOCK_2487]
flag
no longer accepts
[CODE_BLOCK_2488]
as its sole argument to run Chrome Canary. You now
have to specify
[CODE_BLOCK_2489]
to use the Chrome Canary browser. Addresses
#6243
.contains()
now ignores leading, trailing, duplicate
whitespaces. Addresses
cy.writeFile()
now yields
[CODE_BLOCK_2490]
instead of the
contents written to the file in order to more align with the behavior of
[CODE_BLOCK_2491]
Addresses
#2466
Installing Cypress on your system now requires Node.js 8+. Addresses
#5632
Cypress no longer support CJSX. Addresses
#3469
Features:
Mozilla Firefox
browsers now have beta
support. Addresses
#1096
Microsoft Edge
(Chromium based) browsers are
now supported. Addresses
#5433
There is a new
Cypress.isBrowser()
utility
function. Addresses
#2023
We updated the
Cypress.browser
object with a new
[CODE_BLOCK_2492]
property which contains the release channel of the detected browser.
Addresses
#6243
There is a new
[CODE_BLOCK_2493]
option for
.contains()
Addresses
#2785
Appending
[CODE_BLOCK_2494]
to multiple tests or suites will now run all tests with the
[CODE_BLOCK_2495]
property. Addresses
#2828
[CODE_BLOCK_2496]
assertion
is now supported.
Addresses
#5669
[CODE_BLOCK_2497]
assertion is now supported when used against Map objects.
Addresses
#6072
[CODE_BLOCK_2498]
assertion chainer property is now supported. Addresses
#3080
#5004
Bugfixes:
A test or suite appended with an
[CODE_BLOCK_2499]
when multiple tests or suites
contained the same title now run correctly. Fixes
#5345
.its()
command now properly supports 0 as a value for
indexes or object keys. Fixes
#6216
Documentation Changes:
Added
Cross Browser Testing Guide
with
helpful CI strategies to consider when running tests across multiple browsers.
Added
Cypress.isBrowser()
doc.
Misc:
We now pass through errors caused when attempting to read arguments passed
through
config
. Addresses
#6279
We fixed a broken 'Learn more' link within the Node.js Version panel of the
Test Runner Settings. Addresses
#6237
The browser icons in the Test Runner now display as images with the proper
branding. Addresses
#6188
We updated the styling of browser dropdown in the Test Runner to look more
like a button. Addresses
#6298
The timer in the Test Runner now always displays at a consistent length.
Addresses
#6168
You can print debug information about the memory & CPU usage of Cypress, which
can be accessed by enabling the
[CODE_BLOCK_2500]
debug stream
Addresses
#6169
We added types for plugin events. Addresses
#6322
Dependency Updates
Added
[CODE_BLOCK_2501]
. Addressed in
#1359
Upgraded
[CODE_BLOCK_2502]
from
[CODE_BLOCK_2503]
[CODE_BLOCK_2504]
. Addressed
#4308
#4226
Upgraded
[CODE_BLOCK_2505]
from
[CODE_BLOCK_2506]
[CODE_BLOCK_2507]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2508]
from
[CODE_BLOCK_2509]
[CODE_BLOCK_2510]
. Addressed in
#4208
#4226
Upgraded
[CODE_BLOCK_2511]
from
[CODE_BLOCK_2512]
[CODE_BLOCK_2513]
. Addressed in
#2862
#4226
Upgraded
[CODE_BLOCK_2514]
from
[CODE_BLOCK_2515]
[CODE_BLOCK_2516]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2517]
from
[CODE_BLOCK_2518]
[CODE_BLOCK_2519]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2520]
from
[CODE_BLOCK_2521]
[CODE_BLOCK_2522]
. Addressed in
#4208
#4226
Upgraded
[CODE_BLOCK_2523]
from
[CODE_BLOCK_2524]
[CODE_BLOCK_2525]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2526]
from
[CODE_BLOCK_2527]
[CODE_BLOCK_2528]
. Addressed in
#4226
Added
[CODE_BLOCK_2529]
. Addressed in
#1359
Added
[CODE_BLOCK_2530]
. Addressed in
#1359
Upgraded
[CODE_BLOCK_2531]
from
[CODE_BLOCK_2532]
[CODE_BLOCK_2533]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2534]
from
[CODE_BLOCK_2535]
[CODE_BLOCK_2536]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2537]
from
[CODE_BLOCK_2538]
[CODE_BLOCK_2539]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2540]
from
[CODE_BLOCK_2541]
[CODE_BLOCK_2542]
. Addressed in
#2703
#4226
Upgraded
[CODE_BLOCK_2543]
from
[CODE_BLOCK_2544]
[CODE_BLOCK_2545]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2546]
from
[CODE_BLOCK_2547]
[CODE_BLOCK_2548]
. Addressed in
#4226
Added
[CODE_BLOCK_2549]
. Addressed in
#1359
Upgraded
[CODE_BLOCK_2550]
from
[CODE_BLOCK_2551]
[CODE_BLOCK_2552]
. Addressed in
#4226
Upgraded
[CODE_BLOCK_2553]
from
[CODE_BLOCK_2554]
[CODE_BLOCK_2555]
. Addressed in
#2881
#4226
Upgraded
[CODE_BLOCK_2556]
from
[CODE_BLOCK_2557]
[CODE_BLOCK_2558]
. Addressed in
#1359
Added
[CODE_BLOCK_2559]
. Addressed in
#1359
Upgraded
[CODE_BLOCK_2560]
from
[CODE_BLOCK_2561]
[CODE_BLOCK_2562]
. Addressed in
#4208
#4226
Upgraded
[CODE_BLOCK_2563]
from
[CODE_BLOCK_2564]
[CODE_BLOCK_2565]
. Addressed in
#4226
3.8.3
Released 1/24/2020
Bugfixes:
We fixed an error during
[CODE_BLOCK_2566]
indicating
[CODE_BLOCK_2567]
when Cypress was unable to find the tab to control. Fixes
#6053
HTTP requests to sites using a TLS version lower than 1.2 now no longer fail.
Fixes
#5446
[CODE_BLOCK_2568]
will no longer error on some systems when
[CODE_BLOCK_2569]
is not
defined. Fixes
#6184
We fixed a regression in
3.5.0
causing
[CODE_BLOCK_2570]
to no longer forcibly type
characters for readonly inputs. Fixes
#6116
Generated reports when using
custom reporters
have a defined
[CODE_BLOCK_2571]
property. Fixes
#1495
Misc:
Messages from
cy.get()
are now truncated at 50 lines the
Command Log instead of the 1 line. Addresses
#6145
We now collect more environment variables for Bamboo CI when recording for the
Dashboard. Addresses
#4895
Dependency Updates:
Upgraded
[CODE_BLOCK_2572]
from
[CODE_BLOCK_2573]
[CODE_BLOCK_2574]
. Addressed in
#6180
#6242
Upgraded
[CODE_BLOCK_2575]
from
[CODE_BLOCK_2576]
[CODE_BLOCK_2577]
. Addressed in
#6134
Upgraded
[CODE_BLOCK_2578]
[CODE_BLOCK_2579]
from
[CODE_BLOCK_2580]
[CODE_BLOCK_2581]
. Addressed
#6179
3.8.2
Released 01/10/2020
Bugfixes:
We fixed a regression in
3.8.0
on Linux when
[CODE_BLOCK_2582]
is not
installed where the progress of
[CODE_BLOCK_2583]
would show up to 200%. Fixes
#5967
We fixed a regression in
3.7.0
that would prevent
.type()
from typing valid characters after invalid
characters were typed in
[CODE_BLOCK_2584]
inputs. Fixes
#6055
Child elements of an element that uses both
[CODE_BLOCK_2585]
[CODE_BLOCK_2586]
[CODE_BLOCK_2587]
are now properly seen as visible during visibility checks. Addresses
#5974
We now properly check backface visibility when the parents of a target element
have the CSS style
[CODE_BLOCK_2588]
. Fixes
#5682
DOM elements with a width or height of 0 and
[CODE_BLOCK_2589]
are now
properly calculated as invisible during visibility checks. Fixes
#6093
.should()
.and()
commands
with function arguments can now be chained with multiple assertions without
throwing an error. Fixes
#4981
Misc:
We replaced the browser icons in the Test Runner with more official browser
brand icons. Addresses
#5921
Messages from
cy.log()
are now truncated at 50 lines the
Command Log instead of the 1 line. Addresses
#5625
We now capture GitLab CI's
[CODE_BLOCK_2590]
environment variable. Addressed in
#6111
Types for
event emitters
[CODE_BLOCK_2591]
[CODE_BLOCK_2592]
have been added to
[CODE_BLOCK_2593]
[CODE_BLOCK_2594]
. Addresses
#5228
Types for the
[CODE_BLOCK_2595]
property returned from
[CODE_BLOCK_2596]
has been added.
Addresses
#6087
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#5947
#6075
Dependency Updates:
Upgraded
[CODE_BLOCK_2597]
from
[CODE_BLOCK_2598]
[CODE_BLOCK_2599]
. Addressed in
#6074
Upgraded
[CODE_BLOCK_2600]
from
[CODE_BLOCK_2601]
[CODE_BLOCK_2602]
. Addressed in
#6085
3.8.1
Released 12/26/2019
Bugfixes:
We fixed a bug where
cypress run --headless
would not run Chrome-family browsers headlessly. Fixes
#5949
We fixed an issue where, on some systems with IPv4 and IPv6 enabled, Cypress
would fail to connect to the Chrome DevTools Protocol while launching Chrome,
leading to test failures. Fixes
#5912
The strict cookie validation added in
3.5.0
cy.setCookie()
cy.clearCookie()
, and
cy.getCookie()
has been removed. Fixes
#5642
We fixed a regression in
3.8.0
where using
.type()
on number inputs to type non-number characters
or the
[CODE_BLOCK_2603]
special character would not type the correct value. Fixes
#5968
#5997
Configuration values set from the plugins file now display with the correct
background color in the Configuration panel in the Test Runner Settings. Fixes
#6024
We removed the 'Me' and 'An Organization' selections in the Test Runner when
setting up a project to more closely match the Dashboard UI. This also fixes
an edge case where a user with no default organizations could potentially be
unable to set up a project. Fixes
#5954
Misc:
We updated the fallback error message for visibility checks to be less
confusing. Addresses
#5982
The type definitions for
cy.location()
have been
improved. Addresses
#5574
Dependency Updates:
Upgraded
[CODE_BLOCK_2604]
from
[CODE_BLOCK_2605]
[CODE_BLOCK_2606]
. Addressed in
#6004
Upgraded
[CODE_BLOCK_2607]
from
[CODE_BLOCK_2608]
[CODE_BLOCK_2609]
. Addressed in
#6008
Upgraded
[CODE_BLOCK_2610]
from
[CODE_BLOCK_2611]
[CODE_BLOCK_2612]
. Addressed in
#6017
Upgraded
[CODE_BLOCK_2613]
from
[CODE_BLOCK_2614]
[CODE_BLOCK_2615]
. Addressed in
#4331
Upgraded
[CODE_BLOCK_2616]
from
[CODE_BLOCK_2617]
[CODE_BLOCK_2618]
. Addressed in
#4331
3.8.0
Released 12/12/2019
Features:
Chrome can now be run in headless mode by using
[CODE_BLOCK_2619]
. Addresses
#832
Cypress now accepts a
--tag
argument to be
used to identify separate runs. Any tags assigned will be shown on the run in
the Cypress Dashboard. Addresses
#2561
The commands
.its()
.invoke()
now accept an
[CODE_BLOCK_2620]
object to allow changing logging options. Addresses
#1450
Cypress will now attempt to use the
[CODE_BLOCK_2621]
binary during
[CODE_BLOCK_2622]
before trying the slower, Node.js-based unzipping method. Addresses
#3803
Bugfixes:
We fixed a regression in
3.5.0
where Cypress would crash on Windows
when trying to pass a url through
[CODE_BLOCK_2623]
[CODE_BLOCK_2624]
command line flags.
Fixes
#5466
We fixed a regression in
3.5.0
where a supplied
[CODE_BLOCK_2625]
header
during
cy.visit()
cy.request()
would be overwritten by the
[CODE_BLOCK_2626]
header generated from the browser's cookie store. Fixes
#5894
We fixed a regression in
3.5.0
where
cy.getCookie()
would incorrectly filter cookies by
their domain, leading to unexpected results. Fixes
#5656
We fixed a regression in
3.5.0
where calling
[CODE_BLOCK_2627]
on hidden inputs would not type the correct
characters. Fixes
#5835
We fixed a regression in
3.5.0
where
.type()
was not respecting previous selections if the current value of the input was
the same as the key. This also fixed an where
.type()
would not respect previous selections in non-selectionRange inputs (like email
or number inputs). Fixes
#5703
During visibility checks, Cypress now properly evaluates a DOM element
transformed by
[CODE_BLOCK_2628]
[CODE_BLOCK_2629]
as not visible. Fixes
#723
Fixed a bug where the specs list during
[CODE_BLOCK_2630]
would not refresh when
files are changed on disk. Fixes
#5933
[CODE_BLOCK_2631]
configuration option displays properly within the settings panel.
Previously, setting env options would incorrectly render
[CODE_BLOCK_2632]
as the
value. Fixes
#5859
Misc:
We removed the max viewport size and lowered min viewport size to
[CODE_BLOCK_2633]
cy.viewport()
Addresses
#5871
#5892
The Test Runner now shows a non-Chrome logo for
browsers passed in via
[CODE_BLOCK_2634]
that are not of the Chrome family. It also supports showing the Firefox logo
(in preparation for Firefox browser support). Fixes
#5745
We updated the look of some of our icons. Addressed in
#5822
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#5643
[CODE_BLOCK_2635]
will now automatically encode special characters in the request
URL, including Unicode. Addresses
#5274
You can pass additional Electron launch command line arguments using
environment variable
[CODE_BLOCK_2636]
. Addresses
#5807
Dependency Updates:
Upgraded
[CODE_BLOCK_2637]
from
[CODE_BLOCK_2638]
[CODE_BLOCK_2639]
. This bumps the internal Node
version to 12.8.1 and the internal Chromium version to 78.0.3904.113.
Addressed in
#5849
Upgraded
[CODE_BLOCK_2640]
from
[CODE_BLOCK_2641]
[CODE_BLOCK_2642]
. Addressed in
#5815
Upgraded
[CODE_BLOCK_2643]
from
[CODE_BLOCK_2644]
[CODE_BLOCK_2645]
. Addressed in
#5495
3.7.0
Released 11/27/2019
Features:
Cypress now includes the full list of browsers found and their properties
within the Cypress configuration. This means that the
[CODE_BLOCK_2646]
array is also
editable within plugins by accessing
[CODE_BLOCK_2647]
via the
Configuration API
. The currently
available browsers are also displayed within the
configuration panel
under Settings in the Test Runner. Addresses
#5067
Environment variables within GitHub Actions are now detected and passed to the
Dashboard in order to display the proper
git information
for recorded runs. Addresses
#5609
.its()
.invoke()
now support
a Number for its
[CODE_BLOCK_2648]
[CODE_BLOCK_2649]
arguments respectively.
Addresses
#5754
Bugfixes:
We fixed a regression in
3.5.0
where a
cy.visit()
that changes superdomain would incorrectly
clear cookies of other domains. Fixes
#5756
We fixed a regression in
3.5.0
where cookies set in a redirect on a
cy.visit()
or in a
[CODE_BLOCK_2650]
with a custom
[CODE_BLOCK_2651]
that is not a subdomain of the current domain would fail to set. Fixes
#5656
We fixed a regression in
3.5.0
which caused
.type()
to send duplicate modifier keys. Fixes
#5622
We fixed a regression in
3.6.1
where
cy.request()
with
[CODE_BLOCK_2652]
would fail
if a
[CODE_BLOCK_2653]
header was present in the response. Fixes
#5654
The context of
[CODE_BLOCK_2654]
is no longer
[CODE_BLOCK_2655]
within the application under
test when called within a
[CODE_BLOCK_2656]
during strict mode. Fixes
#5707
Cypress now captures the SHA of builds generated through Travis CI during pull
requests. This should resolve issues with Cypress status checks sometimes not
running within
GitHub Integration
. Fixes
#5728
Cypress now automatically strips double quotes from
--ci-build-id
group
flag
arguments during
[CODE_BLOCK_2657]
. Fixes
#5686
Assertions printed in the
Command Log
now correctly
identify integers from string integers. Fixes
Empty spaces are now accurately reflected in the
Command Log
within
assertions. Fixes
#1360
Keys printed in the
Command Log
when using the
[CODE_BLOCK_2658]
assertion now correctly display. Fixes
#753
We fixed an issue where Cypress would throw an error when using
cy.visit()
on a
[CODE_BLOCK_2659]
domain. Fixes
#5722
Fixed a bug where fixtures consisting only of
[CODE_BLOCK_2660]
would cause an error.
Fixes
#472
Fixed a bug where, if the Test Runner child process is killed with a signal
and does not exit normally, the npm CLI process would not exit with an error.
Fixes
#5808
Misc:
Added a new, more specific error message when an item is not visible because
it has
[CODE_BLOCK_2661]
and is being overflowed over. Addresses
#1379
[CODE_BLOCK_2662]
s that cause a superdomain change will now result in 2 requests to
the origin server. This should not affect tests, as tests will still re-run on
a superdomain change. This is a side-effect of the fix for
#5756
The configuration object returned from the plugins file is now validated and
will throw a helpful error message when invalid. Addresses
#5712
configuration panel
under Settings in the Test Runner now has a white background for better
readability. Also each configuration option with nested properties is now
collapsible. Addressed in
#5068
Documentation Changes:
Updated the
its()
invoke()
doc to allow for arguments of type Number for their first argument.
Documented
how to pass in a custom list of browsers
using
[CODE_BLOCK_2663]
Dependency Updates:
Upgraded
[CODE_BLOCK_2664]
from
[CODE_BLOCK_2665]
[CODE_BLOCK_2666]
. Addressed in
#5726
3.6.1
Released 11/08/2019
Bugfixes:
The Electron browser no longer hangs when testing applications that have a
prompt in a
[CODE_BLOCK_2667]
handler. Fixes
#2118
We fixed a regression in
3.5.0
where HTTP redirects could cause
strange behavior, including cookies not being set as expected, leading to
authentication issues and other problems. Fixes
#5436
#5432
When using
cy.setCookie()
with the same
[CODE_BLOCK_2668]
Object, Cypress now correctly sets the new cookie instead of the one passed
into a previous
cy.setCookie()
. Fixes
#2701
We fixed a regression in
3.5.0
where
cy.clearCookie()
would not act as expected when
using certain
[CODE_BLOCK_2669]
. Fixes
#5453
Cypress no longer crashes with the error
[CODE_BLOCK_2670]
when loading certain websites.
Fixes
#4990
Cypress now sends the expected headers or request body in a
cy.visit()
to an HTTPS URL using the default port, 443.
Fixes
#5367
We fixed a regression in
3.6.0
where Cypress would crash with
[CODE_BLOCK_2671]
on some network requests.
Fixes
#5585
We fixed a regression in
3.5.0
that caused the red target to be
rendered incorrectly when specifying offset coordinates to
.click()
. Fixes
#5635
We fixed a regression in
3.6.0
that was causing an incorrect element
to receive the
[CODE_BLOCK_2672]
event during action commands. Fixes
#5578
We fixed a regression in
3.5.0
causing text after using modifier
keys in
.type()
to not be typed. Fixes
#5622
Elements with
[CODE_BLOCK_2673]
are now accounted for when
asserting on the elemtent's visibility. Fixes
#2985
We fixed a bug where a failed Cypress commands would incorrectly throw
[CODE_BLOCK_2674]
if the error's stack was
[CODE_BLOCK_2675]
. Fixes
#1669
The 'Log In' modal within Cypress when setting up a project now correctly
closes when manually closed. Fixes
#5631
Misc:
We improved the user experience around inspecting events fired during
.click()
.type()
commands
within the console. Addresses
#5553
We increased the timeout when connecting to the "Developer Tools Protocol"
from 5 seconds to 20 seconds and also added logging for when the connection
takes longer than 5 seconds. Addresses
#5610
There is no longer a warning about
[CODE_BLOCK_2676]
appearing in stderr when
running with video recording enabled. Addresses
#5611
Types for
.rightclick()
.dblclick()
have been updated to correctly reflect
their accepted options. Addresses
#5617
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#5556
3.6.0
Released 10/31/2019
Features:
[CODE_BLOCK_2677]
now also accepts
an Array of glob patterns when specifying what test files to load in
configuration. Addresses
#5401
Bugfixes:
We fixed a regression in
3.5.0
where the maximum size of an HTTP
header or body in a stubbed
[CODE_BLOCK_2678]
was limited to 8kb causing requests
to fail with a 431 HTTP error. Fixes
#5431
We fixed a bug where certain types of uncaught errors originating from the
application under test would not route through the
uncaught
:exception
handler, and thus could not caught and ignored. These errors will also now
correctly indicate that they came from application code. Fixes
#987
We fixed a regression in
3.5.0
that would throw an error during
[CODE_BLOCK_2679]
when running as a non-root user on a non-Windows machine. We
now always set the
[CODE_BLOCK_2680]
flag when verifying in Electron, even when
running as a non-root user. Fixes
#5434
We fixed a regression in
3.5.0
where sometimes cookies were not set
on the correct URL during a redirect inside of a
cy.visit()
cy.request()
Fixes
#5432
We fixed a regression in
3.5.0
causing environment variables
containing unicode values to be incorrectly resolved when read via
Cypress.env()
. Fixes
#5435
We fixed a regression in
3.5.0
that prevented use of
[CODE_BLOCK_2681]
[CODE_BLOCK_2682]
inside of an iframe element. Fixes
#5449
. Fixes
#5435
We now throw the proper error message when an element cannot be interacted
with due to being covered by an element with
[CODE_BLOCK_2683]
. Fixes
#5430
We fixed a regression in
3.5.0
that caused some
[CODE_BLOCK_2684]
events to
not be sent to the correct elements during
[CODE_BLOCK_2685]
. Fixes
#5459
We updated
[CODE_BLOCK_2686]
to properly respect focus selection changes during
typing. Fixes
#5456
We fixed a regression in
3.5.0
that caused selected text to be
overwritten while typing a modifier key during
[CODE_BLOCK_2687]
. Fixes
#5439
We now send all the proper events during
[CODE_BLOCK_2688]
to input elements with type
[CODE_BLOCK_2689]
[CODE_BLOCK_2690]
, and
[CODE_BLOCK_2691]
so that it now behaves as it did prior to
3.5.0
. Fixes
#5476
We now properly render iframe placeholder content when previewing DOM
snapshots. Fixes
#5295
Misc:
We no longer log the default option
[CODE_BLOCK_2692]
in the Command Log or
the console during
cy.dblclick()
. Addresses
#5406
The text color of inactive tabs within the Cypress Chrome browser has been set
to white for better readability. Addresses
#1661
Dependency Updates
Replaced
[CODE_BLOCK_2693]
with
[CODE_BLOCK_2694]
to reduce dependency size.
Addressed in
#5521
Upgraded
[CODE_BLOCK_2695]
from
[CODE_BLOCK_2696]
[CODE_BLOCK_2697]
. Addressed in
#5497
3.5.0
Released 10/23/2019
Features:
We now record video by default when you run Cypress in Chrome, Chromium, or
Canary such as during
cypress run --browser chrome
Addresses
#4608
There is a new
.rightclick()
command to right
click on DOM elements. Addresses
Cypress now accepts a
[CODE_BLOCK_2698]
argument
to specify a different file to be used for Cypress configuration. You can also
pass
[CODE_BLOCK_2699]
to the
[CODE_BLOCK_2700]
to not use any configuration file.
Addresses
#1369
You can now use your system's Node version by setting the
[CODE_BLOCK_2701]
[CODE_BLOCK_2702]
your configuration. This Node version will be used to build files in your
[CODE_BLOCK_2703]
[CODE_BLOCK_2704]
and also be used
to execute code in your
[CODE_BLOCK_2705]
. If not set,
Cypress will continue to use the Node version bundled with Cypress. Addresses
#4432
.dblclick()
now accepts
[CODE_BLOCK_2706]
[CODE_BLOCK_2707]
, and
[CODE_BLOCK_2708]
arguments. Addresses
#116
.dblclick()
now accepts
[CODE_BLOCK_2709]
[CODE_BLOCK_2710]
[CODE_BLOCK_2711]
. Addresses
#116
.screenshot()
now accepts a
[CODE_BLOCK_2712]
argument
when screenshotting elements that will alter the dimensions of the screenshot
of the element. Addresses
#4440
cy.visit()
now accepts a
[CODE_BLOCK_2713]
option representing an
object of query parameters to be used in the URL. Addresses
#5034
cy.viewport()
now allows for viewport sizes up to
4,000 pixels. Addresses
#5181
cy.viewport()
accepts new size presets for
[CODE_BLOCK_2714]
[CODE_BLOCK_2715]
[CODE_BLOCK_2716]
[CODE_BLOCK_2717]
. Addresses
#4967
Passing a
[CODE_BLOCK_2718]
[CODE_BLOCK_2719]
will automatically resolve to the
user's home directory. Addresses
#5386
Bugfixes:
.dblclick()
.click()
fire all appropriate mouse events including
[CODE_BLOCK_2720]
[CODE_BLOCK_2721]
[CODE_BLOCK_2722]
[CODE_BLOCK_2723]
[CODE_BLOCK_2724]
, and
[CODE_BLOCK_2725]
. Fixes
#1016
#1847
#2045
#2521
#2768
#2928
#2957
, and
#3224
We updated
.dblclick()
to follow the same
actionability checks as
.click()
. Fixes
#3798
Coordinates clicked during
.click()
are now correct if
the element being clicked is within an iframe. Fixes
#4347
We now allow
.type()
to be used on any DOM element. The
element will receive all of the type events. Fixes
#2166
#3661
If a typeable element gains focus during
.type()
Cypress now continues typing into the newly focused element. Fixes
#2240
We now correctly borrow the property getter for
[CODE_BLOCK_2726]
when using
[CODE_BLOCK_2727]
on an input. Fixes
#4587
We fixed an issue where
[CODE_BLOCK_2728]
inputs would not have their
[CODE_BLOCK_2729]
updated during
.type()
. Fixes
#2613
.type()
now allows you to type
[CODE_BLOCK_2730]
into number inputs
with text selection. Fixes
#4767
We now fire an
[CODE_BLOCK_2731]
event when using
.type()
typing
[CODE_BLOCK_2732]
inserts a newline. Fixes
#4870
We no longer input text when non-
[CODE_BLOCK_2733]
modifier keys are typed in
.type()
. Fixes
#5424
We now properly send the
[CODE_BLOCK_2734]
property during keyboard events triggered
during
.type()
. Fixes
#3722
Cypress now sends
[CODE_BLOCK_2735]
[CODE_BLOCK_2736]
properties to events triggered using
.trigger()
. Fixes
#3187
We fixed a bug where Cypress could not intercept traffic sent through
cy.visit()
to IP addresses over HTTPS, leading to
[CODE_BLOCK_2737]
errors. Fixes
#771
We fixed a bug introduced in
3.3.0
where
some HTTPS sites failed to load during
cy.visit()
cy.request()
with a "handshake failed" error. Fixes
#4394
We fixed a bug where ECC SSL Certificates were not supported during
cy.visit()
that was introduced in
3.3.0
. Fixes
#4368
We fixed an issue introduced in
3.4.0
that would cause the Selector Playground to not properly highlight the
currently hovered element. Fixes
#4872
Cypress.env()
now escapes
[CODE_BLOCK_2738]
tags in the
configuration file. Fixes
#4952
Cypress now properly handles converting responses of
[CODE_BLOCK_2739]
[CODE_BLOCK_2740]
to JSON. Fixes
#5165
XHR responses in
[CODE_BLOCK_2741]
that exceed 80kb in size no longer fail with an
[CODE_BLOCK_2742]
error. Fixes
Cypress no longer crashes with
[CODE_BLOCK_2743]
errors on Windows machines. Fixes
#2181
[CODE_BLOCK_2744]
event no longer incorrectly fires on hidden elements. This fixes
an issue introduced in
3.3.2
. Fixes
#4898
You can now call
.click()
on inputs or textareas that
[CODE_BLOCK_2745]
. This fixes an issue introduced in
3.4.1
. Fixes
#4874
Cypress no longer crashes with a
[CODE_BLOCK_2746]
error when receiving an erroneous HTTP CONNECT. Fixes
#3250
Cypress tests now timeout if there are no Cypress commands enqueue and the
[CODE_BLOCK_2747]
callback is not called within the
[CODE_BLOCK_2748]
. Fixes
#1075
#2478
#3349
, and
#4790
We fixed a bug where Cypress would exit with an
[CODE_BLOCK_2749]
error at the end of
a test run when using Node >12.11.0 on Windows OS. Fixes
#5241
We fixed a bug where the Chrome policy warnings introduced in
3.4.0
would not appear. Fixes
#4986
We improved the way that cookies are handled for Chrome browsers. This fixes
an issue when parsing cookies that were set with a domain beginning with a
[CODE_BLOCK_2750]
in Chrome 77. Fixes
#5142
#5206
We fixed a bug when visiting an application that does an HTTP request to a
[CODE_BLOCK_2751]
file containing Unicode transferred using
[CODE_BLOCK_2752]
that
could cause the JavaScript file to become corrupted. Fixes
#1746
We now normalize the Cypress cache folder to resolve in the current folder and
not with respect to the
[CODE_BLOCK_2753]
folder. Fixes
#2364
Misc:
Cypress now displays a more precise error message when checking an element's
visibility if an element is detached from the DOM. Addresses
#4946
We increased the timeout to wait for Xvfb to start from 5 seconds to 30
seconds. This should resolve some issues where the error
[CODE_BLOCK_2754]
was being thrown because Xvfb could not start within
the allowed time. Addresses
#5110
We now warn when using
[CODE_BLOCK_2755]
from the binary directly (not from an npm
module) since this is not its intended use. Addresses
#1573
We now warn on
[CODE_BLOCK_2756]
to explain that
this url format is not supported and suggest visiting a relative HTML file.
Addresses
#4452
Setting the reserved
[CODE_BLOCK_2757]
environment variable will now throw an
error. Addresses
#1621
We now throw a better error when passing in an Object to the
browser
argument of the Browser Launch API
explaining that a String is expected instead. Addresses
#4966
An error will now be thrown if an invalid
[CODE_BLOCK_2758]
[CODE_BLOCK_2759]
is supplied to
cy.setCookie()
, matching the RFC 6265 compliant
validation of cookie names and values. Addresses
#5206
Passing an invalid type to the 2nd argument of
cy.get()
now throws an error explaining that an
[CODE_BLOCK_2760]
Object is expected. Addresses
#2953
We now throw a more helpful error message during
cy.screenshot()
that would result in a screenshot
with 0 width or height. Addresses
#5149
Stdout printed during
[CODE_BLOCK_2761]
no longer truncates text such a filenames
and instead wraps the text to fit within the width of the terminal. Addresses
#4977
We now display up to 2,000 characters of HTTP property values within error
messages during
cy.request()
errors. Addresses
#3145
Cypress now always considers
[CODE_BLOCK_2762]
to be in
[CODE_BLOCK_2763]
. To make Cypress
send traffic for
[CODE_BLOCK_2764]
through the proxy, you will now have to pass
[CODE_BLOCK_2765]
[CODE_BLOCK_2766]
. Addresses
#4780
We changed the way cookies are set in
cy.visit()
more closely match the browser's behavior when setting cookies, particularly
when using
[CODE_BLOCK_2767]
with cookies. Addresses
#4433
We've added more flags to send to Chrome upon launch that should help with
issues encountered during browser automation including
[CODE_BLOCK_2768]
[CODE_BLOCK_2769]
[CODE_BLOCK_2770]
[CODE_BLOCK_2771]
, and
[CODE_BLOCK_2772]
. Addresses
#5132
#3633
Scrolling the specs list now only scrolls the list of spec files and no longer
scrolls the search and filter bar. Addresses
#4904
We fixed some layout issues within the Test Runner that were introduced in
3.4.1
. Addresses
#4888
#4912
, and
#4959
The counter badge for spies and stubs no longer appears visually cut off.
Fixes
#4822
TypeScript 3.6.2 no longer errors due to outdated jQuery types. Addresses
#5065
We updated types for
Cypress.Commands.overwrite()
to not allow
[CODE_BLOCK_2773]
object as an argument. Addresses
#5341
We added
[CODE_BLOCK_2774]
[CODE_BLOCK_2775]
types when a run fails using the
Module API
. Addresses
#5335
We're continuing to make progress in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#4869
#4906
#5096
#5107
#5156
#5173
, and
#5352
Documentation Changes:
Added a
.rightclick()
doc.
Added a Webinars doc containing videos of
all of the official Cypress webcasts.
Updated the
.dblclick()
doc to include new
[CODE_BLOCK_2776]
[CODE_BLOCK_2777]
, and
[CODE_BLOCK_2778]
arguments plus
[CODE_BLOCK_2779]
[CODE_BLOCK_2780]
options.
Added the
[CODE_BLOCK_2781]
argument to
Command Line
Module API
doc.
Added the
[CODE_BLOCK_2782]
argument to
Configuration
doc and mentioned its uses
in the
How to use Plugins
Node Events Overview
doc.
Updated all docs to mention 'configuration file' instead of static
[CODE_BLOCK_2783]
file since this is not configurable via a
[CODE_BLOCK_2784]
argument.
Added
[CODE_BLOCK_2785]
option to
cy.visit()
with
examples.
Added
[CODE_BLOCK_2786]
option to
cy.screenshot()
with
examples.
Updated the
cy.viewport()
doc to have a max viewport
size of
[CODE_BLOCK_2787]
Added newly supported viewport sizes to the
cy.viewport()
doc.
Documented new keyboard shortcuts in the
Cypress App
doc.
Added a new section on troubleshooting problems with Xvfb to the
Continuous Integration
doc.
Added a section to our Debugging doc about our
[CODE_BLOCK_2788]
plugin used
for playing around with small test cases.
Added a section to our
Debugging
explaining how to patch an installed version of Cypress.
Mention not needing to decode portions of the
[CODE_BLOCK_2789]
in the
[CODE_BLOCK_2790]
doc.
Mention that the
[CODE_BLOCK_2791]
prefix is not supported in the
cy.visit()
doc.
Add a note about when passing
[CODE_BLOCK_2792]
[CODE_BLOCK_2793]
is necessary in the
Proxy Configuration doc.
Updated our Dashboard docs to include screenshots containing our new Dashboard
navigation design.
We have some newly translated documentation in Portuguese. If you'd like to
help in translating more, please open a pull request in our
documentation repo
Dependency Updates
Upgraded Chrome browser version used during
[CODE_BLOCK_2794]
and when selecting
Electron browser in
[CODE_BLOCK_2795]
from
[CODE_BLOCK_2796]
[CODE_BLOCK_2797]
. Addressed in
#4720
Upgraded
[CODE_BLOCK_2798]
from
[CODE_BLOCK_2799]
[CODE_BLOCK_2800]
. Addressed in
#4720
Upgraded
[CODE_BLOCK_2801]
from
[CODE_BLOCK_2802]
[CODE_BLOCK_2803]
. Addressed in
#4720
Upgraded
[CODE_BLOCK_2804]
from
[CODE_BLOCK_2805]
[CODE_BLOCK_2806]
. Addressed in
#1229
Upgraded
[CODE_BLOCK_2807]
from
[CODE_BLOCK_2808]
[CODE_BLOCK_2809]
. Addressed in
#5216
Upgraded
[CODE_BLOCK_2810]
from
[CODE_BLOCK_2811]
[CODE_BLOCK_2812]
. Addressed in
#5108
3.4.1
Released 7/29/2019
Dashboard Features:
We’re excited to announce
GitHub integration
for the
Cypress Dashboard
. You can now get timely
and useful test run information within pull-requests via status checks and
pull-request comments. Learn all about it on
our blog
Addresses
#981
Bugfixes:
Fixed a bug where the content of pages using non-UTF-8 character encoding
would become corrupted when opened in Cypress. Fixes
#3479
#1543
, and
#3650
Fixed a regression introduced in
3.4.0
that caused an error to be thrown when chaining together multiple assertions
using the
[CODE_BLOCK_2813]
chainable getter. Fixes
#4833
[CODE_BLOCK_2814]
[CODE_BLOCK_2815]
assertion chainers now correctly work the same as
[CODE_BLOCK_2816]
[CODE_BLOCK_2817]
assertion chainers. Fixes
#4833
Cypress now correctly works offline on Windows when visiting a localhost URL.
Fixes
#4763
cy.type()
now factors in the
[CODE_BLOCK_2818]
property of
[CODE_BLOCK_2819]
elements, and will wait for this property to be
[CODE_BLOCK_2820]
before
attempting to type. Fixes
#1246
Variables beginning with
[CODE_BLOCK_2821]
[CODE_BLOCK_2822]
in your application code are no
longer modified when
[CODE_BLOCK_2823]
[CODE_BLOCK_2824]
. Fixes
#4794
We removed erroneous socket connections when the browser is initially
launching. Fixes
#4776
Fixed a bug when dismissing pinned snapshots that would cause the page to be
wiped with nothing rendered. Fixes
#4864
We upgraded the
[CODE_BLOCK_2825]
dependency so that it no longer
errors in certain situations when trying to access duration on tests. Fixes
#4654
We upgraded the
[CODE_BLOCK_2826]
dependency to fix a security vulnerability warning.
Fixes
#4699
#4730
#4743
Misc:
We now ensure we are shipping with production versions of dependencies such as
[CODE_BLOCK_2827]
[CODE_BLOCK_2828]
, etc. This should help to prevent conflicts with Developer
Tools extensions and increase performance by reducing memory, heap allocation,
and overall JS bundle size. Addresses
#4844
Video recordings now wait after all tests finish to ensure that the video
captures the final rendered frames of the browser. This prevents the last few
paints from being cut off. Fixes
#2370
Cypress now looks for any npm proxy configuration values as a fallback when no
other system proxy configuration is found. This brings this feature into
parity with how npm reads off proxy configuration values during an
[CODE_BLOCK_2829]
. Addresses
#4719
We updated the messaging when there is a failure downloading Cypress to
recommend checking your proxy settings. Addresses
#1662
A warning message now displays if you attempt to run the Cypress binary
directly instead of going through the cypress
[CODE_BLOCK_2830]
package. Addresses
#1573
There are newly added examples in the TypeScript definitions for
custom commands
cy.location()
.should()
Addresses
#3684
#4715
The types for the
[CODE_BLOCK_2831]
syntax have been added. Addresses
#4727
Types for
[CODE_BLOCK_2832]
have been added. Addressed in
#4788
There is now a
[CODE_BLOCK_2833]
option to
cy.type()
that disables parsing the special character
sequences found between the
[CODE_BLOCK_2834]
characters. This will now type what you've
provided literally without any special parsing. Fixes
#4287
You can now zoom in the main Test Runner window and also the Electron browser.
Corresponding keyboard shortcuts for Zoom in, Zoom out and Actual Size are
also available. Addresses
#1231
When viewing the Test Runner's main window at its smallest size, the header
text no longer incorrectly wraps. Addresses
We're continuing to make process in converting our codebase from CoffeeScript
to JavaScript. Addresses
#2690
#4781
#4817
We increased the cypress binary verification phase from 10 seconds to 30
seconds to accommodate underpowered or overwhelmed machines typically found in
CI environments. Addresses
#4624
Documentation Changes:
We have new instructions on how to set up
GitHub Integration
with
the Cypress Dashboard.
Updated instructions for adding types for custom commands in the
TypeScript Support
doc. Addressed in
#1901
Added a section about video encoding and how to speed up the encoding time to
Screenshots and Videos
doc. Addressed in
#1880
Dependency Updates
Upgraded
[CODE_BLOCK_2835]
from
[CODE_BLOCK_2836]
[CODE_BLOCK_2837]
. Addressed in
#4792
Upgraded
[CODE_BLOCK_2838]
from
[CODE_BLOCK_2839]
[CODE_BLOCK_2840]
. Addressed in
#4751
#4825
#4826
Upgraded
[CODE_BLOCK_2841]
from
[CODE_BLOCK_2842]
[CODE_BLOCK_2843]
. Addressed in
#4622
Upgraded
[CODE_BLOCK_2844]
from
[CODE_BLOCK_2845]
[CODE_BLOCK_2846]
. Addressed in
#4853
Upgraded
[CODE_BLOCK_2847]
from
[CODE_BLOCK_2848]
[CODE_BLOCK_2849]
. Addressed in
#4818
Upgraded
[CODE_BLOCK_2850]
from
[CODE_BLOCK_2851]
[CODE_BLOCK_2852]
. Addressed in
#4684
#4709
#4784
Upgraded
[CODE_BLOCK_2853]
from
[CODE_BLOCK_2854]
[CODE_BLOCK_2855]
. Addressed in
#4785
Upgraded
[CODE_BLOCK_2856]
from
[CODE_BLOCK_2857]
[CODE_BLOCK_2858]
. Addressed in
#4750
Upgraded
[CODE_BLOCK_2859]
from
[CODE_BLOCK_2860]
[CODE_BLOCK_2861]
. Addressed in
#4797
We also updated and removed some dependencies used for development.
3.4.0
Released 7/9/2019
Features:
Users can now log in to the Test Runner through the browser installed on their
system. This also allows for login via GitHub with U2F keys. Addresses
#3583
#4337
, and
#1162
Google or SSO (if configured) login is now supported in the Test Runner.
Addresses
#3519
Bugfixes:
Cypress now properly supports partial matching of string values for assertions
[CODE_BLOCK_2862]
[CODE_BLOCK_2863]
, and
[CODE_BLOCK_2864]
. Fixes
#1969
A form is now properly submitted when using
[CODE_BLOCK_2865]
on a form
containing no buttons and only one input that allows implicit submission.
Fixes
#4495
Extra whitespace and quotations are now stripped from the
[CODE_BLOCK_2866]
environment variable to help prevent some unexpected
results when set in Windows. Fixes
#4506
Electron rendering warnings are no longer printed to console output. Fixes
#4288
Misc:
We now expose a downloadable binary for each commit made into the
develop branch
of the
cypress
repository so that
pre-released versions can be installed. See
this commit
for an example. Addresses
#4525
There are now a series of checks that are run during download of Cypress to
verify that the zip file downloaded is the correct file. Addresses
#812
#3515
A warning now displays for Windows' users who have Group Policy settings that
may interfere with usage of Cypress. Addresses
#4391
There's a new warning when mouse interactions fail displaying that it failed
due to the element having CSS
[CODE_BLOCK_2867]
. Addresses
#3164
If a URL is passed to
[CODE_BLOCK_2868]
containing percent-encoded characters, we
now display a warning explaining that
[CODE_BLOCK_2869]
expects a decoded URL.
Addresses
#2372
Environment variables for Semaphore 2.0 are now captured when recording tests
to the Dashboard. Fixes
#4671
We now capture environment variables set from Concourse CI when recording
tests to the Dashboard. Fixes
#4376
We replaced capturing environment variables from SnapCI (which is no longer
available) to instead capture ones set from GoCD when recording tests to the
Dashboard. Fixes
#2680
JSON schema file
used for
intelligent code completion
for the Cypress configuration file has been updated to match our
documentation.
Documentation Changes:
New error message added about policy settings to our
Error Messages
doc. Addressed in
#1567
Real World
example tests were added to
Example Applications doc. Addressed in
#1567
More content was added to our
Code Coverage
doc.
Dependency Updates
Removed
[CODE_BLOCK_2870]
since it was no longer being used. Addressed in
#4619
Upgraded
[CODE_BLOCK_2871]
from
[CODE_BLOCK_2872]
[CODE_BLOCK_2873]
. Addressed in
#4597
Upgraded
[CODE_BLOCK_2874]
from
[CODE_BLOCK_2875]
[CODE_BLOCK_2876]
. Addressed in
#4610
Upgraded
[CODE_BLOCK_2877]
from
[CODE_BLOCK_2878]
[CODE_BLOCK_2879]
. Addressed in
#4618
Upgraded
[CODE_BLOCK_2880]
from
[CODE_BLOCK_2881]
[CODE_BLOCK_2882]
. Addressed in
#4620
Upgraded
[CODE_BLOCK_2883]
from
[CODE_BLOCK_2884]
[CODE_BLOCK_2885]
. Addressed in
#4584
We also updated and removed some dependencies used for development.
3.3.2
Released 6/27/2019
Performance Improvements:
We fixed a regression introduced in
3.3.0
that was causing the Test Runner
to do extremely unnecessary re-renders of the Command Log on any command
change - leading to exponential performance degradation on any run. This was
the root cause behind many users experiencing a reduction in performance when
upgrading to
[CODE_BLOCK_2886]
or above. Fixes
#4411
#4313
We reduced memory consumption and improved the performance of running tests
anytime you're inside of
[CODE_BLOCK_2887]
. Fixes
#2366
We no longer delay proxied responses with no body with status codes 1xx,
204, 304. This fixes a regression introduced in
3.2.0
where responses with these status
codes were delayed when using a proxy. Fixes
#4298
Snapshots were previously being mistakenly stored then instantly deleted when
[CODE_BLOCK_2888]
was set to 0. We now no longer record the snapshots at
all when
[CODE_BLOCK_2889]
is set to 0. This should slightly improve the
performance of running tests with this setting. Fixes
#4104
#4164
Bugfixes:
Cypress no longer watches files when run using
[CODE_BLOCK_2890]
. This will fix
some runs that were crashing with an
[CODE_BLOCK_2891]
error. Fixes
#4283
Cypress now correctly handles
[CODE_BLOCK_2892]
[CODE_BLOCK_2893]
events in situations where
the browser has lost focus. Fixes
#4039
#1176
, and
#1486
If the DOM element provided to
.type()
is already in
focus, Cypress no longer attempts to click on the DOM element. This allows you
to call
[CODE_BLOCK_2894]
on elements that are focusable, but not necessarily
clickable and type into them using
[CODE_BLOCK_2895]
. Fixes
#3001
#4420
Some elements inside of a parent with CSS
[CODE_BLOCK_2896]
that flow outside
of its parent are now properly considered hidden.
#4161
Elements that are inside a parent with CSS
[CODE_BLOCK_2897]
which is
itself inside of a parent element with
[CODE_BLOCK_2898]
are now properly
considered visible. Fixes
#4395
#755
[CODE_BLOCK_2899]
[CODE_BLOCK_2900]
elements are now properly considered visible if it
is contained within a visible
[CODE_BLOCK_2901]
. Fixes
#4473
[CODE_BLOCK_2902]
[CODE_BLOCK_2903]
elements are now properly always considered visible.
Fixes
#4475
[CODE_BLOCK_2904]
[CODE_BLOCK_2905]
elements with CSS
[CODE_BLOCK_2906]
are now properly
considered hidden. Fixes
#4476
We now correctly handle form submission when using
[CODE_BLOCK_2907]
on a
form containing a button of type
[CODE_BLOCK_2908]
. Fixes
#3909
If a site's
[CODE_BLOCK_2909]
[CODE_BLOCK_2910]
[CODE_BLOCK_2911]
or cannot be determined
during
[CODE_BLOCK_2912]
, we now look at the content of the
site and evaluate whether it looks like HTML. If it does look like HTML we no
longer error and continue as if it the site's
[CODE_BLOCK_2913]
[CODE_BLOCK_2914]
#1727
#773
#3101
Previously Cypress would send the
[CODE_BLOCK_2915]
header to any URLs that match the
CORS origin of the original
[CODE_BLOCK_2916]
header. We now correctly only send the
[CODE_BLOCK_2917]
headers when there is an exact match on the
protection space
. Fixes
#4267
Requests that go through
cy.visit()
cy.request()
are now automatically retried on
[CODE_BLOCK_2918]
errors. Fixes
#4424
#1755
Cypress now errors when the
[CODE_BLOCK_2919]
parameter passed to
cy.request()
contains a circular reference. Fixed in
#4407
We fixed an issue where the
[CODE_BLOCK_2920]
configuration was being filtered
out when passed via a command line flag, so in effect being ignored. Fixes
#1696
Setting
[CODE_BLOCK_2921]
is now respected for HTTPS urls, as it should be. Fixes
#4303
When running tests with non-string test titles, the screenshots now
automatically stringify the test titles instead of throwing an error. Fixes
#4310
Cypress no longer incorrectly errors when calling
[CODE_BLOCK_2922]
[CODE_BLOCK_2923]
[CODE_BLOCK_2924]
in an application with
multiple iframes. Fixes
#4396
Fixed a regression in
3.3.0
causing some
users using proxy to see the "Browser was not launched through Cypress" error
during
[CODE_BLOCK_2925]
. This was caused by incorrectly routing requests for
Cypress's internal server on
[CODE_BLOCK_2926]
through the user's proxy. Fixes
#4410
We fixed situations during a test failure where the Test Runner would throw
[CODE_BLOCK_2927]
. Fixes
#1958
#4346
Fixed issue where
[CODE_BLOCK_2928]
would return
[CODE_BLOCK_2929]
instead of an array within application code when using
cy.clock()
. Fixes
#3625
Passing an array of strings to
[CODE_BLOCK_2930]
no longer causes an error to
throw. Fixes
#4312
Fixed a visual bug when aliasing a non-route subject multiple times that would
cause the Test Runner to show 'undefined' alias with empty counts. Fixes
#4429
Fixed regression introduced in
3.2.0
where Cypress would error because it could not find a type definition file for
'../sinon'. Fixes
#4272
cy.writeFile()
no longer errors in TypeScript files
when passing an
[CODE_BLOCK_2931]
object as its third argument. Fixes
#4461
cy.stub()
no longer errors in TypeScript files when
evaluating returns. Fixes
#4302
Misc:
Warnings are now displayed when recording in
[CODE_BLOCK_2932]
to warn when a
project is nearing its organization's usage limit. They also clearly explain
any consequences of going over a plan's usage limit. Addresses
#4530
An warning icon with a tooltip is displayed in the Runs tab of the Test Runner
when parallelization was disabled during the run due to being over the
organization's usage limit. Addresses
#4489
You can now opt out of sending exceptions to
[CODE_BLOCK_2933]
setting
[CODE_BLOCK_2934]
in your system environment variables.
#4386
We are now capturing Google Cloud build details when recording tests to the
Cypress Dashboard. Addresses
#3582
The tests titles and headers in the Command Log no longer truncate with
ellipsis when the text is longer than that width of the Command Log. Instead
the text wraps so that all text is shown. Addresses
#3947
Special env vars are now truncated in
[CODE_BLOCK_2935]
and the debug logs.
Addresses
#4501
[CODE_BLOCK_2936]
in now displayed in the configuration in the Test Runner
settings like all other configuration values. Fixes
#4500
When recording to the Dashboard, unrecognized warnings coming from the API
server are now displayed in stdout. Fixes
#4489
Documentation Changes:
Code Coverage
doc. Addressed in
#1744
Visual Testing
doc. Addressed in
#1744
New Courses doc to list online courses that
teach end-to-end testing with Cypress. Addressed in
#1766
Added a section about
Hacking on Cypress
in the
Debugging doc. Addressed in
#1783
Added a section on how to
opt out of sending exception data to Cypress
in the Installing Cypress doc.
Dependency Updates
Removed
[CODE_BLOCK_2937]
since it was no longer being used. Addressed in
#4502
Upgraded
[CODE_BLOCK_2938]
from
[CODE_BLOCK_2939]
[CODE_BLOCK_2940]
. Addressed in
#4487
Upgraded
[CODE_BLOCK_2941]
from
[CODE_BLOCK_2942]
[CODE_BLOCK_2943]
. Addressed in
#4329
Upgraded
[CODE_BLOCK_2944]
from
[CODE_BLOCK_2945]
[CODE_BLOCK_2946]
. Addressed in
#4364
Upgraded
[CODE_BLOCK_2947]
from
[CODE_BLOCK_2948]
[CODE_BLOCK_2949]
. Upgraded in CLI package only to
[CODE_BLOCK_2950]
. Addressed in
#4418
#4419
#4422
#4437
#4555
#4559
#4571
#4581
Upgraded
[CODE_BLOCK_2951]
from
[CODE_BLOCK_2952]
[CODE_BLOCK_2953]
. Addressed in
#4417
Upgraded
[CODE_BLOCK_2954]
from
[CODE_BLOCK_2955]
[CODE_BLOCK_2956]
. Addressed in
#4438
Upgraded
[CODE_BLOCK_2957]
from
[CODE_BLOCK_2958]
[CODE_BLOCK_2959]
. Addressed in
#4466
#4467
, and
#4471
Upgraded
[CODE_BLOCK_2960]
from
[CODE_BLOCK_2961]
[CODE_BLOCK_2962]
. Addressed in
#4538
We updated and removed some dependencies used for development.
3.3.1
Released 5/23/2019
News:
We've
written a blog post
about the 300% increase in proxy performance delivered in
3.3.0
Bugfixes:
Cypress no longer accidentally prints internal Electron logs when running
[CODE_BLOCK_2963]
. This bug would exhibit itself when verifying and running
Cypress the first time after installation. You may have seen these logs when
running in CI. Fixes
#4255
Fixed a bug for users running external network proxies that prevented requests
from completing. Requests should now all work correctly. Fixes
#4257
Fixed a regression in
3.3.0
causing
large requests such as
[CODE_BLOCK_2964]
uploads to hang. Fixes
#4240
#4252
, and
#4253
Fixed issue where support for
[CODE_BLOCK_2965]
[CODE_BLOCK_2966]
[CODE_BLOCK_2967]
[CODE_BLOCK_2968]
assertions
were not working.
Fixes
#4265
Names given to
[CODE_BLOCK_2969]
now work properly when they contain
[CODE_BLOCK_2970]
character. Fixes
#3512
The proper error is now thrown when passing
[CODE_BLOCK_2971]
to a Cypress
command that failed. Fixes
#3847
Fixed an issue where highlighting a command's snapshot would throw an error
when no application was rendered in the AUT frame. Fixes
#4177
We now properly detect the branch name when running Cypress in AppVeyor. Fixed
#4234
Misc:
Fix capitalization of
[CODE_BLOCK_2972]
in error messages. Addressed in
#4262
Documentation Changes:
We have some newly translated documentation in
Chinese
Japanese
If you'd like to help in translating more, please open a pull request in our
documentation repo
3.3.0
Released 5/17/2019
News:
We've
written a blog post
about the 300% increase in proxy performance delivered in
[CODE_BLOCK_2973]
Features:
Cypress now automatically reads from your system's
[CODE_BLOCK_2974]
[CODE_BLOCK_2975]
, and
[CODE_BLOCK_2976]
environment variables and proxies traffic
accordingly through Cypress based on these values. This includes network
traffic within your application under test, when downloading Cypress, and when
accessing 'Runs' within the Test Runner. Please read our new
Proxy Configuration
doc to
understand more about proxy configuration in Cypress. Fixes
#672
#733
#939
#1039
#1459
#1469
#1470
#1541
#1608
#2295
#3855
#3865
#1401
#3857
Your project's current proxy settings now display in the
Settings of the Test Runner
Addresses
#3856
Support for
[CODE_BLOCK_2977]
[CODE_BLOCK_2978]
[CODE_BLOCK_2979]
[CODE_BLOCK_2980]
assertions
have been added. Addresses
We now offer a separate 32bit and 64bit build for Windows. Addresses
#716
#787
#2095
#706
#3706
, and
#4016
Requests that go through
cy.visit()
cy.request()
are now automatically retried under the
hood when the request fails. This more closely reflects Chrome's default
behavior on requests. Addresses
#4013
#898
#1013
cy.visit()
cy.request()
now support new options
[CODE_BLOCK_2981]
[CODE_BLOCK_2982]
to allow changing Cypress's automatic request retry on status codes and
network errors. Addresses
#4013
#898
#1013
.type()
now supports the special character sequences
[CODE_BLOCK_2983]
[CODE_BLOCK_2984]
, and
[CODE_BLOCK_2985]
. Addresses
#3845
We now indicate which XHRs match which alias in the Command Log on
.wait()
when they match an alias multiple times.
Addresses
#477
The console log when clicking on the
cy.visit()
command
now displays its resolved
[CODE_BLOCK_2986]
arguments. Addresses
#3721
There's a new 'canceled' XHR status shown on the Command Log to indicate the
difference between calling
[CODE_BLOCK_2987]
and the browser canceling the request
due to page navigation. Addresses
#3973
The Electron browser now runs Chrome Version 61. Addresses
#4000
Running Cypress via
[CODE_BLOCK_2988]
now supports scripts of
[CODE_BLOCK_2989]
Fixes
#3696
Exposed
Cypress.isCy()
method to check if a value is
a valid instance of
[CODE_BLOCK_2990]
or a
[CODE_BLOCK_2991]
chainable. Fixes
#3822
There is a new "Download Chromium" menu item in the "Help" menu of the Test
Runner links to Cypress's
Chromium Download Tool
. Addresses
#3977
Bugfixes:
Fixed a regression introduced in
3.2.0
that caused an error to throw when visiting domains with certain public
suffixes. Fixes
#3717
When running Cypress with
[CODE_BLOCK_2992]
environment variables set, Cypress no
longer issues an incorrect 0 exit code.
#1676
Fixed a regression introduced in
3.2.0
that caused
.its()
to no longer retry when it yields
[CODE_BLOCK_2993]
#3837
Fixed a regression introduced in
3.2.0
that caused
cy.fixture()
to throw a
[CODE_BLOCK_2994]
error if
a directory had the same name as a file within that same directory. Fixes
#3739
[CODE_BLOCK_2995]
headers sent as arguments to
cy.request()
cy.visit()
are now properly sent. Fixes
#3873
#3719
When a request is proxied through Cypress and there is a network error, we no
longer send an HTML response with a 500 status code. We now kill the
browser-facing socket and let the network error be handled by the application
under test. Fixes
#4101
#4231
#1036
#4231
, and
#1398
We changed Cypress's implementation to no longer rely on internal XHR events
when the browser navigates. This fixes a a bug in Chrome 71+ that could cause
XHRs to pend forever. Fixes
#3973
#4130
We greatly improved the speed of proxied requests through our network layer.
Fixes
#3192
#1469
If an error occurs during
[CODE_BLOCK_2996]
, we now kill the verification
process after 10 seconds and print the error message. This should prevent some
situations where Cypress would hang during installation or verification and
never exit. Fixes
#819
Cypress automatically retries
[CODE_BLOCK_2997]
[CODE_BLOCK_2998]
commands by
starting its own Xvfb server on Linux if the first attempt fails due to
possible
[CODE_BLOCK_2999]
misconfiguration. Addresses
#4034
Cypress now properly handles typing JavaScript object prototype methods (like
[CODE_BLOCK_3000]
) into
[CODE_BLOCK_3001]
. Fixes
#3423
We now set the
[CODE_BLOCK_3002]
option to
[CODE_BLOCK_3003]
if the
[CODE_BLOCK_3004]
header equals
[CODE_BLOCK_3005]
[CODE_BLOCK_3006]
is not already set by a user.
This fixes a situation where Cypress would try to parse the
[CODE_BLOCK_3007]
as a
string, resulting in a confusing error message. Fixes
#2923
cy.contains()
now correctly handles comma delimited
arguments passed to the selector argument. Fixes
#2407
Passing a browser path containing spaces now works properly when passed to the
[CODE_BLOCK_3008]
argument. Fixes
#3979
Fixed display of tooltips when selecting elements from the Selector Playground
so that they display at the correct coordinates when scrolling. Fixes
#1351
The lists of spec files now display at the correct indentation level when they
are nested more than 5 directories deep. Fixes
#3652
Cypress now properly parses environment variables with empty values. Fixes
#3742
Assertions running outside of a test are now properly handled in Cypress
instead of throwing internal errors. Fixes
#3926
Cypress.log()
now throws an error when not
properly passed an object as its argument. Addresses
#3658
Cypress.log()
no longer throws when called
before any other Cypress commands. Fixes
#3658
Misc:
We now better support capturing environment variables within Azure DevOps.
Addresses
#3657
Cypress now only scans for spec changes when the watcher sees changes, rather
than polling to scan. Addresses
#3069
The ability to open the context menu to see "Inspect Element" has been
reenabled in the Electron browser. Addresses
#4002
We no longer package non-Windows FFmpeg builds with Windows builds, resulting
in a 35-40% reduction in zipped size and a 36-43% reduction in unzipped size
of download. Addresses
#3888
The warning messages when going over test recording limits have been updated
to correctly display 'monthly tests' and 'private tests' where necessary.
Addresses
#4024
When an HTTP request is received by the proxy layer, by default, we send it
with a
[CODE_BLOCK_3009]
header so that the connection will be reused
if possible. Addresses
#3857
Improved accessibility of Test Runner for screen readers. Addresses
#3850
Cypress type definition now allow a
[CODE_BLOCK_3010]
option in
cy.hash()
. Fixes
#3844
Fixed type definition for
[CODE_BLOCK_3011]
assertion so that it now only accepts
[CODE_BLOCK_3012]
type arguments. Fixes
#2578
.trigger()
type definition now expects its
[CODE_BLOCK_3013]
to be
[CODE_BLOCK_3014]
. Addressed in
#3809
cy.clock()
type definition now allows for type
[CODE_BLOCK_3015]
. Fixed in
#4106
Added type definition for undocumented
[CODE_BLOCK_3016]
method.
Fixes
#4070
Added type definition for
Cypress.isCy()
method.
Fixes
#3822
Added missing type definitions for some
cy.visit()
options. Fixes
#3989
The spinner animation should more smoothly spin when a command is pending in
the Test Runner. Addressed in
#4005
Documentation Changes:
Proxy Configuration
doc.
Addressed in
#1486
Added
[CODE_BLOCK_3017]
[CODE_BLOCK_3018]
, and
[CODE_BLOCK_3019]
as supported special character
sequences to
.type()
. Addressed in
#1567
Added newly supported
[CODE_BLOCK_3020]
assertion to
Assertions
doc. Addresses
#1372
Added new options
[CODE_BLOCK_3021]
[CODE_BLOCK_3022]
cy.visit()
cy.request()
Updated
install instructions for Windows
on how to target 64bit and 32bit infrastructures. Addressed in
#1568
Updated
.its()
.invoke()
docs
to better explain how default assertions are handled. Addresses
#1643
Updated our
Roadmap
to more closely reflect the
work we are doing. Addressed in
#1567
Added a section about how to request our new
Open Source Plan
in the Dashboard Service doc. Addressed in
#1567
Dependency Updates
Upgraded
[CODE_BLOCK_3023]
from
[CODE_BLOCK_3024]
[CODE_BLOCK_3025]
. Addressed in
#4045
Upgraded
[CODE_BLOCK_3026]
from
[CODE_BLOCK_3027]
[CODE_BLOCK_3028]
. Addresses
#4152
Upgraded
[CODE_BLOCK_3029]
from
[CODE_BLOCK_3030]
[CODE_BLOCK_3031]
. Addresses
#4000
Upgraded
[CODE_BLOCK_3032]
from
[CODE_BLOCK_3033]
[CODE_BLOCK_3034]
. Addresses
#4155
Upgraded
[CODE_BLOCK_3035]
from
[CODE_BLOCK_3036]
[CODE_BLOCK_3037]
. Addressed in
#4086
Upgraded
[CODE_BLOCK_3038]
from
[CODE_BLOCK_3039]
[CODE_BLOCK_3040]
. Addressed in
#4087
Upgraded
[CODE_BLOCK_3041]
from
[CODE_BLOCK_3042]
[CODE_BLOCK_3043]
. Addressed in
#4222
Upgraded
[CODE_BLOCK_3044]
from
[CODE_BLOCK_3045]
[CODE_BLOCK_3046]
. Addressed in
#3949
Upgraded
[CODE_BLOCK_3047]
from
[CODE_BLOCK_3048]
[CODE_BLOCK_3049]
. Addressed in
#4097
Removed
[CODE_BLOCK_3050]
. Addressed in
#4209
Upgraded
[CODE_BLOCK_3051]
from
[CODE_BLOCK_3052]
[CODE_BLOCK_3053]
. Addressed in
#4001
Downgraded
[CODE_BLOCK_3054]
from 2.1.7 to 2.0.0 to avoid a regression released
[CODE_BLOCK_3055]
. Addresses
#3717
Upgraded
[CODE_BLOCK_3056]
from
[CODE_BLOCK_3057]
[CODE_BLOCK_3058]
. Addressed in
#4205
#4206
Upgraded
[CODE_BLOCK_3059]
from
[CODE_BLOCK_3060]
[CODE_BLOCK_3061]
. Addressed in
#4112
Upgraded
[CODE_BLOCK_3062]
from
[CODE_BLOCK_3063]
[CODE_BLOCK_3064]
. Addressed in
#4134
Upgraded
[CODE_BLOCK_3065]
from
[CODE_BLOCK_3066]
[CODE_BLOCK_3067]
. Addressed in
#4150
Removed
[CODE_BLOCK_3068]
. Addressed in
#4148
Upgraded
[CODE_BLOCK_3069]
from
[CODE_BLOCK_3070]
[CODE_BLOCK_3071]
. Addressed in
#4148
Upgraded
[CODE_BLOCK_3072]
from
[CODE_BLOCK_3073]
[CODE_BLOCK_3074]
. Addressed in
#4111
Upgraded
[CODE_BLOCK_3075]
from
[CODE_BLOCK_3076]
[CODE_BLOCK_3077]
. Addressed in
#4140
Upgraded
[CODE_BLOCK_3078]
from
[CODE_BLOCK_3079]
[CODE_BLOCK_3080]
. Addressed in
#4110
Upgraded
[CODE_BLOCK_3081]
from
[CODE_BLOCK_3082]
[CODE_BLOCK_3083]
. Addressed in
#4139
We updated and removed some dependencies used for development.
3.2.0
Released 3/15/2019
Features:
cy.visit()
has been expanded to allow options
[CODE_BLOCK_3084]
[CODE_BLOCK_3085]
[CODE_BLOCK_3086]
, and
[CODE_BLOCK_3087]
. This allows
cy.visit()
to be called with a
[CODE_BLOCK_3088]
method or with headers like
[CODE_BLOCK_3089]
[CODE_BLOCK_3090]
. Fixes
#1500
#1904
#908
cy.request()
now allows any valid HTTP
[CODE_BLOCK_3091]
to be
used including
[CODE_BLOCK_3092]
[CODE_BLOCK_3093]
[CODE_BLOCK_3094]
[CODE_BLOCK_3095]
[CODE_BLOCK_3096]
[CODE_BLOCK_3097]
[CODE_BLOCK_3098]
[CODE_BLOCK_3099]
[CODE_BLOCK_3100]
[CODE_BLOCK_3101]
[CODE_BLOCK_3102]
[CODE_BLOCK_3103]
[CODE_BLOCK_3104]
[CODE_BLOCK_3105]
[CODE_BLOCK_3106]
[CODE_BLOCK_3107]
[CODE_BLOCK_3108]
[CODE_BLOCK_3109]
, and
[CODE_BLOCK_3110]
Addresses
#1302
[CODE_BLOCK_3111]
argument
of the
Command Line
and the
[CODE_BLOCK_3112]
argument
of the
Module API
have been updated to allow passing a
[CODE_BLOCK_3113]
. Addresses
#1026
cy.type()
now accepts
[CODE_BLOCK_3114]
[CODE_BLOCK_3115]
special
character sequences to move the cursor to the start or end of a line.
Addresses
#2033
The Cypress Chrome extension now has a static ID of
[CODE_BLOCK_3116]
. This allows Cypress to be added to your
allowed extensions for those working under corporate policies that prohibit
extensions. Addresses
#3673
#1239
#2494
Bugfixes:
Problems logging in through GitHub in the Test Runner have been fixed. The
GitHub login window no longer shows the browser support banner and the
"Authorize cypress-io" button is no longer disabled. Fixes
#1251
Fixed an issue when testing applications using older versions of jQuery. They
now no longer throw
[CODE_BLOCK_3117]
. Fixes
#2927
Cypress now detects more instances of
[CODE_BLOCK_3118]
installations. Fixes
#3183
#3218
Fixed issue with loading fixture files containing more than one
[CODE_BLOCK_3119]
in their
filename while not specifying the file extension. We are also displaying a
clearer warning when a fixture file cannot be found. Fixes
#1402
All third party
[CODE_BLOCK_3120]
have been moved from Cypress
[CODE_BLOCK_3121]
into
[CODE_BLOCK_3122]
. This should fix situations where user's type dependencies
were conflicting with Cypress's third party type definitions. Fixes
#3371
#1227
[CODE_BLOCK_3123]
has been updated to no longer strip singular
[CODE_BLOCK_3124]
at the end of urls and instead only strip instances of multiple
[CODE_BLOCK_3125]
. Fixes
#3540
The prompt to "Restore pages?" is no longer displayed within Chrome upon
restarting a crashed Chrome window. Addresses
#2048
cy.wrap()
no longer throws an error when a non-jQuery
wrapped DOM element is passed in as an argument. Fixes
#3549
Fixed issue where all arguments passed to
[CODE_BLOCK_3126]
[CODE_BLOCK_3127]
were
not properly passed on to the target function. Fixes
#3592
.filter()
has been updated so that when called with a
function, the options are now properly read. Fixes
#3315
Cypress's recognition of websites attempting framebusting has been updated to
include framebusting code wrapped within
[CODE_BLOCK_3128]
#3267
When
[CODE_BLOCK_3129]
returns
[CODE_BLOCK_3130]
it no longer errors. It will now follow the
same logic as all other commands and only fail when directly by a
.should()
command with an assertion that is not met.
Fixes
#1531
When
cy.wrap()
is followed directly by a
.should()
command,
[CODE_BLOCK_3131]
will now
retry
when its argument evaluates to
[CODE_BLOCK_3132]
until it meets the requirements of the assertion or the
[CODE_BLOCK_3133]
command times out. Fixes
#3241
Misc:
We now display a warning when passing an argument to
[CODE_BLOCK_3134]
that is not
surrounded by quotes
[CODE_BLOCK_3135]
recommending that the argument instead be surrounded
by quotes. In some cases, not providing quotes can cause the arguments to be
read in a way that is likely not its intended use. Addresses
#3318
#2298
The number of logs printed when installing Cypress in docker has been reduced.
Partially addresses
#1243
The seeded Kitchen Sink examples have some new examples showing how to add a
message to assertions, how to compare the text content of two elements, and
how to make assertions about
[CODE_BLOCK_3136]
attributes. The examples also have some
small typo fixes. Fixes
#502
. Addressed in
#3272
#3287
, and
#3700
We now only mount internal servers on
[CODE_BLOCK_3137]
. Addresses
#3712
The instructions in Cypress's update window now include
[CODE_BLOCK_3138]
update
instructions alongside
[CODE_BLOCK_3139]
. Addresses
#2871
The spec file's font weight has been increased within the Test Runner for
better readability. Addressed in
#3065
We improved the error message displayed when a record key is unrecognized
during
[CODE_BLOCK_3140]
. Addresses
#1449
We improved the typings when using
[CODE_BLOCK_3141]
to listen for
[CODE_BLOCK_3142]
events to allow for
[CODE_BLOCK_3143]
. Fixes
#3451
Fixed typo in typing for
.trigger
options. Addressed
#3588
Documentation Changes:
Retryability
#1278
Updated
[CODE_BLOCK_3144]
[CODE_BLOCK_3145]
args to accept
[CODE_BLOCK_3146]
#1419
Document how to accept or reject project transfers
#1474
Updated
docs
on explain how to run Chrome
and Chromium browsers
#1339
Added
[CODE_BLOCK_3147]
[CODE_BLOCK_3148]
character sequences to
[CODE_BLOCK_3149]
doc. Also wrote better description of what
[CODE_BLOCK_3150]
[CODE_BLOCK_3151]
character sequences actually do.
#1347
Added all newly supported HTTP methods to
cy.request()
doc.
Add new section to
Troubleshooting
doc explaining how to allow the Cypress Chrome extension.
Fixed code example for google analytics stubbing
#1454
Dependency Updates
Upgraded
[CODE_BLOCK_3152]
from
[CODE_BLOCK_3153]
[CODE_BLOCK_3154]
#3327
Upgraded
[CODE_BLOCK_3155]
from
[CODE_BLOCK_3156]
[CODE_BLOCK_3157]
#3328
Upgraded
[CODE_BLOCK_3158]
from
[CODE_BLOCK_3159]
[CODE_BLOCK_3160]
#3329
Upgraded
[CODE_BLOCK_3161]
from
[CODE_BLOCK_3162]
[CODE_BLOCK_3163]
#3660
Upgraded
[CODE_BLOCK_3164]
from
[CODE_BLOCK_3165]
[CODE_BLOCK_3166]
#3362
Upgraded
[CODE_BLOCK_3167]
from
[CODE_BLOCK_3168]
[CODE_BLOCK_3169]
#3363
Upgraded
[CODE_BLOCK_3170]
from
[CODE_BLOCK_3171]
[CODE_BLOCK_3172]
#3365
Upgraded
[CODE_BLOCK_3173]
from
[CODE_BLOCK_3174]
[CODE_BLOCK_3175]
#3366
Upgraded
[CODE_BLOCK_3176]
from
[CODE_BLOCK_3177]
[CODE_BLOCK_3178]
#3368
Upgraded
[CODE_BLOCK_3179]
from
[CODE_BLOCK_3180]
[CODE_BLOCK_3181]
#3379
Upgraded
[CODE_BLOCK_3182]
from
[CODE_BLOCK_3183]
[CODE_BLOCK_3184]
#3380
Upgraded
[CODE_BLOCK_3185]
from
[CODE_BLOCK_3186]
[CODE_BLOCK_3187]
#3443
Upgraded
[CODE_BLOCK_3188]
from
[CODE_BLOCK_3189]
[CODE_BLOCK_3190]
#3381
Upgraded
[CODE_BLOCK_3191]
from
[CODE_BLOCK_3192]
[CODE_BLOCK_3193]
#3383
Upgraded
[CODE_BLOCK_3194]
from
[CODE_BLOCK_3195]
[CODE_BLOCK_3196]
#3384
Upgraded
[CODE_BLOCK_3197]
from
[CODE_BLOCK_3198]
[CODE_BLOCK_3199]
#3385
Upgraded
[CODE_BLOCK_3200]
from
[CODE_BLOCK_3201]
[CODE_BLOCK_3202]
#3386
Upgraded
[CODE_BLOCK_3203]
from
[CODE_BLOCK_3204]
[CODE_BLOCK_3205]
#3409
Upgraded
[CODE_BLOCK_3206]
from
[CODE_BLOCK_3207]
[CODE_BLOCK_3208]
#3410
Upgraded
[CODE_BLOCK_3209]
from
[CODE_BLOCK_3210]
[CODE_BLOCK_3211]
#3412
Upgraded
[CODE_BLOCK_3212]
from
[CODE_BLOCK_3213]
[CODE_BLOCK_3214]
#3413
#3500
Upgraded
[CODE_BLOCK_3215]
from
[CODE_BLOCK_3216]
[CODE_BLOCK_3217]
#3414
Upgraded
[CODE_BLOCK_3218]
from
[CODE_BLOCK_3219]
[CODE_BLOCK_3220]
#3344
Upgraded
[CODE_BLOCK_3221]
from
[CODE_BLOCK_3222]
[CODE_BLOCK_3223]
#3417
Upgraded
[CODE_BLOCK_3224]
from
[CODE_BLOCK_3225]
[CODE_BLOCK_3226]
#3433
Upgraded
[CODE_BLOCK_3227]
from
[CODE_BLOCK_3228]
[CODE_BLOCK_3229]
#3434
Upgraded
[CODE_BLOCK_3230]
from
[CODE_BLOCK_3231]
[CODE_BLOCK_3232]
#3436
Upgraded
[CODE_BLOCK_3233]
from
[CODE_BLOCK_3234]
[CODE_BLOCK_3235]
#3437
Upgraded
[CODE_BLOCK_3236]
from
[CODE_BLOCK_3237]
[CODE_BLOCK_3238]
#3444
Upgraded
[CODE_BLOCK_3239]
from
[CODE_BLOCK_3240]
[CODE_BLOCK_3241]
#3445
Upgraded
[CODE_BLOCK_3242]
from
[CODE_BLOCK_3243]
[CODE_BLOCK_3244]
#3446
#3476
Upgraded
[CODE_BLOCK_3245]
from
[CODE_BLOCK_3246]
[CODE_BLOCK_3247]
#3447
Upgraded
[CODE_BLOCK_3248]
from
[CODE_BLOCK_3249]
[CODE_BLOCK_3250]
#3448
Upgraded
[CODE_BLOCK_3251]
from
[CODE_BLOCK_3252]
[CODE_BLOCK_3253]
#3449
Upgraded
[CODE_BLOCK_3254]
from
[CODE_BLOCK_3255]
[CODE_BLOCK_3256]
#3464
Upgraded
[CODE_BLOCK_3257]
from
[CODE_BLOCK_3258]
[CODE_BLOCK_3259]
#3465
Upgraded
[CODE_BLOCK_3260]
from
[CODE_BLOCK_3261]
[CODE_BLOCK_3262]
#3466
Upgraded
[CODE_BLOCK_3263]
from
[CODE_BLOCK_3264]
[CODE_BLOCK_3265]
#3477
#3659
Upgraded
[CODE_BLOCK_3266]
from
[CODE_BLOCK_3267]
[CODE_BLOCK_3268]
#3478
Upgraded
[CODE_BLOCK_3269]
from
[CODE_BLOCK_3270]
[CODE_BLOCK_3271]
#3480
Upgraded
[CODE_BLOCK_3272]
from
[CODE_BLOCK_3273]
[CODE_BLOCK_3274]
#3481
. Potentially fixes
#3515
We also updated many dependencies used for development and removed some unused
dependencies.
3.1.5
Released 1/30/2019
Bugfixes:
Fixed issue where the
[CODE_BLOCK_3275]
event was never being called when calling
cy.visit()
on the url Cypress is currently navigated
to. Fixes
#1311
Fixed regression introduced in
[CODE_BLOCK_3276]
that caused an
[CODE_BLOCK_3277]
when
visiting a page with an XHR request with a
[CODE_BLOCK_3278]
other than
[CODE_BLOCK_3279]
[CODE_BLOCK_3280]
. Fixes
#3008
Fixed several issues in Chrome* versions >= 72 in the Cypress proxy that
caused using
[CODE_BLOCK_3281]
with
[CODE_BLOCK_3282]
to fail, or using
[CODE_BLOCK_3283]
inside of the
[CODE_BLOCK_3284]
configuration option. Fixes
#1872
#3252
#1777
Fixed another issue in Chrome* versions >= 72 where a scrollable command log
would cause the entire application to be scrollable. Fixes
#3253
Fixed not correctly passing the
[CODE_BLOCK_3285]
option for
cy.request()
. This should fix some instances where
large
[CODE_BLOCK_3286]
values would cause
[CODE_BLOCK_3287]
errors. Fixes
#2669
Fixed issue where Cypress would inject a script tag before the
[CODE_BLOCK_3288]
declaration when the document only contained the doctype declaration. Fixes
#2617
The error message when visiting a site with an invalid content-type now prints
the correct content-type of the response Cypress received from the web server.
Fixes
#3101
Fixed issue where an internal
[CODE_BLOCK_3289]
file would inadvertently get
loaded instead of the spec file. Fixes
#2891
Fixed issue where the Chromium browser was not detected in Linux due to
Cypress not distinguishing between Chrome and Chromium browsers with the same
version. Fixes
#1400
Fixed issue of Cypress being unable to play videos with
[CODE_BLOCK_3290]
. We now
pass the
[CODE_BLOCK_3291]
command line switch to Chrome. Fixes
#2376
We now pass the Chromium command line switches
[CODE_BLOCK_3292]
[CODE_BLOCK_3293]
Chrome by default in order to better support testing webcam functionality.
Fixes
#2704
Updated filenames allowed for screenshots to allow more characters that are
valid. Fixes
#3052
Fixed TypeScript error caused by
[CODE_BLOCK_3294]
dependency introduced in 3.1.4.
Fixes
#3024
#3136
Improved error message displayed for
[CODE_BLOCK_3295]
to not display
[CODE_BLOCK_3296]
and made
[CODE_BLOCK_3297]
labels more descriptive. Fixes
#2589
Using
.clear()
on inputs of type 'date' is now working.
Fixes
#2738
Fixed issue where
[CODE_BLOCK_3298]
was undefined when using an
[CODE_BLOCK_3299]
event handler.
Fixed
#2859
Misc:
Improved errors shown when opening a project in the Desktop Application. The
design is more readable and the error's stack trace is now expandable.
Addresses
#2955
Improved experience of search in Desktop Application when there are no
results. Addresses
#3146
Updated tooltip content so that it no longer flows outside of the tooltip in
the Test Runner when displaying longer routes. Fixes
#2980
Added word labels beside icons in Desktop Application for 'Support' and 'Docs'
links. Addresses
#3091
Updated the CLI to no longer silence important stdout from
[CODE_BLOCK_3300]
[CODE_BLOCK_3301]
etc commands. Addresses
#2705
Fixed incorrect type definition for options usage for
.then()
. Addresses
#3075
Fixed incorrect JSDoc comments in type definition for
.focus()
and better formatted comments in type
definitions. Addresses
#2975
#2954
Updated error messages to include single quotes when displaying written test
code. Addresses
#2684
Documentation Changes:
Added example on how to use a fake video for webcam testing to
Browser API doc
Dependency Updates
We've begun automating our dependency update process in order to avoid
accidental dependency updates. Addresses
#2990
#3025
Upgraded
[CODE_BLOCK_3302]
from
[CODE_BLOCK_3303]
[CODE_BLOCK_3304]
. Addresses
#1328
3.1.4
Released 12/25/2018
Merry Christmas everyone!
Bugfixes:
Fixed a very longstanding (!) issue where
.click()
would fail to click the center coordinates of elements with style
[CODE_BLOCK_3305]
. Cypress would instead report that the element was being
covered causing the error:
[CODE_BLOCK_3306]
Fixes
#210
We now no longer abort XHR's which have their
[CODE_BLOCK_3307]
method called but are
already complete. This fixes an edge case where complete XHR's were having
their
[CODE_BLOCK_3308]
function called in frameworks like
[CODE_BLOCK_3309]
which lead to
Cypress accidentally re-aborting the XHR's after they were complete. Fixes
#761
Fixed issues involving XHRs displaying as 'aborted' in the Cypress Command Log
when they were not actually aborted. Fixes
#1652
We no longer abort XHR request during the page's
[CODE_BLOCK_3310]
event and allow the
browser to handle natively calling abort. Fixes
#2968
Fixed an issue where Cypress's
[CODE_BLOCK_3311]
were being included in the
Windows binary. Fixes
#2896
Fixed issue where XHR's
[CODE_BLOCK_3312]
was not receiving the proper
event arguments. Fixes
#2925
We now properly strip leading paths of files on uncaught errors from Windows
OS. Fixes
#2936
Misc:
Removed the word 'already' from the Cypress install message in order to be
less confusing. Addresses
#2754
Fixed incomplete type definitions for
cy.request
Fixes
#2305
Dependency Updates
Upgraded
[CODE_BLOCK_3313]
from
[CODE_BLOCK_3314]
[CODE_BLOCK_3315]
. Fixes
#2848
Upgraded
[CODE_BLOCK_3316]
from
[CODE_BLOCK_3317]
[CODE_BLOCK_3318]
. Fixes
#2929
3.1.3
Released 12/03/2018
Bugfixes:
Fixed regression introduced in
3.1.1
with
[CODE_BLOCK_3319]
that caused some animations not to run. Fixes
#2725
Fixed regression introduced in
3.1.2
that caused DOM elements passed to
cy.wrap()
to no
longer yield the proper jQuery array instance. Fixes
#2820
Fixed regression causing invocations of
[CODE_BLOCK_3320]
error on subsequent tests. Fixes
#2850
Fixed issue where a fix included in
3.1.2
did not pass the
[CODE_BLOCK_3321]
argument to the proper options. Fixes
#2667
#2809
Passing
[CODE_BLOCK_3322]
no longer requires
the checkbox or radio to be visible. Fixes
#1376
Misc
Updated types to support promises as arguments within
cy.wrap
. Fixes
#2807
We now expose all jQuery methods and values onto
[CODE_BLOCK_3323]
. Fixes
#2830
cy.wait()
now accepts a separate timeout option for
[CODE_BLOCK_3324]
[CODE_BLOCK_3325]
. Fixes
#2446
Documentation Changes:
Added
[CODE_BLOCK_3326]
[CODE_BLOCK_3327]
options to
cy.wait()
Added 'History' table to
cy.wait()
Added 'Alias' for assertions that are aliases of each other to
Assertions
Dependency Updates
Upgraded nodemon from
[CODE_BLOCK_3328]
[CODE_BLOCK_3329]
. Fixes
#2864
Upgraded request from
[CODE_BLOCK_3330]
[CODE_BLOCK_3331]
[CODE_BLOCK_3332]
, Fixes
#2455
3.1.2
Released 11/18/2018
Bugfixes:
Fixed a regression caused in
[CODE_BLOCK_3333]
where we attempted to set a property on
an invalid cookie sent from a server. Fixes
#2724
Fixed Cypress not correctly aborting long running connections (such as server
sent events) on proxied requests. Fixes
#2612
Fixed bug where tests were failing due to assertions causing Cypress to
accidentally iterate through cross-origin iframes. If you were seeing "random"
cross-origin errors, this likely fixes those issues. Fixes
#2784
Fixed incorrectly setting
[CODE_BLOCK_3334]
[CODE_BLOCK_3335]
when using
[CODE_BLOCK_3336]
on a few different special characters such as
[CODE_BLOCK_3337]
. Fixes
#2105
Fixed another regression in
[CODE_BLOCK_3338]
where passing
[CODE_BLOCK_3339]
to a
[CODE_BLOCK_3340]
caused Cypress to error. Fixes
#2719
Fixed a bug in node core where Cypress would not show up in
[CODE_BLOCK_3341]
users on
[CODE_BLOCK_3342]
. Fixes
#2667
Fixed a bug with trashing assets in linux that caused recursive
[CODE_BLOCK_3343]
files
to show up. We now have opted to actually
[CODE_BLOCK_3344]
the files in linux because
trashing is too inconsistent between linux distros. Fixes
#2742
Misc
Added type definitions for
[CODE_BLOCK_3345]
. Fixes
#2746
We now display better error messages in the CLI when runs exceed billing
limits. Fixes
#1689
Dependency Updates
Removed
[CODE_BLOCK_3346]
#2733
3.1.1
Released 11/2/2018
Features:
You can now pass a
[CODE_BLOCK_3347]
option to
cy.writeFile()
following flags
available. Fixes
#1249
There is a new
CYPRESS_DOWNLOAD_MIRROR
environment variable for installing Cypress at a mirror url. Fixes
#2609
Module API
now returns the
[CODE_BLOCK_3348]
from
[CODE_BLOCK_3349]
. Fixes
#2596
Specs now properly display as focused when navigating through specs via the
keyboard. Fixes
#2273
Tasks registered in the plugins file with the 'task' event are merged with any
tasks registered by previous calls to
[CODE_BLOCK_3350]
, instead of overwriting the
previous tasks. Fixes
#2284
Bugfixes:
Fixed a bug where Cypress would error when a secure cookie flag was set and
then expired from an HTTPS url without the subsequent secure flag. Due to the
way Cypress was constructing the url, this would fail to actually remove the
cookie. Fixes
#1264
#1321
#1799
We now truncate filenames for screenshots to not exceed 255 characters in
length. Previously there were cases where the screenshot filename would exceed
255 characters and error. Fixes
#2403
#2665
Fixed issue when using
cy.writeFile()
and passing
an object to a
[CODE_BLOCK_3351]
file. The object is now correctly written to the JSON
file instead of a string. Fixes
#2373
We updated how we handle
trashAssetsBeforeRuns
behavior. We now trash the contents of the
[CODE_BLOCK_3352]
[CODE_BLOCK_3353]
directories
instead of trashing the directories themselves. This helps maintain any file
access permissions for the directories. Fixes
#1943
#2600
Fixed bug where mocked Dates using
cy.clock()
would not
be an instance of
[CODE_BLOCK_3354]
. Fixes
#2570
Directories within specs whose names contain
[CODE_BLOCK_3355]
are now correctly read as
directories instead of spec files within the Test Runner. Fixes
#2423
Cypress no longer automatically takes screenshots of skipped tests. Fixes
#2368
Fixed an issue where returning/resolving
[CODE_BLOCK_3356]
from a
cy.task()
handler resulted in an incorrect runtime
error. Fixes
#2553
Update
modifyObstructiveCode
to account for framebusting techniques that use
[CODE_BLOCK_3357]
, so that
Applications using this technique will run properly in Cypress. Fixes
#2582
Fixed bug where only the first DOM element of an array of DOM elements would
be blacked out after being passed as argument to
[CODE_BLOCK_3358]
within
cy.screenshot()
. Fixes
#2508
We fixed an issue involving timers after running
cy.screenshot()
. Fixes
#2432
The Test Runner now retries node-originated errors from our internal API
requests. Fixes
#2341
Fixed issue with multiple
[CODE_BLOCK_3359]
with the same
[CODE_BLOCK_3360]
Fixes
#1150
Fixed Type error being thrown for users using TypeScript 3. Fixes
#2363
Misc
We are now collecting more environment variables from runs when run in
Semaphore, GitLab, Bitbucket, Team Foundation Server, Codeship, and Shippable.
Fixes
#2460
#2358
#2343
, and
#2453
The Test Runner's search now resets when switching between projects. Fixes
#2512
Fixed internal Cypress tests. Fixes
#2606
Replaced use of
[CODE_BLOCK_3361]
with
[CODE_BLOCK_3362]
. Fixes
#2626
Allowed
[CODE_BLOCK_3363]
to be saved in
[CODE_BLOCK_3364]
. Fixes
#2476
Fixed internal test error
[CODE_BLOCK_3365]
. Fixes
#2401
Switched our internal tests to use CircleCI workspaces. Fixes
#2398
Update TypeScript definition for
cy.screenshot()
to include screenshot specific options. Fixes
#2654
URLs printed within the CLI will now display as the color blue. Fixes
#2493
We began bulk converting some of our codebase from CoffeeScript to JavaScript.
Fixes
#2686
#2687
We updated some of our internal ESLint rules to be more strict and also to
help with CoffeeScript to JavaScript conversions. Fixes
#2688
Documentation Changes:
Added
[CODE_BLOCK_3366]
option to
[CODE_BLOCK_3367]
Added
[CODE_BLOCK_3368]
to returned run in
Module API doc
Documented new
[CODE_BLOCK_3369]
flag and rewrote advanced install
instructions to be clearer in
Installing Cypress doc
Dependency Updates
Upgraded common-tags from
[CODE_BLOCK_3370]
[CODE_BLOCK_3371]
#2415
Upgraded @cypress/browserify-preprocessor from
[CODE_BLOCK_3372]
[CODE_BLOCK_3373]
#2513
Upgraded lolex from
[CODE_BLOCK_3374]
[CODE_BLOCK_3375]
#2570
Upgraded @types/jquery from
[CODE_BLOCK_3376]
[CODE_BLOCK_3377]
#2363
Upgraded zunder from
[CODE_BLOCK_3378]
[CODE_BLOCK_3379]
#2541
3.1.0
Released 8/13/2018
Summary:
Cypress can now run tests in parallel across multiple virtual machines, or can
be parallelized on a single machine. Cypress will automatically figure out,
detect, and load balance all of your specs in the fastest and most efficient
way possible. There is no configuration other than passing a
[CODE_BLOCK_3380]
flag
and spinning up multiple machines on your CI provider. From our experiments
you can expect to see approximately 40% reduction in overall run time
machine
you add. However, attempting to run in parallel on a single machine
requires server grade hardware with dozens (or even hundreds) of CPU's and GB
of RAM to run efficiently. A much better and simpler approach is to use a
cluster of docker containers that are all isolated from each other. Any
standard CI service (CircleCI, TravisCI, etc) comes with the ability to do
this. We automatically tap into their environment variables to make
parallelization possible without you having to configure anything.
Beyond parallelization, you now have the ability to group multiple runs with
each other so that they show up together (grouped) in the Dashboard. This
enables you to test different applications, groups of specs, or different
environments (like development, staging, production) and see all of the
results together. We know how important cross browser testing is to everyone,
so we built this to lead directly into aggregating the results of multiple
browsers into a single run.
The Dashboard Service has been updated to show you more visual information
about what happened during a run. You can see how specs were parallelized and
you can calculate the effect of adding or removing machines to help reduce the
overall run time.
Features:
[CODE_BLOCK_3381]
accepts a new
--parallel
flag to run
specs in parallel. Fixes
#1690
#2297
[CODE_BLOCK_3382]
accepts a new
--group
flag to
group multiple spec files within a single run. Fixes
#2169
[CODE_BLOCK_3383]
accepts a new
[CODE_BLOCK_3384]
flag. Fixes
#2153
Bugfixes:
We've finally tracked down the source of specs "hanging" and failing to start
when running Electron. We finally tracked it down to a bug in Electron itself
with setting
[CODE_BLOCK_3385]
when using offscreen rendering. Fixes
#2322
#2294
#1235
#1333
Clicking on svg elements is now working. 3.0.2 introduced a bug that would
throw an 'illegal invocation' error. Fixes
#2245
#2252
#2258
#2277
#2288
Fixed a regression in
[CODE_BLOCK_3386]
that caused typing
[CODE_BLOCK_3387]
not to submit a
form when there were
[CODE_BLOCK_3388]
elements other than
[CODE_BLOCK_3389]
. Fixes
#2261
#2326
Fixed a small visual bug where failed commands were not aligned to other
commands. Fixes
#2314
Fixes a race condition where async electron browser commands came in after the
renderer had been destroyed, causing failures. Fixes
#2321
Misc
When recording to the Dashboard Service, we now provide estimated durations
per spec directly within the standard output, as long as the spec has had
enough run history for this to be determined. Fixes
#2276
When using the new
--parallel
--group
feature,
we now visually indicate that to you in the standard output when recording.
Fixes
#2275
We have added support for more CI providers to automatically detect and show
more relevant information in the Dashboard, instead of showing 'Unknown'.
Fixes
#2146
We have added better checks and reliability for detecting runs in Jenkins.
Fixes
#1990
The built in
[CODE_BLOCK_3390]
was bumped to
[CODE_BLOCK_3391]
. This supports more JavaScript features by default,
including async/await, object rest spread, and class properties. Fixes
#2254
cypress run
now creates a new
browser profile per run per browser, but keeps the same browser profile when
run via
cypress open
. This means
you can run Cypress locally over multiple processes and the browser profiles
will not conflict with each other. Fixes
#1566
The Desktop-GUI has been updated to get the new routes provided by the Cypress
API for runs. Fixes
#2189
Cypress now retries multiple times (with a backoff strategy) when
communicating with our API fails while recording runs. This will provide
better feedback in situations when the API is temporarily unavailable. Fixes
#1590
When Cypress retries due to an API timeout or failure it now displays a very
nice message indicating to you the delay and number of retries left. Fixes
#2280
We've added parallelization to our own internal tests for the driver and the
desktop-gui. We've been able to reduce the number of concurrent instances our
tests use by 4, and shaved about 6 minutes off of each build. Faster with less
resources. Fixes
#2325
Documentation Changes:
Added
[CODE_BLOCK_3392]
doc.
Update
[CODE_BLOCK_3393]
doc with new screenshots and run sections.
Update
[CODE_BLOCK_3394]
doc with new flags and alphabetized flags.
3.0.3
Released 7/30/2018
Bugfixes:
Reverted the Chrome argument that disabled
[CODE_BLOCK_3395]
which was used
to prevent the application under test from "shaking" due to a bug in versions
66 and 67. This workaround inadvertently created a different and much more
severe bug in Chrome 68 that would miscalculate pointer coordinates. This led
to Cypress giving confusing errors about elements being covered up on action.
This is still a bug in Chrome, and is fixed in Canary but has not yet been
released to the stable Chrome 68 channel. Nevertheless, removing the
[CODE_BLOCK_3396]
flag does fix it. We did several experiments to try to
ensure that the "shaking" behavior does not exhibit itself in Chrome 68. We
have limited the
[CODE_BLOCK_3397]
flag to Chrome
66 and Chrome 67. Fixes
#2223
#2215
#2037
Fixed another bug with Chrome that caused the
[CODE_BLOCK_3398]
option to not be respected. This was due to Chrome progressively rolling out
trials of a new option that attempts to isolate sites (and iframes) in their
own child process if their origins are different. Fixes
#1951
#2001
#715
Fixed Cypress hanging in CI due to excessive and unnecessary globbing. We
finally tracked down this issue which made it appear as if Cypress was
"hanging" after closing a spec file and then attempting to open the next one.
Fixes
#2183
#1905
#1912
We are now properly serializing nested object arguments when using the
Module API
[CODE_BLOCK_3399]
[CODE_BLOCK_3400]
. Passing nested objects in
[CODE_BLOCK_3401]
now works
correctly. This is especially useful when using
[CODE_BLOCK_3402]
. In
addition to fixing the
Module API
, we are now
also properly handling nested arguments from the
Command Line
. In order to pass nested objects
within CLI params you must pass stringified JSON. This is useful for
properties such as
[CODE_BLOCK_3403]
. Fixes
#1348
#1357
#2221
Fixed a bug causing screenshots saved via
cy.screenshot()
to be in different folders when
you ran using
cypress open
cypress run
. Fixes
#2091
Fixed bugs with Electron losing focus when running headlessly via
cypress run
after navigation. Now
the browser will always act as if it is focused no matter what and in all
situations when running headlessly. If you were seeing focus related problems
when running headlessly, this should fix them. Fixes issue
#2190
Fixed using when using
cy.click()
on an element that
bound to the
[CODE_BLOCK_3404]
event while the browser was currently
out of focus
. We
have now normalized
all focus and blur events
to behave the same as if the
browser is always in focus. This should fix the other batch of
[CODE_BLOCK_3405]
[CODE_BLOCK_3406]
issues that users have been experiencing. Fixes
#549
#2198
Fixed the vast majority of known issues with
.type()
Fixes
#1241
Using
.type()
on an input of type
[CODE_BLOCK_3407]
[CODE_BLOCK_3408]
will no longer fire unnecessary additional
[CODE_BLOCK_3409]
[CODE_BLOCK_3410]
events. Fixes
#2210
Fixed
.type()
breaking on chains when passing the same
[CODE_BLOCK_3411]
references. Fixes
#365
Fixed an issue with
.clear()
not behaving the same as
[CODE_BLOCK_3412]
. Fixes
#420
Fixed a bug with issuing an additional
[CODE_BLOCK_3413]
[CODE_BLOCK_3414]
event when chaining
[CODE_BLOCK_3415]
. Fixes
#593
Fixed many issues with typing into
[CODE_BLOCK_3416]
elements. WYSIWYG,
Draft.js
based, and other HTML editors now work
correctly. Fixes
#596
#1686
#2096
The caret now correctly moves on
[CODE_BLOCK_3417]
elements. Fixes
#1108
Fixed
.type()
inserting a rogue
[CODE_BLOCK_3418]
tag after the
first letter in
[CODE_BLOCK_3419]
elements. Fixes
#1926
Fixed issue where change events with
.type()
would not
fire correctly for many more situations and edge cases. Fixes
#651
Fixed issues with typing into JS based text-mask plugins. Basically anything
that would alter the
[CODE_BLOCK_3420]
in response to certain events now works
correctly. Fixes
#940
#1684
Using
.clear()
on an input with a
[CODE_BLOCK_3421]
attribute
now works. Fixes
#1002
#2056
Fixed issues with
.type()
not firing the
[CODE_BLOCK_3422]
event
[CODE_BLOCK_3423]
. Fixes
#1171
Fixed other event related issues with
.type()
that were
not firing correctly. Fixes
#1209
Fixed even more issues with
.type()
not inserting
characters on
[CODE_BLOCK_3424]
. Fixes
#1381
Fixed not being able to type negative numbers into
[CODE_BLOCK_3425]
elements. Fixes
#2173
Fixed
[CODE_BLOCK_3426]
[CODE_BLOCK_3427]
with
.type()
when using
[CODE_BLOCK_3428]
[CODE_BLOCK_3429]
. Fixes
#1234
Fixed not being able to type into a
[CODE_BLOCK_3430]
input. Fixes
#1366
Calling
.focus()
.blur()
cy.window()
no longer fires blur events on the
[CODE_BLOCK_3431]
or causes it to become
[CODE_BLOCK_3432]
. Fixes
#2234
Using
[CODE_BLOCK_3433]
now correctly changes the
[CODE_BLOCK_3434]
back
[CODE_BLOCK_3435]
and causes the existing
[CODE_BLOCK_3436]
to receive
[CODE_BLOCK_3437]
. Fixes
#2236
Misc:
We've loosened up the restrictions surrounding what we consider a typeable
element. You can now type into inputs with invalid
[CODE_BLOCK_3438]
attributes because
the browser does still consider them regular
[CODE_BLOCK_3439]
inputs and allows you to
type into them. Fixes
#586
Using
[CODE_BLOCK_3440]
[CODE_BLOCK_3441]
with
.type()
on an
[CODE_BLOCK_3442]
element now increments or decrements the number
configured via the
[CODE_BLOCK_3443]
attribute. Fixes
#2110
Using
[CODE_BLOCK_3444]
[CODE_BLOCK_3445]
with
.type()
correctly moves the cursor on
[CODE_BLOCK_3446]
[CODE_BLOCK_3447]
elements.
Fixes
#2187
You can now use
.focus()
.blur()
[CODE_BLOCK_3448]
. Fixes
#2235
Bumped the version in
[CODE_BLOCK_3449]
reporter dep from
[CODE_BLOCK_3450]
[CODE_BLOCK_3451]
which
adds a few new features. Fixes
#2238
Bumped deps that
[CODE_BLOCK_3452]
was yelling about. Fixes
#1701
Runs showing up in the
[CODE_BLOCK_3453]
tab now more closely match how they display in
the Dashboard. Fixes
#2060
Added more debug logs. Fixes
#2108
When recording to the Dashboard we now more accurately collect commit details
when it is missing from the local
[CODE_BLOCK_3454]
data. Fixes
#2129
#2073
Updated build in example kitchen sink to
[CODE_BLOCK_3455]
. Fixes
#2139
Updated the json-schema describing
[CODE_BLOCK_3456]
. Allowing it to be a
boolean. Fixes
#2140
Documentation Changes:
New "Module API" doc
3.0.2
Released 6/28/2018
Bugfixes:
Screenshots taken with
cy.screenshot()
on 2x DPI
are now taken at the correct full size. Fixes
#1857
#2018
Windows users no longer exit with
[CODE_BLOCK_3457]
errors when running
[CODE_BLOCK_3458]
newer versions of Node. Fixes
#1841
#2044
Fixed issue where applications programmatically stealing focus would lead to
slow runs in Electron when running via
[CODE_BLOCK_3459]
#1909
#1892
Electron no longer reports the browser as out of focus when running via
[CODE_BLOCK_3460]
. Fixes
#1939
Modified the
[CODE_BLOCK_3461]
method to return
[CODE_BLOCK_3462]
if the top window
(Cypress window) is in focus. This should now correctly match how your
application behaves outside of Cypress. Fixes
#1940
Fixed issue where Cypress would unnecessarily scroll when attempting to locate
elements with
[CODE_BLOCK_3463]
. Fixes
#1475
Fixed a bug where changing the
[CODE_BLOCK_3464]
in Windows
would lead to errors with plugins. Fixes
#1704
Cypress no longer crashes when a 3rd party server sends invalid
[CODE_BLOCK_3465]
content. Also fixed issues with incorrectly gunzipping multibyte characters
which would potentially lead to serving invalid HTML or JS. Fixes
#1396
#1756
[CODE_BLOCK_3466]
flag should now be respected during
[CODE_BLOCK_3467]
all OSes. Fixes
#817
Corrected a typo in the CLI for a warning message. Fixes
#2038
Fixed some areas of the Desktop GUI that did not display path names correctly
in Windows. Fixes
#1830
[CODE_BLOCK_3468]
now supports an absolute path instead of just a relative
one. Fixes
#1837
Fixed a regression introduced in
[CODE_BLOCK_3469]
where application code that used
[CODE_BLOCK_3470]
with a string argument would see the error
[CODE_BLOCK_3471]
. Fixes
#1854
Fixed issue where preprocessor errors were being swallowed. Fixes
#1877
Fixed issue where Cypress would hang indefinitely when starting a new spec
when in
[CODE_BLOCK_3472]
mode. Additionally we have optimized the code path to
not read in the local
[CODE_BLOCK_3473]
unnecessarily. Fixes
#2013
#1912
#1905
#1890
Fixed a couple regressions in the Dashboard where timed out runs stayed
"Pending" forever. Fixes
#1891
#1952
Fixed another Dashboard regression where an error would throw when recording
tests and sending a large list of specs. Fixes
#1901
Fixed issue where videos would not be recorded when an object was returned
from
[CODE_BLOCK_3474]
when in the Electron browser. Fixes
#1992
Fixed an issue where Cypress would inject content into the
[CODE_BLOCK_3475]
instead of the
[CODE_BLOCK_3476]
tag. Fixes
#2026
Fixed an oversight where a specific framebusting check was not being properly
stripped and removed by the default config option
modifyObstructiveCode
. Fixes
#2030
#2059
Fixed icons visually shifting when tests were running in the Test Runner.
Fixes
#1983
Server sent events now
finally
work correctly in Cypress. Fixes
#1440
#1111
Time traveling snapshots now preserve the styles of empty
[CODE_BLOCK_3477]
tags with
programmatically inserted CSS rules. Fixes
#1226
Misc:
There are now several new CLI commands for interacting with the binary cache:
cypress cache path
cypress cache list
, and
cypress cache clear
. Fixes
#1856
We've added a new CLI flag:
[CODE_BLOCK_3478]
cypress run
to keep the browser
open after the tests finish running. Fixes
#1871
now respects config values and
environment variables put in your
[CODE_BLOCK_3479]
file. Fixes
#1399
#1853
Significantly improved the performance of taking screenshots.
#1863
Node module dependencies updated. Fixes
#1674
#1942
The bundled version of FFmpeg has now been bumped from
[CODE_BLOCK_3480]
[CODE_BLOCK_3481]
This may help with some issues users were experiencing when recording videos.
Fixes
#1972
Added more debug logs to FFmpeg to determine why FFmpeg compression sometimes
causes Cypress to crash (mostly while running in Travis CI). Fixes
#1971
Several improvements to TypeScript typings. Fixes
#1881
#2007
#1899
#1902
#1897
#1907
We improved error logging and the user experience around
cypress verify
. Fixes
#1984
We no longer log the
[CODE_BLOCK_3482]
message if the Cypress binary is
already installed locally. Fixes
#1985
Now, by default, screenshots are nested within a folder with the name of
spec file
that is currently running. Example - the spec named
[CODE_BLOCK_3483]
will save screenshots inside of this
directory:
[CODE_BLOCK_3484]
. Fixes
#1826
Passing
[CODE_BLOCK_3485]
as the fileName arg to
cy.screenshot()
inside a spec,
[CODE_BLOCK_3486]
, will now result in the screenshot being saved to
a nested folder path such as:
[CODE_BLOCK_3487]
. Fixes
#1771
#668
We now append
[CODE_BLOCK_3488]
to the screenshot filename of screenshots taken
automatically during test failure. Fixes
#1923
If multiple screenshots are taken during a test that will result in the same
filename, their file paths are now appended with a number, i.e.
[CODE_BLOCK_3489]
. This prevents screenshot files with the same name from
being overwritten. Fixes
#1766
Screenshot
[CODE_BLOCK_3490]
[CODE_BLOCK_3491]
callbacks ar enow
invoked for failed tests. They include a
[CODE_BLOCK_3492]
property to distinguish
between automatic ones and your own use of
[CODE_BLOCK_3493]
. Fixes
#2040
There's now an
[CODE_BLOCK_3494]
plugin event
you can
use in your
[CODE_BLOCK_3495]
to work with screenshots after they are taken. This
enables you to rename them, move their location, resize them, send them to a
service, etc. Fixes
#2039
Added
[CODE_BLOCK_3496]
object which contains information about the currently
running browser. Fixes
#1919
#1961
Added
[CODE_BLOCK_3497]
object which contains information about the currently
running spec. Fixes
#1918
URLs displayed in the Command Log during
cy.visit()
no longer arbitrarily truncated at a set width. Fixes
#1995
Documentation Changes:
Update
[CODE_BLOCK_3498]
doc to include new file naming behavior
Updated "Command Line" doc to include new cache commands
Added
[CODE_BLOCK_3499]
doc.
Added
[CODE_BLOCK_3500]
doc.
Added
[CODE_BLOCK_3501]
plugin event doc.
3.0.1
Released 5/30/2018
Bugfixes:
Seeded KitchenSink tests no longer fail. Fixes
#1812
The binary cache now correctly works and will not reinstall Cypress if an
existing version is already installed. Fixes
#1813
Closing the
[CODE_BLOCK_3502]
browser and then opening
[CODE_BLOCK_3503]
no longer causes
[CODE_BLOCK_3504]
to fail. Fixes
#1820
Fixed a bug with Windows users seeing crashes with
[CODE_BLOCK_3505]
. Fixes
#1815
#1817
3.0.0
Released 5/29/2018
Summary:
There is a new
[CODE_BLOCK_3506]
command that enables you to
go outside the browser to perform tasks directly in
[CODE_BLOCK_3507]
. This will make it
easy to setup, scaffold, seed, talk to your database, or anything else useful
on a back end.
[CODE_BLOCK_3508]
has been rewritten from the
ground up. It now takes a screenshot of
only
the application under test by
default. It also can take full page screenshots or element only screenshots.
This is the first step of Cypress Dashboard support for screenshot diffing.
When running with
[CODE_BLOCK_3509]
we now run each spec file in isolation from
others. We have rewritten our reporter to provide more details and provide a
summary of the run at the bottom.
The Dashboard has been upgraded to make it easier to understand the results of
each spec run. This was done in anticipation of providing you the ability to
parallelize and load balance your spec files automatically in CI.
We are now capturing the performance and timings data of every test when using
[CODE_BLOCK_3510]
mode and are beginning to offer the first analytics and insights
into the health of your tests on our Dashboard Service.
Cypress now caches globally per version which prevents it from being installed
multiple times across projects.
Breaking Changes:
We now run each spec file in isolation from one another. This
shouldn't
technically break anything, but if you have set up your tests in a way that
requires the state of a previous spec file, this could potentially break your
tests. This will go a long ways towards reducing problems we were seeing with
long runs in CI. Fixes
#431
#681
#1589
#1539
, and
#1692
The environment variable
[CODE_BLOCK_3511]
has been removed. You should
use the equivalent environment variable
[CODE_BLOCK_3512]
instead.
The environment variable
[CODE_BLOCK_3513]
has been removed. To
skip the binary install, set
[CODE_BLOCK_3514]
[CODE_BLOCK_3515]
has been removed as an option in
[CODE_BLOCK_3516]
Instead you can now control this behavior directly with code by setting
[CODE_BLOCK_3517]
[CODE_BLOCK_3518]
within the new
Screenshot API
. Fixes
#1140
#1754
[CODE_BLOCK_3519]
has been renamed to
[CODE_BLOCK_3520]
our configuration. Fixes
#1754
[CODE_BLOCK_3521]
has been renamed to
[CODE_BLOCK_3522]
in our configuration to be
clearer and prevent confusion about recording to our Dashboard. Fixes
#562
Cypress no longer copies screenshots and videos to artifacts for CircleCI.
Copying artifacts should be left up to the user to
handle themselves in their
[CODE_BLOCK_3523]
file
Fixes
#1592
The standard output has been redesigned to better visualize spec files running
in isolation and to be more visually appealing. This may break any specialized
logic written that expected the standard output to be structured in a specific
way or contain specific words. Fixes
#1588
[CODE_BLOCK_3524]
no longer takes a screenshot of
the runner by default. Instead it will hide the runner, remove application
scaling and then scroll to take a full page picture of your application.
[CODE_BLOCK_3525]
[CODE_BLOCK_3526]
hooks within a
support file
now run before/after every spec file, instead of only once before/after the
entire run.
#681
Features:
There is a new
[CODE_BLOCK_3527]
command for executing any
arbitrary
[CODE_BLOCK_3528]
code.
You can now run multiple specs by passing a glob to the
[CODE_BLOCK_3529]
argument of
[CODE_BLOCK_3530]
. Fixes
#263
#416
#681
There is a new
Screenshot API
and new
[CODE_BLOCK_3531]
options that allow you set
defaults for how screenshots are captured, whether to scale your app, disable
timers and animations, or which elements to black out in the screenshot. You
can also set defaults for whether to automatically take screenshots when there
are test failures or whether to wait for the Command Log to synchronize before
taking the screenshot. Fixes
#1424
[CODE_BLOCK_3532]
can now be chained off of
commands that yield a DOM element and will only take a screenshot that
element.
During install of cypress, the Cypress binary is now downloaded to a global
cache. This prevents multiple projects from downloading the same Cypress
version. Fixes
#1300
The seeded
[CODE_BLOCK_3533]
file has been replaced by an
[CODE_BLOCK_3534]
folder
with several spec files. This more closely reflects the recommended use of
Cypress - as smaller groups of tests split among many files that will now be
run in isolation. The tests were also updated from ES5 to ES6. You can see all
changes in the
[CODE_BLOCK_3535]
repo
Fixes
#1460
Cypress now watches all the
[CODE_BLOCK_3536]
's entire dependency tree to make
iterating on plugins easier. Fixes
#1407
Videos will now be saved locally with a filename named after the associated
[CODE_BLOCK_3537]
file that it represents. Fixes
#980
The Test Runner now displays
[CODE_BLOCK_3538]
tests differently than
[CODE_BLOCK_3539]
tests.
#244
Standard output now displays the number of
[CODE_BLOCK_3540]
tests within the summary
output during
[CODE_BLOCK_3541]
#1559
The url to view the run in the Dashboard is now printed to output during
[CODE_BLOCK_3542]
#494
We now print the browser and browser version run in the output during
[CODE_BLOCK_3543]
#833
The build number and url to CI for tests run within
Drone
are now captured and displayed on the run within the Dashboard.
#1709
Bugfixes:
Cypress no longer crashes when attempting to proxy a WebSocket connection that
fails. Fixes
#556
Asserting that an attribute equals a falsy value no longer fails when the
value was falsy. Fixes
#831
#1491
Snapshots now ignore stylesheets with
[CODE_BLOCK_3544]
. Fixes
#1568
Fixed issue where the Cypress
[CODE_BLOCK_3545]
was being returned instead of AUT's
[CODE_BLOCK_3546]
. Fixes
#1436
[CODE_BLOCK_3547]
event now properly fires on
[CODE_BLOCK_3548]
when manually closing the
browser. Fixes
#1560
[CODE_BLOCK_3549]
is now being watched for changes. Fixes
#1464
Fixed issue when using TypeScript that caused namespace errors to be thrown.
Fixes
#1627
Fixed error message on
.type()
.clear()
when typing into non-typeable elements or
clearing non-clearable elements to accurately list the elements allowed. Fixes
#1650
Added Chrome flag
[CODE_BLOCK_3550]
to prevent the
application under test from "shaking" in recent versions of Chrome. Fixes
#1620
Fixed issue where some TTY characters were not properly formatted in the
terminal for Windows during
[CODE_BLOCK_3551]
. Fixes
#1143
#1550
Removed an extraneous error display from Electron during
[CODE_BLOCK_3552]
about a
"transparent titlebar" setting. Fixes
#1745
Misc:
We are now aggressively turning on colors when running in CI. If you're using
Jenkins and
do not
have an ANSI color plugin installed, you can turn off
colors with the
[CODE_BLOCK_3553]
environment variable. Fixes
#1747
#1748
When running
[CODE_BLOCK_3554]
on forked PR's, we now detect that the
Record Key is missing and do not fail the build. We will display a warning,
but continue running the tests. Fixes
#1193
Searching in the Test Runner now filters out any non-matching folders. Fixes
#1706
Duplicate, subsequent logs in the Command Log are now collapsed and can be
expanded to view all logs. Fixes
#1580
We now throw a descriptive error if an alias using
.as()
was defined starting with the
[CODE_BLOCK_3555]
character.
#1643
We now pass the
[CODE_BLOCK_3556]
flag automatically.
This should prevent Chromium browser from automatically trying to communicate
with devices in your network, such as printers, while running tests. Fixes
#1600
We now pass any reporter errors along and provide a stack if a custom reporter
you've provided does not exist. Fixes
#1192
You can now pass a normal object to
[CODE_BLOCK_3557]
[CODE_BLOCK_3558]
through the
Module API
, just as you would from
the command line.
#1442
Added type definitions for
[CODE_BLOCK_3559]
[CODE_BLOCK_3560]
. Fixes
#1110
#1591
Update type definitions for
[CODE_BLOCK_3561]
reflect new changes to command's options. Fixes
#1753
The type definition for
[CODE_BLOCK_3562]
now correctly
supports a function argument.
The type definition for
[CODE_BLOCK_3563]
longer errors when passed a
[CODE_BLOCK_3564]
option. Fixes
#1606
[CODE_BLOCK_3565]
environment variables now print within the
[CODE_BLOCK_3566]
logs
when running in
[CODE_BLOCK_3567]
mode. Although using
[CODE_BLOCK_3568]
themselves should
not be used due to
#1676
Fixes
#1673
Cypress will error and exit with status 1 if no specs were found during
[CODE_BLOCK_3569]
. Fixes
#1585
We are now counting and aggregating the stats at the end of test runs
separately from Mocha. Cypress considers a test to be the
[CODE_BLOCK_3570]
and any
accompanying
[CODE_BLOCK_3571]
that run before or after a test. Cypress will correctly
associate failures in those hooks to the test itself. We believe this more
accurately models and just "makes sense". Fixes
#1163
The minimum viewport size has been lowered from
[CODE_BLOCK_3572]
pixels to
[CODE_BLOCK_3573]
pixels.
Fixes
#1169
#1444
Internal changes to our API structure and communication. Fixes
#1170
#1413
#1415
We output a much more complete test results object when using cypress as a
module. Fixes
#1248
Added keywords to Cypress npm package. Fixes
#1508
Centered the animating icon in the Test Runner when 'running'. Fixes
#1695
We made some changes to internal references of
[CODE_BLOCK_3574]
[CODE_BLOCK_3575]
to be
more specific and instead reference
[CODE_BLOCK_3576]
[CODE_BLOCK_3577]
. Fixes
#1140
The test name text is now selectable inside the Command Log. Fixes
#1476
Minor improvements to contributing docs and scripts. Fixes
#1665
We now collect Semaphore CI params and provide URL's to click into the builds
from the Dashboard. Fixes
#1785
Config overrides coming from the CLI or environment variables are now
validated the same way as if they've been set in
[CODE_BLOCK_3578]
. Fixes
#1783
There is a better / more helpful experience around passing unknown options to
the CLI. Fixes
#837
Display an empty message when there is no commit information on recorded runs.
Fixes
#1809
Documentation Changes:
[CODE_BLOCK_3579]
[CODE_BLOCK_3580]
Update
[CODE_BLOCK_3581]
doc to include new accepted usage and options
Update
[CODE_BLOCK_3582]
doc to include new options for Cypress binary caching
Updated
[CODE_BLOCK_3583]
to include newly seeded
[CODE_BLOCK_3584]
folder
Updated
[CODE_BLOCK_3585]
spec args
Updated
[CODE_BLOCK_3586]
Updated
[CODE_BLOCK_3587]
to include our disabling of device discovery notifications
Updated
[CODE_BLOCK_3588]
to reflect all ways
[CODE_BLOCK_3589]
event could be triggered
Updated use of "running headlessly" to more accurate "during
[CODE_BLOCK_3590]
2.1.0
Released 3/1/2018
Bugfixes:
Prevent a bug with
[CODE_BLOCK_3591]
on OSX + Windows when local
[CODE_BLOCK_3592]
version does
not match bundled
[CODE_BLOCK_3593]
when importing components directly in spec files. The
underlying issue was because we forgot to update
[CODE_BLOCK_3594]
[CODE_BLOCK_3595]
when we upgraded
[CODE_BLOCK_3596]
[CODE_BLOCK_3597]
. Fixes
#1387
#1390
Features:
Selector Playground
has been updated to automatically prefer
[CODE_BLOCK_3598]
[CODE_BLOCK_3599]
[CODE_BLOCK_3600]
attributes when providing the unique selector for an element.
Additionally it now exposes a
public API
that you can use to
control how it determines which selector to use. Fixes
#1135
Documentation Changes:
Added
[CODE_BLOCK_3601]
Added
[CODE_BLOCK_3602]
Updated
[CODE_BLOCK_3603]
Updated
[CODE_BLOCK_3604]
Updated
[CODE_BLOCK_3605]
2.0.4
Released 2/25/2018
Bugfixes:
[CODE_BLOCK_3606]
npm package now has the correct
[CODE_BLOCK_3607]
set in
[CODE_BLOCK_3608]
This was accidentally getting overwritten and caused errors when
[CODE_BLOCK_3609]
was set in environments using
[CODE_BLOCK_3610]
older than
[CODE_BLOCK_3611]
. Fixes
#1373
2.0.3
Released 2/21/2018
Bugfixes:
The runner no longer appears to "hang" if a
[CODE_BLOCK_3612]
hook fails in a test with
siblings. Previously the test would never generate a
[CODE_BLOCK_3613]
and look pending
forever. This was a visual bug only. Fixes
#1343
The Desktop GUI properly renders folders that contain specs in Windows now.
Fixes
#1335
Misc:
The viewport dropdown helper in the Runner now displays string quoted JSON
instead of an object literal. This better matches how you should write those
options in
[CODE_BLOCK_3614]
. Fixes
#1350
2.0.2
Released 2/17/2018
Bugfixes:
Fixed more edge cases where legitimate JavaScript code was being modified
unexpectedly by the
modifyObstructiveCode
configuration. We've tightened up the RegExp even more and added 40 popular JS
libraries to test against to ensure they are not modified. Fixes
#1334
Fixed an edge case when hooks such as
[CODE_BLOCK_3615]
[CODE_BLOCK_3616]
threw an
identical
error message, Cypress would hang indefinitely and never finish
running the tests. Fixes
#674
Fixed bug when
[CODE_BLOCK_3617]
that threw with no arguments:
[CODE_BLOCK_3618]
had their messages appended would duplicate the message over and over again.
Fixes
#1338
2.0.1
Released 2/16/2018
Bugfixes:
Using
cy.contains()
with a RegExp argument is now
properly escaped. Fixes
#1322
Fixed a runaway RegExp causing large
[CODE_BLOCK_3619]
files to take dozens of seconds to
process. This was a regression caused by
[CODE_BLOCK_3620]
with the new
modifyObstructiveCode
option.
We've optimized the RegExp and the performance is back to being almost
identical to transparently passing responses through. Fixes
#1330
2.0.0
Released 2/15/2018
Breaking Changes:
The built in default
[CODE_BLOCK_3621]
browser has been bumped from version
[CODE_BLOCK_3622]
[CODE_BLOCK_3623]
. This version represents the version of
[CODE_BLOCK_3624]
that Electron is
using. In other words, running
[CODE_BLOCK_3625]
(or via
[CODE_BLOCK_3626]
) will be like
running your tests in
[CODE_BLOCK_3627]
now. Although it is unlikely this would
actually
break
any of your tests - it is technically possible they could
behave differently. Fixes
#895
#891
#823
#860
#1011
#1252
#1276
We are now detecting and automatically stripping code that obstructs Cypress
from being able to test your application. Specifically, we are removing
JavaScript code that tries to prevent
clickjacking
framebusting
We have written very conservative rules that do their best to
only
strip
these specific JS snippets, but it is technically possible that it may
unintentionally rewrite valid JS if they match the RegExp patterns. There is a
new configuration option called
modifyObstructiveCode
that is
[CODE_BLOCK_3628]
by default. If you are experiencing problems after upgrading, you can
turn this off and this will disable modifying your JS code. If you were using
Cypress and upon visiting your website you would experience seemingly "random"
redirects - these problems should now be eliminated. Fixes
#886
#1245
#1064
#992
#692
#352
We are now clearing the browser's disk cache each time it opens (before any
tests run). This means that any files that have been cached from
[CODE_BLOCK_3629]
headers will be cleaned and removed. In the future, we will
expose a new
[CODE_BLOCK_3630]
method to provide finer grained control of
clearing the cache on a per test basis. But for now, this is an improvement.
Fixes
#1124
[CODE_BLOCK_3631]
option is now normalized against the current working directory
[CODE_BLOCK_3632]
instead of the project that you are running Cypress in. That means
passing a path from the command line to a spec file will now work even when
the project path is not
[CODE_BLOCK_3633]
. Fixes
#1159
Bugfixes:
blacklistHosts
would occasionally
not work if you were blocking a host that had previously cached a file. In
this case, the browser would serve it from disk and not make an actual HTTP
request. This issue has been solved by clearing the cache when the browser
opens. Fixes
#1154
blacklistHosts
is now correctly
accepted via the
[CODE_BLOCK_3634]
CLI flag.
Spies and Stubs created with
cy.stub()
cy.spy()
will now retry their assertions when utilized
from an
alias
. Fixes
#1156
Basic auth is working again in Chrome 63 and Chrome 64. We "for real" fixed it
this time by adding auth headers automatically at the network proxy layer and
bypassed the browser altogether. We automatically apply auth headers if you
provide a username/password in the URL of a
[CODE_BLOCK_3635]
. We also added a
[CODE_BLOCK_3636]
option to specify the
[CODE_BLOCK_3637]
using
[CODE_BLOCK_3638]
. All of the requests that match the origin of the URL
will have the
[CODE_BLOCK_3639]
headers added. Fixes
#1288
Fixed domain parsing failures when
[CODE_BLOCK_3640]
[CODE_BLOCK_3641]
was not used as a
[CODE_BLOCK_3642]
. Fixes
#1292
#1278
Removed the flag
[CODE_BLOCK_3643]
from the Chrome launch args
to fix problems in CI that would throttle XHR callbacks by up to 20-30
seconds. Fixes
#1320
Misc:
We now properly display nested objects and arrays that come from
[CODE_BLOCK_3644]
in the Settings tab in the Desktop Application.
There's now a proper "empty view" when you go to setup your project to record
on our Dashboard and you have not created any Organizations. Fixes
#1306
Removed the message about private projects requiring a paid account in the
future. There will be a free tier including private projects. Fixes
#827
We moved the location of the browser's disk cache. That means that if you've
been using Cypress for a really long time - you may have built up quite a
large existing cache (in the hundreds of
[CODE_BLOCK_3645]
). Before upgrading, you should
open the browser and then manually clear the Cache. Or - if you have already
upgraded to
[CODE_BLOCK_3646]
delete the following folders:
OSX:
[CODE_BLOCK_3647]
Linux:
[CODE_BLOCK_3648]
Windows:
[CODE_BLOCK_3649]
1.4.2
Released 2/4/2018
Bugfixes:
Fixed not being able to visit subdomains when using 2nd level sub domains.
Fixes
#1175
#600
Fixed not being able to visit private TLD's from the public suffix such as
[CODE_BLOCK_3650]
[CODE_BLOCK_3651]
[CODE_BLOCK_3652]
. These now all work correctly.
Fixes
#380
#402
#802
#493
#1161
Fixed not being able to visit URLs that used
[CODE_BLOCK_3653]
such as
[CODE_BLOCK_3654]
. Fixes
#451
Mochawesome now works correctly and outputs files in all versions. Fixes
#551
Mochawesome will exit correctly with code
[CODE_BLOCK_3655]
when a hook fails.
#1063
Fixed some incorrect typings with TypeScript. Fixes
#1219
#1186
Fixed bug with custom 3rd party Mocha reporters relying on
[CODE_BLOCK_3656]
being a function. Fixes
#1142
Fixed typo in
[CODE_BLOCK_3657]
. Fixes
#1167
Fixed typo in CLI deps error about Docker. Fixes
#1136
Prevent
[CODE_BLOCK_3658]
from being set to
[CODE_BLOCK_3659]
when parent process did not
have it defined. Fixes
#1223
Misc:
We have begun to aggregate failures and other stats ourselves instead of
relying on Mocha reporters. Fixes
#1141
Added TypeScript
[CODE_BLOCK_3660]
autocomplete and typings for Cypress events.
Fixes
#1187
#1132
Upgrade deps. Fixes
#1174
1.4.1
Released 12/26/2017
Bugfixes:
Using
[CODE_BLOCK_3661]
now correctly outputs all debugging information on OSX
and Linux. Previously output other then
[CODE_BLOCK_3662]
was ignored due to the
CLI ignoring
[CODE_BLOCK_3663]
from the binary. Fixes
#921
[CODE_BLOCK_3664]
is now captured correctly in Windows when recording to the Dashboard.
Fixes
#977
and issue
#711
Windows now forcibly displays colors correctly to the terminal. Fixes
#1127
Misc:
[CODE_BLOCK_3665]
is now handled correctly for Linux and OSX. This means that CI providers
which turned off colors due to
[CODE_BLOCK_3666]
being false will now display colors again
such as TravisCI. Fixes
#1126
We now handle Xvfb exiting with a non zero status code and display that error
to you. This should help with situations where Xvfb is misconfigured on the
system. Fixes
#1113
We've added debug output for Xvfb when
[CODE_BLOCK_3667]
is enabled.
Helpful when diagnosing problems with Xvfb. Fixes
#1128
We've added more TypeScript documentation for
[CODE_BLOCK_3668]
methods. Fixes
#1117
When developing on Cypress, we now start the process through the CLI to bring
it into parity with how it works when used in production. Fixes
#838
Upgraded various CLI dependencies that were flagged for security warnings.
There wasn't an actual security problem - just static analyzers complaining.
Fixes
#1103
1.4.0
Released 12/19/2017
Features:
There is now a Search Bar in the Desktop GUI that enables you to filter the
list of specs. Helpful for projects with a ton of spec files. Fixes
#1098
Bugfixes:
The seeded
[CODE_BLOCK_3669]
file no longer fails in Windows on the
cy.exec()
test. It now conditionally runs a command
appropriate for Windows. Fixes
#1097
Trying to log in to Cypress no longer causes the app to crash. This area has
had many more tests added. Fixes
#1093
Some minor improvements to TypeScript definitions around
.then()
. Fixes
#1084
The Selector Playground now works correctly in the Electron browser. Fixes
#1086
1.3.0
Released 12/17/2017
Features:
Plugins now emit a
before:browser
:launch
event
exposing you the browser that will be launched and its launch arguments. This
enables you to modify the arguments prior to launching the browser. You can
also use these arguments to modify how Chrome runs and to also test Chrome
extensions. Fixes
#691
#298
We have launched a "CSS Selector Playground", a new UI button in the Test
Runner that enables you to highlight elements in your application and receive
a unique selector. You can also find elements by their text content. These
mimics
cy.get()
cy.contains()
behavior. Additionally you can copy
the generated Cypress command to your clipboard or output the generated
selector to your console. This feature is in beta. It only works in Chrome
(not in Electron). We are aware of some bugs in it, but it is good enough for
use and feedback. Please check out issue
#917
, watch an animated
gif demonstration, and leave any feedback you have there. Fixes
#917
Documentation Changes:
Added
[CODE_BLOCK_3670]
Updated
[CODE_BLOCK_3671]
Updated
[CODE_BLOCK_3672]
1.2.0
Released 12/14/2017
Features:
Plugins can now return a
[CODE_BLOCK_3673]
and modify the yielded
[CODE_BLOCK_3674]
to set new
configuration values and environment variables. Fixes
#1042
#909
#576
There is a new
userAgent
option in
[CODE_BLOCK_3675]
. This enables you to change the
[CODE_BLOCK_3676]
of the browser for
the entire browsing session. Fixes
#364
There is a new
blacklistHosts
option in
[CODE_BLOCK_3677]
that allows you to block requests made to those
hosts. Blocked requests will respond with a
[CODE_BLOCK_3678]
status code. This is useful
for blocking 3rd party domains like Google Analytics. We have added a
new 'Stubbing Google Analytics' recipe
demonstrating this. Fixes
#442
Added chai assertions in TypeScript to generate autocompletion. Fixes
#1073
Bugfixes:
Updated TypeScript definitions to more accurately match the current Cypress
API. Fixes
#1050
. Also
note that if you were extending Cypress in TypeScript the
[CODE_BLOCK_3679]
interface
changed. Please read issue #1048 to understand
what you will need to update.
Misc:
Renamed
[CODE_BLOCK_3680]
[CODE_BLOCK_3681]
in the Desktop GUI. Fixes
#1052
Cypress.config()
returns a complete set of configuration values. Fixes
#509
Added TypeScript typings for bundled Cypress tools like
[CODE_BLOCK_3682]
[CODE_BLOCK_3683]
, etc. Fixes
#1046
Some error messages were made more passive. Fixes
#1025
Documentation Changes:
Added
[CODE_BLOCK_3684]
Added
[CODE_BLOCK_3685]
Updated
[CODE_BLOCK_3686]
Updated
[CODE_BLOCK_3687]
Updated
[CODE_BLOCK_3688]
Updated
[CODE_BLOCK_3689]
Updated
[CODE_BLOCK_3690]
1.1.4
Released 12/6/2017
Bugfixes:
Fixed an issue causing
[CODE_BLOCK_3691]
to timeout when attempted to be run through
our docker containers. Fixes
#1031
Several TypeScript typings were added, updated and fixed. Fixes
#1006
Using a regular
[CODE_BLOCK_3692]
URL now works when using the
[CODE_BLOCK_3693]
flag to point the binary at an external location.
Fixes
#1001
File watching is fixed (again) when changing between specs. Fixes
#1018
Misc:
There is now a new
[CODE_BLOCK_3694]
flag you can pass during
[CODE_BLOCK_3695]
which skips the binary installation
after the
[CODE_BLOCK_3696]
npm module completes its installation. Fixes
#1005
We now launch Chrome with
[CODE_BLOCK_3697]
[CODE_BLOCK_3698]
options in Linux.
We will soon release a new plugin event that enables you to modify the browser
arguments we use by default. This
shouldn't
cause issues with existing Linux
users, and instead it should fix many CI setups that were using our Docker
containers or your own home grown installed Chrome setup. Fixes
#1021
#1020
Removed several aliases from our browser detector. These were not implemented
properly and not needed - and thus only caused indirection. Fixes
#1023
1.1.3
Released 12/3/2017
Bugfixes:
JSON fixtures with unicode escape sequences are now parsed correctly. Fixes
#964
The default
[CODE_BLOCK_3699]
plugin no longer fires
[CODE_BLOCK_3700]
twice
leading to an uncaught exception that was popping up in the console. Also
fixed a minor state bug in the
[CODE_BLOCK_3701]
package. Fixes
#968
Cypress no longer reports
[CODE_BLOCK_3702]
as the browser that ran in the Dashboard
Service when a different browser was run. Fixes
#854
Invalid cookie values no longer crash Cypress. Fixes
#962
Misc:
We are now bundling our own
[CODE_BLOCK_3703]
definitions with the
[CODE_BLOCK_3704]
module. You no longer have to install
[CODE_BLOCK_3705]
anymore. We'll continue
to keep these updated with API changes. Fixes
#856
Uncaught exceptions originating from
your
application code and/or test
code are now
distinctly
clearly
indicated in the error message. We
included a link to our docs to educate you on how you can optionally disable
Cypress from catching these. Fixes
#825
cy.visit()
now accepts
[CODE_BLOCK_3706]
which enables you to visit pages that respond with a non
[CODE_BLOCK_3707]
status code.
This brings it into parity with
cy.request()
. Fixes
#421
#574
The contributing Readme's have been updated and improved for each package.
Fixes
#995
Added utility methods
Cypress.platform
Cypress.arch
for returning the underlying OS
information. Uses node's
[CODE_BLOCK_3708]
module under the hood. Fixes
#824
#675
Documentation Changes:
Added
[CODE_BLOCK_3709]
Added
[CODE_BLOCK_3710]
Added
[CODE_BLOCK_3711]
1.1.2
Released 11/26/2017
Bugfixes:
Fixed a regression caused by
.type()
adhering to
[CODE_BLOCK_3712]
incorrectly. Special character sequences were not respected. Now
.type()
works with special characters and implements a
complete fix for
[CODE_BLOCK_3713]
. In addition to it working, it now fires all
applicable browser events without modifying the actual input value. Fixes
#955
Errors coming from plugins now display correctly in the Test Runner. Fixes
#945
Documentation Changes:
Added ESLint, Docker, and TypeScript to Plugins
Added recipe for TypeScript with Browserify
Added recipe for TypeScript with webpack
Added recipe for Direct Controlling AngularJS
Added recipe for E2E API Testing
Added more video tutorials
Improved displaying list of Tutorials, Recipes, Applications, and Docker examples
1.1.1
Released 11/20/2017
Bugfixes:
Fixed a bug swallowing plugin errors due to undefined
[CODE_BLOCK_3714]
function. Fixes
#934
.type()
now respects the
[CODE_BLOCK_3715]
attribute and will
not type beyond it. Fixes
#928
1.1.0
Released 11/19/2017
Summary:
We have officially launched the new
Plugins API
interface. This adds a
[CODE_BLOCK_3716]
file to new and existing projects. Using this file
will enable you to modify the internals of Cypress running in the background
[CODE_BLOCK_3717]
process. This means you will be able to use
[CODE_BLOCK_3718]
APIs that are
executed outside of the browser.
We have currently added only
one event
for modifying the
test file preprocessor, but this paves the way for adding many more event
types. You can now modify every aspect of how files are sent to the browser.
We have extracted the default Browserify preprocessor into its own package -
[CODE_BLOCK_3719]
This is bundled with Cypress, but it is extracted so it can be used / modified
by you to change the default options we pass to Browserify. Additionally, you
can swap out this preprocessor for something else entirely.
Features:
There is now a
Plugins API interface
Partially addresses
#684
We have added the first Plugin API event called:
file
:preprocessor
. Fixes
#580
#581
You can now customize the default Babe; configuration options for the
Browserify preprocessor. Fixes
#343
#905
CoffeeScript 2 is supported via modifying the default options for the
Browserify preprocessor. Fixes
#663
You can swap out or extend the default preprocessor to do exotic things like
compile ClojureScript into JavaScript. Fixes
#533
We have created a
[CODE_BLOCK_3720]
preprocessor npm package for you webpack users (because we are nice!).
Fixes
#676
Bugfixes:
[CODE_BLOCK_3721]
now works as
intended. Fixes
#801
We no longer format fixtures in any capacity. This fixes a bug with improperly
formatting fixtures in Windows. You should handle formatting fixtures
yourself. Fixes
#884
#902
cy.viewport()
resolves if only width or only height
changes. Fixes
#873
Cypress now auto reloads when spec files are modified in Windows. Fixes
#712
Misc:
There is a new
[CODE_BLOCK_3722]
option useful with
cypress open
to force Cypress to
open in global mode. This is helpful when you have multiple nested Cypress
projects but only want to install Cypress once in the root project. Fixes
#889
module API
accepts
[CODE_BLOCK_3723]
as an
object literal like it does for the
[CODE_BLOCK_3724]
[CODE_BLOCK_3725]
properties. Fixes
#899
Documentation Changes:
Created "Testing React TodoMVC" tutorials
Created "Variables and Aliases" core concept
Created "Conditional Testing" core concept
Created "Plugins" guide
Created "List of Plugins"
Created "Writing a Plugin" API
Created "Preprocessors API"
Updated "Using Cypress FAQ"
Updated "Best Practices"
1.0.3
Released 10/29/2017
Features:
The Test Runner now enables you to collapse folders when displaying a list of
specs. Fixes
#760
Bugfixes
[CODE_BLOCK_3726]
event callback for React now works (again) on
[CODE_BLOCK_3727]
type
[CODE_BLOCK_3728]
[CODE_BLOCK_3729]
. Fixes
#816
#770
Fixed error when recording and failing to parse the git commit message. Fixes
#847
#841
Using a single space on:
[CODE_BLOCK_3730]
now works. Fixes
#807
[CODE_BLOCK_3731]
can now be used on a collection of DOM elements. Fixes
#735
CLI shows help message when it is invoked with an unknown command like
[CODE_BLOCK_3732]
. Fixes
#641
Misc:
Enable passing
[CODE_BLOCK_3733]
without using the CLI by invoking the
binary directly. Fixes
#820
Cypress binaries can now be pointed to a staging environment with
[CODE_BLOCK_3734]
. Fixes
#813
The Test Runner displays the scrollbar correctly when the update banner is
displayed. Fixes
#803
The branch name is now properly collected when recording in Buildkite CI.
Fixes
#777
You can install the Cypress binary from any URL or file path using the
[CODE_BLOCK_3735]
environment variable
Closes
#701
Documentation Changes:
Created "Conditional Testing" core concept
Created "Key Differences" core concept
Updated "Best Practices"
Updated "FAQ Usage"
1.0.2
Released 10/13/2017
Bugfixes:
[CODE_BLOCK_3736]
now correctly fires change events on React 16. Fixes
#647
Fixed some problems serializing objects during domain change caused by
circular references. In this case
[CODE_BLOCK_3737]
was the culprit. Fixes
#741
Misc:
[CODE_BLOCK_3738]
now logs its coordinates when options are used. Fixes
#725
You can now use environment variables that have a
[CODE_BLOCK_3739]
character as values.
Fixes
#620
There is now a new
[CODE_BLOCK_3740]
configuration option in
[CODE_BLOCK_3741]
. Turning this off will only compress and upload videos on
failures. This only affects projects which are setup to record to the
Dashboard. Fixes
#460
Documentation Changes:
Added examples for "Catalog of Events"
[Added](/ Updated FAQ for "Using Cypress"' using-cypress-faq)
1.0.1
Released 10/10/2017
Bugfixes:
Prevent error during verification in the CLI on Linux / OSX. Also makes
terminal colors work again. Fixes
#717
#718
1.0.0
Released 10/09/2017
Summary:
[CODE_BLOCK_3742]
marks our transition out of a
private
beta and into a
public
beta. We've lifted all the restrictions for using Cypress. It is now
accessible to everyone. Until we are out of beta, the
Dashboard Service
will continue to be free.
We will continue to follow
[CODE_BLOCK_3743]
from this point on (and also a bit more
rigorously).
Cypress is now
open source
! This
project is licensed under the terms of the
MIT License
We have a
Contributing Guideline
to help
contributors get started as well as
issues labeled
[CODE_BLOCK_3744]
for those wanting to contribute right away.
You can now use the Test Runner application without logging in. Some areas of
the application still require logging in through GitHub, like the 'Runs' tab
and viewing the project's 'Record Key'. The only places where login is
required is when it interacts with our external servers. Naturally these
places are optional and will not affect the local test writing + running
experience.
We've removed the requirement of filling out an early adopter form and
approval for logging in with GitHub to Cypress.
www.cypress.io
has an all new design to help new
visitors get started quickly and understand our future pricing more clearly.
We are still updating the docs to reflect the
[CODE_BLOCK_3745]
release.
Features:
Windows is now supported. We have been running it successfully on EC2 and all
of our example projects are also running in CI with AppVeyor. It is still
super beta (we're aware of a couple issues already) and we're still updating
our own infrastructure to manage and test it as comprehensively as we do OSX
and Linux. We are only building a 32bit version of Windows, but will soon be
building a 64bit as well. As of today the Windows binary is about 2x the size
of what it will be. Unzipping takes a long time, we are sorry. Fixes
#444
Misc:
Added the
[CODE_BLOCK_3746]
flag everywhere (since we are still technically in beta).
Reduced the frequency the app checked for updates. Fixes
#713
The CLI now sends
[CODE_BLOCK_3747]
parameter to the download server so we can build and
serve multiple binaries for Windows + Linux.
Documentation Changes:
Updated "Installing Cypress"
Updated "Writing your First Test"
Added a 10 minute Getting Started video that
Andrew Van Slaars
created.
0.20.3
Released 10/06/2017
Improved verifying the binary for the first time after an
[CODE_BLOCK_3748]
. Fixes
#709
0.20.2
Released 10/06/2017
Possibly Breaking Changes:
cy.exec()
now trims output by default. That means if you
were using an
[CODE_BLOCK_3749]
assertion the output will no longer have a trailing newline
character
[CODE_BLOCK_3750]
. It's unlikely you are doing this, but it is possible you may
need to update your assertions to remove this character. Fixes
#697
Bugfixes:
Handle errors gracefully when Electron window has been closed before paint
events happen. Fixes
#705
Basic auth now works
again
. Fixes
#573
cy.exec()
now properly sources each time it is invoked
instead of only once. Fixes
#694
Misc:
[CODE_BLOCK_3751]
now accepts the
[CODE_BLOCK_3752]
flag which enables you to use a
root level Cypress installation and point to multiple sub projects. Fixes
#661
Prevent newer versions of Chrome from prompting you to save passwords and
suppressed other extension related popups for Windows. Fixes
#704
0.20.1
Released 09/17/2017
Features:
[CODE_BLOCK_3753]
now supports a
[CODE_BLOCK_3754]
option so the Electron browser will
display instead of running headlessly. This matches what you can already do in
the GUI. Fixes
#657
Bugfixes:
Using Cypress on nested projects now correctly works. Fixes
#635
Using
[CODE_BLOCK_3755]
on Angular 2 apps now works. We're now firing the
[CODE_BLOCK_3756]
property when typing. We've properly mapped all the special keys too.
[CODE_BLOCK_3757]
now gets invoked when overriding
[CODE_BLOCK_3758]
. Fixes
#656
#640
Using multiple
[CODE_BLOCK_3759]
back to back which only change the
[CODE_BLOCK_3760]
properly wait for the
[CODE_BLOCK_3761]
event to occur before moving on. Fixes
#652
CLI now displays the correct overridden
[CODE_BLOCK_3762]
on first
open. Fixes
#659
Fixed the incorrectly spelled chainer
[CODE_BLOCK_3763]
. It is now correctly
spelled as
[CODE_BLOCK_3764]
. Fixes
#642
The visibility algorithm has been considerably improved. Should fix most if
not all visibility problems. We accounted for CSS transforms, translations,
and added a new branch of logic for
[CODE_BLOCK_3765]
elements which should be
much more accurate. Fixes
#631
The CLI now treats
[CODE_BLOCK_3766]
[CODE_BLOCK_3767]
[CODE_BLOCK_3768]
as valid commands. Fixes
#645
Misc:
You can now pass an object literal as
[CODE_BLOCK_3769]
when using Cypress as a node
module. Fixes
#639
Passing
[CODE_BLOCK_3770]
can now reference an absolute path instead of just
relative. Fixes
#658
The algorithm that ensures an element is not covered now calculates this at
the center coordinates instead of the top left. This should yield more
accurate results, be closer to the default expectations of users, and bypass
fractional pixel problems we were having. Fixes
#655
Improved crash reporting when the binary throws an uncaught error.
Documentation Changes:
Updated "Command Line"
Updated "Interacting with Elements"
0.20.0
Released 09/10/2017
Summary:
[CODE_BLOCK_3771]
is our biggest technical release ever. It accounts for more than
2,000 commits. It's full of breaking changes we wanted to land prior to having
our public
[CODE_BLOCK_3772]
release.
You can now
install Cypress as a real
[CODE_BLOCK_3773]
module
and even
[CODE_BLOCK_3774]
it in your node files.
We rewrote the entire driver (we've all been there) and converted all 2,500+
tests to be run within Cypress itself.
CLI Changes:
You now use
[CODE_BLOCK_3775]
to manage Cypress versions like every other dev dependency.
Running
[CODE_BLOCK_3776]
will automatically download the CLI +
binary.
There is no longer a separate
[CODE_BLOCK_3777]
step, but this command still
exists if you want to
reinstall
the binary for whatever reason.
No need to use
[CODE_BLOCK_3778]
anymore to manage Cypress versions.
You will
need to uninstall the
[CODE_BLOCK_3779]
by running
[CODE_BLOCK_3780]
[CODE_BLOCK_3781]
module can be
[CODE_BLOCK_3782]
in your
own node projects to programmatically control Cypress the same way you would
from the command line.
We've updated the installation experience to account for running locally and
in CI so it doesn't generate a ton of logs in
[CODE_BLOCK_3783]
[CODE_BLOCK_3784]
environment variable is gone because now the version of
the binary is controlled by the npm module version. If for some reason you
want to download the binary of a different version you can use the new
[CODE_BLOCK_3785]
environment variable - but you'll get a warning
message when the versions don't match.
If you install cypress globally using
[CODE_BLOCK_3786]
we will warn
you that you should check this in as a
[CODE_BLOCK_3787]
but Cypress will
continue to work in "global mode".
Cypress now verifies it can run on your system prior to actually running.
It'll do this for each new version the first time you try to use it. Errors it
receives from attempting to run will bubble up nicely, so you'll get output
for things like
missing linux dependencies
instead of absolutely
nothing
like before.
We have better error handling and messaging around Xvfb failures.
There is a new
[CODE_BLOCK_3788]
option
that lets you change the browser that runs from the command line. This works
the same way as changing the browser in the GUI, with the exception that any
browser other than the default
[CODE_BLOCK_3789]
browser will
record a video.
This is solvable but requires more work.
Whenever you encounter errors in the CLI we'll output helpful debugging
information at the bottom of each error.
You can use the new environment variable
[CODE_BLOCK_3790]
to see
debugging output from the CLI.
Breaking Changes:
We've removed the undocumented
[CODE_BLOCK_3791]
command. You should be able to
safely remove this from your code. Fixes
#456
Updated
Cypress._
to use
lodash
instead of
Underscore
. Fixes
#548
If any of an element's parent's overflow is 'hidden', we now calculate if the
element is outside of the boundaries of that parent element and validate
visibility assertions accordingly. This may cause some tests that were
previously passing to now accurately fail. Fixes
#410
[CODE_BLOCK_3792]
should now look for the trimmed value
inside of an
[CODE_BLOCK_3793]
. This may change the content argument
required to select the option you intended in your
[CODE_BLOCK_3794]
command. Fixes
#175
When passing the option
[CODE_BLOCK_3795]
[CODE_BLOCK_3796]
[CODE_BLOCK_3797]
, we no longer attempt to scroll the
element into view. We've also disabled the check that the element is in view
before clicking or typing. Fixes
#553
#537
[CODE_BLOCK_3798]
has been renamed to
[CODE_BLOCK_3799]
[CODE_BLOCK_3800]
has been renamed to
Cypress.log
[CODE_BLOCK_3801]
assertions
longer change the subject when using
[CODE_BLOCK_3802]
[CODE_BLOCK_3803]
, and
[CODE_BLOCK_3804]
with the
argument (which acts as equality check). Fixes
#605
We now throw when a value other than
[CODE_BLOCK_3805]
is returned from a test or command
function. Fixes
#463
Returning a promise in a custom command while also invoking cy commands now
throws. Fixes
#435
cy.then()
will now only pass its subject through when
its callback function returns
[CODE_BLOCK_3806]
. Previous it would pass the subject
[CODE_BLOCK_3807]
values as well.
cy.contains()
can no longer be chained on subjects
which aren't
[CODE_BLOCK_3808]
[CODE_BLOCK_3809]
[CODE_BLOCK_3810]
. This brings it into parity
with the new custom command rules and makes it much less "magical". It
enforces you to use it in a much clearer way when querying the entire
document.
Removed
[CODE_BLOCK_3811]
[CODE_BLOCK_3812]
, and
[CODE_BLOCK_3813]
in favor of the
new custom command interface
Features:
[CODE_BLOCK_3814]
assertions
have
improved error messaging, and have had their internal double assertions
removed, and can now be made on raw DOM objects. Fixes
#605
[CODE_BLOCK_3815]
assertions
throw a nice error message when you're asserting on a non DOM object. Fixes
#604
.trigger()
command. Useful for triggering
arbitrary events. Fixes
#406
cy.scrollTo()
command. Useful for having a
container scroll to a specific position. Fixes
#497
#313
.scrollIntoView()
command. Useful for
scrolling an element into view. Fixes
#498
#313
#519
Input ranges are now more easily testable using the new
.trigger()
command. See our
new recipe
for details on how. Fixes
#287
Testing drag and drop is now possible using the new
.trigger()
command. See our
new recipe
for details on how. Fixes
#386
Updated
.click()
command to accept more position
arguments. Fixes
#499
Added support to
[CODE_BLOCK_3816]
for inputs of type
[CODE_BLOCK_3817]
[CODE_BLOCK_3818]
[CODE_BLOCK_3819]
, and
[CODE_BLOCK_3820]
. Fixes
You can now pass a browser option to
cypress run
[CODE_BLOCK_3821]
. This enables you to run the same set of browsers
when running from the CLI as when you're running from the GUI. Fixes
#462
#531
cypress open
no longer opens a
detached process by default. Instead
[CODE_BLOCK_3822]
now accepts a new flag
[CODE_BLOCK_3823]
, which replicates this behavior. Fixes
#531
We have all new
docker examples
you can check out.
[CODE_BLOCK_3824]
npm package
now checks
the currently installed version on
[CODE_BLOCK_3825]
and does not re-install Cypress
if it is already installed. Fixes
#396
We've added a new
Cypress.Commands
interface to handle adding your own custom commands. Fixes
#436
You can now overwrite existing commands with
Cypress.Commands.overwrite
We removed an artificial delay that was being set in between commands. This
means test commands now run faster.
You can now
disable Cypress global exception handlers
for your application. Fixes
#254
Uncaught errors appearing in your spec files or support files are now properly
caught, have the right exit code, and display correctly. Fixes
#345
Cypress will now scroll past multiple elements that cover up an element to be
interacted with. It also now factors in elements with
[CODE_BLOCK_3826]
Fixes
#571
#565
Cypress now scrolls all parent containers (not just
[CODE_BLOCK_3827]
) when attempting
check an element's actionability
Fixes
#569
Using Chai.js's
[CODE_BLOCK_3828]
interface now works correctly in your specs.
Screenshots are now taken during each runnable that fails. Errors in tests
will happen there. Errors in hooks will also happen there. Previously a
screenshot would only happen after everything (including hooks) ran. Fixes
#394
cy.screenshot()
now synchronizes its state with
the reporter. This means you should see error messages (on the left side) on
automatic screenshot errors.
Using mocha's async
[CODE_BLOCK_3829]
callback now works properly.
You can now programmatically
intercept and potentially turn off uncaught application errors
from failing your tests.
You can now programmatically control whether you accept or cancel
window.confirm()
calls from your
application.
Dependencies:
Updated
Cypress.Promise
(which is Bluebird) from
version
[CODE_BLOCK_3830]
[CODE_BLOCK_3831]
Updated
chai
from version
[CODE_BLOCK_3832]
[CODE_BLOCK_3833]
Updated
sinon
from version
[CODE_BLOCK_3834]
[CODE_BLOCK_3835]
Updated
jQuery
from version
[CODE_BLOCK_3836]
[CODE_BLOCK_3837]
Removed
chai-jQuery
rewrote it from scratch.
Deprecations:
[CODE_BLOCK_3838]
npm package
been deprecated. Fixes
#316
The interface for writing custom commands has been deprecated.
Please read our docs on the new custom commands interface
Fixes
#436
#465
There are no more global, in-app updates. Versioning should be primarily
controlled via
[CODE_BLOCK_3839]
like every
other package / dependency in your project. For users not using
[CODE_BLOCK_3840]
you can
manually download new versions of Cypress when they're released.
Bugfixes:
Fixed busted internal timers that caused random timeouts, proxy errors,
incorrect delays, and long pauses when loading the GUI. Fixes
#572
[CODE_BLOCK_3841]
now matches requests opened with lowercase methods. Fixes
#607
Fixed regression where multiple uses of
[CODE_BLOCK_3842]
in a
[CODE_BLOCK_3843]
hook was
throwing an error. Fixes
#510
#595
When editing
[CODE_BLOCK_3844]
file, the dead browser page no longer appears.
Fixes
#492
[CODE_BLOCK_3845]
should now work on inputs regardless of
capitalization of
[CODE_BLOCK_3846]
attribute. Fixes
#550
Fixed issues where
[CODE_BLOCK_3847]
was not appending text
properly. Fixes
#503
#568
Fixed issue where
[CODE_BLOCK_3848]
with
[CODE_BLOCK_3849]
inputs
were throwing an error. Fixes
#504
Fixed issue where using
[CODE_BLOCK_3850]
on an input with a
[CODE_BLOCK_3851]
defined in uppercase (
[CODE_BLOCK_3852]
) would throw an error and not
type. Fixes
#550
Fixed issue with
.clear()
[CODE_BLOCK_3853]
inputs.
Fixes
#490
Fixed issue where
[CODE_BLOCK_3854]
was failing when running
Cypress in docker. Fixes
#517
Cypress CLI no longer requires
[CODE_BLOCK_3855]
to install. Fixes
#124
Improved the reporter's responsive design so controls still show at narrower
widths. Fixes
#544
Commands text will no long cut off into ellipses when the Command Log is set
to a wider width. Fixes
#528
Fixed issue where setting
[CODE_BLOCK_3856]
[CODE_BLOCK_3857]
would throw an error.
Fixes
#450
Fixed issue where Cypress hanged due to Xvfb permissions. More intuitive
output is given during install failures. Fixes
#330
The checks used to determine an element's actionability
are now run synchronously. This solves some circumstances where the element
could have moved or otherwise change between the checks. Fixes
#570
Fixed issue where clipped elements with
[CODE_BLOCK_3858]
were falsely
passing as "visible". Fixes
#563
When using
[CODE_BLOCK_3859]
on a select with multiple
options with the same value, we now properly set
[CODE_BLOCK_3860]
[CODE_BLOCK_3861]
on the
[CODE_BLOCK_3862]
. Fixes
#554
Fixed issue where changing any spec file (renaming, adding, deleting) would
remove the highlighted styling of the currently active spec file in the Test
Runner. Fixes
#547
We now get the absolute paths of styles to use when displaying snapshots. This
will fix situations where some stylesheets were improperly referenced during
the snapshot, so did not display styles correctly. Fixes
#525
Fixed issue where commands would retry and potentially exceed their timeout
values during page transitions. Fixes
#594
Fixed issue where server routes were lost after page load if not initiated by
[CODE_BLOCK_3863]
command. Fixes
#177
Using mocha's
[CODE_BLOCK_3864]
callback now works correctly. We've improved mocha's
handling of uncaught exceptions and properly associate them to test failures.
cy.viewport()
is now synchronized with the UI so
that it does not resolve until the DOM has re-rendered using the dimensions.
"outer assertions" now are correctly retried by previous commands. Fixes
#543
The example_spec from the
kitchen-sink
will
never accidentally be seeded when running
cypress run
on a brand new project.
Misc:
We now display a warning in the console when returning a promise from a test
and also invoking a Promise or cy commands. Fixes
#464
Reduced the number of internal Cypress network requests in the "Network Panel"
of Dev Tools. Fixes
#606
We've moved our entire codebase into one into a private "Monorepo". This is in
anticipation for going open source (making the GitHub repo public) and should
make it easier for everyone to contribute to our code. Fixes
#256
When element's are not visible due to being covered by another element, the
error message now says what element is covering what element.
#611
Improved the calculations to calculate an elements visibility. Additionally
updated error messages to be clearer whenever an element isn't considered
visible. Fixes
#613
The "Can't start server" error displayed in the Desktop-GUI no longer prevents
you from interacting in the Desktop App. It now displays as a warning. Fixes
#407
[CODE_BLOCK_3865]
now automatically retries until the
element exists in the DOM. This makes it behave the same as
cy.get()
Fixes
#564
#409
We now support per-project
[CODE_BLOCK_3866]
. Fixes
#512
We can now handle multiple projects per server. Fixes
#512
The Test Runner can now have projects added by being 'dragged' in. Fixes .
The Test Runner update window now has messaging about
[CODE_BLOCK_3867]
versioning. Fixes
#513
The Test Runner now accounts for cypress being installed per project as npm
module. Fixes
#500
#514
cypress install
[CODE_BLOCK_3868]
option. Fixes
#389
Exposing Cypress Binary should no longer be necessary when cypress is locally
installed. Fixes
#379
Added an 'App Data' option in the Desktop App that displays app data. Fixes
#475
When
[CODE_BLOCK_3869]
[CODE_BLOCK_3870]
never called, the error now displays a clearer, grammatically correct error.
Fixes
#520
Detection of installed browsers has been improved. Fixes
#511
When commands are clicked on and logged into the console from the Command Log,
they now display their 'yield' instead of 'return', since they really yield
instead of return.
#612
The build process of the driver has been modernized. Fixes
#429
XHR's from your application are no longer forcefully aborted between tests.
Better error handling when running commands outside of a test.
URL changes from navigation events or hashchanges now display more accurately.
cy.go()
now snapshots before and after the navigation
event.
Page load events no longer forcibly
[CODE_BLOCK_3871]
out the current subject. This was
very unexpected and difficult to debug. Now stale elements or other objects
from previous pages are yielded to you.
Using an array of the same alias in a
cy.wait()
yields you those XHR's in the order they were requested. Previously it was
based on when the responses were returned.
Returning
[CODE_BLOCK_3872]
from a
.then()
will now change the
subject to that. Previously returning
[CODE_BLOCK_3873]
would not cause subject changes.
We now no longer remove spies, stubs, or routes at the end of the very last
test. This enables you to continue to manually use your app and have Cypress
continue to instrument it.
Updated a few things to more aggressively cause GC.
Onboarding dialogs will never show up again once they are dismissed. Fixes
#522
[CODE_BLOCK_3874]
[CODE_BLOCK_3875]
now generate a page event in the
Command Log (including the message).
[CODE_BLOCK_3876]
[CODE_BLOCK_3877]
now have
[CODE_BLOCK_3878]
method to disable their calls from generating a Command Log.
Useful when your spies or stubs are called an excessive number of times.
Improved command subject validation error messages.
Improved the element detachment error messages (when you try to interact with
an element that's become stale / detached from the document).
We finally have
partial
iframe support. You can at least now
cy.wrap()
iframe elements and interact with them using
Cypress commands. More work needs to be done to "switch into" and back "out
of" iframes. But we're getting there.
Scaffolding new projects no longer generates a
[CODE_BLOCK_3879]
file.
Scaffolded
[CODE_BLOCK_3880]
[CODE_BLOCK_3881]
have had their content updated to
point to the custom commands API.
You can now call
.focus()
.blur()
cy.window()
[CODE_BLOCK_3882]
env option has been removed in favor of the
[CODE_BLOCK_3883]
module
[CODE_BLOCK_3884]
usage.
Attempting to run
cypress run
on a
project without a
[CODE_BLOCK_3885]
now errors instead of scaffolding and running
the kitchen sink.
Documentation Changes:
Note: we are still updating all of the docs to reflect all the 0.20.0 changes.
New "Catalog of Events"
New "Cypress.Commands"
New "Cypress.log"
New ".trigger()"
New "cy.scrollTo()"
New ".scrollIntoView()"
Updated "Installing Cypress"
Updated "Writing Your First Test"
Updated "Testing Your App"
Updated "Command Line"
Updated "Debugging"
Updated "Assertions"
Updated "Interacting with Elements"
0.19.4
Released 06/18/2017
Bugfixes:
Fixed
.type()
not firing
[CODE_BLOCK_3886]
event for
React
on versions 15.6.x. Fixes
#536
0.19.3
Released 06/14/2017
Bugfixes:
Server's that send
[CODE_BLOCK_3887]
no longer cause Cypress to fail due
to incorrect decoding. Cypress now strips encodings it cannot accept. Fixes
#535
0.19.2
Released 04/16/2017
Features:
You can now run your tests in the
Electron browser
that
comes built with Cypress. You will see it as an option in the browser
dropdown. This is the same browser that Cypress uses when running
[CODE_BLOCK_3888]
. This is useful for debugging issues that only occur during
headless runs. Addresses
#452
New traversal commands
[CODE_BLOCK_3889]
[CODE_BLOCK_3890]
[CODE_BLOCK_3891]
[CODE_BLOCK_3892]
, and
[CODE_BLOCK_3893]
have been added. Addresses
#432
Bugfixes:
An error is now thrown if an
[CODE_BLOCK_3894]
value is mistakenly passed into
[CODE_BLOCK_3895]
. Previously, it would set the command
timeout to an unimaginably large number of ms. Fixes
#332
Fixed issue where the contents of
[CODE_BLOCK_3896]
were emptied, which would cause
a crash and loss of state information. Fixes
#473
#474
We no longer write the chrome extension within
[CODE_BLOCK_3897]
, and instead
write this to the proper OS specific
[CODE_BLOCK_3898]
folder. Fixes
#245
#290
Misc:
Error handling for invalid arguments passed to
[CODE_BLOCK_3899]
have been improved and will now suggest
valid arguments that are acceptable.
Browsers in the browser dropdown now have colored icons, which help visually
distinguish the variants of Chrome.
Increased timeout for browser to make a connection when running during
[CODE_BLOCK_3900]
from 10 seconds to 30 seconds.
Internally refactored how browsers are added and spawned in preparation of us
adding cross browser support.
Switching specs in the GUI now closes the browser and respawns it and
refocuses it.
0.19.1
Released 03/09/2017
Features:
Added
[CODE_BLOCK_3901]
property. Fixes
#404
Selecting
[CODE_BLOCK_3902]
inside
[CODE_BLOCK_3903]
now works with
[CODE_BLOCK_3904]
. Fixes
#367
Bugfixes:
[CODE_BLOCK_3905]
errors have been fixed. These were being caused due to
[CODE_BLOCK_3906]
being
too low on your OS. This should fix the file watching problems people were
having. Essentially we just replaced
[CODE_BLOCK_3907]
with
[CODE_BLOCK_3908]
and crossed our
fingers this works. (It did on our machines). Fixes
#369
Now you can select the error text in the GUI. Fixes
#344
Cypress now correctly re-bundles files even when
[CODE_BLOCK_3909]
is set
[CODE_BLOCK_3910]
. Fixes
#446
#347
Fixed file watching when changing the
[CODE_BLOCK_3911]
to something other
than the default value. Fixes
#438
[CODE_BLOCK_3912]
now works on options that have the same
value. Fixes
#441
Cypress no longer crashes when you click links in the on-boarding screen
called "To help you get started...". Fixes
#227
[CODE_BLOCK_3913]
file that gets seeded on a new project no longer fails
[CODE_BLOCK_3914]
. Fixes
#414
Misc:
We now preserve the Test Runner's position and sizing after it's closed +
reopened. Fixes
#443
We now ignore watching
[CODE_BLOCK_3915]
[CODE_BLOCK_3916]
and a few other
folders to reduce the number of watched files. Fixes
#437
0.19.0
Released 02/11/2017
Notes:
We have updated all of the docs related to these changes. The
CI Docs
got a much needed
facelift.
There is a new docs section related to the
Dashboard
and the new features.
Overview:
We have officially released our
Dashboard
which is our service that will display recorded runs.
This service has now been fully integrated into the Desktop Application. There
is a new on-boarding process that helps you setup projects for recording.
Breaking Changes:
We have done our very best to create as little breaking changes as possible.
You will need to download a new
cypress-cli
version
[CODE_BLOCK_3917]
Older CLI versions will continue to work on
[CODE_BLOCK_3918]
except for the
cypress open
command - and will we
print a warning to nudge you to upgrade.
Newer CLI versions will not work on versions of Cypress <
[CODE_BLOCK_3919]
(but we
don't know why this would ever even happen).
Features:
There is a new
Dashboard
service that
displays your recorded runs.
Dashboard
enables you to view your
recorded runs, manage projects, create organizations, invite users and set
permissions.
Projects are either
public
with their runs being publicly viewable by
anyone, or
private
which restricts their access to only users you've
invited. All
existing
projects were set to
private
by default.
When you invite users (from the Dashboard) we will
automatically
allow
them. This means you can invite all of your teammates (or anyone else). They
can start using Cypress without talking to us.
We now list all of the recorded runs directly in the Test Runner under a new
[CODE_BLOCK_3920]
tab. Fixes
#236
Your list of projects in the Test Runner now displays their last recorded run
status - passing, failing, pending, running, etc.
We've changed the "Config" tab to now be called "Settings". We added two new
sections to the "Settings" tab which displays your
[CODE_BLOCK_3921]
and your Record
Key. These sections do a much better job explaining what these are and how you
use them.
You no longer have to use
[CODE_BLOCK_3922]
to get your Record Key. We now
display this in your "Settings" tab and also in the
Dashboard
Projects will no longer automatically acquire a
[CODE_BLOCK_3923]
when being added.
There is now a very explicit
opt-in
process where you setup your project
to record. This should make it much clearer what's going on behind the scenes.
cypress run
now behaves likes
[CODE_BLOCK_3924]
previously did and downloads + installs Cypress if it's not
already installed.
[CODE_BLOCK_3925]
now works in OSX, and also works in Linux in Desktop flavors
(like Ubuntu).
Misc:
cypress run
will now download and
install Cypress if it is not already installed.
We renamed
[CODE_BLOCK_3926]
[CODE_BLOCK_3927]
. This makes it clearer
what this key actually does - and the fact that it can be run anywhere
irrespective of CI. We still look for the old named key but will print a
warning if we detect it.
We print a warning when using an older CLI tool version. Fixes
#424
We've improved many of the error messages related to recording runs. Fixes
#423
[CODE_BLOCK_3928]
has been deprecated. You now use
[CODE_BLOCK_3929]
The key you used to pass to
[CODE_BLOCK_3930]
is the same key. We've consolidated
these commands into just
cypress run
which makes it simpler
and clearer. Their only difference is that passing
[CODE_BLOCK_3931]
cypress run
will
record
build to our Dashboard. Fixes
#417
0.18.8
Released 02/05/2017
Overview:
We have officially implemented our
Sinon.JS
integration: adding
[CODE_BLOCK_3932]
[CODE_BLOCK_3933]
[CODE_BLOCK_3934]
, and
[CODE_BLOCK_3935]
. We've matched Sinon's APIs and added
[CODE_BLOCK_3936]
[CODE_BLOCK_3937]
. In addition we've fixed Sinon
performance issues, and improved the display of assertion passes and failures.
These new APIs will work well in both
[CODE_BLOCK_3938]
tests and
[CODE_BLOCK_3939]
tests.
Features:
You can now use
[CODE_BLOCK_3940]
[CODE_BLOCK_3941]
synchronously. These both match the Sinon API
identically. We will display
[CODE_BLOCK_3942]
calls in the Command Log and provide
the call count, arguments, context, and return values when you click on the
log. Stubs are automatically reset between tests. Fixes
#377
We've added our own special aliasing flavor to
[CODE_BLOCK_3943]
[CODE_BLOCK_3944]
. You can
use the
[CODE_BLOCK_3945]
command and we will associate spy and stub
invocations (the same way we do with XHR aliasing and route matching).
We've added
[CODE_BLOCK_3946]
[CODE_BLOCK_3947]
which are both asynchronous methods to
modify timers in your application under test. We automatically apply clock
(even if you invoke it before your first
[CODE_BLOCK_3948]
and will automatically reapply it after page load.
[CODE_BLOCK_3949]
will enable you to control the amount of
time you want passed in your application. This is great for controlling
throttled
debounced
functions.
[CODE_BLOCK_3950]
is automatically applied under the hood which extends
Sinon and provides the
[CODE_BLOCK_3951]
[CODE_BLOCK_3952]
APIs which makes
it easy to stub promise returning functions.
We support and display multiple sub spies when using Sinon's
[CODE_BLOCK_3953]
function.
Misc:
We've enhanced
[CODE_BLOCK_3954]
by improving the output during passes or failures.
Fixes
We've ripped out Sinon's argument serialization in favor of our own.
We no longer send Sinon to the remote application under test. In other words,
you'll no longer see
[CODE_BLOCK_3955]
being sent as a network request.
Deprecated the undocumented
[CODE_BLOCK_3956]
function, but it will continue to work
and will be officially removed later.
0.18.7
Released 01/30/2017
Bugfixes:
Fixed regression in
[CODE_BLOCK_3957]
that caused Cypress to fail when switching spec
files when
[CODE_BLOCK_3958]
was set in
[CODE_BLOCK_3959]
. Fixes
#403
0.18.6
Released 01/29/2017
Features:
We now launch Cypress tests directly to the
[CODE_BLOCK_3960]
to avoid an initial page
refresh when encountering the first
[CODE_BLOCK_3961]
command. This should help tests run faster. Fixes
#382
Bugfixes:
Uninstalling the last used browser no longer causes the Test Runner to error
and hang. Fixes
#371
Fixed issue where
[CODE_BLOCK_3962]
would not be displayed on a completed
[CODE_BLOCK_3963]
run. Fixes
#398
Fixed a longstanding issue in Cypress where logging in from another computer
would kill the session on all other computers, and prevent you from accessing
[CODE_BLOCK_3964]
(amongst other things). Fixes
#400
Misc:
We now validate all of the configuration options set in
[CODE_BLOCK_3965]
ensure it has valid types. Fixes
#399
We now validate that
[CODE_BLOCK_3966]
is accessible
prior
to running tests. This
prevents a common situation where you may forget to boot your web server and
have instantly failing tests. Fixes
#383
We now show the entire scaffolded tree of files when adding a brand new
project. Fixes
#401
We display errors coming from
[CODE_BLOCK_3967]
with more helpful information now.
Changed the
Test Runner
to use
[CODE_BLOCK_3968]
for authorization.
You will have to log in again
0.18.5
Released 01/08/2017
Features:
You can now disable
[CODE_BLOCK_3969]
by passing
[CODE_BLOCK_3970]
[CODE_BLOCK_3971]
env variables. In very long runs and on CPU throttled instances compression
can take a considerable amount of time, possibly as much as 50% of the time
spent running actual tests. Fixes
#372
Misc:
Improved performance when running
[CODE_BLOCK_3972]
by caching the last bundled
spec. This prevents having the same spec file rebundled each time
[CODE_BLOCK_3973]
caused a full page navigation. You should
see a moderate improvement in test run time. Fixes
#370
We are now capturing
[CODE_BLOCK_3974]
and several other properties for use + display
in our Dashboard on
[CODE_BLOCK_3975]
runs.
Enable
[CODE_BLOCK_3976]
to send an encoding for images
other than forcing the default encoding of
[CODE_BLOCK_3977]
. Fixes
#373
Enable
[CODE_BLOCK_3978]
to pass an
[CODE_BLOCK_3979]
parameter when using
[CODE_BLOCK_3980]
syntax. Fixes
#374
0.18.4
Released 12/28/2016
Bugfixes:
Prevent
[CODE_BLOCK_3981]
from accessing the URL during
transition phase and throwing an error. Fixes
#356
Stubbed functions now serialize correctly when switching domains on a
[CODE_BLOCK_3982]
. Fixes
#354
Fixed a handful of scenarios and edge cases where cookies were not properly
synchronized between external requests and the browser. This led to situations
where cookies were either duplicated on requests, or were not sent. Fixes
#357
#361
#362
Misc:
[CODE_BLOCK_3983]
now favors
[CODE_BLOCK_3984]
config over
remote origin when you do not pass a fully qualified URL. Fixes
#360
0.18.3
Released 12/18/2016
Features:
There is now a
[CODE_BLOCK_3985]
command for displaying an
arbitrary message and args. Useful for providing context while testing and
debugging long tests. Fixes
#342
Bugfixes:
[CODE_BLOCK_3986]
now uses the
[CODE_BLOCK_3987]
property as
opposed to querying for
[CODE_BLOCK_3988]
elements in the
[CODE_BLOCK_3989]
. Fixes
#351
#331
We now exit correctly (with status of 1) in the case of headless renderer
crashes. Additionally we capture these errors properly, explain what happened,
and link to external error document to suggest fixes. Fixes
#270
#348
Misc:
Improved headless performance, and added optimizations for early and often GC.
0.18.2
Released 12/15/2016
Bugfixes:
Under the hood
[CODE_BLOCK_3990]
now sets an
[CODE_BLOCK_3991]
request header to prevent some web servers from
sending back
[CODE_BLOCK_3992]
in the case where they required this header. Only a small %
of servers would ever do this, but
[CODE_BLOCK_3993]
was one of them. Fixes
#309
[CODE_BLOCK_3994]
now sends an
[CODE_BLOCK_3995]
request
header by default too. Fixes
#338
Misc:
[CODE_BLOCK_3996]
now includes more debugging
information (related to headers) in the error output. Fixes
#341
When
[CODE_BLOCK_3997]
times out, we now output much
better error messages including information about the request sent. Fixes
#340
0.18.1
Released 12/11/2016
Notes:
There is a new
recipe showcasing these new features
We are adding several other recipes to show examples of all the ways you can
[CODE_BLOCK_3998]
to improve your tests.
Features:
[CODE_BLOCK_3999]
can now have its automatic redirect
following turned off by passing
[CODE_BLOCK_4000]
. Fixes
#308
[CODE_BLOCK_4001]
now has a
[CODE_BLOCK_4002]
option that
automatically appends query params to the
[CODE_BLOCK_4003]
property. Fixes
#321
[CODE_BLOCK_4004]
now follows redirects exactly like a
real browser. Previously if you
[CODE_BLOCK_4005]
ed to an endpoint and it redirected to a
[CODE_BLOCK_4006]
then
[CODE_BLOCK_4007]
would not follow it due to
[CODE_BLOCK_4008]
changing. It now follows method changing redirects by default.
Fixes
#322
[CODE_BLOCK_4009]
now accepts the
[CODE_BLOCK_4010]
option which
will convert the
[CODE_BLOCK_4011]
values to urlencoded content and automatically set the
[CODE_BLOCK_4012]
header. This means you can now use
[CODE_BLOCK_4013]
to bypass your UI and login with
standard form values. Fixes
#319
When
[CODE_BLOCK_4014]
fails, it now outputs the full
request / response information. This behaves more similar to
[CODE_BLOCK_4015]
failures. Fixes
#324
[CODE_BLOCK_4016]
now prints
of the underlying
HTTP request / response information into the Dev Tools' console (when clicking
on the Command Log). This means that you will see everything you would
normally see from the
[CODE_BLOCK_4017]
tab as if the request were made from the
browser. We even print redirect information. Fixes
#325
Bugfixes:
Cypress' internal
[CODE_BLOCK_4018]
will no longer attempt to load your project's
[CODE_BLOCK_4019]
. This helps avoid potential version conflicts. Fixes
#312
We no longer watch the
[CODE_BLOCK_4020]
while running
[CODE_BLOCK_4021]
. Fixes
#329
[CODE_BLOCK_4022]
is now correctly respected in regards to watching all
files, including the
[CODE_BLOCK_4023]
. Fixes
#336
There is no longer an error when scaffolding a new Cypress project. Fixes
#326
The Runner UI no longer appears to be "running" when there is a spec bundle
error in the
[CODE_BLOCK_4024]
Cypress now correctly exits during
[CODE_BLOCK_4025]
[CODE_BLOCK_4026]
when the browser
fails to connect. Fixes
#333
Cypress now correctly exits during
[CODE_BLOCK_4027]
[CODE_BLOCK_4028]
when there is a
spec bundle error. Fixes
#337
Cypress now retries up to 3 times for the browser to connect during
[CODE_BLOCK_4029]
. The warning / error messages were also updated to be clearer.
Partially addresses
#334
Misc:
Deprecated
[CODE_BLOCK_4030]
property for
[CODE_BLOCK_4031]
and renamed to
[CODE_BLOCK_4032]
. Fixes
#323
Removed the
[CODE_BLOCK_4033]
option from
[CODE_BLOCK_4034]
because cookies are now
always
get/set on requests. This option really never
made any sense to have. Fixes
#320
Better data reporting when recording builds in CI.
We now collect "global" errors that may prevent any tests from running. We
will be displaying these in our future CI platform.
0.18.0
Released 11/27/2016
Notes:
We've created a new
example recipes repo
to show you common testing scenarios including how to use the new module
support.
Summary:
We've added automatic ES2015+, module, JSX, and CJSX support to all test
files. This means you can use
[CODE_BLOCK_4035]
[CODE_BLOCK_4036]
, or
[CODE_BLOCK_4037]
declarations to
load other files. You can also use this to import your own application
specific JavaScript modules and write unit tests for them. More of these
details are yet to come.
See this issue
You can now use your regularly installed
[CODE_BLOCK_4038]
in your project to do
things like utilizing
[CODE_BLOCK_4039]
for utility functions or
extending
[CODE_BLOCK_4040]
with assertion plugins.
Because we're now processing the spec files prior to handing them off to the
browser, this means we will display problems like syntax errors when something
in the processing goes wrong. Additionally, we print these out during
[CODE_BLOCK_4041]
, so you're not stuck wondering what went wrong.
Breaking Changes:
Previously, we auto-magically included all files within
[CODE_BLOCK_4042]
This has now
gone away
and we've
simplified this to automatically including a single
[CODE_BLOCK_4043]
file. That single file acts as the entry point meaning you should
[CODE_BLOCK_4044]
[CODE_BLOCK_4045]
the other support files you'd like to include. Although this is
still "automatic" it's much less magical and we'll be updating all of our docs
to reflect this. The purpose of
[CODE_BLOCK_4046]
hasn't really changed, just
the implementation of it has. We will automatically seed a
[CODE_BLOCK_4047]
file for you (even on existing projects). The file
location of
[CODE_BLOCK_4048]
can be changed with the new
[CODE_BLOCK_4049]
option in your
[CODE_BLOCK_4050]
. This feature can also be turned off by
specifying
[CODE_BLOCK_4051]
Features:
We now support ES2015+, modules, and JSX in all spec files. Fixes
#246
Spec files may now be written as
[CODE_BLOCK_4052]
[CODE_BLOCK_4053]
[CODE_BLOCK_4054]
, or
[CODE_BLOCK_4055]
files.
Test files with JS syntax errors are now
handled
and we provide a GUI that points
to the exact line/column number. Additionally we print these out during
[CODE_BLOCK_4056]
and exit the process with
[CODE_BLOCK_4057]
. Fixes
#293
Misc:
We improved the logic around when and if we scaffold files on a new project.
We're much smarter about this and not generating these forcibly every time.
Fixes
#285
Simplified handling of support files and made them less "magical". Fixes
#286
Renamed
[CODE_BLOCK_4058]
[CODE_BLOCK_4059]
[CODE_BLOCK_4060]
. We will automatically rename your
[CODE_BLOCK_4061]
if this
property was present on update.
0.17.12
Released 11/21/2016
Bugfixes:
You no longer have to log in again after updating. Fixes
#305
Updating in app now works again. Sorry about that. Fixes
#304
Headless frame rate is now correctly set to
[CODE_BLOCK_4062]
instead of resetting back to
[CODE_BLOCK_4063]
. Fixes
#303
We now automatically drop frames that the CPU cannot keep up with while video
recording during
[CODE_BLOCK_4064]
. Previously we would buffer all frames in
memory and it was possible to exhaust all memory due to the way that streaming
backpressure works. Fixes
#302
Fixed an edge case in the
[CODE_BLOCK_4065]
that could lead to memory leaks. This
happened when Command Logs updated from previously run tests. Normally, in
headless mode, we automatically remove references to purge memory after each
test, but when logs were updated after this, their references were merged back
in again and held onto forever. If you were seeing long Cypress runs die or
eventually halt, this was likely the cause. We did extensive memory regression
analysis on Cypress and could not find any more memory leaks. Fixes
#301
Misc:
Improved
cypress run
[CODE_BLOCK_4066]
headless output. Fixes
#306
Improved performance by preventing
[CODE_BLOCK_4067]
from being taken during
headless runs.
0.17.11
Released 11/16/2016
Roadmap:
The changes in version
[CODE_BLOCK_4068]
below are in preparation
for Cypress platform service: a portal where screenshots, videos, config,
and logs of your builds are accessible.
Overview:
[CODE_BLOCK_4069]
now uploads build assets to our servers after a test run
completes. Additionally, it tracks the
[CODE_BLOCK_4070]
settings used during the build
and tracks each individual test failure.
If you do
want these assets to be tracked by Cypress, you need to switch
to using
cypress run
. We will
happily remove any build assets that are accidentally uploaded to us during
the update transition.
Features:
We now record videos during a headless run with both
[CODE_BLOCK_4071]
cypress run
. Fixes
#229
After completing
[CODE_BLOCK_4072]
, we now upload build assets (such as
[CODE_BLOCK_4073]
[CODE_BLOCK_4074]
) to be used in our upcoming admin interface. This
will enable you to review assets without having to touch your CI server. Fixes
#292
Misc:
We've redesigned the headless run
[CODE_BLOCK_4075]
to give you more details of the
run, the stats after the run, what screenshots were taken, the video that was
recorded, compression settings for the video, uploading asset progress, etc.
Screenshot names now include their parent titles, and invalid file system
characters are scrubbed. Fixes
#297
We no longer artificially restrict the environment
[CODE_BLOCK_4076]
can run in. It
can now run
anywhere
. Fixes
#296
We removed scaffolding any directories on a new project (during
[CODE_BLOCK_4077]
). Fixes
#295
cypress run
no longer prompts the
user for any kind of interaction, thus enabling you to use this in CI if you
choose to do so. Fixes
#294
There is a new
configuration
property
called:
[CODE_BLOCK_4078]
(This was changed to
[CODE_BLOCK_4079]
3.0.0
) that is set to
[CODE_BLOCK_4080]
by default
and will automatically clear out screenshots + videos folders before each run.
These files are not deleted, they are just moved to your trash.
There are several new
configuration
properties for video recording:
[CODE_BLOCK_4081]
[CODE_BLOCK_4082]
, and
[CODE_BLOCK_4083]
0.17.10
Released 11/07/2016
Bugfixes:
Fixed switching between two different spec files from the desktop app causing
[CODE_BLOCK_4084]
to be wrong. Fixes
#276
Fixed inserting the string
[CODE_BLOCK_4085]
into
[CODE_BLOCK_4086]
urls when providing a
[CODE_BLOCK_4087]
[CODE_BLOCK_4088]
while origin could not be
determined. Fixes
#274
Fixed incorrect error message on reverse visibility assertions. Fixes
#275
Misc:
We've improved the way we inject content into
[CODE_BLOCK_4089]
responses by filtering
the underlying HTTP request headers. We no longer inject content into
templates which were loaded via XHR. Fixes
#257
#288
0.17.9
Released 10/22/2016
Bugfixes:
Cypress now applies cookies to the browser which were cleared between
redirects. Fixes
#224
Snapshots now work even when
[CODE_BLOCK_4090]
tag has invalid attributes. Fixes
#271
Cypress no longer crashes on initial
[CODE_BLOCK_4091]
when
the 3rd party web server never ends the response. Fixes
#272
Misc:
Changed default
[CODE_BLOCK_4092]
from
[CODE_BLOCK_4093]
[CODE_BLOCK_4094]
Changed default
[CODE_BLOCK_4095]
from
[CODE_BLOCK_4096]
[CODE_BLOCK_4097]
The internal Cypress proxy now forcibly responds to requests taking longer
than
[CODE_BLOCK_4098]
. Currently this sends back
[CODE_BLOCK_4099]
with the
[CODE_BLOCK_4100]
error, but this likely needs to be configurable. The reason we are
now forcibly applying timeouts is to prevent
[CODE_BLOCK_4101]
where
tests are running and a 3rd party server never responds to the request.
0.17.8
Released 10/13/2016
Bugfixes:
Fixed
[CODE_BLOCK_4102]
errors due to
[CODE_BLOCK_4103]
events causing snapshots
prior to the
[CODE_BLOCK_4104]
event of the remote application. Thanks to everyone who
helped pitched in on this one! Fixes
#258
Cypress now correctly sets cookies with
[CODE_BLOCK_4105]
in the past. Chrome
did not handle these cookies as documented and our code did not take this into
account. We also added a lot more
[CODE_BLOCK_4106]
tests around this behavior. Fixes
#266
We are now taking additional precautions to prevent Cypress from trashing the
wrong folder during an upgrade (with an open project). This was actually fixed
[CODE_BLOCK_4107]
but the problem was is that during an update, the new version
(which was fixed) was still being passed the wrong arguments from the older
(broken) application. We've now upgraded
[CODE_BLOCK_4108]
to detect this, and just use
the expected default install location of Cypress. If you're concerned, just
close
your currently open project before updating. Fixes
#265
Misc:
When an in app update fails in
[CODE_BLOCK_4109]
we now provide instructions on how to
manually update Cypress.
We now properly take the
[CODE_BLOCK_4110]
cookie flag into account and give it
preference over the
[CODE_BLOCK_4111]
flag as per the cookie spec.
0.17.7
Released 10/12/2016
Features:
There is now a new
[CODE_BLOCK_4112]
option you can
set in
[CODE_BLOCK_4113]
to turn off Chrome's Web Security features. We've
written a brand new reference that details why and how you could use this.
Cypress Web Security. This option can be used
for accessing
[CODE_BLOCK_4114]
[CODE_BLOCK_4115]
or if your application needs to test
navigation across super domains. Fixes
#262
Bugfixes:
We now capture
[CODE_BLOCK_4116]
errors correctly instead of these showing as
[CODE_BLOCK_4117]
in the console. Fixes
#261
We no longer trash the wrong folder on OSX in-app updates (when a project is
open). Sorry about this! Fixes
#260
[CODE_BLOCK_4118]
urls with domain-like segments (which
weren't actually the domain) no longer cause Cypress to think you're trying to
navigate to a different superdomain. Fixes
#255
0.17.6
Released 10/04/2016
Features:
Snapshots will now be
pinned
when clicking on a command in the Command Log.
This enables you to inspect the state of the DOM when the snapshot was taken.
We've given you a new series of controls for turning off the element
highlighting and hitboxes. Additionally we've given you the ability to
manually click through each named snapshot when there are multiple states
(like before and after). Fixes
#247
Bugfixes:
Fixed a regression where tests that failed outside of a hook would incorrectly
indicate themselves as a
[CODE_BLOCK_4119]
hook. In addition, in the default
[CODE_BLOCK_4120]
, reporter will now display the test name when a hook was the source of
failure. Fixes
#253
Fixed a deployment bug in the
[CODE_BLOCK_4121]
We now prevent
[CODE_BLOCK_4122]
from accidentally
snapshotting twice.
Misc:
[CODE_BLOCK_4123]
[CODE_BLOCK_4124]
now correctly send
[CODE_BLOCK_4125]
headers
based on the current open browsing session. Fixes
#230
0.17.5
Released 10/02/2016
Features:
We've added
[CODE_BLOCK_4126]
as a valid
built-in reporters
. Fixes
#178
You can now
add or write your own custom reporters
. This
means you can
[CODE_BLOCK_4127]
and we'll automatically
correctly
[CODE_BLOCK_4128]
that package. Alternatively you can write your own
[CODE_BLOCK_4129]
file. Fixes
#231
[CODE_BLOCK_4130]
can now be resized. We persist this state locally so it should
"stick" between browser launches / app restarts. Fixes
#204
Cypress now "remembers" the last browser you had open and will suggest opening
that whenever a project is opened. Addresses
#193
Instead of seeing
[CODE_BLOCK_4131]
- cross origins script errors are now
handled specially and we throw a very long and exciting error explaining what
just happened. Fixes
#241
When uncaught errors are thrown in hooks we now indicate Mocha's behavior as
part of the error - that it is skipping the remaining tests in the current
suite. Fixes
#240
Bugfixes:
The reporter now more intelligently scrolls to prevent commands from being cut
off. Useful in screenshots / video recording. Fixes
#228
We've improved the logic of how snapshots are restored so that it does not
break the CSS when there were full page navigations in the test and the CSS
changed. Fixes
#223
Iframes are now correctly handled when we restore snapshots. Previously, we
removed iframes which would change the page layout and the hitboxes'
coordinates we drew were wrong. Now we insert iframe placeholders that prevent
the page layout from changing. Fixes
#234
Snapshot hitboxes no longer incorrectly draw for elements that are hidden.
Fixes
#251
Fixed a bug that caused commands to time out on subsequent tests whenever
there was an uncaught error + an assertion conflict. Fixes
#238
Fixed an edge case where assertions would incorrectly associate to a
previously run assertion. Fixes
#252
Cypress commands now correctly execute in
[CODE_BLOCK_4132]
[CODE_BLOCK_4133]
hooks on a
failed test. Previously they would only run on passing tests. Fixes
#203
Misc:
We've bypassed Mocha's default uncaught error handling and replaced it with
something much better - actually using the thrown error instances instead of
creating a new arbitrary one. This means you'll see better stack traces on
uncaught errors. Fixes
#193
We've bypassed Mocha's default uncaught error handling in a
[CODE_BLOCK_4134]
. Normally
this immediately ends the run. Instead we are skipping the remaining tests in
the current suite. This prevents skipping potentially dozens or hundreds of
tests downstream that are typically unrelated to the hook failure.
We've updated
[CODE_BLOCK_4135]
package to
[CODE_BLOCK_4136]
. You will need to download
this new CLI version if you want to pass
[CODE_BLOCK_4137]
Bumped the internal version of
[CODE_BLOCK_4138]
from
[CODE_BLOCK_4139]
[CODE_BLOCK_4140]
0.17.4
Released 09/12/2016
Breaking Changes:
Using subsequent
[CODE_BLOCK_4141]
in the same test
will
not necessarily force a full page refresh. If all that changed was the hash of
a url, then the hash changes will take affect
without
a full page refresh.
This matches the behavior of a real browser. Previously
[CODE_BLOCK_4142]
always forced a full page refresh and this
was not correct.
Features:
Using
[CODE_BLOCK_4143]
now acts
exactly
how modifying the
URL in a real browser works. This means that if you visit a url with a hash in
it, instead of forcing a full page refresh, it will now modify the hash route
as if you had manually changed it. This more accurately reflects real user
behavior. Previously this was impossible to do with Cypress other than
manually altering
[CODE_BLOCK_4144]
Bugfixes:
Fixed a regression in
[CODE_BLOCK_4145]
which caused
separate
tests that were
visiting the same URL not to actually visit the new URL and eventually time
out. We've updated some of our internal QA processes around this because we
rarely have regressions and they are a pretty big deal. Fixes
#225
Fixed displaying
[CODE_BLOCK_4146]
contentType when a
[CODE_BLOCK_4147]
returned a
[CODE_BLOCK_4148]
status code. We now only
display
[CODE_BLOCK_4149]
when one exists.
0.17.3
Released 09/11/2016
Features:
When
[CODE_BLOCK_4150]
assertions such as
[CODE_BLOCK_4151]
fail we now print the
reason Cypress thought the element was invisible. Matches what Cypress prints
out when attempting to interact with invisible elements. Fixes
#221
Bugfixes:
Prevent
[CODE_BLOCK_4152]
header from having its port appended when request was for port
[CODE_BLOCK_4153]
[CODE_BLOCK_4154]
which lead to 3rd party reverse proxy problems such as with
[CODE_BLOCK_4155]
hosting. Fixes
#222
Send valid http response errors, and display new lines correctly. Fixes
#218
Correctly inject on
[CODE_BLOCK_4156]
http response codes. Fixes
#217
Correctly inject on
[CODE_BLOCK_4157]
and other bad http response codes when using Cypress
as the file server. Fixes
#219
Correctly inject on
[CODE_BLOCK_4158]
errors from 3rd party servers doing unintended
things. Fixes
#220
0.17.2
Released 09/06/2016
Notes:
After this update if you are seeing
[CODE_BLOCK_4159]
origin errors
please let us
know
opening an issue
We will screen-share with you to diagnose the issue. We're no longer aware of
any situation where this should happen, so if you're experiencing these bugs,
please help us track them down.
Features:
Attempting to
[CODE_BLOCK_4160]
a non
[CODE_BLOCK_4161]
resource
will now throw a specific error message instead of bombing on page injection
with an
[CODE_BLOCK_4162]
> origin error. You have to visit actual
[CODE_BLOCK_4163]
, you cannot
visit something like a
[CODE_BLOCK_4164]
[CODE_BLOCK_4165]
. If you're wanting to visit an API
route on your back end that does something like set cookies (thus avoiding
loading your UI) you can just use
[CODE_BLOCK_4166]
this since it will now automatically get and set cookies under the hood. Fixes
#211
Bugfixes:
Fixed a regression in
[CODE_BLOCK_4167]
that was incorrectly setting
[CODE_BLOCK_4168]
headers.
This
could
cause a situation where you received an
[CODE_BLOCK_4169]
origin error.
Additionally we now set
[CODE_BLOCK_4170]
headers whenever we inject content, but
otherwise respect the headers coming from web servers. When using Cypress as
the file server, we set
[CODE_BLOCK_4171]
but prevent caching.
Most likely fixed a bug that was crashing Cypress due to
[CODE_BLOCK_4172]
. We were unable to write a test
for this since we could not recreate the error, but analyzed how it
happen and fixed the code there.
open an issue
if you see
this error, it will be obvious since Cypress will literally crash.
We stopped minifying
[CODE_BLOCK_4173]
(for real this time). More optimizations to
come around this.
Prevented accidentally setting
[CODE_BLOCK_4174]
cookies when they were really
[CODE_BLOCK_4175]
cookies, thus duplicating the number of cookies sent on requests.
Kudos to
@bahmutov
for finding this one. Fixes
#207
Fixed some edge cases in
[CODE_BLOCK_4176]
where it threw errors when
attempting to
[CODE_BLOCK_4177]
on a tab with
[CODE_BLOCK_4178]
[CODE_BLOCK_4179]
urls.
We've fixed some underlying issues with
[CODE_BLOCK_4180]
during
[CODE_BLOCK_4181]
. It always worked fine in real Chrome. Previously there were
some situations where it would not navigate forward / back correctly.
Misc:
No longer force
[CODE_BLOCK_4182]
to navigate to
[CODE_BLOCK_4183]
prior to navigating to the real url. Fixes
#208
[CODE_BLOCK_4184]
can now accept an empty string.
Fixes
#206
Improved error messages for
[CODE_BLOCK_4185]
[CODE_BLOCK_4186]
The full file path is now included in console output for
[CODE_BLOCK_4187]
[CODE_BLOCK_4188]
Kitchen Sink
[CODE_BLOCK_4189]
have been updated to reflect the newest changes and
features of
[CODE_BLOCK_4190]
0.17.1
Released 08/31/2016
Features:
You can now pass keyboard modifiers such as
[CODE_BLOCK_4191]
[CODE_BLOCK_4192]
[CODE_BLOCK_4193]
, and
[CODE_BLOCK_4194]
[CODE_BLOCK_4195]
. In addition we've added support for not
"releasing" these keys so they can affect other actions such as
[CODE_BLOCK_4196]
. Addresses
#196
You can now type into the
[CODE_BLOCK_4197]
[CODE_BLOCK_4198]
as opposed to previously
having
to target a valid focusable element. This is useful in situations
where you're testing keyboard shortcuts and do not want to target a specific
element. Addresses
#150
There is a new command
[CODE_BLOCK_4199]
that reads
files on your file system and changes the subject to the contents. Addresses
#179
There is a new command
[CODE_BLOCK_4200]
that
creates and/or writes contents to files on your file system. Addresses
#179
Bugfixes:
[CODE_BLOCK_4201]
now works
correctly. The driver was still referencing the old
[CODE_BLOCK_4202]
value.
[CODE_BLOCK_4203]
cookie should now be removed during any
[CODE_BLOCK_4204]
, which should fix some edge cases with the
proxy accidentally injecting content when it shouldn't. We also added a ton
more e2e tests covering these edge cases and other behavior.
The proxy now restricts its injection to only
[CODE_BLOCK_4205]
headers so it will not accidentally inject into the wrong responses.
Misc:
[CODE_BLOCK_4206]
extensions are now supported and
Cypress will no longer throw on extensions it doesn't recognize. For known
fixture extensions we'll continue to apply a default
[CODE_BLOCK_4207]
and for
everything else it will default to
[CODE_BLOCK_4208]
. Fixes
#200
[CODE_BLOCK_4209]
now accepts
[CODE_BLOCK_4210]
as a 2nd
optional argument.
We now display a keyboard 'modifiers' column when clicking on a
[CODE_BLOCK_4211]
in the Command Log.
0.17.0
Released 08/30/2016
Overview:
The desktop application has been completely redesigned. We have moved from a
tray application to a standard dock application. The list of projects is now
in the same window as the list of tests in a project. As each test runs, the
application highlights the currently running spec and displays the browser
version running. The configuration of a project is now displayed in its own
tab. There is now a Desktop Menu where you can logout, check for updates, or
view help links.
The test
runner
has been rebuilt from the ground up in
React.js
. The
left side of the runner called the
reporter
is now a separate application. This, as well as other changes, markedly
improved the performance of running tests.
Your tests will now run faster.
This will also enable you to test your application in full screen.
Additionally this paves the way for being able to spawn multiple browsers at
once and synchronize testing across them. This also means we'll be able to
support mobile browsers. The UI for doing this hasn't been implemented but the
vast majority of the work to accomplish this is done now.
We have rewritten the entire proxy layer of the Cypress server to finally fix
all the problems with CORS.
Breaking Changes:
You cannot
[CODE_BLOCK_4212]
two different super domains
within a single test. Example:
[CODE_BLOCK_4213]
. There
shouldn't be any reason you ever need to do this in a single test, if you do,
you should make these two separate tests.
Features:
All CORS related issues should finally be fixed now.
Cypress now internally
switches to the domain that you used in your
[CODE_BLOCK_4214]
. This means that the correct domain will
display in the URL based on the application currently under test. Your
application's code will run under the current domain at all times. Previously
we implemented an endless amount of hacks and internal translations to figure
out the domain you were
supposed
to be on without actually being on the
domain. This caused code to behave different and caused subtle issues. Those
issues should now be resolved. The entire proxy layer has been rewritten to
handle all HTTPS certificates flawlessly, continue to inject (even on HTTPS
pages), and still know when to automatically bypass injection so you can open
other tabs while testing in Cypress. These new proxy changes also unlock the
ability to do things like allowing or blocking specific 3rd party domains, or
even be able to stub not just XHR's but any kind of HTTP request.
[CODE_BLOCK_4215]
now works correctly. Stubbing these does not yet work but it is
now possible for us to implement stubbing in a future version. Addresses
The list of tests now automatically refresh when test files are renamed,
deleted, or added. In addition, because the list of tests is now displayed in
the desktop application, we now synchronize the state of the current running
spec.
[CODE_BLOCK_4216]
has better error messages. Cypress now
programmatically determines why a
[CODE_BLOCK_4217]
failed
and gives you a ridiculously accurate error message. Addresses
#138
[CODE_BLOCK_4218]
now displays redirects and any cookies
set.
The currently running test is now scrolled into view. This behavior can be
turned off by scrolling in the Command Log or selecting to disable auto-scroll
at the top of the Command Log. Addresses
#194
Tests in the Command Log now automatically expand when specific commands take
longer than
[CODE_BLOCK_4219]
to run. Previously when running more than 1 test we did
not expand commands until a test failed. Now they will be expanded and
automatically collapsed whenever a single command is taking a long time to
finish.
We now have full blown subdomain support. This means you can now navigate to a
subdomain either directly via a
[CODE_BLOCK_4220]
or by
navigating in your application naturally (such as clicking an
[CODE_BLOCK_4221]
[CODE_BLOCK_4222]
now attaches and sets cookies
transparently on the browser. Even though the browser will not physically make
the request, we automatically apply outgoing cookies
as if
the browser had
made the request. Additionally we will automatically
cookies on the
browser based on the response. This means you can use
[CODE_BLOCK_4223]
to bypass not just CORS but handle
things like automatically logging in without having to manually perform these
actions in the UI.
We now handle HTTP request errors much better. Previously if your web server
sent us back a
[CODE_BLOCK_4224]
[CODE_BLOCK_4225]
response we would automatically send back a
[CODE_BLOCK_4226]
. Now we transparently pass these through.
Improved dozens of error messages.
[CODE_BLOCK_4227]
output has been improved, and you can now
easily inspect the current command's subject.
Clicking the URL in the header of the runner now opens that URL in a new tab.
Bugfixes:
Fixed URL proxy issue with subdomains. Fixes
#183
Viewport size maximum has been decreased from
[CODE_BLOCK_4228]
[CODE_BLOCK_4229]
and minimum
has been increased from
[CODE_BLOCK_4230]
[CODE_BLOCK_4231]
to match error messages. Fixes
#189
WebSockets are now correctly proxied through HTTPS and through subdomains
different than the current domain under test.
Stopped
[CODE_BLOCK_4232]
from accidentally mutating subjects.
Cypress now correctly injects and handles pages which are missing a
[CODE_BLOCK_4233]
[CODE_BLOCK_4234]
>, or even an
[CODE_BLOCK_4235]
tag. Previously it would bomb on pages missing
these tags.
All commands with a long message (such as assertions) are automatically scaled
down in font size and truncated properly. In addition, assertions will
correctly bold the
[CODE_BLOCK_4236]
[CODE_BLOCK_4237]
values.
Misc:
cypress run
no longer requires
being logged in.
Renamed configuration option
[CODE_BLOCK_4238]
[CODE_BLOCK_4239]
. Cypress will
transparently rewrite this if you have it in your
[CODE_BLOCK_4240]
, so you don't
have to do anything.
Renamed
[CODE_BLOCK_4241]
[CODE_BLOCK_4242]
Command Log options to
[CODE_BLOCK_4243]
[CODE_BLOCK_4244]
. We still support the older property names for backwards
compatibility.
Added support for a command's
[CODE_BLOCK_4245]
[CODE_BLOCK_4246]
to use
markdown.
The default value of
[CODE_BLOCK_4247]
within a project's global
configuration
has changed from
[CODE_BLOCK_4248]
now being a random open port. You can still configure a specific
[CODE_BLOCK_4249]
needed within the
configuration
We have upgraded the
[CODE_BLOCK_4250]
that runs headlessly on
cypress run
to version
[CODE_BLOCK_4251]
The internal version of
[CODE_BLOCK_4252]
which is built into Cypress is now
[CODE_BLOCK_4253]
Cypress
[CODE_BLOCK_4254]
files are no longer minified to make them easier to debug.
We are cleaning up internal
[CODE_BLOCK_4255]
cookies more so they won't get in the
way of testing your application.
We now opt into
[CODE_BLOCK_4256]
handling instead of forcing requests to omit it.
The runner is now responsive. It will correctly scale down URLs on smaller
screen sizes instead of looking completely broken in CSS. We also designed a
much better loading indicator.
Added button to the reporter that focuses the Test Runner and shows the list
of tests.
The reporter now updates the duration every
[CODE_BLOCK_4257]
instead of only when a
test changes.
In the reporter, suites that are pending or contain only pending tests have
the blue "pending" indicator on the left instead of the white "processing"
indicator.
0.16.5
Released 07/31/2016
Bugfixes:
Force exit codes that are
[CODE_BLOCK_4258]
[CODE_BLOCK_4259]
. Fixes
#184
0.16.4
Released 06/17/2016
Bugfixes:
Fixed regression caused by
[CODE_BLOCK_4260]
where a failed
[CODE_BLOCK_4261]
would not be canceled and would
continue to run and display failed assertions in between test runs (without a
full page refresh). Fixes
#174
0.16.3
Released 06/17/2016
Features:
[CODE_BLOCK_4262]
now accepts string glob patterns using
minimatch
under the hood. This means
you can more easily route dynamic urls without using
[CODE_BLOCK_4263]
. Example:
[CODE_BLOCK_4264]
[CODE_BLOCK_4265]
is now exposed so you can
easily test globbing patterns.
[CODE_BLOCK_4266]
can now be used on non-input elements that
have a
[CODE_BLOCK_4267]
attribute. Key events will fire but no text content will
change and no input based events fire. Fixes
#172
There is now an
[CODE_BLOCK_4268]
configuration option that accepts an array of
[CODE_BLOCK_4269]
patterns. This enables
you to ignore extraneous spec files that may be created during a build
process. The default pattern is
[CODE_BLOCK_4270]
which will ignore
dynamically generated webpack hot module swapping files. Fixes
#159
Bugfixes:
Fixed a bug where Cypress could get into a weird state and continuously error
due to the
[CODE_BLOCK_4271]
event not being properly disposed. Fixes
#173
Fixed a bug where invalid UTF-8 characters were being set in XHR headers which
caused XHR's to fail. We now properly encode and decode all values. Fixes
#168
Nested directories under
[CODE_BLOCK_4272]
no longer cause a
[CODE_BLOCK_4273]
when tests
run. This was due to Cypress not ignoring directories and trying to serve them
as regular files. Fixes
#163
Fixed situations where 3rd party libraries (such as
New Relic
were instrumenting XHR's identical to
Cypress' implementation. This caused an infinite loop which would crash the
browser. We've updated how we instrument XHR's to take this into account and
deployed multiple fallbacks and strategies to prevent this kind of thing from
happening in the future. Fixes
#166
Misc:
[CODE_BLOCK_4274]
now accepts a
[CODE_BLOCK_4275]
option for
passing options to
minimatch
cypress run
now exits with the
number of test failures instead of always exiting with 0. This matches the
same way
[CODE_BLOCK_4276]
works. Fixes
#167
In the
Cypress CLI tool
package version
[CODE_BLOCK_4277]
, you can now pass the
[CODE_BLOCK_4278]
option to
[CODE_BLOCK_4279]
. This enables
you to run a specific spec file as opposed to all tests. Fixes
#161
0.16.2
Released 06/11/2016
Features:
Added new
[CODE_BLOCK_4280]
command which can take
screenshots on demand.
When running
[CODE_BLOCK_4281]
or in CI, Cypress will now automatically take a
screenshot when a test fails. You can optionally turn this off by setting
[CODE_BLOCK_4282]
[CODE_BLOCK_4283]
in your configuration.
Added new
[CODE_BLOCK_4284]
configuration option with default of
[CODE_BLOCK_4285]
When running in
Circle CI
, we automatically export
screenshots as artifacts which makes them available directly in their web UI.
If you're using Circle CI, you'll be able to see screenshots without doing
anything. If you're using
Travis CI
, you'll need to
upload artifacts to an
[CODE_BLOCK_4286]
. This is a small slice of what is coming to
help diagnose and understand errors in CI. Also in
[CODE_BLOCK_4287]
we will
automatically scroll the tests and more intelligently and open / close test
commands so you can visually see what happened. Currently you may not see the
test command's failure in the Command Log due to the view not scrolling.
Added new
[CODE_BLOCK_4288]
command which iterates serially on a
collection yielding the iteratee, the index, and the collection. Addresses
#156
[CODE_BLOCK_4289]
can now accept a single function and/or you can pass a function
to the
[CODE_BLOCK_4290]
property. This allows you to lazily evaluate routing
responses. Great for referencing fixtures. Addresses
#152
[CODE_BLOCK_4291]
now accepts a regular expression.
Addresses
#158
[CODE_BLOCK_4292]
now accepts
[CODE_BLOCK_4293]
[CODE_BLOCK_4294]
. We
do not move the caret but do fire all the proper events. Addresses
#157
Bugfixes:
[CODE_BLOCK_4295]
now outputs additional
[CODE_BLOCK_4296]
[CODE_BLOCK_4297]
information. It additionally will automatically
[CODE_BLOCK_4298]
your
[CODE_BLOCK_4299]
which
makes GUI apps behave as if they've been launched from your terminal. Fixes
#153
#154
[CODE_BLOCK_4300]
yielding nested subjects.
[CODE_BLOCK_4301]
no longer returns the last element
found when siblings both contain the same content. Fixes
#158
Cypress no longer errors when you return a raw DOM element. It now correctly
wraps this as the new subject.
Misc:
[CODE_BLOCK_4302]
now provides an even more specific
error message when it was scoped to a particular DOM element and contained a
selector. Fixes
#160
You will now see a very specific error message when we detect that you've
mixed up
[CODE_BLOCK_4303]
[CODE_BLOCK_4304]
code in a
[CODE_BLOCK_4305]
callback
function. An example would be queuing up a new cypress command but then
synchronously returning a different value.
0.16.1
Released 05/22/2016
Features:
[CODE_BLOCK_4306]
now works again.
Additionally it provides much more feedback than it used to.
[CODE_BLOCK_4307]
option has been added to remove verbose cookie object logging.
Bugfixes:
Copy / Paste now works when logging in on OSX. Fixes
#145
Grammar: 'Login -> Log in'. Fixes
#146
Cypress now uses the body instead of headers to send external requests. Fixes
#148
When
[CODE_BLOCK_4308]
throws this no longer prevents the next
test from issuing any commands. Fixes
#149
Misc:
Passing multiple arguments to
[CODE_BLOCK_4309]
now throws and
suggests you use
[CODE_BLOCK_4310]
. Fixes
#147
0.16.0
Released 05/17/2016
Notes:
Updating through the Desktop App in
Linux
does not work. To update please
cypress install
from the command line.
We are still updating the docs to reflect all of these changes.
All users must
LOG IN AGAIN
and re-add their projects. Sorry, we've changed
the way we store local data.
Overview:
[CODE_BLOCK_4311]
marks a significant change for Cypress. Before this we only issued
commands using regular JavaScript and coordinated these with the back end
server which is running. As of
[CODE_BLOCK_4312]
we are now tapping into the underlying
browser automation libraries which enable us to exceed the limitations of the
JavaScript sandbox. This means we have total control over the browser for more
powerful automation tooling. The downside is that we have only implemented
these APIs for Chrome, and therefore running on multiple browsers will no
longer work. This is a temporary setback as we'll be adding driver support for
all of the other browsers over a period of time. You can read more about our
browser management
here
Breaking Changes:
Running tests in Cypress now requires either Chrome, Chromium, or Canary to be
installed on your OS environment. We intend to expand support for more
browsers in the future, but for now, only these 3 are supported.
Removed support for
[CODE_BLOCK_4313]
[CODE_BLOCK_4314]
[CODE_BLOCK_4315]
Changed return of
[CODE_BLOCK_4316]
to return an
array of cookies, each with properties include name, value, etc.
Changed return of
[CODE_BLOCK_4317]
to return
null (previously was returning Cookie that was cleared).
[CODE_BLOCK_4318]
has been
temporarily disabled and will be re-enabled later.
Browsers are spawned in a Cypress specific profile so that we can maintain a
clean state apart of your regular browsing usage. You will notice that your
extensions are no longer installed. This is on purpose. 3rd party extensions
can often get in the way of Cypress and cause failures. However, developer
specific extensions for Angular, Ember, and React do not cause any issues but
you'll want to reinstall them. You only have to install them once and they
will persist.
[CODE_BLOCK_4319]
callback function of
[CODE_BLOCK_4320]
now receives
[CODE_BLOCK_4321]
instead of just the
[CODE_BLOCK_4322]
as a string.
Features:
When a project is initially run from the desktop app, you can now choose to
run Cypress in a select number of browsers including: Chrome, Chromium, or
Canary (depending on what's installed on your OS).
Browser sessions are spawned independently of your existing profiles and we've
disabled things like password saving / prompting, JavaScript popup blocking,
and other features which get in the way of testing. Read more
here
We automatically spawn Chrome in a
custom theme
so you can visually
distinguish the difference between browser sessions spawned with Cypress vs
your normal sessions. We know this may feel a little jarring because you're
used to running Cypress alongside your other tabs. You will now see 2 chrome
icons in your dock and you'll need to switch between them. We know this is
problematic and confusing and we're looking into
changing the icon
of the
Chrome running Cypress so it's easier to tell the Chrome sessions apart.
Added new commands to handle getting, setting, and clearing cookies:
[CODE_BLOCK_4323]
[CODE_BLOCK_4324]
, and
[CODE_BLOCK_4325]
All the
[CODE_BLOCK_4326]
commands have been upgraded to take new options and can do
much more powerful things outside of the JavaScript sandbox.
Upgraded the Chromium version running headlessly and in CI from
[CODE_BLOCK_4327]
[CODE_BLOCK_4328]
There is a new
[CODE_BLOCK_4329]
command that can execute any
arbitrary system command. Additionally there is a new
[CODE_BLOCK_4330]
configuration
option which is set to
[CODE_BLOCK_4331]
by default. Fixes
#126
There is a new
[CODE_BLOCK_4332]
configuration option that controls how many test's snapshots and command data
is kept in memory while tests are running. Reducing this number will reduce
the memory used in the browser while tests are running. Whatever this number
is - is how many tests you can walk back in time when inspecting their
snapshots and return values. Addresses
#142
Bugfixes:
Cypress taskbar icon now displays correctly in OS X dark theme. Fixes
#132
Fixed issue where server error's stack traces were being truncated in the
Desktop app rendering them impossible to debug. Fixes
#133
woff Fonts are now properly served from a local file system when using
Cypress' web server. Fixes
#135
When an element's center is not visible the error message now includes the
stringified element in question, and not
[CODE_BLOCK_4333]
Typing into an
[CODE_BLOCK_4334]
now works. Fixes
#141
XHR's which have their
[CODE_BLOCK_4335]
handler replaced after
[CODE_BLOCK_4336]
is called is
now properly accounted for. Fixes
#143
Misc:
XHR requests for
[CODE_BLOCK_4337]
files are no longer shown in the Command Log by
default. Addresses
#131
Improved error when
[CODE_BLOCK_4338]
fails. The request
parameters are now included in the error. Addresses
#134
When running a project in the new Cypress browser environment, if a new tab is
opened, a message now displays discouraging the use of multiple tabs while
testing. Addresses
When navigating directly to
[CODE_BLOCK_4339]
outside of the new Cypress
browser environment, a message now displays discouraging running tests outside
of the new Cypress browser environment.
If, for whatever reason, Cypress cannot communicate with the automation
servers, your testing session will immediately end and you'll have the ability
to re-spawn the browser.
[CODE_BLOCK_4340]
now has a default timeout of
[CODE_BLOCK_4341]
which is
[CODE_BLOCK_4342]
[CODE_BLOCK_4343]
can now properly time out and accepts
[CODE_BLOCK_4344]
argument that can override its default timeout.
Improved initial Desktop Application startup performance by about
[CODE_BLOCK_4345]
We now correctly store local data in each operating system's correct
[CODE_BLOCK_4346]
area. This will be more resilient to upgrades in the
future.
Running Cypress in a linux VM on VirtualBox no longer displays "black
screens".
Our internal proxy no longer strips
[CODE_BLOCK_4347]
cookie flags.
Improved command errors and normalized many of them. Fixes
#137
JavaScript popup blocking is now disabled and will not interfere with running
tests. Fixes
#125
We now capture synchronous errors from XHR
[CODE_BLOCK_4348]
handlers.
0.15.4
Released 04/22/2016
Notes:
The docs have not yet been updated to reflect the changes to
[CODE_BLOCK_4349]
[CODE_BLOCK_4350]
Breaking Changes:
You can no longer improperly use
[CODE_BLOCK_4351]
[CODE_BLOCK_4352]
. Using
[CODE_BLOCK_4353]
on a non function property will result in an error that tells you how to write
it properly using
[CODE_BLOCK_4354]
Features:
chat
has now been directly
integrated into Cypress's nav. Clicking on the
[CODE_BLOCK_4355]
icon will immediately
display the current gitter chat log.
Added a new link to Options dropdown in Desktop app for "Chat" that goes to
chat
[CODE_BLOCK_4356]
[CODE_BLOCK_4357]
support
dot separated
nested properties.
Using
[CODE_BLOCK_4358]
on a function will now allow you to access
its properties instead of automatically calling a function. Fixes
#122
Error messages and command messages for
[CODE_BLOCK_4359]
[CODE_BLOCK_4360]
have been improved.
Adding an attribute called
[CODE_BLOCK_4361]
to an element will prevent
the internal Cypress proxy from rewriting any of its content or attributes.
Bugfixes:
During
[CODE_BLOCK_4362]
, windows created with
[CODE_BLOCK_4363]
will no longer
physically display. They are now correctly headless. Fixes
#123
The auto generated
[CODE_BLOCK_4364]
no longer errors on
[CODE_BLOCK_4365]
since that file would likely not locally exist.
Misc:
Better error handling of unauthorized users attempting to login to Cypress
with improved
Login documentation
0.15.3
Released 04/10/2016
Features:
Cypress will now
display the
resolved
configuration values when you open a project
This tells you the source of all config values.
The latest version of the
Cypress CLI
accepts passing arguments to
cypress open
. Example:
[CODE_BLOCK_4366]
. This
enables you to set and override local
[CODE_BLOCK_4367]
configuration and
additionally set environment variables.
Environment Variables
that match any
configuration keys (such as
[CODE_BLOCK_4368]
[CODE_BLOCK_4369]
) now
override their values. So, if you
[CODE_BLOCK_4370]
it will turn off this
configuration option. Also note that we'll automatically normalize environment
keys so:
[CODE_BLOCK_4371]
[CODE_BLOCK_4372]
will both be correctly handled. We'll also
coerce values into
[CODE_BLOCK_4373]
[CODE_BLOCK_4374]
correctly.
Cypress now correctly proxies WebSockets that are pointed at the local Cypress
server (typically
[CODE_BLOCK_4375]
). Because most users use
Socket.io
, when Socket.io could not correctly connect
over WebSockets it would fall back to XHR polling. You may notice many less
XHR requests in your command log (which is the intended behavior).
The tray icon in OSX will now change colors. It will turn blue when you're
running a Cypress project and red on any kind of failures such as syntax
errors in
[CODE_BLOCK_4376]
. It will turn back black when nothing is actively
running.
The title of your project is now the title of the browser tab (so you can
easily tell Cypress tabs from one another).
There is now a link to our
chat
in the
navigation of the web app.
Bugfixes:
[CODE_BLOCK_4377]
[CODE_BLOCK_4378]
option now works correctly. You now must pass a relative
or absolute path to your spec file. This is much less confusing, allows you to
easily autocomplete entries from bash, and will support
[CODE_BLOCK_4379]
later
when it's added. Assuming you want to run a spec file that is located in
[CODE_BLOCK_4380]
you would pass:
[CODE_BLOCK_4381]
. Previously you could
just pass
[CODE_BLOCK_4382]
which now no longer works (and was broken
anyway). Fixes
#120
Misc:
Open sourced another core repo:
Cypress Core Test Runner
which makes up the Cypress Desktop Application.
Improved the
error message
displayed to users on Windows attempting to download the Cypress Desktop app.
0.15.2
Released 04/03/2016
Features:
error message when Cypress detects that a test has ended early
(there are still commands left in the queue) now displays a list of these
commands with a much improved explanation.
There is now a new
configuration option
[CODE_BLOCK_4383]
that, when set to
[CODE_BLOCK_4384]
in the
[CODE_BLOCK_4385]
, will
prevent Cypress from attempting to watch for file changes and restart your
tests.
You can now set the default
[CODE_BLOCK_4386]
[CODE_BLOCK_4387]
for use during
[CODE_BLOCK_4388]
or in CI.
Bugfixes:
--reporter
CLI option is now
working again.
[CODE_BLOCK_4389]
reporter is now also working again.
Misc:
Updated favicon + logo mark
0.15.1
Released 04/01/2016
Features:
[CODE_BLOCK_4390]
[CODE_BLOCK_4391]
accept a timeout option. Also, these commands would previously time out after
the default
[CODE_BLOCK_4392]
[CODE_BLOCK_4393]
, but now they will timeout after
[CODE_BLOCK_4394]
[CODE_BLOCK_4395]
Bugfixes:
When an integration test file is unable to run and the
[CODE_BLOCK_4396]
not the default path, the UI error now properly prints the integration test
file's path by stripping off
[CODE_BLOCK_4397]
in the path. Fixes
#117
[CODE_BLOCK_4398]
will now throw error when it isn't passed a DOM
element.
Misc:
Renamed
configuration
option
[CODE_BLOCK_4399]
[CODE_BLOCK_4400]
. You don't need to change anything. If you
were specifically setting
[CODE_BLOCK_4401]
in your
[CODE_BLOCK_4402]
file it will
be transparently rewritten
[CODE_BLOCK_4403]
on the next server boot. This
option was renamed because now multiple commands
[CODE_BLOCK_4404]
[CODE_BLOCK_4405]
, and
[CODE_BLOCK_4406]
all depend on this timeout option.
The Cypress tray icon has been updated. It's much better now.
0.15.0
Released 03/28/2016
Overview:
As we get closer to a public release we've decided to focus on onboarding new
users and new projects. We've made several breaking changes to help with this
process.
Features:
There is now an
[CODE_BLOCK_4407]
file that is scaffolded on new projects.
This allows new users to instantly see Cypress successfully running on an
example project and will answer many questions on writing your first tests.
This
[CODE_BLOCK_4408]
file contains every single Cypress command and has
approximately 70 tests.
Added a welcome dialog for new projects that explains how Cypress scaffolds
out its folder structure. This dialog will only display if Cypress detects
that you haven't written any tests or changed the initial
[CODE_BLOCK_4409]
file. The welcome dialog will no longer display after you've changed or added
any tests.
Added the ability to click on file/folder links from within the Cypress webapp
that will spawn your OS file/folder finder and show you where the files are
located in your project.
There is now a default
[CODE_BLOCK_4410]
folder that contains your test files, a
[CODE_BLOCK_4411]
folder with an example fixture, and a
[CODE_BLOCK_4412]
folder with example
support files. Inside
[CODE_BLOCK_4413]
there is an
[CODE_BLOCK_4414]
folder that will
contain your integration tests.
You can now turn off
[CODE_BLOCK_4415]
[CODE_BLOCK_4416]
by passing
[CODE_BLOCK_4417]
[CODE_BLOCK_4418]
. This will automatically remove the folders the next time
you open your project in Cypress. Fixes
#102
Restyled the tests list.
Breaking Changes:
Cypress no longer looks at your
[CODE_BLOCK_4419]
directory for test files. Now, by
default, it looks in the
[CODE_BLOCK_4420]
directory.
We've removed the configuration option
[CODE_BLOCK_4421]
and renamed it to
[CODE_BLOCK_4422]
inside
of the
[CODE_BLOCK_4423]
We've renamed the
[CODE_BLOCK_4424]
npm package to be
[CODE_BLOCK_4425]
. You'll see a
giant deprecation warning until your scripts have been updated to reference
[CODE_BLOCK_4426]
.. You can also uninstall the
[CODE_BLOCK_4427]
npm package.
Added new
[CODE_BLOCK_4428]
configuration option that can mount a directory other than your project root
when using Cypress as a web server.
Misc:
Using
[CODE_BLOCK_4429]
will provide a detailed error message
with a link for working around hover constraints. Addresses
Internal routing errors in Cypress are now gracefully handled with
[CODE_BLOCK_4430]
[CODE_BLOCK_4431]
set on response headers.
Updated all of the repo names to be modular.
What you need to do
We did not write an automatic migration from
[CODE_BLOCK_4432]
[CODE_BLOCK_4433]
You need to manually move your existing test files from
[CODE_BLOCK_4434]
into
[CODE_BLOCK_4435]
Come into the chat
if you have any
problems or need help.
More Info:
Why did you change the default test folder to be
[CODE_BLOCK_4436]
We are adding support for unit testing in the near future and decided that
there needs to be a separation between
[CODE_BLOCK_4437]
[CODE_BLOCK_4438]
tests. The
actual runner will handle these two sets of specs very differently. It's
important to make the change now so when we do add support for unit tests, you
only have to create a
[CODE_BLOCK_4439]
folder inside of your
[CODE_BLOCK_4440]
folder.
0.14.3
Released 03/20/2016
Features:
Added
[CODE_BLOCK_4441]
command for easy
chain-ability. Fixes
#103
Cypress now outputs its version when passed the
[CODE_BLOCK_4442]
argument
If you are not logged in on OSX, Cypress now issues a native system
notification indicating to you that Cypress is running in your tray (many
users often complained they could not tell Cypress was actually running)
Bugfixes:
Handle clearing cookies better when they are created on a path other than
[CODE_BLOCK_4443]
Fixes
#104
Issuing Cypress Commands inside of a Promise now works. Fixes
#111
'Add Project' dialog is no longer lost on blur. Fixes
#115
Desktop windows that are transparent no longer lose their box shadow.
Misc:
[CODE_BLOCK_4444]
callback functions:
[CODE_BLOCK_4445]
[CODE_BLOCK_4446]
are now invoked
with the current runnables context instead of with
[CODE_BLOCK_4447]
. This makes accessing
properties in your tests much easier.
0.14.2
Released 03/14/2016
Bugfixes:
Chaining more cy commands after using
[CODE_BLOCK_4448]
works. Fixes
#114
Cypress now handles events property when a DOM element is removed during a
[CODE_BLOCK_4449]
event. As per the spec, if
[CODE_BLOCK_4450]
causes element removal then
[CODE_BLOCK_4451]
[CODE_BLOCK_4452]
[CODE_BLOCK_4453]
events will not be fired. Additionally if
removal happens during
[CODE_BLOCK_4454]
then
[CODE_BLOCK_4455]
event will not be fired. Also
updated the
[CODE_BLOCK_4456]
groups to only display and indicate the events which
actually fired. Fixes
#109
Misc:
Removed
[CODE_BLOCK_4457]
icons next to suites and tests until this behavior has
been reimplemented due to ID removal.
Removed resetting the runnable timeout when a
[CODE_BLOCK_4458]
event resolves. This
prevents an edge case where the next test may show as timed out during
[CODE_BLOCK_4459]
0.14.1
Released 03/13/2016
Features:
Project ID's and
[CODE_BLOCK_4460]
are now only generated once you start your
Cypress server. Previously they were created initially when you choose the
project folder. This now means you won't have to cleanup excess files if you
accidentally select the wrong folder. Additionally you can now use Cypress
100% offline. Previously the GUI would block until the project had an ID but
this restriction has been lifted.
Bugfixes:
The proxy server can now correctly proxy content on a
[CODE_BLOCK_4461]
host only. We had
to patch node core to get this in, as by default node prefers
[CODE_BLOCK_4462]
. We now
concurrently test all hosts via
[CODE_BLOCK_4463]
to find the first one that
responds. This updated behavior now matches how other clients, like
[CODE_BLOCK_4464]
and browsers resolve hosts. Fixes
#112
Simplified how Cypress stores projects and fixed some edge cases where Cypress
would send an outdated Project ID.
Prevent server from opening and immediately closing + re-opening when project
is missing a Project ID and one is generated.
Using Cypress as a file server and serving a file that's part of a folder that
has a name containing a space now works. Fixes
#113
The existing
[CODE_BLOCK_4465]
cache and settings are now correctly copied again after an
app update.
Misc:
Projects without an ID now error correctly when running in CI.
When Cypress cannot proxy http content due to a software error it will attach
[CODE_BLOCK_4466]
[CODE_BLOCK_4467]
to the HTTP request for easy
inspection and debugging.
Cypress will now output its internal logger directly to the console when
[CODE_BLOCK_4468]
env var is set.
Replaced Ruby / Compass with
[CODE_BLOCK_4469]
0.14.0
Released 03/08/2016
Summary:
This update represents mostly a lot of internal structure changes. We swapped
out the underlying Desktop architecture and refactored all of the back end
code to prepare for an open source release.
If you choose to install Cypress from the
CLI Tool
you must update to the latest version
[CODE_BLOCK_4470]
. Just run
[CODE_BLOCK_4471]
and then you can run
cypress install
. You don't need to do anything
if you update from within the Test Runner itself.
Features:
The Desktop App has been re-skinned with misc GUI enhancements such as help
text, popovers, clearer errors, better loading indicators, etc.
The Desktop App's file size is now much smaller and unzips much faster. In the
next release there will be a special
[CODE_BLOCK_4472]
build which removes the need to run
Xvfb.
Test IDs have been removed. You will no longer see Cypress insert IDs into
your test files. This was a feature we implemented on day 1 - the idea being
we could track test performance and do regression analysis. Unfortunately, it
will be a long time before we actually implement the data science to make this
happen. For the time being, IDs presented unnecessary technical complexity and
challenges with no real upside. We recommend you remove all of your existing
IDs. We've added a new command to the CLI tool that can do this in one shot.
[CODE_BLOCK_4473]
You may see IDs be reintroduced at a later time when we
provide analytics.
[CODE_BLOCK_4474]
now supports a
[CODE_BLOCK_4475]
option. Fixes
#110
All error messages from using the CLI have been rewritten and improved.
Cypress will now automatically prompt you to add a project when using
cypress run
on a project that has
not yet been added.
Domain cookies are now proxied better. There's still more work to do before
they are 100% fixed but now most typical domain cookie scenarios should 'just
work'.
We've put together a new example repo called
The Kitchen Sink
. It
demonstrates usage of every single Cypress command.
Bugfixes:
Using
cypress run
in OSX now works
again.
Added fs polling support to fix issues where Cypress would not detect file
changes.
Tests should reload inside of Cypress faster when they are changed.
Better error messages when a command times out waiting for a promise to
resolve. Fixes
#108
[CODE_BLOCK_4476]
now displays by default in
portrait. Landscape orientation is now properly landscape. Fixes
#100
[CODE_BLOCK_4477]
will now properly click within an element's
bounding box when a
[CODE_BLOCK_4478]
option is passed and the calculated coordinates
are a fraction. This previously forced the click to happen outside of the
element. Fixes
[CODE_BLOCK_4479]
[CODE_BLOCK_4480]
event properties are now correctly calculated for
elements when the page is scrolled. Fixes
[CODE_BLOCK_4481]
[CODE_BLOCK_4482]
now correctly filter down the subject when a value is passed as an option.
Fixes
The Test Runner will now display your email address when you have not set a
name in GitHub.
Misc:
Improved element display in Command Log when multiple elements are part of an
assertion. Fixes
[CODE_BLOCK_4483]
now returns the window object of the
newly reloaded page. Fixes
#105
Known Issues:
Clicking the 'reload' icon next to a test that does not have an ID will not
work anymore. We're reworking this feature to work without the presence of
IDs.
0.13.9
Released 01/28/2016
Bugfixes:
Prevent regression with not automatically scaling the viewport to fit into the
window size
Misc:
Update links to match new
documentation
[CODE_BLOCK_4484]
has been zipped up - it no longer logs
confusing debugging information and now logs information about the previously
run command.
[CODE_BLOCK_4485]
[CODE_BLOCK_4486]
[CODE_BLOCK_4487]
[CODE_BLOCK_4488]
[CODE_BLOCK_4489]
utilities have been
moved off of
[CODE_BLOCK_4490]
and are now attached to
[CODE_BLOCK_4491]
. This is much more
consistent with how the
[CODE_BLOCK_4492]
[CODE_BLOCK_4493]
APIs work. You can continue to use
these objects off of
[CODE_BLOCK_4494]
but this has been deprecated and you will see a
warning message.
0.13.8
Released 01/24/2016
Features:
Added
[CODE_BLOCK_4495]
command which does a full page
refresh. This is the same as the user hitting the 'Reload' button.
Additionally it matches the same argument signature as
[CODE_BLOCK_4496]
Bugfixes:
Fixed situation where
[CODE_BLOCK_4497]
would not
restore correctly between tests. Previously this would cause subsequent tests
to be issued at the modified
[CODE_BLOCK_4498]
. Now viewport is automatically
restored to the settings in your
[CODE_BLOCK_4499]
file.
Misc:
Using
[CODE_BLOCK_4500]
on a function or
[CODE_BLOCK_4501]
on a property now logs a deprecation
warning. In the next major release this will become a full error. It is
valuable to make a distinction whether you're operating on a property vs a
function, and this change improves overall readability with less confusion.
Cypress deprecations and warnings are now prefixed with:
[CODE_BLOCK_4502]
indicate this message is coming from Cypress
0.13.7
Released 01/17/2016
Bugfixes:
Prevent error during element stringification on
[CODE_BLOCK_4503]
. Fixes
Clarified on errors related to not being able to run in CI. Previously there
was a "catch all" error indicating your Cypress API Key was invalid. This was
oftentimes incorrect. More specific errors have been added.
[CODE_BLOCK_4504]
has been upgraded to handle current selection
ranges. Previously if an
[CODE_BLOCK_4505]
had a selection range as Cypress began to
type, this would be ignored. Cypress now takes this into account and will type
over any selected text (as native typing would do).
Misc:
All Cypress related services have been updated to use HTTPS. We are forcing
HTTPS redirects for everything except for
[CODE_BLOCK_4506]
, which would be a
breaking change. By the next minor release we will force that as well. Once we
make this change we will remove all versions below
[CODE_BLOCK_4507]
. So make sure you
are not
locking the Cypress version when running in CI. We periodically
remove old Cypress versions which have security flaws and this is an example
of one.
0.13.6
Released 01/09/2016
Features:
All commands now retry if the associated element is disabled until the element
is no longer disabled. If the command times out a specific error message is
now thrown.
[CODE_BLOCK_4508]
[CODE_BLOCK_4509]
now take an optional
[CODE_BLOCK_4510]
callback which
fires anytime an XHR is aborted.
Bugfixes:
Fixed edge case where XHR's which were already aborted were aborted a 2nd time
when tests end. Cypress now only aborts currently running XHR's which have not
already been aborted.
When passing an array of aliases to
[CODE_BLOCK_4511]
there
was an edge case where an incorrect error message was being thrown. The
incorrect values were a combination of the wrong alias, the wrong timeout
value, or the wrong request or response. Now Cypress correctly provides all 3
of these values.
0.13.5
Released 01/03/2016
Features:
Added new command:
[CODE_BLOCK_4512]
which accepts
[CODE_BLOCK_4513]
[CODE_BLOCK_4514]
, or an arbitrary Number.
[CODE_BLOCK_4515]
enables you to navigate back or forward in your
history. Cypress intelligently handles situations where moving forward or back
causing a full page refresh, and will wait for the new page to load before
resolving and moving onto new commands. It additionally handles situations
where a page load was not caused (such as hash routing) and will resolve
immediately.
Misc:
Using
[CODE_BLOCK_4516]
will now output a warning explaining this is now the
default option and can be removed safely.
0.13.4
Released 12/31/2015
Features:
Added
[CODE_BLOCK_4517]
[CODE_BLOCK_4518]
configuration options
Cypress now automatically detects and waits for an element which is animating
to stop animating. The threshold that Cypress considers
animating
is set to
a distance of
[CODE_BLOCK_4519]
[CODE_BLOCK_4520]
. In other words, if your element is moving too
fast for a user to interact with, then Cypress considers the element animating
and will wait until it finishes before attempting to interact with it. When we
say 'interact' we mean apply command actions like
[CODE_BLOCK_4521]
[CODE_BLOCK_4522]
[CODE_BLOCK_4523]
[CODE_BLOCK_4524]
, etc.
Waiting for animations prevents a series of edge cases and weird bugs where
Cypress was interacting with elements
quickly which might cause
undesired side effects in your application which are hard to track down. The
downside to this implementation is that for every action Cypress must wait at
least 2 run loops before applying actions. This slows down every action
command by about
[CODE_BLOCK_4525]
. If your app does not use animations you may wish to
turn off this behavior in your
[CODE_BLOCK_4526]
file.
Bugfixes:
Prevent
[CODE_BLOCK_4527]
error when attempting to
[CODE_BLOCK_4528]
an element which is fixed position when it is covered by another element.
Cypress now correctly provides why it cannot click the element in question.
Fixes
Prevent infinite loop in edge cases when checking whether an element was
hidden.
Misc:
The default behavior of
[CODE_BLOCK_4529]
has changed from
[CODE_BLOCK_4530]
become
[CODE_BLOCK_4531]
. In other words, Cypress will no longer forcibly send
XHR's to 404 status when these XHR's do not match any existing
[CODE_BLOCK_4532]
This change better aligns with predictable usage for most Cypress users.
0.13.3
Released 12/25/2015
Notes:
Merry Christmas everyone ;-)
Features:
Overhauled the entire subsystem dealing with an element's visibility state.
Previously we were using jQuery's
[CODE_BLOCK_4533]
selector which was
ineffective at truly determining when an element is "visible". Our changes now
differ significantly from jQuery, but they match what a real user would
consider visible, and the rules are fairly easy to explain. In other words
these rules should just "make sense".
An element is considered visible if it can be "interactive" with a user. In
other words, if the user is able to click, type, drag, or otherwise physically
interact with the element it is considered visible.
Because of the additional complexities of how Cypress considers an element
[CODE_BLOCK_4534]
, we now have added the
exact
reason why an element is not
visible when throwing an error. This means you'll see errors detailing whether
an element or its parents have
[CODE_BLOCK_4535]
[CODE_BLOCK_4536]
, or
whether an element is considered hidden because its effective
[CODE_BLOCK_4537]
[CODE_BLOCK_4538]
is zero. Whatever the reason, Cypress will indicate why your element
is considered hidden.
Exposed
[CODE_BLOCK_4539]
which holds the logic for determining an
element's visibility. Modify this to change the rules.
Upgraded
[CODE_BLOCK_4540]
to automatically retry when the
[CODE_BLOCK_4541]
is disabled, its matching
[CODE_BLOCK_4542]
is disabled, or when Cypress
cannot find a matching
[CODE_BLOCK_4543]
. This more correctly aligns with the
behavior of other actions like
[CODE_BLOCK_4544]
, which
automatically retry until the element is ready to receive the action.
Bugfixes:
Throw on
[CODE_BLOCK_4545]
when it cannot find a matching
[CODE_BLOCK_4546]
. Also throw when
[CODE_BLOCK_4547]
or a matching
[CODE_BLOCK_4548]
is disabled.
Fixes
"Hidden" elements which actually displace height or width are now highlighted
when restoring the DOM when a command is hovered.
Margin on zero client width / client height is now displayed correctly on
command hover and more accurately mimics the way Chrome Dev Tools highlights
elements.
Using
[CODE_BLOCK_4549]
[CODE_BLOCK_4550]
, or
[CODE_BLOCK_4551]
in CI or in headless
mode now works again.
Misc:
The updated hidden rules apply to all assertions like
[CODE_BLOCK_4552]
and how Cypress indicates an element is hidden displays in the Command Log.
Updated many error messages to be more explanatory and precise.
Elements which are stringified during errors now indicate their text content
(truncated to 10 characters)
[CODE_BLOCK_4553]
or whether they contain
children elements by indicating an ellipsis
[CODE_BLOCK_4554]
The Routes instrument panel now displays the column:
[CODE_BLOCK_4555]
instead of
[CODE_BLOCK_4556]
, which indicates whether a route is stubbing matching XHR's.
0.13.2
Released 12/20/2015
Notes:
Docs have been updated for
[CODE_BLOCK_4557]
[CODE_BLOCK_4558]
[CODE_BLOCK_4559]
to reflect these changes.
Features:
Added
[CODE_BLOCK_4560]
configuration
value.
[CODE_BLOCK_4561]
has been upgraded to now use two separate
[CODE_BLOCK_4562]
values. In previous versions
[CODE_BLOCK_4563]
used
[CODE_BLOCK_4564]
and would automatically time out if the XHR did not
achieve a response in that time frame. Now
[CODE_BLOCK_4565]
will go through two independent timeout phases. At first
[CODE_BLOCK_4566]
will wait for an XHR to be requested which
matches its route. It will wait up to the value configured with
[CODE_BLOCK_4567]
(default 5000ms). After it sees a matching request it will
then go into
[CODE_BLOCK_4568]
waiting mode. It will wait up to the value configured
with
[CODE_BLOCK_4569]
(default 20000ms). When
[CODE_BLOCK_4570]
fails you now receive a much better error
message indicating exactly which phase failed. Whether a request was never
sent out, or whether it timed out waiting for a response. This gives you the
best of both worlds and prevents situations where Cypress was timing out on
slow servers. By creating new configuration values:
[CODE_BLOCK_4571]
[CODE_BLOCK_4572]
you can now directly control this behavior without affecting
other regular commands.
Bugfixes:
Prevent removing trailing new lines on fixtures after formatting.
Added cache buster to test files which forces them to be reloaded in the
[CODE_BLOCK_4573]
panel after making modifications. In previous versions when test
files were live reloaded Chrome would not display their new contents due to a
bug in Dev Tools. We've now worked around this issue.
Misc:
Removed
[CODE_BLOCK_4574]
option from
[CODE_BLOCK_4575]
[CODE_BLOCK_4576]
. Cypress
will now log a deprecation warning when you use the this option. Removing this
option helps simplify the API because now Cypress can figure out whether you
really want to stub the route based on whether you've provided a response or
not. If you have not provided a response, the default behavior will be to not
stub. If you do provide a response, Cypress will stub the route.
Repurposed
[CODE_BLOCK_4577]
to now mean the time we wait for an XHR to be
requested. Changed
[CODE_BLOCK_4578]
to now use
[CODE_BLOCK_4579]
configuration value.
Updated many error messages to be more consistent.
Added special error messages when elements cannot have actions applied to them
with a suggestion to use
[CODE_BLOCK_4580]
0.13.1
Released 12/11/2015
Notes:
We are aware of issues running in CI with Linux builds, and are working
through those issues.
Bugfixes:
Prevent headless / CI from throwing errors on
[CODE_BLOCK_4581]
[CODE_BLOCK_4582]
Prevent edge case where
[CODE_BLOCK_4583]
in the Command Log was aliasing the wrong
command
Prevent XHR's from throwing errors on
[CODE_BLOCK_4584]
content. Properly set
[CODE_BLOCK_4585]
[CODE_BLOCK_4586]
[CODE_BLOCK_4587]
, and
[CODE_BLOCK_4588]
Headless running is now fixed in OSX. This was due to a bug with app signing +
unzipping via the CLI.
0.13.0
Released 12/9/2015
Summary:
Though it may not look like much, this upgrade was a long time in the making.
There were limitations in the way we were currently handling headless / CI
builds which restricted our ability to make updates or fix bugs. Additionally
CI runs would randomly crash for no good reason. We decided to split out the
headless / CI process into its own independent Chromium application which is
now independently controlled, and is much more reliable. This upgrade enables
us to handle CI features coming down the pipe and was necessary for moving
forward.
Features:
Upgraded
[CODE_BLOCK_4589]
for headless and CI runs from
[CODE_BLOCK_4590]
[CODE_BLOCK_4591]
You will now see better stack traces and errors during
[CODE_BLOCK_4592]
/ in CI.
No more
[CODE_BLOCK_4593]
errors.
Ported all links to use the new Cypress CDN.
Documentation to CLI
Bugfixes:
New chromium upgrade prevents synchronous XHR freezes.
New chromium upgrade fixes situation where extremely long CI runs would
sometimes randomly crash.
Fixed problem with rewriting content on elements which contained
[CODE_BLOCK_4594]
elements.
Breaking Changes:
Temporarily ignoring the
[CODE_BLOCK_4595]
option for headless / CI runs. Currently
it is locked to the
[CODE_BLOCK_4596]
reporter, which is the default. This will be fixed
in the next few patch releases.
Accessing
[CODE_BLOCK_4597]
[CODE_BLOCK_4598]
[CODE_BLOCK_4599]
will throw an error during
[CODE_BLOCK_4600]
/ CI. This
is a regression that will be fixed - hopefully very soon.
This is fixed in
[CODE_BLOCK_4601]
While this new Chromium application passes our internal tests, it may crop up
other regressions we aren't aware of. If you're experiencing different
behavior in CI vs running locally in Chrome, this may be an indication of
these.
0.12.8
Released 12/2/2015
Features:
There is now a new
Error Messages Page
which will provide additional explanation when you are getting errors from
Cypress. These errors will be directly linked to (like how Angular provides
errors).
Instead of hard coding external documentation, we now link everything through
a redirection portal. This will prevent any links / documentation from ever
breaking due to reorganization or renaming.
Cypress now throws a specific error message (with a link to further
explanation) if you attempt to run commands outside of a test. Usually this
happens accidentally when you write
[CODE_BLOCK_4602]
inside of a
[CODE_BLOCK_4603]
[CODE_BLOCK_4604]
block instead of the
[CODE_BLOCK_4605]
. I've wasted too much time and almost
bombed entire presentations / demos so I've finally stopped this from ever
happening again. If you ever see this error message, trust me, you will
forever thank me.
The error message:
[CODE_BLOCK_4606]
has been rewritten to provide much clearer information on why this is
happening, including a string representation of your DOM element. Additionally
it will have its own error page dedicated to explaining how this happens and
what you can do to prevent it.
Misc:
Rewrote error message which is displayed when Cypress cannot parse your test /
spec file. Now a list of suggestions are given and an external link is
provided which further explains how this may happen.
Clarified the "Default Message" page when you have not
[CODE_BLOCK_4607]
your application yet.
Ignored
[CODE_BLOCK_4608]
[CODE_BLOCK_4609]
[CODE_BLOCK_4610]
XHR's from displaying in the Command Log.
0.12.7
Released 11/30/2015
Bugfixes:
Prevent passing
[CODE_BLOCK_4611]
incorrectly showing up in Command Log.
Fixes
Properly allow resource like XHR's which have query params such as jquery's
[CODE_BLOCK_4612]
option.
Correctly take into account
[CODE_BLOCK_4613]
tag on XHR's. Fixes
0.12.6
Released 11/29/2015
Features:
There are now
Getting Started
docs including
configuration
[CODE_BLOCK_4614]
Cypress now silently restarts the server whenever it detects a change to
[CODE_BLOCK_4615]
- meaning you no longer have to manually reboot the server for
changes to be picked up.
There is a new
[CODE_BLOCK_4616]
interface - akin to
[CODE_BLOCK_4617]
which provides access to configuration
values.
Bugfixes:
Setup/Teardown code was not properly running on nested Mocha
[CODE_BLOCK_4618]
hooks
which caused the error:
[CODE_BLOCK_4619]
. Fixes
Prevent accidental mutation of
[CODE_BLOCK_4620]
options when
[CODE_BLOCK_4621]
provided options. Fixes
Using
[CODE_BLOCK_4622]
would incorrectly search the
[CODE_BLOCK_4623]
for title elements, and is now restricted to only searching in the
[CODE_BLOCK_4624]
Cross-Origin requests are now proxied by Cypress. In other words their URL's
are transparently rewritten which bypasses CORS problems. This is a quick fix
which should satisfy most of the problems users were having with CORS
requests. However there is a much bigger change coming in
[CODE_BLOCK_4625]
where the
entire proxy layer will be rewritten to accommodate CORS,
[CODE_BLOCK_4626]
[CODE_BLOCK_4627]
flawlessly. As it stands Cypress is prone to errors in
complex setups.
Misc:
Exposed
[CODE_BLOCK_4628]
[CODE_BLOCK_4629]
configuration
Increased
[CODE_BLOCK_4630]
from
[CODE_BLOCK_4631]
[CODE_BLOCK_4632]
[CODE_BLOCK_4633]
will now throw if you are attempting to
click more than 1 element. Pass
[CODE_BLOCK_4634]
to enable this behavior
again. Each element will be clicked serially and inserted into the Command
Log.
0.12.5
Released 11/22/2015
Features:
Errors reading / writing
[CODE_BLOCK_4635]
on project add are now displayed
inline.
Bugfixes:
Prevent app crashing when
[CODE_BLOCK_4636]
could not be read or written to when
adding a project.
Misc:
App crashes now send a full stack trace (instead of 10 line truncation).
Better error handling + error messages when trying to read / write from
[CODE_BLOCK_4637]
0.12.4
Released 11/19/2015
Features:
There is a new
[CODE_BLOCK_4638]
interface which
enables you to
[CODE_BLOCK_4639]
[CODE_BLOCK_4640]
, and even
[CODE_BLOCK_4641]
cookies throughout your test.
Useful to preserve cookie-based sessions between your tests.
Documentation is written here
Bugfixes:
Removed problematic
[CODE_BLOCK_4642]
headers
Fixed situation where Cypress was not injected correctly when
[CODE_BLOCK_4643]
tag had
attributes
Prevent fixtures from being accidentally overwritten and having their content
blanked out. There was a very subtle chance due to node's async file writing
that as a file was being written with a formatted fixture, that another call
to the same fixture would read in at that exact moment. If this happened the
2nd read would resolve with zero bytes, which would then end up rewriting the
file back with zero bytes.
Misc:
[CODE_BLOCK_4644]
are automatically accepted now and a message logs to the console.
Added retina favicon. Fixes
Removed nested
[CODE_BLOCK_4645]
object in the
[CODE_BLOCK_4646]
. Existing
[CODE_BLOCK_4647]
files are transparently rewritten on the next server boot, so you can check in
the modified
[CODE_BLOCK_4648]
and all will be well. Fixes
Improved performance of formatting fixtures.
0.12.3
Released 11/04/2015
Bugfixes:
Prevent
[CODE_BLOCK_4649]
from actually pausing during
[CODE_BLOCK_4650]
Fix for
[CODE_BLOCK_4651]
SSL issues when host
certificates were self signed.
0.12.2
Released 11/01/2015
Features:
There is now a
[CODE_BLOCK_4652]
[CODE_BLOCK_4653]
method which enables you to invoke
commands by their string name. This is most useful when using
namespaced
custom commands. So
[CODE_BLOCK_4654]
be accessed by
[CODE_BLOCK_4655]
. (Docs have not
been written yet).
[CODE_BLOCK_4656]
support has been added and can be accessed in your
tests with
[CODE_BLOCK_4657]
. The docs have been written
Environment Variable
here
Misc:
The URL property on all XHR's is now completely decoded, even on URLs which
were originally encoded. The reason is for easier assertions and debugging.
This URL property is specific to Cypress and does not actually affect the
underlying XHR.
0.12.1
Released 10/28/2015
Bugfixes:
[CODE_BLOCK_4658]
will no longer throw that a response is needed when using
[CODE_BLOCK_4659]
Applying server defaults to
[CODE_BLOCK_4660]
now works as
documented.
[CODE_BLOCK_4661]
[CODE_BLOCK_4662]
can now be correctly set as permanent server
defaults.
XHR URL is now decoded to make assertions easier. Fixes
0.12.0
Released 10/23/2015
Summary:
XHR handling has been rewritten to be much more flexible, extensible, and
future-proof.
Breaking Changes:
The object you receive after waiting on an XHR alias is now different.
Previously this was a
[CODE_BLOCK_4663]
object which came from Sinon.js.
Now it is a special
[CODE_BLOCK_4664]
object which comes from Cypress. You may
need to rewrite some of your assertions but we've tried to keep the signatures
as close as possible.
The XHR's URL property will now always return you a
[CODE_BLOCK_4665]
including the origin, port, host, etc.
Previously the URL property represented whatever the XHR was opened with.
We've worked around this difference by when checking whether an XHR should be
stubbed, the origin is tested both as present and omitted.
Deprecations:
Accessing
[CODE_BLOCK_4666]
[CODE_BLOCK_4667]
on XHR objects is deprecated, and
will be removed in the next version. Accessing those properties will throw a
warning which explains how to rewrite these.
[CODE_BLOCK_4668]
temporarily
deprecated because the semantics of how this
works is completely different and will require more work (mentioned later on)
before this can be re-enabled again.
Features:
All XHR's (regardless of whether they are stubbed or not) are now logged in
the Command Log. Stubbed XHR's display as "XHR Stub" vs vanilla "XHR".
Stubbed XHR's will now show up in the
[CODE_BLOCK_4669]
in Dev Tools. In other
words they will
really
go out and you'll be able to inspect them just like
regular XHRs.
Regular XHR's can now be aliased and waited on without actually being stubbed
by passing
[CODE_BLOCK_4670]
to the
[CODE_BLOCK_4671]
XHR's will continue to work correctly even
after
a test ends. In previous
versions, due to replacing the entire XHR object, your application would not
work correctly after a test ended. This prevented you from "navigating around"
and working with your app after the tests end.
Servers can now be disabled in the middle of a test. Previously once a server
was started all XHR's would be stubbed.
You can now disable the force sending of
[CODE_BLOCK_4672]
to all XHR's which are not
stubbed. This allows you to mix and match, enabling some requests to be
stubbed and others to hit your server and respond normally.
The default XHR configuration can now be overwritten in a single area.
Many new configuration options are available for controlling how XHR's are
stubbed.
XHR's now include an
[CODE_BLOCK_4673]
stack regardless of whether they're stubbed.
[CODE_BLOCK_4674]
stack includes the stack which caused the XHR to be created
and sent.
[CODE_BLOCK_4675]
information related to an XHR has been updated to make it
easier to understand why a route was or was not stubbed, and its associated
request and response headers.
Response headers on XHR stubs will now automatically set their
[CODE_BLOCK_4676]
based on the stub response. Previously this would always set to the
[CODE_BLOCK_4677]
[CODE_BLOCK_4678]
. Now if you force a response to be text
or html, the
[CODE_BLOCK_4679]
response header will be set appropriately.
You can now force other additional response headers to be sent on stubbed
XHRs.
XHR's now snapshot twice - when the request is made and when the response is
returned.
Removed sending
[CODE_BLOCK_4680]
on every
[CODE_BLOCK_4681]
The XHR object which is returned to you to via
[CODE_BLOCK_4682]
is now more consistent with other return
values such as
[CODE_BLOCK_4683]
. It should be much
easier to work with
[CODE_BLOCK_4684]
[CODE_BLOCK_4685]
[CODE_BLOCK_4686]
[CODE_BLOCK_4687]
Bugfixes:
Routes no longer display as duplicated in between test runs when
[CODE_BLOCK_4688]
is started prior to a
[CODE_BLOCK_4689]
and you cause a full
page refresh, which caused all routes to be re-bound.
Any issues related to
[CODE_BLOCK_4690]
[CODE_BLOCK_4691]
being duplicated are now
fixed. Fixes
Fully Qualified XHR's which should be proxied are now correctly transparently
rewritten to prevent CORS problems.
[CODE_BLOCK_4692]
[CODE_BLOCK_4693]
[CODE_BLOCK_4694]
callbacks are now called with
[CODE_BLOCK_4695]
as the context.
Filtering assets which should never be stubbed has been improved. Now
[CODE_BLOCK_4696]
templates pass-through correctly.
CORS Network Errors are now correctly caught.
Misc:
[CODE_BLOCK_4697]
based commands now display in the Command Log.
The built in XHR response delay has been removed since now all requests really
go over the HTTP stack, which inherently has its own delay. You can still
optionally force responses to be delayed by a set amount.
Almost there:
Support for the native
[CODE_BLOCK_4698]
object.
Configuration to automatically force Cypress to wait for outstanding XHR's
(like it does for other Page Events). This would mean when testing more
traditional apps without XHR stubbing, commands would automatically wait until
all outstanding XHR's complete. The internal retry loop needs to be rewritten
to make this possible, but the XHR architecture is now there.
0.11.13
Released 10/08/2015
Bugfixes:
Prevent rejected promise from causing error about invalid API key during a CI
run.
Misc:
Better error handling of rejected promises.
0.11.12
Released 10/07/2015
Features:
Snapshots can now be named and a command can have multiple snapshots.
Multiple snapshots are now cycled automatically on hover, and the name of the
snapshot is displayed.
Most of the action commands now take multiple snapshots (giving you a precise
look at an action prior to it happening, and then afterwards).
Bugfixes:
Fixed situation where an
[CODE_BLOCK_4699]
was not being properly handled.
Cypress would incorrectly continue to retry commands instead of canceling
them, which lead to incorrect errors downstream in other tests.
Fixed situation where an error being thrown from an XHR was being improperly
handled (in a slightly different way than the problem above).
Stopped sending CI data when
cypress run
was issued.
Misc:
CSS Improvements
0.11.11
Released 10/04/2015
Bugfixes:
Snapshots of
[CODE_BLOCK_4700]
[CODE_BLOCK_4701]
are no longer incorrect due to taking
snapshots too early. Fixes
Passing
[CODE_BLOCK_4702]
[CODE_BLOCK_4703]
now logs correctly
in the Command Log.
Misc:
Added delays on some tooltips.
The URL will now highlight in a yellow background during a revert DOM
snapshot.
Moved snapshot message to be affixed to the bottom of the remote app in
preparation for cycling through multiple snapshots.
Cleaned up the URL by removing some unused content.
0.11.10
Released 10/04/2015
Features:
[CODE_BLOCK_4704]
now accepts
[CODE_BLOCK_4705]
which removes
error checking such as validating the element is currently in focus.
Bugfixes:
[CODE_BLOCK_4706]
is now noop during
cypress run
[CODE_BLOCK_4707]
Misc:
Removed
[CODE_BLOCK_4708]
command.
Added Cypress logo to nav.
CSS changes.
0.11.9
Released 10/03/2015
Features:
Added
[CODE_BLOCK_4709]
as acceptable fixture extension. Content is sent back as
[CODE_BLOCK_4710]
Added docs to nav, consolidated
[CODE_BLOCK_4711]
into
[CODE_BLOCK_4712]
Added favicon.
Added tooltips everywhere.
Created new debugging command:
[CODE_BLOCK_4713]
which will
pause executing commands and allow you to resume or step into the next command
one at a time.
You can now stop and restart tests from the UI.
Added
[CODE_BLOCK_4714]
utilities for
[CODE_BLOCK_4715]
[CODE_BLOCK_4716]
[CODE_BLOCK_4717]
conversion. Useful
for manually handling uploads.
Bugfixes:
"Cannot revert DOM while tests are running" now removes itself correctly.
Aliased DOM objects are now correctly stored on the test's
[CODE_BLOCK_4718]
as instances
your
jQuery (if one exists).
Misc:
Updated UI styles / tests list / run all.
Fixed alt tray icon so it shows up correctly on click.
0.11.8
Released 09/25/2015
Features:
Added
[CODE_BLOCK_4719]
command which can issue XHR
requests. The request is generated outside of the browser, and bypasses all
CORS restrictions. Great for talking to an API for seeding, querying,
building, etc.
Bugfixes:
Prevented edge case with
[CODE_BLOCK_4720]
where it
would not be able to be canceled without throwing an unhandled rejection
error.
0.11.7
Released 09/25/2015
Bugfixes:
The debug window now works again.
Changed
[CODE_BLOCK_4721]
build strategy which fixes not saving the internal
[CODE_BLOCK_4722]
. Also fixes not being able to update from the GUI. Fixes
0.11.6
Released 09/25/2015
Bugfixes:
Viewport is now properly restored to the default width / height on subsequent
runs. Previously it would retain the last viewport size used until there was a
new viewport command.
[CODE_BLOCK_4723]
now correctly escapes
quotes and single quotes.
Assertion messages are no longer truncated, and instead will scale down by
reducing the
[CODE_BLOCK_4724]
[CODE_BLOCK_4725]
after they exceed 110 characters.
So you'll now always see the full assertion message.
Fixed some scenarios where assertions would not be logged as a child command.
Assertions based around the
[CODE_BLOCK_4726]
[CODE_BLOCK_4727]
object no longer cause Chai
to bomb on formatting their object structures (due to cyclic references) and
instead now will show up as
[CODE_BLOCK_4728]
[CODE_BLOCK_4729]
Misc:
[CODE_BLOCK_4730]
now logs out to the
[CODE_BLOCK_4731]
additionally verifies upcoming assertions.
[CODE_BLOCK_4732]
now logs out to the
[CODE_BLOCK_4733]
and additionally verifies upcoming assertions.
Removed
[CODE_BLOCK_4734]
label on assertions which indicated the number of
elements found if > 1. This was annoying and redundant since the inked command
already had this number.
0.11.5
Released 09/20/2015
Features:
[CODE_BLOCK_4735]
version of Cypress now works correctly for GUI Desktop versions
(tested on Ubuntu Desktop). Previously it would only worked during
[CODE_BLOCK_4736]
in server versions. The
[CODE_BLOCK_4737]
used in OSX does not work with
[CODE_BLOCK_4738]
, so in
[CODE_BLOCK_4739]
we just use a standard window + menu.
Added Desktop Icon.
Bugfixes:
Cypress now forces the initial
[CODE_BLOCK_4740]
not to be
cached by the browser. This was incorrectly being cached which meant when you
changed the
[CODE_BLOCK_4741]
it would not actually go out
and fetch the new contents. Previously you had to check
[CODE_BLOCK_4742]
in the
[CODE_BLOCK_4743]
inside of Chrome to prevent this bug. Unfortunately this has a
significant performance drawback. If you use a
[CODE_BLOCK_4744]
before each test you will notice a degrade
in performance because this request is no longer cached. This is a temporary
problem until Cypress implements a more sophisticated caching strategy which
optimizes these concerns. There is a lot to improve in this arena but it will
take more time before it's implemented.
[CODE_BLOCK_4745]
will no longer throw an error when it is
used as a
[CODE_BLOCK_4746]
and has a callback function signature, and that
callback function throws outside of an assertion. Instead now it logs
correctly, handles the error, and displays this error for you.
Misc:
Many additional tests added to the multi-os deployment process.
When Cypress opens other windows they are now auto-focused.
0.11.4
Released 09/17/2015
Features:
[CODE_BLOCK_4747]
now accepts a callback function which will
be retried until it does not throw. The callback function will be retried in
the exact same way as passing regular string-based chainers to
[CODE_BLOCK_4748]
. Having a callback function gives you an
opportunity to
massage
the expected subject such as comparing multiple
elements, creating an array of text or classes, etc.
Deprecations:
[CODE_BLOCK_4749]
has been deprecated and you can safely rename this command
[CODE_BLOCK_4750]
Misc:
All of the docs surrounding
assertions
[CODE_BLOCK_4751]
, and
[CODE_BLOCK_4752]
have
been updated to reflect the new API.
0.11.3
Released 09/16/2015
Features:
When XHR's are aborted Cypress will display the stack trace indicating where
in your app the XHR was aborted. Additionally it will display as
[CODE_BLOCK_4753]
in the Command Log.
Bugfixes:
XHR's will no longer be ended early and display no status as if there was no
response. Fixes
XHR's which are aborted no longer cause an
[CODE_BLOCK_4754]
to be thrown.
Fixes
Cypress will no longer incorrectly revert to a previous test run's snapshot
when tests are re-run.
0.11.2
Released 09/14/2015
Bugfixes:
Prevented bug where the assertion message:
[CODE_BLOCK_4755]
would log over and over again when Cypress retried querying for a DOM element.
Misc:
[CODE_BLOCK_4756]
now outputs its subject when clicking on its
command log. Fixes
0.11.1
Released 09/14/2015
Bugfixes:
Utilizing
[CODE_BLOCK_4757]
across multiple tests before a
[CODE_BLOCK_4758]
now works correctly. As a side effect now
Cypress will rebind both the
[CODE_BLOCK_4759]
and all
[CODE_BLOCK_4760]
whenever
the remote
window is reloaded (for whatever reason) - even during a test itself. This
means you can navigate between pages without ever having to restart the server
or routes (they will automatically rebind) when the window loads. Fixes
Misc:
Providing a "number-string" as in:
[CODE_BLOCK_4761]
will no longer
throw an error.
Internal API changes for
[CODE_BLOCK_4762]
0.11.0
Released 09/13/2015
Summary:
This release marks a major change in the underlying algorithms used to prevent
testing flake. It is a major goal of Cypress to combat and prevent
test flake. These algorithm changes go a long way towards making this a
reality, and have been months in the making.
Cypress can now predict upcoming assertions and modifies its behavior until
the intended state has been reached.
Command options
[CODE_BLOCK_4763]
[CODE_BLOCK_4764]
[CODE_BLOCK_4765]
have been deprecated, these
were confusing and limiting, and the same result can now be achieved using
normal assertions. The end result is much more robust and much easier to
understand.
Features:
Commands which precede assertions will now look downstream at those assertions
and not resolve until their subject's state passes all assertions. Previously
this was
sort of
implemented using
Command Options
and the
[CODE_BLOCK_4766]
flag, but now this is the default behavior.
Command Options
only worked on
DOM-based subjects, and now the new assertion verification works on everything
else (including RL-based commands, etc). What this means is that Cypress can
predict what you are requesting and automatically modifies its behavior until
this state is reached. This prevents test brittleness / random test flake.
Additionally this removes ever having to use
[CODE_BLOCK_4767]
[CODE_BLOCK_4768]
(though this is
still a valid command). As a side effect, you will now see commands + their
assertions in the spinning pending blue state. When assertions fail their
associated command also fails at the same time. This visually represents the
coupling between these two concepts. Another side effect is that
[CODE_BLOCK_4769]
options do not need to be provided on the succeeding assertions, and can
instead just be provided on the proceeding command. All of the coupled
assertions will automatically be retried to the maximum
[CODE_BLOCK_4770]
setting.
Fixes
Action commands will now insert an artificial delay after resolving to enable
modern JavaScript frameworks time to
flush
their run loops. snapshots are
delayed until after the action, resulting in more accurate snapshots because
JavaScript frameworks would not process these DOM events until
[CODE_BLOCK_4771]
milliseconds after they occurred. This has the unfortunate side effect of
decreasing
performance by about
5-10%
but the end result is that it is
much easier to debug and Cypress is less prone to flake caused by modern
JavaScript frameworks. This change comes after collecting many data points and
this was one of the easiest changes that help reduce flake. For users that
don't use the latest and greatest JavaScript frameworks, this action delay can
be reduced through
[CODE_BLOCK_4772]
which may speed up large test suites.
Aliasing custom commands now intelligently figures out where to apply the
alias without being specified inside of the actual custom command.
The algorithm for replaying aliased commands is now much more accurate,
handles stale element references better, and will not replay commands which
have a side effect (like action commands). The end result is Cypress will now
almost always find the desired element by determining the minimum number of
re-queries and is not susceptible to stale element references. Additionally
using assertions on aliased elements now works (where previously using a
Command Option
on an alias would just be ignored. This was very difficult to
implement but should be 100% solid. Fixes
Assertions which actually produced 2 assertions (under the hood) such as
[CODE_BLOCK_4773]
will now only log the 2nd assertion,
unless the first fails.
Previously using
[CODE_BLOCK_4774]
was impossible (and this would throw
an error), but now this works as you'd expect with the default
[CODE_BLOCK_4775]
Bugfixes:
Aliased commands now correctly output a command log again when they are
replayed.
Assertions that involved an
[CODE_BLOCK_4776]
property are no longer incorrectly
substituted with the
[CODE_BLOCK_4777]
subject.
Removed special logic for
Angular
which tapped into its digest cycle for
queueing commands. This had unpredictable results when there was n
[CODE_BLOCK_4778]
set, and is now superseded by the new queueing system anyway (which is more
performant).
[CODE_BLOCK_4779]
formatting of failed
[CODE_BLOCK_4780]
[CODE_BLOCK_4781]
calls is horrendously
non-performant and would sometimes choke the CPU for several seconds. This
formatting has been completely removed and will be replaced by something less
outrageous later on. At the moment you can still use the built in Cypress
debugging (clicking on a command log, etc) to see what the actual values were.
Fixes
Misc:
The internal retry loop of Cypress now runs at
[CODE_BLOCK_4782]
, instead of
[CODE_BLOCK_4783]
Cypress overrides chai's default inspection function for DOM elements meaning
instead of seeing
[CODE_BLOCK_4784]
you will now see the nicely
formatted Cypress DOM element like:
[CODE_BLOCK_4785]
Cypress now overrides chai's
[CODE_BLOCK_4786]
chainer and provides a specific error
message when a non
[CODE_BLOCK_4787]
value is provided. Fixes
Cypress now handles
[CODE_BLOCK_4788]
[CODE_BLOCK_4789]
assertion chainers in a very specific
way, providing a detailed message on failure, and utomatically slices out any
stale element references.
[CODE_BLOCK_4790]
assertion chainer from
[CODE_BLOCK_4791]
has been extended to match
the same selector logic as
[CODE_BLOCK_4792]
- meaning
it now checks the
[CODE_BLOCK_4793]
[CODE_BLOCK_4794]
Tweaked the label for displaying the number of elements a command resolved
with (now displays 0 differently than > 1).
Removed the
[CODE_BLOCK_4795]
flag in assertions as now this is the default
behavior on normal assertions.
Deprecated all
Command Options
. You will see a very nice and simple error
message explaining how to convert these to assertions.
[CODE_BLOCK_4796]
can now be silenced with
[CODE_BLOCK_4797]
Many error messages have been rewritten to be much more fluent and easier to
understand.
Other News:
Cypress is currently seeking to raise a Series A. This will enable us to grow
the team and speed up development but seeking it has come at a cost for current
development speed. If you have any VC connections
please send them our way
0.10.8
Released 08/21/2015
Features:
Reporters in CI can now be specified.
Added
[CODE_BLOCK_4798]
reporter.
0.10.7
Released 08/16/2015
Features:
[CODE_BLOCK_4799]
can now be specified as a CLI argument and will override any values
stored in
[CODE_BLOCK_4800]
Misc:
When running through the CLI, Cypress will now display an error if the
server's port is currently in use. Previously this would not output an error
and the process would just hang.
0.10.6
Released 08/15/2015
Bugfixes:
Fixed edge case where Cypress would not correctly handle
[CODE_BLOCK_4801]
[CODE_BLOCK_4802]
requests with a JSON body. These requests would just hang and eventually time
out.
Misc:
Project ID's can be programmatically set now.
0.10.5
Released 08/13/2015
Bugfixes:
Running a specific test won't open/close immediately when starting up (fixes
weird flickering effect).
[CODE_BLOCK_4803]
[CODE_BLOCK_4804]
commands will now correctly "end" even if they were
[CODE_BLOCK_4805]
due to the element
already being in a checked or unchecked state.
Misc:
Currently running tests now displays a spinner to indicate they are currently
running.
Optimized performance of command lists.
Commands which were silenced with
[CODE_BLOCK_4806]
will now always display in
the Command Log if they were part of a replayed chain of commands due to an
alias reference becoming stale. Previously they would not display which was
very confusing.
Sinon.JS is no longer minified.
0.10.4
Released 08/11/2015
Bugfixes:
The OSX Cypress App was not being properly signed (since 0.10.0) due to an
oversight in our deployment process. This has been fixed now and additional
checks have been added to ensure the deployed version is properly signed.
Updating within the app was unaffected. This bug only effected fresh downloads
from the internet.
Errors / crashes encountered when updating to newer versions through the app
should be fixed now.
0.10.3
Released 08/10/2015
Bugfixes:
Cypress Errors in
[CODE_BLOCK_4807]
[CODE_BLOCK_4808]
, etc) will no longer cause Mocha to
fire its
[CODE_BLOCK_4809]
event thus ending the entire run. In CI, this would cause the
test suite to end early. Uncaught Mocha errors will however continue this
behavior. Cypress does not yet have a "skipped" visual state for tests which
were skipped, so at the moment it may look a little strange and unpredictable.
Misc:
Tweaked clicking algorithm to re-verify an elements visibility anytime the
click retries its
[CODE_BLOCK_4810]
logic. Previously this check only happened once at
the beginning of the click.
In CI, the window size (not the viewport) has been changed from
[CODE_BLOCK_4811]
[CODE_BLOCK_4812]
. This will only affect
[CODE_BLOCK_4813]
artifacts which are taken
automatically with
[CODE_BLOCK_4814]
(coming soon)
or whenever a test fails (also coming soon).
0.10.2
Released 08/10/2015
Bugfixes:
Memory optimizations in CI.
Reduce noise in logs.
Prevented external
[CODE_BLOCK_4815]
mutations causing problems in CI.
Misc:
Better error tracing.
0.10.1
Released 08/07/2015
Bugfixes:
Fixed missing dependency for CI.
Misc:
Cypress now logs out your project's API key on a failed CI run.
0.10.0
Released 08/06/2015
Summary:
Cypress is now able to run all the tests, run in the terminal, and includes
support for Linux and CI. Additionally, most of the functionality of he GUI
Desktop App can now be accessed through command line arguments.
Because each operating system requires a specific build of Cypress - a new CLI
tool has been created which abstracts away these differences and orchestrates
the Desktop App regardless of which OS you are running.
This
CLI tool is now published on npm
though the documentation still needs to be written.
There is now a download service to access the latest version of Cypress and
previous versions.
Cypress aims not only to make it easier to write tests, but after you build a
test harness, it will make it easier to dive into failed tests (hat run in
CI). This release paves the way for providing after-run results and allowing
you to dive into those failures.
Breaking Changes:
Due to security upgrades, adding projects in previous versions will no longer
work. Upgrade and everything should be okay.
Features:
The latest version of Cypress can be downloaded here:
http://download.cypress.io/latest
Cypress can alternatively be downloaded / installed / managed through the CLI
utility.
Cypress can now be run through the terminal.
You can now run all of your tests inside of the GUI App.
You can use the CLI tool to run Cypress in CI. The documentation for this
needs to be written, but it will be very simple to do. You will probably only
have to write 2 lines in your CI scripts to run Cypress.
You can configure CI to use any reporter built into Mocha, and additionally we
are adding JUnit XML output (for Jenkins) as a built in default.
You can write your own custom reporter which Cypress can use in CI.
Console output from your apps is suppressed while running in the terminal.
Bugfixes:
Several security problems with projects have been closed in preparation for
running in CI.
Extensive memory profiling has been done and Cypress has implemented several
strategies for aggressively causing garbage collection. The debugging tools
(which allow you to walk back in time through DOM snapshots, or access objects
from previous tests) could exhaust all available memory in previous versions.
This likely never affected most users, but if a user ran 1000's of tests
(which have been written in Cypress) it would bomb. Now Cypress only stores
data for up to 50 tests, and will begin purging data past that. When run in
the terminal, Cypress doesn't apply any of its debugging tools, so CI will be
unaffected.
Several instances of memory leaks were plugged up.
Misc:
Everything except for the
[CODE_BLOCK_4816]
is now minified.
Some users have reported problems upgrading previous versions. This is because
we changed the name from "cypress" to "Cypress" including some binaries. If
your upgrade does not finish you can redownload the latest version of Cypress
or use the CLI tool to reinstall it.
Our build and testing processes have been upgraded to accommodate Linux
builds.
Sinon.JS object formatting during errors has been suppressed (when using
spies/stubs) due to its horrendous performance when comparing deeply nested
objects. This means you won't see the (mostly) useless error output from
Sinon, but given Cypress debugging tools you can still inspect objects and
figure out what went wrong.
0.9.6
Released 07/27/2015
Bugfixes:
Fixed server crash on improperly handled proxy error.
Upgraded logic to redirect back to the Cypress client app on manual URL
changes.
0.9.5
Released 07/14/2015
Features:
[CODE_BLOCK_4817]
[CODE_BLOCK_4818]
[CODE_BLOCK_4819]
[CODE_BLOCK_4820]
[CODE_BLOCK_4821]
[CODE_BLOCK_4822]
will wait for the subject to automatically become visible instead of throwing
immediately if the element is not in a visible state.
Misc:
Swapped out ugly nonsense
[CODE_BLOCK_4823]
icon to
[CODE_BLOCK_4824]
to represent a test
which has not run yet.
0.9.4
Released 07/06/2015
Features:
[CODE_BLOCK_4825]
[CODE_BLOCK_4826]
[CODE_BLOCK_4827]
will now all log out heir last known
[CODE_BLOCK_4828]
failure. This means the
[CODE_BLOCK_4829]
will be highlight during Command Log hovering,
and will display in the console on click. his should make debugging failed DOM
based commands much easier. Fixes
Bugfixes:
Fixed edge case with
[CODE_BLOCK_4830]
and command
options
[CODE_BLOCK_4831]
[CODE_BLOCK_4832]
where it would always fail even though the
matched element was in the correct state.
Misc:
[CODE_BLOCK_4833]
now throws when provided the command
option:
[CODE_BLOCK_4834]
because it will only ever return 1 element.
0.9.3
Released 07/06/2015
Features:
Proxied jQuery:
[CODE_BLOCK_4835]
onto
[CODE_BLOCK_4836]
[CODE_BLOCK_4837]
and specific class methods:
[CODE_BLOCK_4838]
[CODE_BLOCK_4839]
[CODE_BLOCK_4840]
[CODE_BLOCK_4841]
[CODE_BLOCK_4842]
[CODE_BLOCK_4843]
[CODE_BLOCK_4844]
Proxied
[CODE_BLOCK_4845]
onto
[CODE_BLOCK_4846]
[CODE_BLOCK_4847]
The URL will now automatically be restored when hovering over the Command Log
to indicate the state of the URL at the time the command ran.
[CODE_BLOCK_4848]
now accepts an optional:
[CODE_BLOCK_4849]
argument
[CODE_BLOCK_4850]
[CODE_BLOCK_4851]
[CODE_BLOCK_4852]
[CODE_BLOCK_4853]
[CODE_BLOCK_4854]
). Center is
still the default.
[CODE_BLOCK_4855]
now accepts an optional
[CODE_BLOCK_4856]
[CODE_BLOCK_4857]
coordinate argument, which is relative to the top left corner of the element.
Fixes
Click docs have been updated
to reflect these changes.
Bugfixes:
[CODE_BLOCK_4858]
[CODE_BLOCK_4859]
callbacks to
[CODE_BLOCK_4860]
are now invoked with
[CODE_BLOCK_4861]
as the context.
Cypress logo now displays in
[CODE_BLOCK_4862]
Misc:
Internal refactoring to
[CODE_BLOCK_4863]
0.9.2
Released 07/04/2015
Features:
Added
[CODE_BLOCK_4864]
page in desktop application annotating the current version.
[CODE_BLOCK_4865]
now supports these additional
extensions:
[CODE_BLOCK_4866]
[CODE_BLOCK_4867]
[CODE_BLOCK_4868]
[CODE_BLOCK_4869]
[CODE_BLOCK_4870]
[CODE_BLOCK_4871]
[CODE_BLOCK_4872]
[CODE_BLOCK_4873]
Image fixtures will be sent back as a
[CODE_BLOCK_4874]
string.
HTML fixtures will be prettified and saved back over the original.
Misc:
Added more tests around various areas of the desktop application and ID
generator.
0.9.1
Released 07/03/2015
Features:
[CODE_BLOCK_4875]
can now accept an
[CODE_BLOCK_4876]
when
providing a
[CODE_BLOCK_4877]
. Valid orientations are
[CODE_BLOCK_4878]
[CODE_BLOCK_4879]
Bugfixes:
The scaffolded
[CODE_BLOCK_4880]
now correctly returns its object literal in
[CODE_BLOCK_4881]
callback.
[CODE_BLOCK_4882]
now correctly logs its message to the Command
Log when provided options.
[CODE_BLOCK_4883]
has been upgraded to handle situations where
as it's typing, 3rd party code mutates the value either synchronously or
asynchronously. The caret is automatically moved to the end position matching
browser behavior.
Misc:
Deprecated
[CODE_BLOCK_4884]
, instead use
[CODE_BLOCK_4885]
to output a
Command Log. Updated scaffolding on new projects to reflect this change.
[CODE_BLOCK_4886]
now outputs much more explicit error
messages when given command options. Fixes
[CODE_BLOCK_4887]
no longer validates
[CODE_BLOCK_4888]
value when
[CODE_BLOCK_4889]
passed in as options. Fixes
[CODE_BLOCK_4890]
[CODE_BLOCK_4891]
will now
log out the
$el if it's a DOM object, which will now correctly highlight the
$el during a
command revert. Additionally if these commands have been called on a DOM
object, their
[CODE_BLOCK_4892]
message will include the DOM objects.
0.9.0
Released 07/02/2015
Summary:
[CODE_BLOCK_4893]
is a new command which will resize
the viewport to a specified width and height. There is ow a default
[CODE_BLOCK_4894]
size of
[CODE_BLOCK_4895]
Features:
Your application's viewport dimensions will now automatically scale to fit
regardless of your screen's size. This enables you to test resolutions larger
than what your screen is capable of displaying. Additionally this fixes edge
cases caused when there was a difference in viewports between users.
The viewport's dimensions will now dynamically display accurately as they are
changed in the header area.
The viewport's scale will now dynamically display accurately as it is changed.
Each command will automatically restore the viewport to the dimensions at the
time the command was issued. In other words, scrolling over each command will
restore exactly what Cypress "saw" when it issued the command.
Several common viewport presets have been added for convenience
Misc:
Cypress now requires a viewport to be issued at all times. By default it is
[CODE_BLOCK_4896]
but can be changed in your
[CODE_BLOCK_4897]
file with he keys:
[CODE_BLOCK_4898]
[CODE_BLOCK_4899]
Bugfixes:
Scrollbar styling is no longer hijacked by Cypress.
Misc:
Updated remote application iframe styles.
0.8.1
Released 06/30/2015
Bugfixes:
[CODE_BLOCK_4900]
will now fire a
[CODE_BLOCK_4901]
event on the
[CODE_BLOCK_4902]
even if the window isn't in focus.
[CODE_BLOCK_4903]
has been upgraded to be more intelligent
about firing
[CODE_BLOCK_4904]
events, and now takes into account the previously focused
element.
[CODE_BLOCK_4905]
[CODE_BLOCK_4906]
will not
issue
[CODE_BLOCK_4907]
events or
[CODE_BLOCK_4908]
events unnecessary when chaining together
multiple actions which do not change the element or cause it to lose focus.
Fixes
0.8.0
Released 06/26/2015
Summary:
[CODE_BLOCK_4909]
now implements all DOM events to simulate
every aspect of typing on a real keyboard.
All of the
type docs have been updated
to reflect these
changes.
Features:
[CODE_BLOCK_4910]
now outputs "Key Events Table" which is a
[CODE_BLOCK_4911]
of every key typed, the
[CODE_BLOCK_4912]
, all vents that fired, and
whether any were
[CODE_BLOCK_4913]
[CODE_BLOCK_4914]
now accepts the following special character
sequences:
[CODE_BLOCK_4915]
[CODE_BLOCK_4916]
[CODE_BLOCK_4917]
[CODE_BLOCK_4918]
[CODE_BLOCK_4919]
[CODE_BLOCK_4920]
[CODE_BLOCK_4921]
[CODE_BLOCK_4922]
[CODE_BLOCK_4923]
implements
[CODE_BLOCK_4924]
[CODE_BLOCK_4925]
[CODE_BLOCK_4926]
accurately like a real keyboard.
[CODE_BLOCK_4927]
now fires change events exactly like real
browsers when
[CODE_BLOCK_4928]
is used.
[CODE_BLOCK_4929]
will fire
[CODE_BLOCK_4930]
[CODE_BLOCK_4931]
events
exactly like a real browser. Fixes
[CODE_BLOCK_4932]
now follows all of the spec in regards to
[CODE_BLOCK_4933]
on any event that would insert a character such as
[CODE_BLOCK_4934]
[CODE_BLOCK_4935]
[CODE_BLOCK_4936]
[CODE_BLOCK_4937]
events should be
[CODE_BLOCK_4938]
identical to real
browser
[CODE_BLOCK_4939]
including
[CODE_BLOCK_4940]
[CODE_BLOCK_4941]
[CODE_BLOCK_4942]
[CODE_BLOCK_4943]
etc.
[CODE_BLOCK_4944]
now inserts a small delay
[CODE_BLOCK_4945]
between each
keystroke to simulate a real user typing.
[CODE_BLOCK_4946]
events are now correctly fired when
[CODE_BLOCK_4947]
chooses an
[CODE_BLOCK_4948]
[CODE_BLOCK_4949]
events are now fired exactly how a browser does (when an input loses
focus and its value has changed since its last focus event). You'll see these
fire after you use
[CODE_BLOCK_4950]
directly, or use another
[CODE_BLOCK_4951]
on another element.
Bugfixes:
Using
[CODE_BLOCK_4952]
in an
[CODE_BLOCK_4953]
will no
longer prepend the value. Fixes
[CODE_BLOCK_4954]
elements can now be focused and blurred.
[CODE_BLOCK_4955]
during
[CODE_BLOCK_4956]
[CODE_BLOCK_4957]
now correctly cancels remaining queued
click/dblclick events.
Misc:
[CODE_BLOCK_4958]
are now collapsed by default.
[CODE_BLOCK_4959]
now validates the chars and will throw on
anything other than a string or finite number.
[CODE_BLOCK_4960]
now throws on empty strings.
Removed several libs that used to handle typing simulation and rewrote typing
from scratch.
0.7.6
Released 06/23/2015
Bugfixes:
Prevent infinite loop due to a trifecta of rare circumstances with
[CODE_BLOCK_4961]
. Clicking will now retry sync after it
attempts to scroll past the element covering up the desired clickable element.
Fixes
0.7.5
Released 06/19/2015
Bugfixes:
[CODE_BLOCK_4962]
now takes into account being covered by a
fixed positioned element and will increase the window's scroll offset to
account for this. There are still more improvements to be made before this is
bulletproof though.
[CODE_BLOCK_4963]
could potentially resolve to a null
subject if the matching content was split across multiple nested children
elements. This has been fixed and contains will now return the first, deepest
element which contains text potentially spread over multiple text nodes and/or
children elements.
0.7.4
Released 06/18/2015
Misc:
Attempting to
[CODE_BLOCK_4964]
a select element will now
throw an error. The error guides you to using the
[CODE_BLOCK_4965]
command, as that is the command you should
use to change a
[CODE_BLOCK_4966]
value.
[CODE_BLOCK_4967]
responses are now validated. If responses are
[CODE_BLOCK_4968]
[CODE_BLOCK_4969]
Cypress will throw a very specific error message.
Cypress will now display
[CODE_BLOCK_4970]
parse errors when attempting to boot a
project when there is a syntax error in
[CODE_BLOCK_4971]
0.7.3
Released 06/17/2015
Features:
[CODE_BLOCK_4972]
will now output a command log.
[CODE_BLOCK_4973]
will now have
[CODE_BLOCK_4974]
[CODE_BLOCK_4975]
events
fired on itself and the selected options (as per the pec).
[CODE_BLOCK_4976]
is now inline with the other
[CODE_BLOCK_4977]
commands and will retry until the element naturally becomes selectable.
Bugfixes:
[CODE_BLOCK_4978]
command options are now properly formatted, instead of saying
[CODE_BLOCK_4979]
they will display the overridden default options - ie:
[CODE_BLOCK_4980]
[CODE_BLOCK_4981]
[CODE_BLOCK_4982]
Sending
[CODE_BLOCK_4983]
[CODE_BLOCK_4984]
commands will no longer error out if the
element is not visible. Forcing the action to take place now correctly removes
all error checking prior to issuing the action and events.
Misc:
Removed stack traces on
[CODE_BLOCK_4985]
in the console since those come from
[CODE_BLOCK_4986]
and are basically useless.
0.7.2
Released 06/17/2015
Bugfixes:
Removed factoring in the total time a test has been running when determining
when its command timeout. This fixes a bug where commands down he chain would
timeout earlier than their specified
[CODE_BLOCK_4987]
option.
0.7.1
Released 06/16/2015
Bugfixes:
DOM commands which can retry now correctly support
[CODE_BLOCK_4988]
options
which will raise the timeout beyond the standard
[CODE_BLOCK_4989]
[CODE_BLOCK_4990]
[CODE_BLOCK_4991]
[CODE_BLOCK_4992]
[CODE_BLOCK_4993]
commands or any other element which supports
[CODE_BLOCK_4994]
attribute now are proxied correctly. The
[CODE_BLOCK_4995]
attribute
removes sending cookies with the HTTP request and now there is a fallback to
figure out the
[CODE_BLOCK_4996]
even in this situation.
Misc:
Support for redirects with status code
[CODE_BLOCK_4997]
0.7.0
Released 06/15/2015
Features:
Cypress now has first class support for
[CODE_BLOCK_4998]
(official docs coming
soon).
Introduced new
[CODE_BLOCK_4999]
command.
Fixtures support
[CODE_BLOCK_5000]
[CODE_BLOCK_5001]
, and
[CODE_BLOCK_5002]
files with image support coming
soon.
Fixtures are automatically validated, with error messages propagating up to
the client.
Fixtures are automatically formatted / indented for easy debugging.
Example fixture is automatically created with every project.
Example support files are now automatically created with every project.
[CODE_BLOCK_5003]
now accepts an
alias
as its response.
[CODE_BLOCK_5004]
additionally accepts a special
[CODE_BLOCK_5005]
[CODE_BLOCK_5006]
keyword which
automatically loads the fixture as the response.
Bugfixes:
Clicking giant yellow CypressError now displays associated XHR error in the
console.
Misc:
RegExp arguments are now properly formatted in the Command Log.
Update
[CODE_BLOCK_5007]
[CODE_BLOCK_5008]
Update
[CODE_BLOCK_5009]
[CODE_BLOCK_5010]
0.6.14
Released 06/11/2015
Features:
Command logging has been upgraded to support "page events", which are
different than commands. Now events which happen (XHR/page load/url
change/spies/stubs/mocks) log out visually differently and do not use a
command number. This should be easier to parse what was a real command and
what was a page event.
When the url changes this is now logged as a page event, and its
[CODE_BLOCK_5011]
logs what caused it to change.
Misc:
Internal refactor / improvements to support long lived runnable objects to
work with page events.
Request Commands (now page events) have now been renamed to 'XHR'.
[CODE_BLOCK_5012]
now returns the raw document object
instead of a jQuery wrapped document object.
When
[CODE_BLOCK_5013]
[CODE_BLOCK_5014]
fails it will include the current subject n the
[CODE_BLOCK_5015]
log.
[CODE_BLOCK_5016]
now logs out when its referenced aliases,
and its
[CODE_BLOCK_5017]
output displays the XHR return values.
[CODE_BLOCK_5018]
[CODE_BLOCK_5019]
longer pass the return value as the command log's
[CODE_BLOCK_5020]
, which made no
sense and was unlike every other command.
0.6.13
Released 06/09/2015
Bugfixes:
Traversal methods now correctly return their
[CODE_BLOCK_5021]
even when
[CODE_BLOCK_5022]
option is passed.
Misc:
[CODE_BLOCK_5023]
now works with
[CODE_BLOCK_5024]
attributes.
0.6.12
Released 06/09/2015
Bugfixes:
When Cypress detects a
[CODE_BLOCK_5025]
event it will now clear out the subject
so the next commands cannot reference previous page DOM elements.
[CODE_BLOCK_5026]
[CODE_BLOCK_5027]
will no longer output additional error'd commands when their associated
[CODE_BLOCK_5028]
fails.
Misc:
[CODE_BLOCK_5029]
[CODE_BLOCK_5030]
[CODE_BLOCK_5031]
[CODE_BLOCK_5032]
all take
[CODE_BLOCK_5033]
options to force the click to happen and skip
additional clickable checks.
Now when you click the giant yellow failure messages if the error is a
[CODE_BLOCK_5034]
instead of logging nothing it will now find the command
associated to that error and display the same message as if you clicked the
failed command.
0.6.11
Released 06/08/2015
Bugfixes:
[CODE_BLOCK_5035]
[CODE_BLOCK_5036]
longer output additional error'd commands hen their associated
[CODE_BLOCK_5037]
fails.
Changed scrolling elements into view to use top strategy instead of bottom
which fixes times where the middle of an element was not yet in he viewport.
Fixes
Misc:
[CODE_BLOCK_5038]
now errors if it's been called on >1 form
element. Fixes
Coordinates and hitboxes are now logged and displayed on
[CODE_BLOCK_5039]
[CODE_BLOCK_5040]
0.6.10
Released 06/06/2015
Bugfixes:
Improved clicking algorithm to reduce edge cases where element could not be
clicked but should have been able to be clicked.
Misc:
[CODE_BLOCK_5041]
accepts
[CODE_BLOCK_5042]
which will force it
to issue the click event and bypass checking to ensure element is physically
clickable.
Elements which are children of a container with
[CODE_BLOCK_5043]
are automatically
scrolled prior to a click (which is an abstraction around real user behavior).
Elements that are covering up an element you targeted for
[CODE_BLOCK_5044]
are now logged out in the command console.
All elements are now logged out as real DOM elements instead of jQuery wrapped
elements. This has several upsides. Chrome will allow you to immediately
interact with these elements, drilling into their contents, displaying the
element box model on hover, etc. This prevents you from having to expand the
jQuery elements and click "Reveal in Elements Panel".
0.6.9
Released 06/06/2015
Bugfixes:
Custom commands no longer error out if they are the very first
[CODE_BLOCK_5045]
command.
0.6.8
Released 06/05/2015
Features:
[CODE_BLOCK_5046]
[CODE_BLOCK_5047]
have been added as new
commands.
Cypress will automatically clear all cookies
before
each test run.
Named the spec + app iframe so that inside of Chrome Dev Tools the iframe
selector will clearly distinguish which iframe is your application versus
Cypress.
Bugfixes:
Hitbox is no longer covered up by element layers on DOM revert.
Finally tracked down and fixed edge case causing empty view to display when
tests were not empty. Fixes
Misc:
[CODE_BLOCK_5048]
now accepts
[CODE_BLOCK_5049]
to prevent
logging out (useful in custom commands).
[CODE_BLOCK_5050]
is now scoped by default to the
[CODE_BLOCK_5051]
instead of
[CODE_BLOCK_5052]
which prevents it from returning elements in
[CODE_BLOCK_5053]
like
[CODE_BLOCK_5054]
0.6.7
Released 06/04/2015
Features:
When reverting the DOM, associated command elements are now automatically
scrolled into view.
Hitboxes are now displayed on the screen based on the actual coordinates where
[CODE_BLOCK_5055]
event took place.
Click events now display event information about the
[CODE_BLOCK_5056]
[CODE_BLOCK_5057]
[CODE_BLOCK_5058]
default action + propagation in the command console.
Preventing default action on
[CODE_BLOCK_5059]
will no longer give focus as per the
spec.
Click events are now issued in the exact center of an element (taking into
account 2d transforms) and provide the coordinates in the command console and
in the actual event
Click events now take into account whether the associated element is being
covered up by another element, and will retry or fail with an exact error
message if the click was unable to be issued due to this reason.
Click events will now intelligently provide
[CODE_BLOCK_5060]
to the first focusable
element on the stack at the click coordinates, or will give
[CODE_BLOCK_5061]
to the
window.
Click events will issue the click to the topmost element based on the click
coordinates and not necessarily to the element you requested to e clicked
(which simulates exactly how a real click works). If this happens it is noted
in the command console and provides the
[CODE_BLOCK_5062]
Bugfixes:
When hover over commands element layers (2d transforms like rotation) are now
taken into account and displayed correctly.
There was a bug when checking / unchecking
[CODE_BLOCK_5063]
where it did not
properly receive focus.
Misc:
Click events are now replicated
almost
identically to the W3C click spec.
They should behave for all intents and purposes, identically to real clicks in
the browser.
0.6.6
Released 05/31/2015
Bugfixes:
Fixed regression related to
[CODE_BLOCK_5064]
re-visiting when current match matches remote url.
0.6.5
Released 05/23/2015
Features:
When Cypress detects a regular HTTP page loading event (where we're leaving
the current page and requesting a new one) it will now insert a
[CODE_BLOCK_5065]
command which indicates to the user Cypress has stopped running commands until
the new page loads.
If for some reason this new page errors Cypress will display the initial 500
error messages just like
[CODE_BLOCK_5066]
Cypress now waits
[CODE_BLOCK_5067]
(which matches
[CODE_BLOCK_5068]
for the new page to load instead of
[CODE_BLOCK_5069]
previously.
Bugfixes:
[CODE_BLOCK_5070]
will actually submit the form for real
now, instead of just firing the submit event. Now it's been upgraded to be
able to be canceled or have its returnValue set to false and will not submit
the form. Don't ask how I missed this one. I as once a young naive programmer
who trusted the DOM not to be the abomination it actually is.
Misc:
No longer send back a 500 message when initial response status code is 4xx.
0.6.4
Released 05/21/2015
Bugfixes:
Host header HTTPS protocol handling fixed.
Incorrectly handling query params on redirects fixed.
Other header edge cases fixed.
0.6.3
Released 05/20/2015
Misc:
Cypress should work with self signed SSL certificates now.
0.6.2
Released 05/20/2015
Bugfixes:
Using the
[CODE_BLOCK_5071]
option in
[CODE_BLOCK_5072]
[CODE_BLOCK_5073]
commands now logs out
in the Command Log. Fixes
Other scenarios are fixed where command options would show incorrect number of
object keys due to a bug in underscore's
[CODE_BLOCK_5074]
with an object that has a
[CODE_BLOCK_5075]
key. Fixes
0.6.1
Released 05/15/2015
Bugfixes:
Using the
[CODE_BLOCK_5076]
option in traversal commands works properly now. Fixes
Command logging now works even if no
[CODE_BLOCK_5077]
commands have been issued. Fixes
Misc:
Removed cy proxy commands:
[CODE_BLOCK_5078]
[CODE_BLOCK_5079]
. These didn't really "fit" into the
concept of a command, and with
[CODE_BLOCK_5080]
[CODE_BLOCK_5081]
they're accessible anyway, so nothing is really
lost.
0.6.0
Released 05/14/2015
Features:
Pushstate application routing now works 100% reliably with NO hacky overrides
in all browsers.
All incompatible
[CODE_BLOCK_5082]
[CODE_BLOCK_5083]
[CODE_BLOCK_5084]
elements are transparently rewritten to
be compatible including FQDN and protocol-less
[CODE_BLOCK_5085]
[CODE_BLOCK_5086]
Cookies are automatically cleared between page refreshes, during app startup,
and leaving the test page.
3rd Party cookies are now additionally cleared. All cookies are now accessible
to the client in preparation for
[CODE_BLOCK_5087]
Manual navigation after tests run now works reliably.
Navigating between full page refreshes during tests now works reliably.
Bugfixes:
Server-side redirects are now completely transparently handled and supported.
URLs are no longer altered in any weird way.
Problematic
[CODE_BLOCK_5088]
are now automatically stripped from remote responses.
3rd party
[CODE_BLOCK_5089]
are now properly proxied onto all responses.
Custom headers and other headers "of interest" are rewritten for transparent
compatibility.
[CODE_BLOCK_5090]
compression now handled and proxied correctly.
Misc:
Completely overhauled the URL and proxy system used to serve remote
applications.
Drastically simplified the architecture required for proxying.
Improved reliability for displaying the remote url.
Namespaced all cypress internal routes.
Many internal development / debugging processes improved.
Added 100+ new tests surrounding serving remote content and processing
requests.
Renamed all remaining old references to
[CODE_BLOCK_5091]
All responses are now streamed using
[CODE_BLOCK_5092]
0.5.15
Released 05/07/2015
Bugfixes:
Reverted
[CODE_BLOCK_5093]
overrides. This broke things in unexpected ways and
after further testing would not have worked on
[CODE_BLOCK_5094]
[CODE_BLOCK_5095]
. It's back
to the drawing board (but I have some ideas). Apps using
[CODE_BLOCK_5096]
routing
are broken again.
0.5.14
Released 05/06/2015
Features:
Cypress now works with JS applications that use
[CODE_BLOCK_5097]
[CODE_BLOCK_5098]
routing (commonly known as
[CODE_BLOCK_5099]
) without having to change any
application code.
Cypress now always updates the remote URL whenever your application changes
its URL through the vast variety of ways it can do this.
Bugfixes:
Removed
[CODE_BLOCK_5100]
[CODE_BLOCK_5101]
elements during DOM revert.
Server instrument now correctly displays the number of responses their
corresponding routes have had.
Spies/Stubs/Mocks instrument now correctly displays the number of calls their
corresponding methods have had.
When users navigate between pages with commands, like
[CODE_BLOCK_5102]
, Cypress now correctly waits until the age
has finished loading before running more commands. Previously this waited for
[CODE_BLOCK_5103]
event, which did not fire synchronously, and ow we bind to
[CODE_BLOCK_5104]
which does. Additionally Cypress checks to ensure
[CODE_BLOCK_5105]
did not return a non-undefined value.
Misc:
More changes to prepare for server adapters,
0.5.13
Released 05/04/2015
Features:
[CODE_BLOCK_5106]
[CODE_BLOCK_5107]
commands in preparation for
[CODE_BLOCK_5108]
[CODE_BLOCK_5109]
[CODE_BLOCK_5110]
packages/gem to talk directly to your back end.
Bugfixes:
Using
[CODE_BLOCK_5111]
[CODE_BLOCK_5112]
commands will no longer throw a 2nd command
error when using improper sizzle selectors.
Argument formatting display for command messages is fixed. There were
instances of leading commas, or no commas on some commands.
Misc:
Changed default port from
[CODE_BLOCK_5113]
[CODE_BLOCK_5114]
to avoid standard port conflicts
with commonly used back ends. Afterall, using Cypress is testing with 2020
vision. ;-)
Updated
[CODE_BLOCK_5115]
[CODE_BLOCK_5116]
Began implementation in preparation for
cross browser testing
coming
sometime relatively soon.
0.5.12
Released 04/30/2015
Features:
Introduced new
command option
[CODE_BLOCK_5117]
which cues Cypress into not
resolving matched elements until their length matches the option provided.
Bugfixes:
[CODE_BLOCK_5118]
will not resolve until all of the queue'd XHR's have resolved.
Misc:
Cypress now throws on
[CODE_BLOCK_5119]
if any DOM member
isn't in the DOM, except for
[CODE_BLOCK_5120]
assertions.
Cypress now throws on
[CODE_BLOCK_5121]
assertions. Use implicit
[CODE_BLOCK_5122]
command options instead.
Cypress overrides chai
[CODE_BLOCK_5123]
assertion to really mean: "does this subject
exist in the document?"
0.5.11
Released 04/29/2015
Bugfixes:
Fixed missing
[CODE_BLOCK_5124]
from primitives and some DOM aliases, which prevent
the background color from displaying in the UI.
Misc:
Optimized performance for hovering / exiting commands. Heavily reduced the CPU
on revert / restore the DOM.
0.5.10
Released 04/28/2015
Features:
[CODE_BLOCK_5125]
now accepts a
[CODE_BLOCK_5126]
option which will delay all responses to
requests (including 404) based on the value in ms
[CODE_BLOCK_5127]
now accepts a
[CODE_BLOCK_5128]
option which can turn off automatic
responding to requests.
[CODE_BLOCK_5129]
now accepts a
[CODE_BLOCK_5130]
option which overrides the delay option set
[CODE_BLOCK_5131]
to just matched requests.
[CODE_BLOCK_5132]
now accepts a
[CODE_BLOCK_5133]
option which will turn off automatic
responding to just matched requests.
Fixes
[CODE_BLOCK_5134]
now accepts an alias property called
[CODE_BLOCK_5135]
. Example:
[CODE_BLOCK_5136]
which ill resolve once the
XHR is initially requested, before it is responded to. This allows you to test
things when a request is in flight.
Added
[CODE_BLOCK_5137]
command which will respond to all pending requests when
[CODE_BLOCK_5138]
is set in the
[CODE_BLOCK_5139]
[CODE_BLOCK_5140]
[CODE_BLOCK_5141]
now displays pending requests and completed
requests.
The command UI now displays pending requests as a
[CODE_BLOCK_5142]
Misc:
Updated
[CODE_BLOCK_5143]
[CODE_BLOCK_5144]
0.5.9
Released 04/26/2015
Features:
Added
[CODE_BLOCK_5145]
method which spreads an array as
individual arguments to a callback function,like
[CODE_BLOCK_5146]
During an update Cypress will now display the updating message in the same
coordinates as when the app was open by clicking the tray icon.
After an update Cypress will now open back up and show itself in these same
coordinates.
[CODE_BLOCK_5147]
can now accept an array of route aliases
which will wait until all have completed. This array of resolved XHRs will
become the next subject.
Each time an alias in used with a
[CODE_BLOCK_5148]
, Cypress
will not resolve until the Nth request matching the outing alias responds.
Fixes
[CODE_BLOCK_5149]
has been upgraded to accept a routing alias.
By default it will yield the last matched request, but also supports special
alias properties which return a different request or potentially an array of
requests.
0.5.8
Released 04/24/2015
Features:
[CODE_BLOCK_5150]
can now alias primitives and objects other than
routes or DOM.
[CODE_BLOCK_5151]
automatically assigns this alias to
[CODE_BLOCK_5152]
which makes it available synchronously.
[CODE_BLOCK_5153]
does not allow several reserved words and will
throw if you attempt to alias as one of them.
[CODE_BLOCK_5154]
can now accept all alias types and will
display the labels in the UI differently based on the alias type.
Cypress now displays a message when the Desktop App update is actually being
applied instead of doing nothing and looking like it's crashed.
Bugfixes:
[CODE_BLOCK_5155]
now throws on empty strings or non string
arguments.
Desktop App debug logs no longer sort in the wrong direction.
Permissions are now restored during a cypress update for the
[CODE_BLOCK_5156]
[CODE_BLOCK_5157]
Prevent 3rd party windows from gaining focus over main window.
Misc:
Removed
[CODE_BLOCK_5158]
, this has been folded into
[CODE_BLOCK_5159]
Updated
[CODE_BLOCK_5160]
[CODE_BLOCK_5161]
0.5.7
Released 04/23/2015
Features:
The insanity that is URL parsing to figure out absolute, relative,
absolute-path-relative, http, sub domains, and local files should work in most
cases. In other words, Cypress has implemented the vast majority of url
parsing based on the
w3c URL spec
Bugfixes:
Prevent reverting the DOM while tests are running. Fixes
Fix edge case with forced focusing / blurring an element when document is not
in focus and the element is no longer in the DOM.
Visiting relative paths which are served from your file system works again.
Visiting absolute paths in the iframe now displays the correct URL in the
address bar again.
0.5.6
Released 04/22/2015
Features:
Cypress now detects the difference between a forced async
[CODE_BLOCK_5162]
test timeout
vs a regular command timeout, and will throw the appropriate message
indicating whether the user forgot to invoke
[CODE_BLOCK_5163]
or whether the timeout
happened due to a command.
Bugfixes:
[CODE_BLOCK_5164]
now properly times out when the
[CODE_BLOCK_5165]
event does not occur within the time out window.
If a page loads after a
[CODE_BLOCK_5166]
times out it will
no longer cause an exception in the
[CODE_BLOCK_5167]
handler.
Misc:
Increased
[CODE_BLOCK_5168]
timeout from
[CODE_BLOCK_5169]
now throws a custom error message when it
times out (instead of an incorrect / confusing default Mocha timeout message).
Using a
[CODE_BLOCK_5170]
while running a test will no longer always cause the test
to time out (yay!).
Override default Mocha timeout handling, replaced with custom logic. Removes
many bizarre edge cases.
0.5.5
Released 04/20/2015
Features:
When main app window comes into focus, it will automatically focus other
peripheral windows.
Added explicit error message when using child commands on a subject which has
been detached or removed from the DOM.
Cypress now detects when an async test is passed and not all commands have
finished running. It will throw an explicit error message in this situation.
Misc:
Error messages no longer break within words.
0.5.4
Released 04/20/2015
Features:
Enhanced
[CODE_BLOCK_5171]
to accept
[CODE_BLOCK_5172]
flag to
automatically retry assertions until timeout is reached.
Misc:
Repurposed
[CODE_BLOCK_5173]
to be an alias of
[CODE_BLOCK_5174]
for chainability.
Removed
[CODE_BLOCK_5175]
0.5.3
Released 04/19/2015
Bugfixes:
Handle relative path segments which walk up past the remote host
[CODE_BLOCK_5176]
Throw explicit error for
[CODE_BLOCK_5177]
[CODE_BLOCK_5178]
, and
[CODE_BLOCK_5179]
arguments to
[CODE_BLOCK_5180]
. Fixes
Misc
Improved
[CODE_BLOCK_5181]
message for
[CODE_BLOCK_5182]
when
no element was returned. Fixes
0.5.2
Released 04/17/2015
Bugfixes:
Fixed missing files from deployment. Added tests around this.
0.5.1
Released 04/16/2015
Misc:
Updated dependencies:
[CODE_BLOCK_5183]
[CODE_BLOCK_5184]
[CODE_BLOCK_5185]
Updated
[CODE_BLOCK_5186]
[CODE_BLOCK_5187]
0.5.0
Released 04/15/2015
Misc:
Snapshot source code.
0.4.7
Released 04/15/2015
Misc:
Added automated functional NW tests during deployment in preparation for
[CODE_BLOCK_5188]
release.
0.4.6
Released 04/11/2015
Features:
Added "invisible" icon to a command when its matched element(s) are invisible.
Running a single test will now automatically expand to display its commands.
Any failing test will now automatically expand to display its commands.
Failing tests which become passing will automatically collapse again.
0.4.5
Released 04/10/2015
Features:
Added
[CODE_BLOCK_5189]
command.
Bugfixes:
Improved options logging and argument logging for all commands. Fixes
0.4.4
Released 04/09/2015
Features:
Added
[CODE_BLOCK_5190]
traversal filtering method. Suggested in
Misc:
Improved error messages for traversal failures. Errors now include the parent
context DOM element. Fixes
Improved error messages for invalid
[CODE_BLOCK_5191]
arguments. Fixes
0.4.3
Released 04/09/2015
Features:
Added functionality which enables
[CODE_BLOCK_5192]
[CODE_BLOCK_5193]
to be created
prior to
[CODE_BLOCK_5194]
. The server and routes will apply
to the next page which is visited. This allows you to stub requests which
happen on page load. Suggested in
[CODE_BLOCK_5195]
now takes an optional
[CODE_BLOCK_5196]
callback option which is invoked when your page begins to ender but prior to
its load event.
Misc:
Improved error message when attempting to use
[CODE_BLOCK_5197]
or anything else
which requires a remote sandbox. Fixes
0.4.2
Released 04/09/2015
Bugfixes:
Remove accidental
[CODE_BLOCK_5198]
left in
[CODE_BLOCK_5199]
overloads (used only in Dev).
Prevent memory leak with Cypress helper listeners on every re-run of the
tests.
Prevent memory leak with custom 3rd party Cypress listeners in spec windows on
every re-run of the tests.
Prevent error from being thrown when
[CODE_BLOCK_5200]
's are switched in between active
test runs.
0.4.1
Released 04/08/2015
Features:
[CODE_BLOCK_5201]
files can now utilize
[CODE_BLOCK_5202]
[CODE_BLOCK_5203]
, or
[CODE_BLOCK_5204]
Bugfixes:
Handle
[CODE_BLOCK_5205]
and preprocess them as we do regular specs. Fixes:
Fixed an edge case when writing a test with a
[CODE_BLOCK_5206]
callback alongside
[CODE_BLOCK_5207]
commands. This situation would always cause a timeout after 30 seconds even
though the test would pass.
Misc:
Internally refactored Cypress for easier testability / debuggability.
Organized files around in preparation for OS release.
Added lightweight module system / optimized Cypress listeners to prevent
duplicated events.
Changed url strategy for sending down
[CODE_BLOCK_5208]
files.
0.4.0
Released 04/02/2015
Features:
[CODE_BLOCK_5209]
is now a bundled extension.
tests without an
[CODE_BLOCK_5210]
now run (with a random temporarily assigned id).
tests with a duplicate
[CODE_BLOCK_5211]
to another test will now run (with a random
temporarily assigned id).
tests or suites which are manually re-run from the UI now hide all of the
other tests / suites.
Bugfixes:
Fixed hook failure associated to wrong failed current test when
[CODE_BLOCK_5212]
set.
Async tests which used a
[CODE_BLOCK_5213]
command and had a
[CODE_BLOCK_5214]
callback was always
undefined. Now it's back to real Mocha
[CODE_BLOCK_5215]
Fixed bug in Mocha where it incorrectly associates
[CODE_BLOCK_5216]
the wrong
[CODE_BLOCK_5217]
Mocha Issue
[CODE_BLOCK_5218]
no longer logs twice on a failure.
Fixed putting an
[CODE_BLOCK_5219]
on a large list of tests that would sometimes not
clear the previous runnables in the UI.
Misc:
Optimized first test run after hard refresh.
Performance improvements on successive runnable iterations.
Aborting currently running tests performance improvement.
Live reload performance improvements when tests are changed.
Added 100+ tests covering Runner + Reporter behavior.
Aggressively cleaned up listeners after each test completion + run.
Added additional
[CODE_BLOCK_5220]
events for 3rd party custom handling.
0.3.15
Released 03/28/2015
Misc:
Drastically improved file watching on large projects with many tests. Instead
of choking the CPU at nearly 100% indefinitely we now optimally watch the
current working files for changes.
0.3.14
Released 03/27/2015
Bugfixes:
[CODE_BLOCK_5221]
[CODE_BLOCK_5222]
are now being cleaned up when a project is closed.
Previously
[CODE_BLOCK_5223]
file watchers would stick around indefinitely causing a
memory leak each time any project is closed and reopened.
0.3.13
Released 03/27/2015
Features:
[CODE_BLOCK_5224]
now detects a local url.
[CODE_BLOCK_5225]
[CODE_BLOCK_5226]
[CODE_BLOCK_5227]
can omit the
[CODE_BLOCK_5228]
protocol.
Bugfixes:
[CODE_BLOCK_5229]
now properly escape quotes in the
text.
[CODE_BLOCK_5230]
now inserts a trailing slash intelligently
into the correct
[CODE_BLOCK_5231]
position (not after query params or hashes).
[CODE_BLOCK_5232]
will no longer log 2 failed commands on
error.
Hovering on commands which delay resolving their $el will now properly
highlight again.
Misc:
[CODE_BLOCK_5233]
returns the current subject now.
upgraded jsUri to
[CODE_BLOCK_5234]
[CODE_BLOCK_5235]
now throws when url argument isn't a
string.
[CODE_BLOCK_5236]
instances now fire
[CODE_BLOCK_5237]
event. Removed
[CODE_BLOCK_5238]
event.
0.3.12
Released 03/26/2015
Bugfixes:
Aliases which replay their commands will no longer break the current chain and
therefore not unintentionally null our their subject for the ext command.
Highlighting $el's on DOM restore now works again.
Asserting against
[CODE_BLOCK_5239]
will indent command
logs now.
Prevent failed
[CODE_BLOCK_5240]
[CODE_BLOCK_5241]
from outputting
a second error'd command log.
Removed memory leaks surrounding Mocha runner.
Captured remote page uncaught errors again which fail corresponding tests.
Captured spec iframe errors again and preserve their stack trace.
Misc:
[CODE_BLOCK_5242]
is now a parent command.
Memory usage improvements.
0.3.11
Released 03/25/2015
Bugfixes:
Automatic command errors now properly show as errored commands.
[CODE_BLOCK_5243]
now correctly checks for a subject before
running.
Misc:
[CODE_BLOCK_5244]
(Bluebird) is now publicly available.
0.3.10
Released 03/24/2015
Bugfixes:
Test duration is now correct and only updates when tests finish.
Failing a hook will no longer continue to count the duration forever.
Misc:
Bumped Mocha to 2.2.1
Users now see a specialized error message when Cypress could not serve static
files from the file system.
0.3.9
Released 03/24/2015
Features:
Instead of waiting until commands resolve, commands are immediately inserted
with a
[CODE_BLOCK_5245]
status.
Pending commands are now visually distinguishable.
Created new
[CODE_BLOCK_5246]
interface for greater control over the display of
commands.
Available aliases are now logged in the console on
[CODE_BLOCK_5247]
Bugfixes:
Allow projects to be scrolled when >4 are added.
[CODE_BLOCK_5248]
accepts remaining
[CODE_BLOCK_5249]
that users
can type into.
Cause + Effect commands are now logged in the correct order. IE, clicking
something which causes another command to insert will be inserted correctly in
the order they arrived
[CODE_BLOCK_5250]
is no longer shown in commands.
[CODE_BLOCK_5251]
now logs a command.
[CODE_BLOCK_5252]
bugs are now fixed, causing events on a collection of
elements in the synchronous wrong order.
[CODE_BLOCK_5253]
is now coercively returned instead of
[CODE_BLOCK_5254]
which prevents losing
access to the subject in custom commands.
Trailing slashes are removed when serving initial files from the file system
directly.
0.3.8
Released 03/22/2015
Features:
Added icons + tray icons.
Bugfixes:
Prevent cypress.app from showing in taskbar.
Clicking on tray twice will toggle hide/show of app.
0.3.7
Released 03/21/2015
Features:
Code Signed Mac App to prevent "Unidentified Developer" message on open.
0.3.6
Released 03/20/2015
Features:
Added external link to changelog when checking for updates :-)
Bugfixes:
Force trailing slash on all
[CODE_BLOCK_5255]
to fix
relative links
[CODE_BLOCK_5256]
Fix sourceMappingURL browser bug
[CODE_BLOCK_5257]
Fix test titles not being escaped due to refactoring.
0.3.5
Released 03/20/2015
Bugfixes:
Fix missing
[CODE_BLOCK_5258]
from
[CODE_BLOCK_5259]
Fix missing trailing slash from initial
[CODE_BLOCK_5260]
requests.
Fix missing
[CODE_BLOCK_5261]
query param on initial redirects.
Misc:
Updated $.simulate to 1.0.1.
0.3.4
Released 03/19/2015
Features:
[CODE_BLOCK_5262]
now causes the subject to receive
[CODE_BLOCK_5263]
event.
[CODE_BLOCK_5264]
now causes previously
[CODE_BLOCK_5265]
elements to
receive
[CODE_BLOCK_5266]
event/
Typing
[CODE_BLOCK_5267]
now handles form submit logic as per the HTML spec.
Form with 1 input, no defaultButton.
Form with 2 inputs, no defaultButton.
Form with disabled defaultButton.
Form with multiple defaultButtons.
Correctly processes defaultButton click event, form submit event.
Intelligently handle defaultPrevented events from descendants.
Bugfixes:
[CODE_BLOCK_5268]
now returns a promise.
Misc:
Updated
[CODE_BLOCK_5269]
[CODE_BLOCK_5270]
0.3.3
Released 03/18/2015
Features:
Filtered out Ajax requests for
[CODE_BLOCK_5271]
[CODE_BLOCK_5272]
[CODE_BLOCK_5273]
files by default.
[CODE_BLOCK_5274]
can configure whether this is turned on or off.
Bugfixes:
Prevent
[CODE_BLOCK_5275]
from slurping up Angular async template GETs.
Misc:
Inlined Google Fonts into
[CODE_BLOCK_5276]
Contents
14.5.0
14.4.1
14.4.0
14.3.3
14.3.2
14.3.1
14.3.0
14.2.1
14.2.0
14.1.0
14.0.3
14.0.2
14.0.1
14.0.0
13.17.0
13.16.1
13.16.0
13.15.2
13.15.1
13.15.0
13.14.2
13.14.1
13.14.0
13.13.3
13.13.2
13.13.1
13.13.0
13.12.0
13.11.0
13.10.0
13.9.0
13.8.1
13.8.0
13.7.3
13.7.2
13.7.1
13.7.0
13.6.6
13.6.5
13.6.4
13.6.3
13.6.2
13.6.1
13.6.0
13.5.1
13.5.0
13.4.0
13.3.3
13.3.2
13.3.1
13.3.0
13.2.0
13.1.0
13.0.0
12.17.4
12.17.3
12.17.2
12.17.1
12.17.0
12.16.0
12.15.0
12.14.0
12.13.0
12.12.0
12.11.0
12.10.0
12.9.0
12.8.1
12.8.0
12.7.0
12.6.0
12.5.1
12.5.0
12.4.1
12.4.0
12.3.0
12.2.0
12.1.0
12.0.2
12.0.1
12.0.0
11.2.0
11.1.0
11.0.1
11.0.0
10.11.0
10.10.0
10.9.0
10.8.0
10.7.0
10.6.0
10.5.0
10.4.0
10.3.1
10.3.0
10.2.0
10.1.0
10.0.3
10.0.2
10.0.1
10.0.0
9.7.0
9.6.1
9.6.0
9.5.4
9.5.3
9.5.2
9.5.1
9.5.0
9.4.1
9.4.0
9.3.1
9.3.0
9.2.1
9.2.0
9.1.1
9.1.0
9.0.0
8.7.0
8.6.0
8.5.0
8.4.1
8.4.0
8.3.1
8.3.0
8.2.0
8.1.0
8.0.0
7.7.0
7.6.0
7.5.0
7.4.0
7.3.0
7.2.0
7.1.0
7.0.1
7.0.0
6.9.1
6.9.0
6.8.0
6.7.1
6.7.0
6.6.0
6.5.0
6.4.0
6.3.0
6.2.1
6.2.0
6.1.0
6.0.1
6.0.0
5.6.0
5.5.0
5.4.0
5.3.0
5.2.0
5.1.0
5.0.0
4.12.1
4.12.0
4.11.0
4.10.0
4.9.0
4.8.0
4.7.0
4.6.0
4.5.0
4.4.1
4.4.0
4.3.0
4.2.0
4.1.0
4.0.2
4.0.1
4.0.0
3.8.3
3.8.2
3.8.1
3.8.0
3.7.0
3.6.1
3.6.0
3.5.0
3.4.1
3.4.0
3.3.2
3.3.1
3.3.0
3.2.0
3.1.5
3.1.4
3.1.3
3.1.2
3.1.1
3.1.0
3.0.3
3.0.2
3.0.1
3.0.0
2.1.0
2.0.4
2.0.3
2.0.2
2.0.1
2.0.0
1.4.2
1.4.1
1.4.0
1.3.0
1.2.0
1.1.4
1.1.3
1.1.2
1.1.1
1.1.0
1.0.3
1.0.2
1.0.1
1.0.0
0.20.3
0.20.2
0.20.1
0.20.0
0.19.4
0.19.3
0.19.2
0.19.1
0.19.0
0.18.8
0.18.7
0.18.6
0.18.5
0.18.4
0.18.3
0.18.2
0.18.1
0.18.0
0.17.12
0.17.11
0.17.10
0.17.9
0.17.8
0.17.7
0.17.6
0.17.5
0.17.4
0.17.3
0.17.2
0.17.1
0.17.0
0.16.5
0.16.4
0.16.3
0.16.2
0.16.1
0.16.0
0.15.4
0.15.3
0.15.2
0.15.1
0.15.0
0.14.3
0.14.2
0.14.1
0.14.0
0.13.9
0.13.8
0.13.7
0.13.6
0.13.5
0.13.4
0.13.3
0.13.2
0.13.1
0.13.0
0.12.8
0.12.7
0.12.6
0.12.5
0.12.4
0.12.3
0.12.2
0.12.1
0.12.0
0.11.13
0.11.12
0.11.11
0.11.10
0.11.9
0.11.8
0.11.7
0.11.6
0.11.5
0.11.4
0.11.3
0.11.2
0.11.1
0.11.0
0.10.8
0.10.7
0.10.6
0.10.5
0.10.4
0.10.3
0.10.2
0.10.1
0.10.0
0.9.6
0.9.5
0.9.4
0.9.3
0.9.2
0.9.1
0.9.0
0.8.1
0.8.0
0.7.6
0.7.5
0.7.4
0.7.3
0.7.2
0.7.1
0.7.0
0.6.14
0.6.13
0.6.12
0.6.11
0.6.10
0.6.9
0.6.8
0.6.7
0.6.6
0.6.5
0.6.4
0.6.3
0.6.2
0.6.1
0.6.0
0.5.15
0.5.14
0.5.13
0.5.12
0.5.11
0.5.10
0.5.9
0.5.8
0.5.7
0.5.6
0.5.5
0.5.4
0.5.3
0.5.2
0.5.1
0.5.0
0.4.7
0.4.6
0.4.5
0.4.4
0.4.3
0.4.2
0.4.1
0.4.0
0.3.15
0.3.14
0.3.13
0.3.12
0.3.11
0.3.10
0.3.9
0.3.8
0.3.7
0.3.6
0.3.5
0.3.4
0.3.3