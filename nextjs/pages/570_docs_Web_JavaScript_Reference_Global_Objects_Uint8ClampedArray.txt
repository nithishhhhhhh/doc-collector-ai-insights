SOURCE URL: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray
SCRAPED: 2025-06-19 18:15:17
================================================================================

--- CODE BLOCK 1 ---
Uint8ClampedArray
--- END CODE BLOCK ---
typed array represents an array of 8-bit unsigned integers clamped to 0–255. The contents are initialized to
--- CODE BLOCK 3 ---
Uint8ClampedArray
--- END CODE BLOCK ---
unless initialization data is explicitly provided. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).
--- CODE BLOCK 5 ---
Uint8ClampedArray()
--- END CODE BLOCK ---
is a subclass of the hidden
--- CODE BLOCK 6 ---
Uint8ClampedArray
--- END CODE BLOCK ---
class.
Constructor
--- CODE BLOCK 8 ---
Uint8ClampedArray.BYTES_PER_ELEMENT
--- END CODE BLOCK ---
Creates a new
--- CODE BLOCK 10 ---
Uint8ClampedArray
--- END CODE BLOCK ---
object.
Static properties
Also inherits static properties from its parent
--- CODE BLOCK 13 ---
Uint8ClampedArray.prototype
--- END CODE BLOCK ---
--- CODE BLOCK 14 ---
Uint8ClampedArray
--- END CODE BLOCK ---
Returns a number value of the element size.
--- CODE BLOCK 15 ---
Uint8ClampedArray.prototype.BYTES_PER_ELEMENT
--- END CODE BLOCK ---
in the case of
--- CODE BLOCK 17 ---
Uint8ClampedArray
--- END CODE BLOCK ---
Static methods
Inherits static methods from its parent
--- CODE BLOCK 18 ---
Uint8ClampedArray.prototype.constructor
--- END CODE BLOCK ---
Instance properties
Also inherits instance properties from its parent
--- CODE BLOCK 19 ---
Uint8ClampedArray
--- END CODE BLOCK ---
These properties are defined on
--- CODE BLOCK 20 ---
Uint8ClampedArray
--- END CODE BLOCK ---
and shared by all
--- CODE BLOCK 22 ---
// From a length
const uint8c = new Uint8ClampedArray(2);
uint8c[0] = 42;
uint8c[1] = 1337;
console.log(uint8c[0]); // 42
console.log(uint8c[1]); // 255 (clamped)
console.log(uint8c.length); // 2
console.log(uint8c.BYTES_PER_ELEMENT); // 1
// From an array
const x = new Uint8ClampedArray([21, 31]);
console.log(x[1]); // 31
// From another TypedArray
const y = new Uint8ClampedArray(x);
console.log(y[0]); // 21
// From an ArrayBuffer
const buffer = new ArrayBuffer(8);
const z = new Uint8ClampedArray(buffer, 1, 4);
console.log(z.byteOffset); // 1
// From an iterable
const iterable = (function* () {
yield* [1, 2, 3];
})();
const uint8cFromIterable = new Uint8ClampedArray(iterable);
console.log(uint8cFromIterable);
// Uint8ClampedArray [1, 2, 3]
--- END CODE BLOCK ---
instances.
--- CODE BLOCK 23 ---
// From a length
const uint8c = new Uint8ClampedArray(2);
uint8c[0] = 42;
uint8c[1] = 1337;
console.log(uint8c[0]); // 42
console.log(uint8c[1]); // 255 (clamped)
console.log(uint8c.length); // 2
console.log(uint8c.BYTES_PER_ELEMENT); // 1
// From an array
const x = new Uint8ClampedArray([21, 31]);
console.log(x[1]); // 31
// From another TypedArray
const y = new Uint8ClampedArray(x);
console.log(y[0]); // 21
// From an ArrayBuffer
const buffer = new ArrayBuffer(8);
const z = new Uint8ClampedArray(buffer, 1, 4);
console.log(z.byteOffset); // 1
// From an iterable
const iterable = (function* () {
yield* [1, 2, 3];
})();
const uint8cFromIterable = new Uint8ClampedArray(iterable);
console.log(uint8cFromIterable);
// Uint8ClampedArray [1, 2, 3]
--- END CODE BLOCK ---
Returns a number value of the element size.
--- CODE BLOCK 24 ---
Uint8ClampedArray
--- END CODE BLOCK ---
in the case of a
--- CODE BLOCK 27 ---
ArrayBuffer
--- END CODE BLOCK ---
[CODE_BLOCK_18]
The constructor function that created the instance object. For
[CODE_BLOCK_19]
instances, the initial value is the
[CODE_BLOCK_20]
constructor.
Instance methods
Inherits instance methods from its parent
[CODE_BLOCK_21]
Examples
Different ways to create a Uint8ClampedArray
Copy to Clipboard
[CODE_BLOCK_22]
Specifications
Specification
ECMAScript® 2026 Language Specification
table-49
Browser compatibility
See also
Polyfill of
[CODE_BLOCK_24]
[CODE_BLOCK_25]
JavaScript typed arrays
guide
[CODE_BLOCK_26]
[CODE_BLOCK_27]
[CODE_BLOCK_28]
Help improve MDN
Was this page helpful to you?
Learn how to contribute
This page was last modified on
Jun 12, 2024
MDN contributors
View this page on GitHub
Report a problem with this content