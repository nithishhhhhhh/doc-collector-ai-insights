SOURCE URL: https://playwright.dev/docs/intro#installation
SCRAPED: 2025-06-19 18:05:22
================================================================================

On this page
Introduction
Playwright Test was created specifically to accommodate the needs of end-to-end testing. Playwright supports all modern rendering engines including Chromium, WebKit, and Firefox. Test on Windows, Linux, and macOS, locally or on CI, headless or headed with native mobile emulation of Google Chrome for Android and Mobile Safari.
You will learn
How to install Playwright
What's Installed
How to run the example test
How to open the HTML test report
Installing Playwright
Get started by installing Playwright using npm, yarn or pnpm. Alternatively you can also get started and run your tests using the
VS Code Extension
yarn
pnpm
--- CODE BLOCK 1 ---
npm init playwright@latest
--- END CODE BLOCK ---
--- CODE BLOCK 3 ---
yarn create playwright
--- END CODE BLOCK ---
--- CODE BLOCK 5 ---
pnpm create playwright
--- END CODE BLOCK ---
Run the install command and select the following to get started:
Choose between TypeScript or JavaScript (default is TypeScript)
Name of your Tests folder (default is tests or e2e if you already have a tests folder in your project)
Add a GitHub Actions workflow to easily run tests on CI
Install Playwright browsers (default is true)
What's Installed
Playwright will download the browsers needed as well as create the following files.
--- CODE BLOCK 7 ---
playwright.config.tspackage.jsonpackage-lock.jsontests/  example.spec.tstests-examples/  demo-todo-app.spec.ts
--- END CODE BLOCK ---
playwright.config
is where you can add configuration for Playwright including modifying which browsers you would like to run Playwright on. If you are running tests inside an already existing project then dependencies will be added directly to your
--- CODE BLOCK 9 ---
package.json
--- END CODE BLOCK ---
--- CODE BLOCK 11 ---
tests-examples
--- END CODE BLOCK ---
folder contains a basic example test to help you get started with testing. For a more detailed example check out the
--- CODE BLOCK 12 ---
npx playwright test
--- END CODE BLOCK ---
folder which contains tests written to test a todo app.
Running the Example Test
By default tests will be run on all 3 browsers, Chromium, Firefox and WebKit using several workers. This can be configured in the
playwright.config file
. Tests are run in headless mode meaning no browser will open up when running the tests. Results of the tests and test logs will be shown in the terminal.
yarn
pnpm
--- CODE BLOCK 13 ---
npx playwright test
--- END CODE BLOCK ---
--- CODE BLOCK 15 ---
yarn playwright test
--- END CODE BLOCK ---
--- CODE BLOCK 17 ---
pnpm exec playwright test
--- END CODE BLOCK ---
See our doc on
Running Tests
to learn more about running tests in headed mode, running multiple tests, running specific tests etc.
HTML Test Reports
After your test completes, an
HTML Reporter
will be generated, which shows you a full report of your tests allowing you to filter the report by browsers, passed tests, failed tests, skipped tests and flaky tests. You can click on each test and explore the test's errors as well as each step of the test. By default, the HTML report is opened automatically if some of the tests failed.
yarn
pnpm
--- CODE BLOCK 19 ---
npx playwright show-report
--- END CODE BLOCK ---
--- CODE BLOCK 21 ---
yarn playwright show-report
--- END CODE BLOCK ---
--- CODE BLOCK 23 ---
pnpm exec playwright show-report
--- END CODE BLOCK ---
Running the Example Test in UI Mode
Run your tests with
UI Mode
for a better developer experience with time travel debugging, watch mode and more.
yarn
pnpm
--- CODE BLOCK 25 ---
npx playwright test --ui
--- END CODE BLOCK ---
--- CODE BLOCK 27 ---
yarn playwright test --ui
--- END CODE BLOCK ---
--- CODE BLOCK 29 ---
pnpm exec playwright test --ui
--- END CODE BLOCK ---
Check out or
detailed guide on UI Mode
to learn more about its features.
Updating Playwright
To update Playwright to the latest version run the following command:
yarn
pnpm
--- CODE BLOCK 31 ---
npm install -D @playwright/test@latest# Also download new browser binaries and their dependencies:npx playwright install --with-deps
--- END CODE BLOCK ---
--- CODE BLOCK 33 ---
yarn add --dev @playwright/test@latest# Also download new browser binaries and their dependencies:yarn playwright install --with-deps
--- END CODE BLOCK ---
--- CODE BLOCK 35 ---
pnpm install --save-dev @playwright/test@latest# Also download new browser binaries and their dependencies:pnpm exec playwright install --with-deps
--- END CODE BLOCK ---
You can always check which version of Playwright you have by running the following command:
yarn
pnpm
--- CODE BLOCK 37 ---
npx playwright --version
--- END CODE BLOCK ---
--- CODE BLOCK 39 ---
yarn playwright --version
--- END CODE BLOCK ---
--- CODE BLOCK 41 ---
pnpm exec playwright --version
--- END CODE BLOCK ---
System requirements
Latest version of Node.js 18, 20 or 22.
Windows 10+, Windows Server 2016+ or Windows Subsystem for Linux (WSL).
macOS 14 Ventura, or later.
Debian 12, Ubuntu 22.04, Ubuntu 24.04, on x86-64 and arm64 architecture.
What's next
Write tests using web first assertions, page fixtures and locators
Run single test, multiple tests, headed mode
Generate tests with Codegen
See a trace of your tests
Introduction
Installing Playwright
What's Installed
Running the Example Test
HTML Test Reports
Running the Example Test in UI Mode
Updating Playwright
System requirements
What's next