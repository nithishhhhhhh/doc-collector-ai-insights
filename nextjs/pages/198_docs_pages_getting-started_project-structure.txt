SOURCE URL: https://nextjs.org/docs/pages/getting-started/project-structure
SCRAPED: 2025-06-19 17:32:31
================================================================================

Menu
Using Pages Router
Features available in /pages
Using Latest Version
15.3.4
Using Pages Router
Features available in /pages
Using Latest Version
15.3.4
Pages Router
Getting Started
Project Structure
You are currently viewing the documentation for Pages Router.
Project Structure and Organization
This page provides an overview of
the folder and file conventions in Next.js, and recommendations for organizing your project.
Folder and file conventions
Top-level folders
Top-level folders are used to organize your application's code and static assets.
--- CODE BLOCK 5 ---
next.config.js
--- END CODE BLOCK ---
App Router
--- CODE BLOCK 6 ---
package.json
--- END CODE BLOCK ---
Pages Router
--- CODE BLOCK 7 ---
instrumentation.ts
--- END CODE BLOCK ---
Static assets to be served
--- CODE BLOCK 8 ---
middleware.ts
--- END CODE BLOCK ---
Optional application source folder
Top-level files
Top-level files are used to configure your application, manage dependencies, run middleware, integrate monitoring tools, and define environment variables.
Next.js
--- CODE BLOCK 11 ---
.env.production
--- END CODE BLOCK ---
Configuration file for Next.js
--- CODE BLOCK 12 ---
.env.development
--- END CODE BLOCK ---
Project dependencies and scripts
--- CODE BLOCK 13 ---
.eslintrc.json
--- END CODE BLOCK ---
OpenTelemetry and Instrumentation file
--- CODE BLOCK 15 ---
next-env.d.ts
--- END CODE BLOCK ---
Next.js request middleware
--- CODE BLOCK 16 ---
tsconfig.json
--- END CODE BLOCK ---
Environment variables
--- CODE BLOCK 17 ---
jsconfig.json
--- END CODE BLOCK ---
Local environment variables
--- CODE BLOCK 42 ---
folder/index
--- END CODE BLOCK ---
Production environment variables
--- CODE BLOCK 54 ---
[folder]/index
--- END CODE BLOCK ---
Development environment variables
--- CODE BLOCK 58 ---
[...folder]/index
--- END CODE BLOCK ---
Configuration file for ESLint
--- CODE BLOCK 62 ---
[[...folder]]/index
--- END CODE BLOCK ---
Git files and folders to ignore
--- CODE BLOCK 74 ---
[[...file]]
--- END CODE BLOCK ---
TypeScript declaration file for Next.js
[CODE_BLOCK_16]
Configuration file for TypeScript
[CODE_BLOCK_17]
Configuration file for JavaScript
Files conventions
[CODE_BLOCK_18]
[CODE_BLOCK_19]
[CODE_BLOCK_20]
[CODE_BLOCK_21]
Custom App
[CODE_BLOCK_22]
[CODE_BLOCK_23]
[CODE_BLOCK_24]
[CODE_BLOCK_25]
Custom Document
[CODE_BLOCK_26]
[CODE_BLOCK_27]
[CODE_BLOCK_28]
[CODE_BLOCK_29]
Custom Error Page
[CODE_BLOCK_30]
[CODE_BLOCK_31]
[CODE_BLOCK_32]
[CODE_BLOCK_33]
404 Error Page
[CODE_BLOCK_34]
[CODE_BLOCK_35]
[CODE_BLOCK_36]
[CODE_BLOCK_37]
500 Error Page
Routes
Folder convention
[CODE_BLOCK_38]
[CODE_BLOCK_39]
[CODE_BLOCK_40]
[CODE_BLOCK_41]
Home page
[CODE_BLOCK_42]
[CODE_BLOCK_43]
[CODE_BLOCK_44]
[CODE_BLOCK_45]
Nested page
File convention
[CODE_BLOCK_46]
[CODE_BLOCK_47]
[CODE_BLOCK_48]
[CODE_BLOCK_49]
Home page
[CODE_BLOCK_50]
[CODE_BLOCK_51]
[CODE_BLOCK_52]
[CODE_BLOCK_53]
Nested page
Dynamic routes
Folder convention
[CODE_BLOCK_54]
[CODE_BLOCK_55]
[CODE_BLOCK_56]
[CODE_BLOCK_57]
Dynamic route segment
[CODE_BLOCK_58]
[CODE_BLOCK_59]
[CODE_BLOCK_60]
[CODE_BLOCK_61]
Catch-all route segment
[CODE_BLOCK_62]
[CODE_BLOCK_63]
[CODE_BLOCK_64]
[CODE_BLOCK_65]
Optional catch-all route segment
File convention
[CODE_BLOCK_66]
[CODE_BLOCK_67]
[CODE_BLOCK_68]
[CODE_BLOCK_69]
Dynamic route segment
[CODE_BLOCK_70]
[CODE_BLOCK_71]
[CODE_BLOCK_72]
[CODE_BLOCK_73]
Catch-all route segment
[CODE_BLOCK_74]
[CODE_BLOCK_75]
[CODE_BLOCK_76]
[CODE_BLOCK_77]
Optional catch-all route segment
Was this helpful?
supported.
Send