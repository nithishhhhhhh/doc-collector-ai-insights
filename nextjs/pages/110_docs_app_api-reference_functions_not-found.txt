SOURCE URL: https://nextjs.org/docs/app/api-reference/functions/not-found
SCRAPED: 2025-06-19 17:22:02
================================================================================

Menu
Using App Router
Features available in /app
Using Latest Version
15.3.4
Using App Router
Features available in /app
Using Latest Version
15.3.4
API Reference
Functions
notFound
notFound
--- CODE BLOCK 2 ---
not-found file
--- END CODE BLOCK ---
function allows you to render the
--- CODE BLOCK 3 ---
<meta name="robots" content="noindex" />
--- END CODE BLOCK ---
within a route segment as well as inject a
--- CODE BLOCK 6 ---
NEXT_HTTP_ERROR_FALLBACK;404
--- END CODE BLOCK ---
tag.
--- CODE BLOCK 7 ---
import { notFound } from 'next/navigation'
async function fetchUser(id) {
const res = await fetch('https://...')
if (!res.ok) return undefined
return res.json()
export default async function Profile({ params }) {
const { id } = await params
const user = await fetchUser(id)
if (!user) {
notFound()
// ...
--- END CODE BLOCK ---
Invoking the
--- CODE BLOCK 8 ---
import { notFound } from 'next/navigation'
async function fetchUser(id) {
const res = await fetch('https://...')
if (!res.ok) return undefined
return res.json()
export default async function Profile({ params }) {
const { id } = await params
const user = await fetchUser(id)
if (!user) {
notFound()
// ...
--- END CODE BLOCK ---
function throws a
--- CODE BLOCK 10 ---
return notFound()
--- END CODE BLOCK ---
error and terminates rendering of the route segment in which it was thrown. Specifying a
not-found
file
allows you to gracefully handle such errors by rendering a Not Found UI within the segment.
app/user/[id]/page.js
[CODE_BLOCK_7]
Good to know
[CODE_BLOCK_9]
does not require you to use
[CODE_BLOCK_10]
due to using the TypeScript
[CODE_BLOCK_11]
type.
Version History
Version
Changes
[CODE_BLOCK_12]
[CODE_BLOCK_13]
introduced.
Was this helpful?
supported.
Send