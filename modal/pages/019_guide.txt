URL: https://modal.com/docs/guide
==================================================

Introduction
Custom container images
Defining Images
Private registries
Fast pull from registry
GPUs and other resources
GPU acceleration
Using CUDA on Modal
Reserving CPU and memory
Scaling out
Scaling out
Input concurrency
Batch processing
Job queues
Dynamic batching (beta)
Dicts and queues
Scheduling and cron jobs
Deployment
Apps, Functions, and entrypoints
Managing deployments
Invoking deployed functions
Continuous deployment
Running untrusted code in Functions
Secrets and environment variables
Secrets
Environment variables
Web endpoints
Web endpoints
Streaming endpoints
Web endpoint URLs
Request timeouts
Webhook tokens (beta)
Networking
Tunnels (beta)
Proxies (beta)
Cluster networking
Data sharing and storage
Passing local data
Volumes
Storing model weights
Dataset ingestion
Cloud bucket mounts
Sandboxes
Sandboxes
Running commands
Networking and security
File access
Snapshots
Performance
Cold start performance
Memory Snapshot (beta)
Geographic latency
Reliability and robustness
Failures and retries
Preemption
Timeouts
Troubleshooting
Security and privacy
Integrations
Using OIDC to authenticate with external services
Connecting Modal to your Datadog account
Connecting Modal to your OpenTelemetry provider
Okta SSO
Slack notifications (beta)
Workspace & account settings
Workspaces
Environments
Modal user account setup
Service users
Other topics
Modal 1.0 migration guide
File and project structure
Developing and debugging
Jupyter notebooks
Asynchronous API usage
Global variables
Region selection
Container lifecycle hooks
Parametrized functions
S3 Gateway endpoints
GPU Metrics
Introduction
Modal is a cloud function platform that lets you:
Run any code remotely within seconds.
Define
container environments
in code (or use one of our pre-built backends).
Scale out horizontally
to thousands of containers.
Attach
GPUs
with a single line of code.
Serve your functions as
web endpoints
Deploy and monitor
persistent scheduled jobs
Use powerful primitives like
distributed dictionaries and queues
You get
full serverless execution and pricing
, because we host everything and charge per second of usage. Notably, there’s zero configuration in Modal - everything is code. Take a breath of fresh air and feel how good it tastes with no YAML in it.
Getting started
The nicest thing about all of this is that
you don’t have to set up any
infrastructure.
Just:
Create an account at
modal.com
pip install modal
to install the
modal
Python package
modal setup
to authenticate (if this doesn’t work, try
python -m modal setup
…and you can start running jobs right away. Check out some of our simple getting started examples:
Hello, world!
A simple web scraper
You can also learn Modal interactively without installing anything through our
code playground
How does it work?
Modal takes your code, puts it in a container, and executes it in the cloud.
Where does it run? Modal runs it in its own cloud environment. The benefit is
that we solve all the hard infrastructure problems for you, so you don’t have to
do anything. You don’t need to mess with Kubernetes, Docker or even an AWS
account.
Modal is currently Python-only, but we may support other languages in the
future.
Introduction
Getting started
How does it work?
See it in action
Hello, world!
A simple web scraper