FIGMA DOCUMENTATION
==================

--- Before you Start ---
Before you Start
Who can use this feature
Users on
any team or plan
Users with
can edit
access to a file can set up files for developer handoff
Users with
can view
access to a file can only access the
Inspect
panel and the layers list
Want to learn how other companies are approaching Developer Handoff?  Check out our blog post:
A Guide to Developer Handoff
While handing off designs to developers frequently happens after a major project milestone, here are some things you can do earlier in the design process to set up your files to improve handoff.
Set up files for Collaboration
There are lots of different ways to collaborate in Figma. We've rounded up a few tips that we've used ourselves, or seen in action.
Files
Right-click any frame and
set a custom thumbnail
so you can identify files at a glance. The thumbnail can also include information such as the project's current status.
Link to Figma Design files
in your project specification documents or project plans.
Create "sticky note" components
and add them to the canvas to explain or draw attention to design decisions.
Apply Export Settings
to frames, Components and Assets your Developers may need to export for the final production build.
Pages
Name pages
descriptively to let others know what's ready for development.
Create a single page with Instances of all your components. Collaborators only have to check this page, as you make changes to your components.
Right-click on a component and choose
Move to Page
or check out the
Component Page
plugin.
Sections
Organize files with sections
for easier navigation.
Mark content as “Ready for development” to help with developer handoff.
Styles and components
Give
Styles
relevant and descriptive names.
Add component documentation to your design system. Collaborators can use
Go to Main Component
to learn more about how to use it.
Name layers and components based on their IDs
Add meaningful descriptions to components
When and how collaborators can use them
Any variants or states
Accessibility and contrast guidance
Want to a bit more detail?
Check out our
Tips for a better developer workflow
post.
Invite collaborators to files and prototypes
You can invite collaborators to a prototype, or to the file itself.
Share a prototype
Invite a collaborator to a file
When inviting someone to a file, you can choose to give them
can view
can edit
access. In most situations, inviting a collaborator with
can view
access will be enough.
Users with view access can:
Select layers from the Layers panel or canvas
View properties of selected layers in the Inspect panel
Copy text content from Text objects
Measure distances between objects in the canvas
Add or reply to comments in files and prototypes
View Prototypes in Presentation View
Access components via the Go to Main Component link
Link Dev resources to layers in Dev Mode
Note:
You have the option to
allow users with view access to copy and share
the contents of a file. If you enable this, those with view access will not be able to explore or export assets from a file.
Learn how to view code for your designs →

--- Before you Start ---
Before you Start
Who can use this feature
Available on all paid plans
Requires a
Full
or a
Dev seat
Dev Mode in Figma gives you everything you need to navigate design files and transform designs into code. With Dev Mode, designers and developers can stay on the same page, making sure important details aren’t lost in the handoff process.
Developers use Dev Mode to:
Access advanced inspection capabilities and more codegen languages
Make sure they’re building with the latest specs by easily comparing frame versions
Quickly review designs that are ready for development with statuses and annotations
Streamline workflows with developer-focused integrations, like JIRA, Storybook and GitHub
Explore all variants in a component set without editing the file
Link designs to tickets, documentation, and code components
Inspect designs and write code side-by-side using the Figma for VS Code extension
Enter Dev Mode
Dev Mode is a developer-focused interface for inspecting and navigating designs. You can access Dev Mode in any Figma Design file. To toggle between Design Mode and Dev Mode:
Open a Figma Design file.
Click the
Dev Mode toggle or use the keyboard shortcut
Shift
Note:
You are automatically dropped into Dev Mode when you open a Figma Design file with a Dev Mode link.
Navigate
In Dev Mode, the left sidebar provides an easy way to move between designs marked as ready for development.
View which assets are ready for development
The Dev Mode icon indicates which pages contain frames, components, instances, and sections marked ready for dev. Objects on the canvas marked as ready appear under
Ready for development
in the Dev Mode layers panel.
To mark an asset as ready for dev:
While in Dev Mode, select a frame, component, instance, or section.
Click
Mark as ready for dev
in the toolbar.
Additionally, if you have a full, dev, or viewer seat in an org or enterprise, Dev Mode provides a
view
of designs that are marked ready for dev. The ready for dev view appears only when one or more designs in the file have a dev status.
Know when a frame was last edited
You can see when a frame was last edited under the frame’s name in the navigation panel.
Navigate frames and layers
In Design Mode, anyone can group related content into sections and mark sections as ready for development. Dev Mode will prioritize content in a section. Any content outside of a section is still visible in the left sidebar, but is collapsed by default.
Click a frame in the left sidebar to center it on the canvas. Select the frame on the canvas to view the layers nested inside it. Selecting a frame changes the navigation panel to a layers panel and only shows the layers for the currently selected top-level frame.
Navigate frames and layers in Dev Mode ->
Note:
You can
access version history
from the file name menu while in Dev Mode to view and inspect any version of a design file.
Inspect
The inspect panel displays design specs and relevant component information needed to understand a design and transform it into code.
View layer names and types
The selected layer's name is displayed at the top of the inspect panel, along with its layer type (component, instance, frame, text, etc.). You can also see when the layer was last updated.
Compare design changes
If changes have been made to a design,
Compare changes
will appear below the layer information in the inspect panel. Click the link to open the frame history modal where you can compare current version to previous versions of the design.
In the case of component instances,
Compare with main component
appears below the layer information in the inspect panel. You can also compare a
detached component
to previous versions, and to the main component it was once linked to. You can clear its detachment history to avoid seeing information about its original main component.
Compare changes in Dev Mode
Add external links and resources for developers
Both designers and developers can add links to external resources that may help with the implementation of a component. This can include GitHub, Jira, and Storybook links, as well as VS Code links that can be used with the
Figma for VS Code extension
. Dev resources added to components propagate to all the instances of that component.
Add resource links to layers in Dev Mode
View component information
When you select a component, the inspect panel displays information and metadata about the component, including keywords, the layout of the main component, variant information, and component properties.
Try component variations in the component playground
When you select a component or instance,
Explore component behavior
appears below the component information. Click
Explore component behavior
to open the component playground. Use the playground to experiment with the component's different properties and variable modes without changing the actual design.
Get recommended code with Code Connect
Code Connect is a tool for design systems and engineering teams to bring component code into Dev Mode. When inspecting a component with connected code snippets, developers will see design system code from their libraries instead of auto-generated code. Use Code Connect to:
Make custom component code easily available to drive design system adoption
Map out variants and properties of a design component in code for consistency across product teams
Create examples for specific component use cases to help developers understand its correct usage
Custom code snippets build on the Figma API and are fully customizable to support multiple design systems, products, and languages.
Check out the Code Connect overview to learn how to connect custom code snippets to components.
Note:
Code Connect is available on Organization and Enterprise plans.
View layer properties
The layer properties section of the inspect panel contains detailed information about the layer you've selected. The information includes the layout and spacing of the layer, layer properties represented either as a list or as code, colors used in the layer, and any prototype interactions that have been applied to the layer. Use the toggle in the layer properties section to swap between
Code
(default) and
List
Customizable code snippets
When you toggle to
Code,
the inspect panel displays autogenerated code snippets for the layer.
You can select the language and units to view in the canvas and generated code, as well as extend the functionality of code snippets with codegen plugins. To change the language or select a codegen plugin:
In the top-right of the
Code
section, select a language or plugin from the dropdown.
For settings specific to that language, such as changing the unit of measure for CSS, scroll to the bottom of the dropdown and select the settings you want.
Learn how to use code snippets in Dev Mode
List properties and values
When you toggle to
List
, the inspect panel displays a list of properties that are set for the layer and the corresponding values for those properties. You can click on the values to copy them to your clipboard.
View applied styles
View styles and variables applied to the selected layer. Additionally, you can
view details about variables
, and get
suggested variables
Download assets
Dev Mode can automatically detect icons and present them as downloadable assets for developers. If you want to inspect an individual vector layer contained in an icon, you can turn off automatic icon detection:
Click
Main menu
in the toolbar
Hover over
View
in the dropdown
Deselect
Automatically detect icons
The
Assets
section will also allow you to download GIF image and MP4 video nodes, and the
source file of an image
at its full resolution.
Export
You can apply export settings to layers to define the format and any other export settings. Figma supports the following export formats: PNG, JPG, SVG, and PDF.
Learn more about exports in Figma.
Note:
You can access
layout guides
rulers
, and
layer outlines
in Dev Mode.
Annotate
Designers can use annotations to markup designs with additional context, specs, and measurements. This makes it easy for developers to make sure they don’t miss any crucial callouts during handoff. Use annotations and measurements in Dev Mode to:
Surface important properties so developers can't miss them
Help developers quickly visualize spacing and sizing
Add additional context with text notes connected directly to the designs
Learn how to add measurements and annotate designs in Dev Mode →
Manage dev handoff
When you have sections, frames, and components that are
marked ready for dev
, you can take advantage of Dev Mode’s ready for dev and focus views to help manage your developer handoff process:
Ready for dev view provides an easy way to explore all designs in a file that are marked ready for dev. You can filter and see all your designs that are marked ready for dev.
Learn more about ready for dev view and the handoff process →
Focus view shows only one design that’s ready for dev at a time. You can use all of your usual Dev Mode tools, explore the layers of the design, and find important info like an annotated version history.
Learn more about focus view →
Dev Mode statuses and notifications
Statuses and notifications in Dev Mode help to manage developer handoff.
Statuses
are used to track when sections, frames, or components are ready for development.
Notifications
are based on status changes so developers can react to the state of designs.
Statuses
All plans that provide Dev Mode include the
Ready for dev
status. You can set the
Ready for dev
status on components, frames, and sections, to indicate that the design is ready for development. An additional status,
Completed
, is available if you're on an Organization or Enterprise plan.
For more information, such as how to use statuses, see
Dev Mode statuses and notifications
Notifications
If you’ve viewed a file in Dev Mode and have either a Full or Dev seat, you’ll be notified each time a design is marked ready for dev in that file. This includes the first time a design marked ready for dev, as well as when the ready for dev status is removed and then set again.
For more information, including how to turn Dev Mode notifications on and off, see
Dev Mode statuses and notifications
Use Dev Mode plugins
Dev Mode plugins help you automate tasks and connect other tools for documentation and communication. For example:
Stay on track with development tasks by syncing with Jira across Figma, FigJam and Dev Mode
Connect your Figma Design system and design system in code with Storybook
Link designs to code, so they always stay in sync, by bringing Github into Figma.
Customize code output (for Tailwind or React) or for your own code components
The
Plugins
tab in Dev Mode shows your recently used plugins, as well as recommended plugins from the Figma Community.
Learn how to use plugins in files →
Check out the
Plugins for Dev Mode playground file
to learn about Dev Mode plugins hands-on.
Figma for VS Code
Figma for VS Code lets you navigate and inspect design files, collaborate with designers, track design changes, and speed up design implementation - all without leaving your text editor. Improve developer productivity by eliminating the context switching and busy work needed to turn designs into code.
See and respond to comments and activity in real time
Get code suggestions based on designs
Link code files to design components
Learn more about the Figma for VS Code extension →

--- Note: ---
Note:
Figma AI is currently in
open beta
. AI features are currently free while in beta, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Figma Design AI tools are available on
paid plans
Requires a Full seat to use AI tools in Figma Design.
AI outputs may be misleading or wrong. The information provided by the tools should be regarded as a general reference and not a fact or a substitute for expert advice or your own research.
Learn more about accuracy and responsibilities when using Figma AI
Figma AI helps you get started faster, find what you're looking for, and stay in the flow. In this article, you can explore all the AI features available in Figma Design.
You can access Figma AI tools using
Actions
in the Figma Design toolbar. If an admin has
disabled Figma AI for your team or organization
, you won’t be able to use these features.
Tip
: You can also use AI tools in other Figma products.
Learn more about Figma AI and see a breakdown of AI features available by product
AI tools in Figma Design
First Draft
First Draft with Figma AI lets you transform an idea into editable designs in a couple of minutes.
This helps you explore a wider range of design possibilities and iterations quickly, and reduces the amount of effort needed to manually create early explorations from scratch.
Learn more about First Draft.
Find assets and designs
Figma AI can help you track down designs from across your team, organization or within Figma Community files.
Start a search using part of a design, a screenshot, or just a description.
Learn more about finding assets and designs.
Replace content
Replace placeholder or duplicate text with unique, realistic content.
Learn more about replacing content with AI.
Add interactions
Quickly turn your designs into an interactive prototype.
Learn more about adding interactions with AI.
Rename layers
Organize your file by giving all your layers meaningful names with a click.
Learn more about renaming layers with AI.
Rewrite, translate, and shorten text
Rewrite text to give it a different tone, translate it to another language, or shorten it to fit your designs.
Learn more about updating text with AI.
Make and edit images
Generate and edit unique images using a written prompt.
Learn more about making an image with AI.
Text suggestions
Use context-aware suggestions to complete your text strings, saving time and effort as you design.
Learn more about text suggestions
Remove background
Remove an image’s background to isolate the main subject.
Learn more about removing an image background with AI.
Boost resolution
Improve sharpness and clarity of low-resolution images.
Learn more about boosting resolution with AI.
Troubleshooting
Something not working as expected? Check out our guide to
Troubleshooting AI tools.
AI considerations and best practices
When it comes to building AI, we want to be transparent about what we’re doing and what this means for you.
Learn more about Figma’s approach to AI.
There are a few things to keep in mind when using any AI tool:
Accuracy
AI-powered tools are designed to provide information and results based on artificial intelligence algorithms and identify patterns and relationships from large amounts of data. It’s important to note that the accuracy and reliability of these results may vary.
There is a possibility of inaccuracies, omissions, or misleading outcomes due to the complexities and limitations of AI technologies. Therefore, the information provided by the tool should be regarded as a general reference and not a fact or a substitute for expert advice or your own research.
Your responsibilities
You should exercise your own judgment and discretion when using AI-powered tools. It’s essential to verify and cross-check the information provided by the tool before making any decisions, taking actions, or relying on it for critical matters.
You should let others know when you’re using or presenting AI-generated outputs. For some features, like summarize stickies, Figma will indicate when an output is AI-generated.
You will only use AI features in accordance with
Figma’s Acceptable Use Policy

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone can import files into their drafts
Starter and Professional plans
: Anyone with
can edit
access to a project can import files to the project
Organization and Enterprise plans:
Anyone with a paid seat and
can edit
access to a project can import files to the project
You can import the following file types using the file browser:
Sketch files
(.sketch)
Figma Design files (.fig)
FigJam files (.jam)
Figma Slides files (.deck)
PNG and JPG files
PowerPoint files
(.pptx)
Tip:
You can also import static image formats, GIF, and video file formats directly into a Figma Design file. Learn more about adding
images and video to design files
Import files to the file browser
From the
file browser
, open the
Create new
dropdown menu and select
Import
Click
Import from computer
Select the files you want to import and click
Open
. Depending on the file size, the import process may take a few seconds.
Click
Done
Note:
You can also drag and drop files from your computer to import them to the file browser.

--- Before you Start ---
Before you Start
Who can use this feature
Variables in prototypes and publishing variables to team libraries are available on the
education plan and any paid plans
Anyone with
can edit
access to a file can create and manage variables
Anyone with access to a file can use variables from that file in their designs
Variables in Figma Design store reusable values that can be applied to all kinds of design properties and prototyping actions. They help save time and effort when building designs, managing design systems, and creating complex prototyping flows.
For example, you can:
Create design tokens for better efficiency when managing design systems
Switch a frame between different device sizes and have spacing immediately update, according to a defined spatial system
Preview how text flows in different languages by switching copy on a frame
Create a fully functional checkout cart design that calculates order total based on which items were added to the cart
Build a prototype of an interactive quiz that uses conditional logic to show whether a user answers a questions correctly or incorrectly
There are three main ways to use variables in Figma:
Designs and design systems ↓
Advanced prototyping ↓
Figma APIs ↓
Variables for designs and design systems
Use variables and modes to implement design tokens for your design system, switch designs between different contexts—such as light/dark themes. With variables, you can design more efficiently and build a more powerful design system.
Figma tutorial: Intro to variables
This video tutorial covers the foundations of variables, how to use them to represent design tokens, and how to use color and number variables to account for different modes and themes.
Figma tutorial: Variables for typography
In this video tutorial, learn how to use variables on font properties, adopt variables into an existing type system, and how to use them to power a responsive design.
Article:
Overview of variables, collections, and modes →
Start your variables journey here! Learn about the different types of variables and what variable collections and modes are.
Article:
Create and manage variables →
Learn how to create variables and collections, reference other variable definitions, and scope which variables can be used in designs.
Article:
Apply variables to designs →
Learn how to apply existing variables to design properties.
Article:
Modes for variables →
Learn how to create multiple definitions for a variable, each one associated with a mode. Also, learn how to use them to quickly switch the contexts of designs.
Article:
The difference between variables and styles →
As Figma extends its feature set with variables, you might be wondering: What is the difference between variables and styles? When should I choose one over the other?
Article:
Variables in Dev Mode →
Learn more about accessing variables in Dev Mode while inspecting designs, including getting variable details and suggested variables, and viewing local collections using the variables table.
Community file:
Variables playground →
Want to get hands-on experience with variables? Grab a copy of the variables playground file to practice while you learn.
Variables for advanced prototyping
With variables, you can build high-fidelity prototypes using fewer frames. Use variables with other advanced features like expressions and conditionals to take your prototypes to the next level.
In prototyping, variables are used to store object states or properties. Use prototype interactions to modify variable values, which can change the appearance, content, or visibility of objects in a design—all in a few simple frames.
Video tutorial: Prototype with variables
Watch and learn how to use variables in prototypes by following along with a realistic example. You’ll review how to modify variable values, how to build simple expressions, and how to use multiple actions and if/else logic to evaluate conditional checks.
Article:
Use variables in prototypes →
Learn the basics of how to prototype with variables in Figma—including how to configure your variables, use the
Set variable
action to change variable values, and use variables with component variants and interactive components.
Article:
Use expressions in prototypes →
Learn how to use expressions and variables in prototypes to generate dynamic string values, perform basic math operations with number values, or even evaluate boolean expressions.
Article:
Multiple actions and conditionals →
Learn how to use multiple actions to stack an unlimited number of actions on the same trigger, or use conditionals to check if a condition is met before performing an action by using if/else logic.
Article:
Variable modes in prototypes →
Learn how to use variable modes in your prototypes. You can set the values of specific modes based on context, or use specific mode values in your expressions.
Community file:
Advanced prototyping playground →
Make a copy of our advanced prototyping playground file to get some more hands-on practice with variables in prototyping.
Variables using APIs
Variables are now supported in Figma’s Plugin API—for building plugins and widgets—and in the REST API.
Developer docs:
For the REST API →
Support for variables in the REST API includes endpoints for querying, creating, updating, and deleting variables.
Developer docs:
For the plugin API →
Support for variables in the plugin API includes creating and reading variables, and binding variables to components. For example, a plugin can be built to
import or export variables
or to
convert styles to variables
Developer docs:
For the widget API →
Widgets can access variables using the Plugin API. Widgets can create and read variables, but widget properties cannot be bound to variables.
Figma tutorial: Sync variable to GitHub
In this video tutorial, learn how to sync your variables with your codebase. We'll cover how to use our Variables GitHub Action example repo to sync your Figma variables and your codebase.
Community file:
Syncing design systems using Variables REST API →
Learn how you can use Figma's variables REST API
to set up automated workflows to sync changes between design files and your codebase.

--- Who can use this feature ---
Who can use this feature
Supported
any team or plan
Anyone with
can edit
access can rearrange layers using smart selection
Smart selection
lets you quickly adjust the arrangement, or spacing between a selection of two or more layers. Use Smart selection to:
Uniformly adjust the vertical and horizontal spacing between layers
Create uniform or non-uniform grids from a selection of layers
Rearrange or reorder layers in a row, column, or grid
Duplicate or delete layers from a selection and have other layers reflow
Smart selection reduces the need for tedious repetitious tasks, saving you time and allowing you to build and arrange layouts faster.
Make a Smart selection
To make a Smart selection, all layers must be an equal distance apart and overlap on either the x or y axis (1D), or both (2D). If layers aren't an equal distance apart, you can
use the Tidy up tool
to rearrange layers and create a Smart selection.
Figma supports smart selections in both one and two dimensions. One dimensional (1D) Smart selections have layers that overlap on one axis, like layers arranged in a column or row. Two dimensional (2D) Smart selection have layers that overlap on both axes, like layers arranged in a grid or table.
Select any layers you'd like to include in the Smart selection. Layers don't need to be the same size or shape. You can select individual layers, groups, frames, or components.
Select layers and objects.
Figma adds smart handles to your selection on the canvas. Each distinct object has a pink ring in the center of it.
When you hover over your Smart selection, additional pink handles will appear between each layer. These handles allow you to adjust the vertical or horizontal spacing between layers.
Adjust layers in a smart selection
Once you've made your selection, you can make changes to individual layers within your selection. This allows you to move, add or delete layers, without leaving the selection.
Adjust space between
Move or reorder
Duplicate layers
Resize layers
Delete layers
You can choose which layers in the selection you'd like to adjust by marking them. The smart handle for marked layers is a solid pink circle.
Select a layer within the Smart selection to mark it for resizing.
To mark multiple layers, hold down
Shift
and click another layer to mark.
To mark all layers in a 1D selection, double-click on any layer.
To mark all layers on the same axis in a 2D selection, hold
Shift
and double-click on any layer. Double-click again to select all layers in the selection.
Adjust space between
Adjust the vertical or horizontal space between layers in your selection. You can adjust spacing on the canvas using the smart handles, or use the space between field in the right sidebar.
Canvas
Hover over one of the smart handles between layers. An arrow will appear where the cursor was.
Click and drag the handle to adjust the space between layers. A tooltip above your cursor shows the current space between layers, in pixels.
to decrease the vertical space
Down
to increase the vertical space
Left
to decrease the horizontal space
Right
to increase the horizontal space
Release the cursor to apply your changes.
Tip:
Hold down
Shift
while scrolling to adjust the increments by the amount specified in your
Big nudge
settings.
Learn more about setting custom nudge values.
Right sidebar
You can also update the space between property from the Layout section of the right sidebar. Depending on your selection, you'll see two fields in the sidebar.
Enter a number directly in the field, or hover the cursor over the icon to scrub the field.
horizontal space between
vertical space between
Reorder or rearrange layers
You can also change the order or position that layers appear in a Smart selection. You can rearrange a single layer in a 2D selection, or multiple layers in a 1D selection.
Click on the pink ring on the center of the layer to mark it. The smart handle for marked layers is a solid pink circle.
For 1D Selections only:
Hold down the
Shift
key and click on another layer to also mark it.
Click and drag the layers(s) to another location within the selection. A blue indicator shows you where you can move the layer to.
Release to confirm the new position of the layers.
Things to note:
Rearranging layers in the selection doesn't change the layer hierarchy in the Layers panel.
If you are using Smart selection with frames, you can use the
Resize to fit
to adjust the frame to the size of the layers within it. Resize to fit is in the positioning section of the right sidebar.
2D Smart selections work more like lists within lists, versus a perfect grid layout. The default behavior when rearranging 2D selections, is to add new layers to an existing column or row.
If you would like to swap one layer's position for another, you can hold down the
Command
(Mac) or
Ctrl
(Windows) key.
Duplicate layers
You can create a duplicate of any layer within a Smart selection. You can duplicate more than one layer at a time in either a 1D or 2D selection.
Make your Smart selection.
Click the pink handle on the center of a layer to mark it. Hold down
Shift
and click to select more layers.
Duplicate the layer using any of the following methods:
Use the Keyboard shortcut:
Mac:
Windows:
Ctrl
Open the main menu and search for
Duplicate Selection in Place
Figma will copy the layer and paste it next to the original layer. The other layers in the smart selection will move to accommodate it.
What to expect:
For layers in a 1D selection (row): Figma places the duplicated layer to the right of the original.
For layers in a 1D selection (column), Figma places the duplicated layer below the original.
For layers in a 2D selection (grid), Figma places the duplicated layer below the original.
Resize layers
Smart selection lets you resize layers within the selection, while maintaining an equal distance between layers. For example, you can adjust the height of the layer to indicate a longer message in the newsfeed. Figma will reposition other layers to keep the spacing consistent between layers.
Note:
You can resize one layer within a 2D selection, or multiple layers within a 1D selection.
Tip!
To resize a layer from the center, hold down
Option
(Mac) or
Alt
(Windows).
Delete layers
You can also delete individual layers within a Smart selection. You can delete more than one layer at a time within either a 1D or 2D Smart selection.
Make your smart selection.
Click the pink handle in the center of a layer to mark it. Hold down
Shift
and click on another layer to mark it.
Delete marked layers by pressing the
Delete
Backspace
key on your keyboard.
The other layers in the selection will rearrange to fill the gap created.
What to expect:
For layers in a horizontal 1D selection: layers move to the left to fill any space created.
For layers in a vertical 1D selection: layers will move up to fill any space created.
For layers in a 2D selection: layers will move up to fill any space created.

--- Before you start ---
Before you start
Who can use this feature
Available on
any team or plan
Anyone with
can edit
access to the file can adjust prototype settings.
You can control how a prototype appears to users in both
presentation view
and
inline preview
. This can help make a prototype feel more realistic, or on-brand.
Access prototype settings
To access prototype settings:
Deselect any objects by clicking an empty part of the canvas.
Select the
Prototype
tab in the right sidebar.
Device:
Customize the device type, orientation, and model used in presentation view.
Background:
Set the background color when playing prototypes in presentation view.
Flows
: View and manage prototype flows on the current page.
Learn more about prototype flows →
Device
Use
Device
settings to place your prototype in a realistic container. You’ll see the device container when you
play your prototype
using inline preview or presentation view.
Device
Figma has a number of popular device presets. The dimensions of your prototype frames will define what options are available.
Frame preset
: If you used a
frame preset
, Figma will select a device that matches that preset. You can select another device if desired. For example, if you use the iPhone 15 Pro Max frame preset, Figma will select the iPhone 15 Pro Max as the device too.
Presentation view
: All device type frame presets are available
Inline preview
: Only mobile device (phone, watch, and tablet) frame presets are available
Custom Size (Fit)
: A custom size automatically scales the design, so that it fits within the screen you are viewing the prototype on. Only applicable in
presentation view
—if you select
Custom size
, you won’t see a device when playing a prototype in
inline preview
Presentation (Full)
: Displays the prototype at a size that allows it to be displayed on the screen in its entirety. Only applicable in
presentation view
—if you select
Presentation
, you won’t see a device when playing a prototype in
inline preview
Orientation
Control the orientation of the device in presentation view. Choose from:
Portrait
Landscape
Note:
It's not possible to switch between orientations within a prototype. This is something to bear in mind if you have frames in your prototype across both orientations.
Model
Depending on the device you selected, you can specify a certain model. For example, the iPhone 15 Pro Max comes in four different colors.
Preview
View a preview of how the device will look in presentation view.
Background
Choose a custom background color to appear behind your selected device in
presentation view
For example, you might set the background to a neutral color to help users focus on the content, or use a brand color for extra polish.

--- Before you start ---
Before you start
Who can use this feature
Supported for files in
Education, Professional, Organization, and Enterprise teams
Anyone part of a
paid team
can add video to files.
Anyone with
can edit
access can edit videos in files.
New to Prototyping? Check out our
Guide to prototyping →
Add video to your prototypes to replicate the experience your users would have in a site or app with video playback or previews.
Video in prototypes:
Can be in .mp4 or .mov format using H.264 encoding.
Can be in .webm format using VP8 encoding.
Can be up to 100MB in size
Are
shape fills
and behave as such
Are not currently supported in the
Figma mobile app
Note:
Video can only be added to files in a paid Education, Professional, and Organization team. Collaborators on free Starter teams can edit existing video in a file but not upload video to it.
Once you add video(s) to your design file, you can edit or adjust basic video qualities. Then, you can add interactions to your videos to start building your prototypes.
Add video to files
Figma doesn't have a specific layer type for video, instead, videos are a type of fill. Since videos are fills, you can add them to any vector or shape.
There are a number of ways you can add video to design files:
Drag and drop video file from your computer onto the canvas.
Use the video importer from the fill color picker.
Learn more about how to upload fills →
Use the Place image/video tool to add videos in bulk.
Learn more about the Place image/video tool →
Copy a video from another layer in the current file, or from another file.
Paste any video from your clipboard into the canvas.
Note:
You can also add animated GIFs to your prototypes. GIFs only playback when viewing designs and prototypes in presentation view.
Add animated GIFs to prototypes →
If you add a video straight to the canvas, Figma creates an object on the canvas with the dimensions of the original file. If you add a video as a fill to an existing object, Figma uses the name and dimensions of the original object.
View and update video fills in the
Fill
section of the right sidebar. From the
Fill
section, you can play and preview your video fill, jump to a specific timestamp, or scrub through the video.
You can also identify layers with video fills in the Layers panel in the left sidebar. Objects with video fills are represented on the layers panel with the
icon.
Edit video
Once you’ve added a video to your file, you can edit the video in the following ways:
Scale, rotate and adjust the dimensions of any layers with video
Crop and re-position video applied to layers
Adjust the video options including the Fill mode, rotation and
blend modes
Apply masks
to only show a part of the video
Prototype with video
Once you add video to a frame, switch over to the
Prototype
of the right sidebar. From here, you can create interactions between frames with video.
Learn more about prototyping →
Video properties
When you select a video, there is a
Video
section available on the Prototype tab. This section lets you set a video’s behavior when navigating to its frame in a prototype.
Check the box to
autoplay
video
Click the
Loop
icon
to loop video
Click the
Sound
icon
to turn the video’s default sound setting on or off
Video interactions
When you create any prototyping connection, there is a
trigger
that determines what causes the interaction to begin, and an
action
that defines the response from the triggered event.
The following interaction triggers are available for videos:
When video hits
- Trigger set action when the video hits a specific timestamp.
When video ends
- Trigger set action when the video completes playing.
The following interaction actions are available for videos:
Play/pause video
- Select either
Play video
Pause video
, or
Toggle play/pause
Mute/unmute video
- Select either
Mute video
Unmute video
Toggle mute/unmute
Set to specific time
- Set a timestamp to jump to in the video.
Jump forward/backward in time
- Select either
Jump forward
Jump backward
, then set the number of seconds to jump forward/backward in the video.
When you create an interaction between two frames that have the same video, there is a
Reset video state
toggle in the
Interaction details
panel. When toggled on, the video will restart from its beginning between frames.
Learn more about video state management →
Video interactions within the same frame
You can interact and prototype with videos based on triggers made within the same frame. This can be helpful when trying to build an interactive video player experience.
Create a connection from your starting object to the video file.
Set your desired starting action (for example,
On click
Set your desired action for the video (for example,
Mute/unmute video
Video and smart animate
You can
use smart animate
to preserve a video’s progress when navigating between frames. Let’s say you want to create a prototype where entering a frame begins playback, then clicking on the video navigates to a new frame with a larger view.
Create a connection between the two frames with the same video name. Make sure the video layer names match as well.
Set the animation setting to
Smart animate
In the
Interaction details
panel, uncheck
Reset video states.
Video and interactive components
Use interactive components to prototype video interactions in a single frame, like previewing playback on hover.
Create a component with variants
for a default and hover state.
The default state should have autoplay off, and the hover state should be set to autoplay.
Create a connection from the default variant to
change to
the hover variant and uncheck
Reset video states.
Create a frame with a couple instances of the component and replace video to reuse the component.
Try out more ways to prototype with video using the playground file →

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design and Figma Slides
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
Find the components or assets that you're looking for with Figma AI, so you can get started faster, stay in the flow, and make space for more creativity.
For example:
Get inspired through related designs and see how others are thinking about a design problem
Browse through past explorations to help finish an in-progress design
Find the latest source of truth for a component
There are two ways to use AI in search:
Find similar designs
: Use descriptive prompts, an image, or a canvas selection to find related components and designs.
Assets tab
: Use a keyword search to find components without needing to remember their exact names.
Find similar designs
With
Find similar designs
, you can find components and non-component elements using a keyword or descriptive prompt, a layer selection, or an image. If you find one you like, you open the source file or insert it onto the canvas without leaving your current file.
Search by keywords
From the toolbar, click
Actions
Type keywords or a description into the search bar and select the
Figma/Community
filter.
From the search results, use the
Figma
tab to find components and other designs, or use the
Community
tab to search through Figma Community files.
Search from a canvas selection
Select a layer.
Click
Actions
from the toolbar and select
Find more like
From the search results, use the
Figma
tab to find components and other designs, or use the
Community
tab to search through Figma Community files.
Search using an image
From the toolbar, click
Actions
Click
Search with image or selection.
Select a layer with an image fill. Or click
Upload
to upload an image from your computer, then click
Search.
From the search results, use the
Figma
tab to find components and other designs, or use the
Community
tab to search through Figma Community files.
Navigate results
There are two tabs you can use to browse from the results view. The
Figma
tab shows components and other design assets from files available to you. The
Community
tab shows designs available in Figma Community files. Each tab has a different search result experience:
Figma tab
Community tab
If you’re in the
Figma
tab, use the dropdown on the right to filter by library.
When you click
See more
next to
Other designs
, you can narrow and sort your results:
Filter by file owner
Filter by space
Sort by relevance
Sort by last modified
When you select a design from the list, you can choose to:
Open the file
where the design lives in a new tab
Preview
the design in the current tab
Insert
the design into the current file
When you select a design in the
Community
tab, you can choose to:
Open the file
where the design lives in a new tab
Preview
the design in the current tab
Insert
the design into the current file
Find components from the Figma tab
Figma uses AI to return smarter results and help you find what you’re looking for, so you don’t have to remember the name of that one component.
Without AI
Without AI, Figma tries to match your search terms to exact keywords in a component’s name or description. For example, if you searched
arrow
Figma would only return components with the word “arrow” in its name or description.
With AI
With AI, Figma looks for exact names as well as related components. For example, searching
arrow
would return components with “arrow” in their name and descriptions, as well as components that are similar in form or function.
You can search for assets either from the assets tab in the left panel, or by using
Actions
from the toolbar.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all paid plans
View history displays a log of every logged-in team and organization member or invited guest who has visited your file, along with time passed since their most recent visit. This helps your team collaborate asynchronously and confirm who has seen your file. This setting applies to Figma Design, FigJam, and Figma Slides.
Note:
Viewer history for files is not available for visits to a file before this feature launched February 2025.
Here’s how it works:
Logged-in collaborators in the same team or organization, including invited guests, are recorded as having viewed the file and are shown viewer history for the file
Visitors to a file from a public link, open session, or those outside your team or organization will not be recorded in view history and can only see current viewers
Tip:
If you want to prevent logged-out users or people outside your team or organization to view your file,
adjust the file’s access and permissions
See viewer history
To see who has viewed your file, click your avatar in the right sidebar. The dropdown will show you who is
Currently viewing
your file and anyone who
Previously viewed
your file. Hover over a person’s name and click the
ellipsis to view their profile.
Change your viewer settings
If you want to opt out of being recorded as a viewer on files for all teams and organizations you are part of, you can do so from your account settings. This setting is enabled to your entire account and can’t be managed on a team or organization basis.
To do so:
Open Figma in the file browser.
Select your avatar in the top-left corner to open the account menu.
Select
Settings
to open the settings modal.
Go to
Account
View history
> and click
Change preference
Select
Off
At this point, your future file viewing history will no longer be recorded or visible to others. You also won’t be able to see your teammates’ file history going forward. Existing viewer history is not removed from files visited before opting out.

--- Who can use this feature ---
Who can use this feature
Available on all
paid plans
Requires a
Full seat
with edit access to the library's source file
Publish a
library
to share common design elements—like buttons, icons, pieces of UI, colors, or values for certain properties—with the rest of your team. Other people can use these design elements in their files, which helps everyone stay consistent.
When you first create a
style,
component
, or
variable
in a file, it is only accessible from that file. To make it available in other files, you need to publish it as a
library
If you make changes to these assets or add new ones, you can publish them as updates to the library. People using the library in their files can quickly
review the changes
and automatically update their designs.
Note:
Libraries are only available on
paid plans
. You can still create components and styles on the free Starter plan, but you can't publish them in a library to access them in other files.
Publish a library
To publish a design file as a library, there needs to be at least one component, style, or variable in the file. If the file is in your drafts, you’ll need to move it to a project before publishing.
Once published, anyone with access to the library’s source file can use the library in their files.
Tip
: A library inherits its name from the source file. Make sure you give your file a clear, meaningful name that helps people understand what it’s for, like ‘Habitz design system’, ‘UI3 library’, or ‘Website design kit’.
In a file with components, styles, or variables you’d like to share, select the
Assets
tab in the left sidebar.
Click the
Libraries
icon. The tooltip may read
Review library updates
if there are updates to libraries you are using in the file, or
Review unpublished changes
if you have unpublished updates in your file.
From the
This file
section, find your current file and click
Publish
Add a description of the library's purpose, or a summary of any decisions or changes.
From the list of styles, components, or variables that have been added, modified, or removed, uncheck any assets you don't want to publish. You can also uncheck
Changes
to deselect everything.
Organization and Enterprise plans only:
Use the dropdown menu to choose
where to publish the library
Click
Publish
. A notification will appear confirming your library has been successfully published.
Tip
: If you want to make sure certain components, styles, or variables never get published, you can
hide them in the publishing flow
. Right-click on any asset in the library modal and select
Hide when publishing
. To undo, right-click it again and select
Show when publishing.
Why is the publish button not working?
If the publish button is deactivated, it might be one of the following reasons:
There are no
components
styles
, or
variables
in the file. Try creating a new one to see if the option to publish appears.
The library has no publishable changes. In this case, nothing has changed since the last time the library was published. Try editing a component, style or variable in the library. You may also need to check whether the design elements you’re editing are
hidden from publishing
Choose where to publish a library
Organization and Enterprise
Organization or Enterprise plan users can publish libraries to a specific team or the whole organization. Enterprise plan users can also publish libraries to workspaces.
This helps libraries reach the right audience. For example, you might publish a company-wide design system library to the organization, or a library with mobile app components to the specific team working on the mobile app.
If the library’s source file has sharing permissions that are too restrictive, Figma will prompt you to change them. For example, if your file is set to
Only invited people can access
and you want to publish a library to the organization, you’ll be asked to change the file’s permissions to
Everyone at your organization can access
Publish updates to a library
If you make changes to a style, component, or variable in a library’s source file, those changes will only appear in the current file until you publish them. Publishing updates to a library follows the same process as
publishing a library for the first time
Note
: Once you’ve publish updates to a library, people using the library will see a blue badge on the library icon in the left sidebar of their file. They can then
review and accept the updates
Tip:
Every time you publish updates to a library, you'll be prompted to add a description. This allows you to communicate decisions and changes to the people who use your library.
Figma shows descriptions when
accepting updates from a library
, as well as in the file's version history.

--- Before you start ---
Before you start
Who can use this feature
Available on the
Organization and Enterprise plans.
Users with
Full, Dev, or View
seats can access the ready for dev view.
Users with
Full or Dev seats
can change statuses.
Users with
Full or Dev seats
can access the focus view.
The developer handoff process doesn’t happen in a single moment. Instead, designs may go through several iteration cycles as the team continues to refine ideas and apply feedback.
One of the key moments of the process, and one that may reoccur frequently, is when you need to review designs that are ready for development. As designers in your org are working on designs, they’re
marking sections, frames, and components in design files
Ready for dev
. Before you implement the designs in your codebase, you and your developers need to view the design.
To avoid confusion and prevent important details from getting lost, developers can access a view in Dev Mode that displays a list of all designs in a given file that are marked with a dev status. In addition, the ready for dev view highlights when a design has most recently been updated, so you can understand if it’s changed since the initial handoff.
Ready for dev view
The ready for dev view in Dev Mode displays all designs that have been marked as
Ready for dev
in a single location. This allows developers to quickly find what they need without having to navigate around the canvas or across multiple pages. A counter displays the number of designs that have been marked as
Ready for dev
To access the ready for dev view:
Open a Figma Design file.
Click
Ready for dev
in the left sidebar.
Note:
The ready for dev view only appears in files that have a ready for dev status on at least one design.
The ready for dev view opens, displaying a list of all designs marked with a dev status. From here, you can do the following:
Filter designs:
Use the options to filter by the following categories:
All
Ready
Completed
You can also sort the display by:
Recent activity
Pages
Name (A-Z)
Focus on a design
: In the ready for dev view, click on a design to enter a
focused view
Statuses
In Dev Mode, a dev status indicates the current state of the designs in terms of handoff. Statuses can include notes from designers about the design and what’s changed. Dev Mode provides a few statuses to help manage handoff:
Ready for dev
: Set on sections, frames, and components that are ready for a developer to review and implement.
Completed
: Indicates that dev work for the design is done (Organization and Enterprise only).
For more information about statuses, see
Dev Mode statuses and notifications
In the context of the ready for dev view, the status appears in the upper-right corner of each listed design.
Focus view
The focus view in Dev Mode isolates a specific design that’s ready for development. When focused on a design, you can inspect the design’s layers, view a version history for the design, as well as take advantage of all the usual Dev Mode features.
Learn more about focus view →

--- Tour the interface ---
Tour the interface
Create designs
Figma Draw
Build design systems
Dev Mode
Create prototypes
Import and export
Work together in files
Tour the interface
Explore
Use AI tools in Figma Design
Explore design files
Change the background color of the canvas
Access design tools from the toolbar
Navigating UI3: Figma's new UI
View layers and pages in the left sidebar
Design, prototype, and explore layer properties in the right sidebar
File utilities
Use the actions menu in Figma Design
Keyboard shortcuts in Figma
Set small and big nudge values
Adjust your zoom and view options
Set custom thumbnails for files
Add guides to the canvas or frames
View layer outlines in Figma Design
Find and replace in Figma
Create designs
Create and edit layers
Frames in Figma Design
Sketch on the canvas with the pencil tool
Shape tools
The difference between frames and groups
Arc tool: create arcs, semi-circles, and rings
Masks
Work with layers
Edit objects on the canvas in bulk
Identify matching objects
Parent, child, and sibling relationships
Select layers and objects
Adjust alignment, rotation, position, and dimensions
Copy and paste objects
Scale layers while maintaining proportions
Organize your canvas with sections
Measure distances between layers
Lock and unlock layers
Toggle visibility to hide layers
Rename Layers
Copy and paste properties between layers
Arrange layers with Smart selection
Apply constraints to define how layers resize
Create layout guides
Combine layout guides and constraints
Design with vector tools
Create custom shapes with the shape builder tool
Vector networks
Edit vector layers
Boolean operations
Flatten layers
Convert text to vector paths
Text and typography
Guide to text in Figma Design
Explore text properties
Add a font to Figma Design
Browse and apply fonts
Create and apply text styles
Adjust text dimensions and resizing
Add links to text
Add emojis and smart symbols to text
Create bulleted and numbered lists
Use icon fonts
Use OpenType features
Use variable fonts
Add text in Chinese, Japanese, and Korean
Add right-to-left text
Color, gradients, and images
Use patterns as a fill or stroke
Sample colors with the eyedropper tool
Paints in Figma
Color models in Figma Design
Add fills to text and shape layers
Upload an image as a fill
Add images and videos to design files
Apply paints with the color picker
Add images and videos in bulk
Use blend modes to create unique effects
Paste images in the canvas
View and adjust colors in a mixed selection
Crop an image
Adjust the properties of an image
Additional properties
Apply and adjust stroke properties
Apply effects to layers
Adjust corner radius and smoothing
Use auto layout
Create multi-dimensional auto layout flows
Use the horizontal and vertical flows in auto layout
Use the grid auto layout flow
Guide to auto layout
Toggle auto layout on designs
Figma Draw
Explore Figma Draw
Draw with illustration tools
Create patterns with transforms
Build design systems
Styles
Styles in Figma Design
Create color, text, effect, and layout guide styles
Manage and share styles
Components
Guide to components in Figma
Create components to reuse in designs
Create and use variants
Create interactive components with variants
Explore component properties
Name and organize components
Variables
The difference between variables and styles
Guide to variables in Figma
Overview of variables, collections, and modes
Create and manage variables and collections
Modes for variables
Apply variables to designs
Create and share libraries
Guide to libraries in Figma
Add descriptions to styles, components, and variables
Publish a library
Move published components
Edit main components
Hide styles, components, and variables when publishing
Unpublish a library
Use libraries
Get started with Apple's UI kit
Start designing with UI kits
Apply styles to layers and objects
Review and accept library updates
Swap style and component libraries
Create and insert component instances
Detach an instance from the component
Apply changes to instances
Edit instances with component properties
Manage your libraries
Add or remove a library from a design file
Enable access to libraries in your drafts
Enable a library for a team
Swap components and instances
Remove your access to a library
Dev Mode
Tour the interface
Guide to Dev Mode
Navigate designs in Dev Mode
Dev Mode for admins
Inspect designs
Guide to inspecting
Compare changes in Dev Mode
Add measurements and annotate designs
Variables in Dev Mode
Turn designs to code
Guide to the Dev Mode MCP Server
Code Connect
Use code snippets in Dev Mode
Link Dev resources to layers in Dev Mode
Figma for VS Code
Dev Mode across your organization
Dev Mode statuses and notifications
Dev Mode focus view
Dev Mode ready for dev view
Manage Dev Mode settings for an organization
Create prototypes
Guides
Guide to prototyping in Figma
State management for prototypes
Use animated GIFs in prototypes
Use videos in prototypes
Prototype triggers
Prototype actions
Prototype animations
Prototype easing and spring animations
Create prototypes
Use sections in prototyping
Connect your prototype
Add prototype connections from main components
Create and manage prototype flows
Create overlays in your prototypes
Preserve scroll position in prototypes
Prototype scroll and overflow behavior
Advanced prototyping
Advanced prototyping examples
Smart animate layers between frames
Variable modes in prototypes
Multiple actions and conditionals
Use expressions in prototypes
Use variables in prototypes
View prototypes
Present prototypes offline
Set prototype device and background settings
View prototype connections
Play your prototypes
View prototypes on a mobile device
Accessible prototypes in Figma
Import and export
Guide to imports in Figma Design
Import files to the file browser
Import Sketch files
Copy assets between design tools
Export from Figma Design
Export formats and settings
Work together in files
Comments
Guide to comments in Figma
Add comments to files
View and manage comments
Move or edit comments
Comment on prototypes
Manage email notifications for comments on files
Multiplayer tools
See viewer history for your files
Present to collaborators using spotlight
Use cursor chat in Figma Design
Optimize design files for developer handoff
Branching and merging
Guide to branching
Share a branch
Get updates from main files
View and manage branches
Request a branch review
Review branch changes
Merge branch into main file
Incomplete merges or updates

--- Before you Start ---
Before you Start
Who can use this feature
Supported on
any team or plan
Anyone with
can edit
access to a file can rename layers
Establishing a clear naming structure or hierarchy makes managing layers in your files much easier. The
Rename layers
function will allow you to quickly rename multiple layers at once.
Tip:
Use Figma AI to quickly rename layers in bulk
. You can then customize layers as needed.
Rename layers modal
You can access the
Rename layers
modal
a number of different ways.
Select the layers you want to rename from the canvas, or in the layers panel.
To toggle the
Rename Layers Modal
you can then do one of the following:
Right-click on the layers in the panel and choose
Rename
Use the keyboard shortcuts:
Mac:
Command ⌘
Windows:
Ctrl
The
Rename Layers Modal
will open above the canvas:
Tip!
You can rename a single
frame
flow starting point
right from the canvas by double-clicking its current name.
Rename layers in bulk
If you're wanting to simply update the selected layers to the same name, you can add the desired name to the
Rename to
field and click
Rename
However, it's more likely that you will want to update each layer to have a slightly different name, allowing you to better distinguish objects in the Layers panel.
Below the
Rename to
field you will see some buttons. When clicked, these buttons will add a special code to the
Rename to
field that allows you to generate slightly different names for each layer.
The
Current name
button represents the layer's current name.
The
Number
button inserts a number into each layer's name, in an ascending order.
The
Number
button inserts a number into each layer's name, in an descending order.
To better explain how this works, we'll show you some examples.
Example 1: Rename every layer to the exact same name
If you want to update all of your selected layers to have the same name (for example,
Icon
Select the layers you want to update.
Use the keyboard shortcuts to open the
Rename Layer Modal
Mac:
Command ⌘
Windows:
Ctrl
Enter the new name into the
Rename to
field.
Click the
Rename
button to apply.
The selected layers will be updated to that name.
Example 2: Rename each layer with a numerical suffix
If you have a bunch of similar layers that you want to have the same name, but still be distinguishable, you can add a number to the end (or beginning) of the layer's name (for example,
Icon_1
Select the layers you want to rename.
Right-click on the layers and select
Rename layers
Enter the name you want to call the layers in the
Rename to
field.
Click the
Number
Number
button. This adds a code to the name, that tells Figma to add a different number to the end of each layer's name.
If you like, you can set the
Start ascending from
Stop descending at
field.
You will see a
Preview
of the updated names on the left. Click the
Rename
button to apply.
The selected layers will be updated to the new name, with a unique number at the end.
Example 3: Add a prefix to every layer
If you already have a unique name for each layer, but would like to group them for faster editing, you can add a prefix to the existing name (for example,
Icon_Home
Select the layers you want to rename.
Right-click on the layers in the layers panel and select
Rename layers
Enter the prefix you'd like to add to the layer name.
Click the
Current Name
button to add the current layer name after the prefix.
You will see a
Preview
of the updated names on the left. Click the
Rename
button to apply.
The selected layers will be updated to start with the prefix, followed by the original name:
Rename part of a layer's name
While you were using the modal, you may have noticed a "
Match
" field. This allows you to identify which part of the layer's name you want to update.
By leaving this blank you can update the entire name, but you can also use this field to remove or update part of the layer's name (for example, change the "
Icon/
" part in the name "
Icon/Home
" to "
Image/
").
Select the layers you want to rename.
In the
Match
field, enter the part of the name you'd like to update.
Enter what you'd like to replace that part of the name with. This will only replace the part of the layer's name identified in the
Match
field.
You will see a
Preview
of the updated names on the left. Click the
Rename
button to apply.
Use Regular Expressions (Advanced)
If you're familiar with, or confident using regular expressions, then you can also use these in the Rename Layers Modal. This is particularly handy if you want to change the syntax of the name (for example, change "Icon_003" to  "003_Icon").
Select the layers you want to rename.
Use the keyboard shortcuts to open the Rename Layer Modal:
Mac:
Command ⌘
Windows:
Ctrl
Type
([a-zA-Z]+)_(\d+)
in the
Match
field.
Type
$2_$1
in the
Replace
field.
You will see a preview of the updated names on the left.
Click the
Rename button
to apply.
New to Regular Expressions or need a refresh?
Mozilla have a
handy reference guide
on their website.
Some common patterns to get you started are:
$1, $2, etc
– the first, second, etc., match marked by parentheses.
– the entire thing that was matched.
– everything before the thing that was matched.
– everything after the thing that was matched.
– an increasing counter. (nonstandard).
$nnn
– an increasing counter with three digits. (nonstandard)
$NNN
–  a decreasing counter with three digits. (nonstandard)
If you want to test your regular expressions before entering them you can try them out here
https://regexr.com/

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access can create prototypes.
New to Prototyping? Check out our
Getting Started with Prototyping
guide.
Prototypes have many moving parts. Add easing and spring animation presets, or customize the easing of transitions, to communicate movement, emotion, and make your prototype more like the real thing.
Easing determines the acceleration of the transition between a starting frame and its destination, also known as keyframes, by using a mathematical function. Keyframes can be two frames in an interaction, like the transition from one screen to another, or the beginning and end states of a single frame, like an object changing color.
In the example animations below, easing is represented by a curve on a graph where time is applied to the x axis and the transition, such as Move In, Slide, or Smart Animate is on the y axis. The keyframes are represented by the beginning and end points of the line of curve in the graph.
Learn more about adding interactions to prototypes.
Tip:
Hover over the preview window in the
Interaction details
modal to see a preview of your animation.
Easing Bezier presets
Linear
This is the default acceleration and is applied in a constant straight line. As objects in nature rarely move at a constant speed, linear curves can look unnatural or robotic.
Ease In
Creates an animation that starts slowly and accelerates as it reaches the end of its duration. This works well for smoothly transitioning objects out of view. One downside is it can feel sluggish.
Ease Out
Ease Out is the opposite of an
Ease In
curve, where the animation starts fast and slows down as it reaches the end of its duration. It works well for moving objects into view and reinforcing important visual information.
Ease In And Out
Starts the animation slowly, accelerates in the middle, and slows at the end of its duration. For most motion, it feels smooth and responsive, but can feel unnatural or too perfect when applied to everything.
Ease In Back
Ease In Back
is when the animation goes past the initial keyframe’s value and then accelerates as it reaches the end. This creates a bounce in the animation that serves as an anticipatory action, preparing the audience for and reinforcing the main action. Much like
Ease In
Ease In Back
can work well for smoothly transitioning objects out of view.
Ease Out Back
Is the opposite of
Ease In Back
. The animation starts fast, then slows and goes past the ending keyframe's value. This creates a bounce in the animation that serves as a settle that creates a smooth ending transition for the main action. Similar to
Ease Out
Ease Out Back
works well for moving objects into view.
Ease In And Out Back
Starts the animation slowly as it overshoots the initial keyframe’s value, then accelerates quickly before it slows and overshoots the ending keyframes value. This creates an anticipatory bounce at the start, a quick motion, with a rebounding motion before the final state.
Custom easing Bezier
Select the
Custom bezier
option from the Curve menu to manually set and adjust easing values. Figma will show a graph, or Bézier curve editor, based on the preset you have previously selected.
You can use the Bézier curve editor to adjust the curve of an existing preset, or to create an easing curve of your own.
You can copy and paste numerical values to other interactions to replicate easing. It's not possible to save a custom easing curve for future use.
A cubic Bézier curve is defined by four points. These points are represented by the square perimeter in the graph.
The graph's axes represent a curve on a graph where time is applied to the x axis and the transition, such as Move In, Slide, or Smart Animate is on the y axis.
There are two keyframes that indicate the start and end state of the animation. These are fixed at
0,0
and
1,1
. Click the keyframe to reset the Bézier handles.
A continuous curve shows the object's values over the duration of the animation. This is the easing curve.
The adjustable handles allow you to change the values of the curve. If you're customizing an easing curve with no handles, click and drag the keyframe to activate the handles.
You can use this field to enter numerical values.
Tip!
You can use these numerical values when translating the Bézier curve to CSS notation:
cubic-bezier(x1, y1, x2, y2)
Note:
It's possible to extend the curve beyond the graph's dashed perimeter. You can use this to create an anticipatory bounce at the beginning, or a rebounding effect at the end of the animation. The
Ease In and Out Back
preset shows both of these effects in action.
Spring animation presets
Combine spring animations with Figma’s animated transitions.
You can pick from the following presets or create your own:
Gentle
: A gentle animation is the most neutral option of the spring curves. Great for subtle spring movement when scaling content.
Quick
: A bit more spring great for toasts and notifications.
Bouncy
: A quirky preset for delightful animations like a heart bounce.
Slow
: A steady, natural way to scale up fullscreen content.
Custom
: Set your own spring animation curves ↓
Custom spring curves
Customize your spring animation by editing the
Stiffness
Damping
, and
Mass
values in the
Interaction details
modal and by dragging the animated graph.
Stiffness:
influences the number of “bounces” in the animation and can be adjusted by dragging the graph.
Damping:
influences the level of spring in the animation and can be adjusted from the graph.
Mass:
influences the speed of the animation and height of the bounce. You’ll need to manually adjust the value in the
Mass
field. Adjusting mass also changes the millisecond value for the duration setting.
You can copy and paste numerical values to other interactions to replicate spring animation curves. It's not possible to save a custom curve for future use.
Learn how to create interactions and adjust animations.

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Requires
can edit
access to a file
When prototyping in Figma, you can create multiple flows to test different parts of a user’s journey.
flow
is a collection of connected frames that make up a single prototype experience. For example, you can create a prototype for a shopping app that includes a flow for account creation, another for browsing items, and another for the checkout process–all in one page.
Create a prototype flow
Flow starting points
A flow starting point is where the flow begins. Flow starting points are set on
top-level frames
When you
add a connection
between two frames with no existing connections, Figma will create a starting point on the top-level frame where the connection started. Flow starting points are shown on the canvas with a
blue preview icon and the flow name.
A frame can only have one flow starting point.
You can also manually create a flow starting point.
Select the starting frame.
Select the
Prototype
tab from the right sidebar.
Click the
plus sign in the
Flow starting point
section.
To see all flow starting points on the current page:
Deselect any objects by clicking an empty part of the canvas.
Select the
Prototype
tab from the right sidebar.
From the
Flows
section, view a list of all flow starting points.
Hover over a flow name and click
Select frame
to navigate to the frame where the starting point is located.
Add or remove frames from a flow
Once you have a flow starting point, the rest of the flow consists of any frames that are connected to the starting point with prototyping interactions. This includes frames that are directly connected to the starting point, as well as frames that are connected through other interactions.
For example, all purple frames in the image below are included in
Flow 1
To remove a frame from a flow, remove any prototype interactions that connect the frame to other frames in the flow.
Frames can be included in multiple flows. For example, the blue frame in the image below is included in both
Flow 1
and
Flow 2
Once a user navigates to a frame that is included in multiple flows, they can use any interactions on that frame. This opens up the original flow to include any connections from that frame.
Manage prototype flows
Edit flow name
Once you've created a flow, Figma will name it
Flow 1
by default, with additional flows being
Flow 2
Flow 3
, and so forth. You can rename a flow at any time.
To rename a flow:
Select the starting frame.
Select the
Prototype
tab from the right sidebar.
From the
Flow starting point
section, select the flow name field.
Enter in a new flow name.
Once renamed, the flow name is displayed in the frame's blue starting point icon and the left sidebar in
presentation view
Tip:
You can also rename a flow by double-clicking the flow starting point name directly on the canvas.
Add flow description
Flow names and descriptions are displayed in the left sidebar when in presentation view. Use descriptions to provide prompts to usability test participants or additional context and documentation for your team. Descriptions can be formatted with bold text, numbered or bulleted lists, and hyperlinks.
To add a flow description:
Select the frame with the flow starting point.
Select the
Prototype
tab from the right sidebar.
From the
Flow starting point
section, click
Edit description
next to the name of the flow you’d like to edit.
Add a rich text description.
Click X to exit the
Description
panel and save the description.
Once added, the description is displayed in the left sidebar in presentation view.
Move flow starting point
By default, Figma uses the first connection you create as the flow starting point. You can move a starting point to another frame.
Find the blue starting point icon on the canvas.
Click and drag the flow name to a new starting frame.
Delete flow starting point
To delete a flow starting point:
Select the frame with the flow starting point.
Select the
Prototype
tab from the right sidebar.
From the
Flow starting point
section, click
Remove starting point
Tip:
You can also delete a flow starting point by finding the blue starting point icon on the canvas, and clicking and dragging it off the frame to an empty part of the canvas.
Play and share prototype flows
Preview flows
You can preview your prototype flows directly in the editor, with an
inline preview
Deselect any objects by clicking an empty part of the canvas.
Select the
Prototype
tab from the right sidebar.
From the
Flows
section, view a list of all flows.
Hover over a flow name and click
Preview
to open the inline preview.
From the inline preview, navigate through your flow by triggering each prototype interaction.
Tip:
You can also open the inline preview by clicking the
blue preview icon on any flow starting point.
Copy and share flow links
You can share prototype flows with others in order to get feedback on specific user flows or journeys. When you share a prototype flow, users can play the prototype in presentation view. From presentation view, users can also select any other flow to play.
From the canvas:
Select the frame with the flow starting point.
Select the
Prototype
tab from the right sidebar.
Hover next to the
Flow starting point
heading.
Click
Copy link
From presentation view:
Select the flow you want to share from the left sidebar.
Click
Share prototype
in the toolbar.
Click
Copy link

--- Who can use this feature ---
Who can use this feature
Components are supported on
any team or plan
. You must be on a Professional, Education, or Organization plan to publish components to libraries.
Anyone with
edit
access to the file can make changes to the main components in that file.
New to components and libraries?
Guide to style and component libraries →
Any instance you create is linked to the main component. When you make changes to the main component, Figma will apply any changes you apply to any linked instances.
If you are using instances within the same file as your main components, Figma applies changes immediately. If the components are published to a library, you need to publish those changes to see those updates in subscribed files.
Update components
To make sure Figma applies changes to all instances of a component, you will need to edit the main component. You can only edit main components in the original files where they live.
Unpublished components
If you're on the Starter plan, or haven't published the components to a library, you can edit your main components like you would any other layers.
Figma will automatically apply any changes you make to the main component to any instances of the component in your file.
Published components:
Figma will immediately apply any changes you make to any instances in that file. If you want those changes to apply to instances in other files, you will need to publish those changes to the library.
Want to change the location of components?
You can move published components between files and libraries.
Move published components.
Find main components
If you're working with instances in a separate file, use the
Go to main component
action to open the library file. From there, you can apply any changes you want to the main component.
You can access the
Go to main component
action from one of two places.
Using the keyboard shortcut:
Mac:
^ Control
⌥ Option
⌘ Command
Windows:
Control
Alt
Shift
From the Instance menu:
Select an instance in the current file.
Open the
Design
tab in the right sidebar.
Hover over the name of the library file to see
Go to main component in library
. Click to open the library file to the location of the main component.
Select the main component and make any changes.
Note:
If you accessed the main component from another file, Figma will give you the option to
Return to instance
after making your changes.
Push overrides to main component
There may be situations where you want changes you've applied to an instance to apply to the main component as well.
You can use the
Push overrides to main component
setting to apply any overrides to the main component. This will also update any other instances of that component.
You can only push overrides if the main component is in the same file as the instance. It's not possible to push overrides to components in another file, including published libraries.
Note:
It's not possible to push overrides to a component that's nested within another component. You will need to make those changes to the main component itself.
Select the instance with your overrides applied to it. You need to select the parent frame of the instance, not a sublayer.
In the right sidebar, click
next to the component name.
Select
Push overrides to main component
from the options.
Figma will apply your overrides to the main component.
Publish changes to the library
If you make changes to a published style or component, this will only apply those changes to instances in the current file. If you want those changes to be reflected in your library, you will also need to publish those changes to the library.
Learn more about publishing a library.

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Best practices when using AI tools
When it comes to building AI, we want to be transparent about what we’re doing and what this means for you.
Learn more about Figma’s approach to AI →
There are a few things to keep in mind when using any AI tool:
Accuracy
AI-powered tools are designed to provide information and results based on artificial intelligence algorithms, and identify patterns and relationships from large amounts of data. It’s important to note that the accuracy and reliability of these results may vary.
There is a possibility of inaccuracies, omissions, or misleading outcomes due to the complexities and limitations of AI technologies. Therefore, the information provided by the tool should be regarded as a general reference and not a fact or a substitute for expert advice or your own research.
Your responsibilities
You should exercise your own judgment and discretion when using AI-powered tools. It’s essential to verify and cross-check the information provided by the tool before making any decisions, taking actions, or relying on it for critical matters.
You should let others know when you’re using or presenting AI-generated outputs. For some features, like summarize stickies, Figma will indicate when an output is AI-generated.
You will only use AI features in accordance with
Figma’s Acceptable Use Policy
Available AI features and tools
Note:
The chart below lists AI tools that you can access across Figma’s products.
Separately, Figma Make is an AI-driven prompt-to-code tool that lets you bring ideas and existing Figma designs to life as functional prototypes, web apps, and interactive UI. Figma Make is currently in beta and rolling out in the coming weeks to users on all paid plans.
Learn more about Figma Make
AI tools can be found throughout Figma's products. Use the chart below to discover which AI tools are available in each product.
Figma Design
FigJam
Figma Slides
Figma Sites
Figma Buzz
Rewrite text
Included
Included
Included
Included
Included
Translate text
Included
Included
Included
Included
Included
Shorten text
Included
Included
Included
Included
Included
Adjust tone
Not included
Included
Included
Not included
Not included
Make image
Included
Included
Included
Included
Included
Remove background
Included
Included
Included
Included
Included
Boost resolution
Included
Included
Included
Included
Included
Edit image
Included
Included
Included
Included
Included
Replace content
Included
Not included
Not included
Included
Not included
Text suggestions
Included
Not included
Not included
Not included
Not included
Rename layers
Included
Not included
Not included
Not included
Not included
Add interactions
Included
Not included
Not included
Not included
Not included
AI search
Included
Not included
Included
Not included
Not included
First Draft
Included
Not included
Not included
Not included
Not included
Generate boards and diagrams
Not included
Included
Not included
Not included
Not included
Sort and summarize stickies
Not included
Included
Not included
Not included
Not included
Jambot
Not included
Included
Not included
Not included
Not included
Generate a slide deck outline from a FigJam board
Not included
Included
Included
Not included
Not included
Draft presenter notes
Not included
Not included
Included
Not included
Not included
To see a breakdown of AI tools by product, check out the following guides:
Use AI tools in Figma Design
Use AI tools in FigJam
Use AI tools in Figma Slides
Use AI tools in Figma Sites
Use AI tools in Figma Buzz
Who can use AI tools?
AI tools are available on paid plans.
Additionally, your
seat type
impacts which AI tools you can use in which product.
Access to AI tools in Figma Design
Access to AI tools in Figma Sites
Access to AI tools in FigJam
Access to AI tools in Figma Slides
Access to AI tools in Figma Buzz
Full seat
Included
Included
Included
Included
Included
Dev seat
Not included
Not included
Included
Included
Included
Collab seat
Not included
Not included
Included
Included
Included
View seat
Not included
Not included
Not included
Not included
Not included
If you do not have access to AI features in your account, it may be due to one of the following reasons:
Your team or organization is opted out: Your admin has already chosen to
opt your team or organization out of AI features
. Please contact your admin if you have questions.
You're on a Figma for Education plan: AI features and settings will not be enabled for users who are a part of an Education plan. If you have any questions, please contact
education@figma.com
You're using the
Figma for Government
solution: Organizations using the Figma for Government solution will not have AI features or settings enabled.

--- In this guide, we’ll cover the basics of working with design files in Figma Design. ---
In this guide, we’ll cover the basics of working with design files in Figma Design.
If you're new to Figma Design, we recommend taking our
Figma Design for beginners course
. In this course, we cover everything from navigating design files, working with layers, applying auto layout to frames, creating components, and adding prototyping connections to designs. By the end, you'll have created a customizable portfolio website completely from scratch. Learn more about the
Figma Design for beginners course
Want to learn more about the difference between Figma's products? Check out our
What is Figma
guide.
What are design files?
Design files give you the tools you need to create, share, and test your designs. Design files are popular with designers, product managers, writers, and developers. But anyone who wants to create or communicate visually can use them!
Create design files to explore specific problems, or manage the entire design process. You can sketch out your ideas on your own, or share them with others to create together and get feedback.
Figma files are live and always up-to-date, so people can work on the same file at the same time. Having one live file gets everyone on the same page without the need to save, download, or pass documents back and forward.
Every file has its own
version history
, where you can track the evolution of your designs. Explore previous iterations, or create new versions to capture milestones.
Design files in the file browser
You can identify Figma Design files in the file browser by the icon
on the file card.
Find your way around
If you're new to Figma, it's normal to feel a bit lost when you first open a file. We’ll take you on a tour, so you can orient yourself and start collaborating with your team.
Design files have four distinct regions: a
toolbar
at the bottom, a
left sidebar
, a
right sidebar
, and the
canvas
Toolbar
The toolbar is your hub for interacting with—and adding objects—to the canvas. It houses all your tools for selecting objects, moving around the canvas, and creating frames, shapes, text, and other
layers ↓
. These will be the building blocks of your designs.
When you're ready to dive deeper, you can
explore each of the tools in the toolbar →
Left sidebar
The left sidebar gives you access to layers, pages, assets and is where you can take action on your files.
Use the
Assets
panel to view local components or find components from
kits
libraries
(requires edit access).
Access file-level actions, like moving it, publishing a library, creating a branch, or showing the version history.
Use the
menu to access more functions, actions, and settings. Or adjust your
Preferences
, like
dark mode
or scroll behavior.
Explore the left sidebar →
Right sidebar
The right sidebar is where you can access more information about your designs. When you don't have anything selected, you can view local resources, like color or text styles.
With a layer selected, you can explore properties of your current selection. Your permissions will determine what you can see in the sidebar, and what actions you can take.
The right sidebar is also where you'll find tools to share your designs and work together in real-time. For example, you can
share
the file, see who else is here, talk over
audio
, and more.
If you need to, you can also adjust your personal
zoom and view options
. The changes you make here only apply to your view.
View only access
Comment:
View and search comments
Properties
: View the properties of your selection
Edit access
Design
: View and edit the design properties of layers
Prototype
: View and edit prototype interactions, flows, and settings
Explore the right sidebar →
Inspect designs with Dev Mode
Are you viewing the file as part of the handoff process? Dev Mode is a developer-focused interface for inspecting and navigating design files.
Dev Mode allows you to identify designs that are ready for development and access the information needed to transform designs into code.
Guide to Dev Mode →
Canvas
The canvas is your working area where you’ll arrange layers to create your designs. You’ll find lots of room to explore and iterate on your ideas.
Pan to move around
Pan to move around the file and see what else in on the canvas.
Mouse: [left mouse click button icon] Hold down the
Space
bar, then click and drag to move around the canvas.
Trackpad: [two finger drag icon] With two fingers, slide in any direction to pan the canvas. Figma will use your computer’s default scroll direction settings.
Zoom in and out
Zoom in to take a closer look, or zoom out to see the bigger picture. View the current zoom level in the top-right corner of the screen.
Mouse: Hold down
⌘ Command
Ctrl
and scroll down to zoom in and up to zoom out.
Trackpad: Pinch two fingers together to zoom out or stretch two fingers apart to zoom in.
Stress-free exploration
If it’s your first time joining or exploring a file, interacting with things on the canvas can feel a little scary. People are often worried they’ll move, change, or delete something by accident.
Great power doesn’t have to come with great responsibility. Select the hand tool in the toolbar, or press
on your keyboard. Now you can click, drag, and zoom your way around a file, without the fear of making unintended changes.
Put it all together
Let’s do a quick recap! The
toolbar
gives you the tools and functions you need to create and combine layers. You can then arrange those layers on the
canvas
to create your designs.
The
left sidebar
is where you can explore and organize your file. The
right sidebar
is where you can view layer properties.
Let’s dive a little deeper into some key concepts:
pages
and
layers
Pages
Pages help you organize your design files. Each page is its own canvas, giving you even more space to create and explore your ideas. People use pages to:
Manage designs by milestone or status
Organize components
Keep a scratchpad of ideas
Archive older designs
To browse a file’s pages, click the current page name in the left sidebar. You can also tap
to create a new page.
View pages in the sidebar →
Pages are great for sharing a specific collection of designs. For example, you can create a distinct page for a review or when designs are ready for development.
To share a page, right click on the page name and click
Copy link to page
. When anyone opens that link, they’ll land on the right page.
Layers
Designs are usually created from a combination of shapes, text, and other elements.
When you add objects to the canvas, Figma treats each object as a separate layer. Having separate layers allows you to change or edit the properties of each layer on its own.
Like this design for a social post, which includes a name, profile photo, image, and caption.
You don’t need to be a geometry whizz to use Figma. But it helps to know we're working with three dimensions on the canvas.
We have the
(horizontal) and
(vertical) axis that gives us a layer's co-ordinates on the canvas. We also have a third dimension, the
Z-index
, that gives us the layer's depth or order it appears.
View layers in the Layer panel
Layers can sit on top of, behind, next to, or inside other layers. To see how layers are organized, check the
Layers
panel in the left sidebar.
Types of layers
Each layer has a name and an icon for the layer type. You might have noticed that some of these icons appear in the toolbar. You can select that tool from the toolbar, or use the keyboard shortcut, to create more layers of that type.
Layer icon
Layer name
Shortcut
Frame
Group
⌘ Command
Component
⌥ Option
⌘ Command
Ctrl
Alt
Instance
N/A
Text
Shape
Image
⇧ Shift
⌘ Command
Shift
Ctrl
Auto layout
Shift
Section
Shift
GIF or video
⇧ Shift
⌘ Command
Shift
Ctrl
Layer order and hierarchy
The order in which layers appear in the layers panel is also important. Layer order determines how layers overlap in the canvas.
This menu has a rectangle that acts as the background. As it's below the other layers in the layers panel, it also appears above those layers in the canvas. If it was above the other layers in the layers panel, we wouldn’t be able to see any of the text or icon layers.
Layers as containers
We mentioned that layers can be
inside
other layers. You can tell if a layer contains other layers if there is an
arrow
next to it in the layers panel. Click the
arrow
to view any layers within that container.
Relationships between layers
We use the terms parent and child to describe relationships between containers and the layers within them.
Parents
layers contain other layers, like frames, components, and groups.
Child
layers are layers inside a parent layer. They could be individual layers, like a shape, or some text, or containers with their own children.
Parent, child, and sibling relationships →
Working with containers
There are a few different types of layers that function as containers:
roups
frames
, and
ections
. While they may seem similar, they each have their own benefits.
Groups
Groups are a great way to combine layers into a single element. They simplify the layers panel and give you a single object you can interact with in the canvas. For example: you have a collection of shapes you want to stay together.
Groups are collections of layers and not distinct elements, so they don’t have dimensions or properties of their own. When you make changes to a group, you’re actually applying those changes to each layer in the group .
Frames
Frames are another way to combine layers in Figma. Frames can act as ‌scaffolding for a specific device or screen size, like a single page in an app design. They can also act as containers for layers that make up distinct elements, like the layers in a navigation bar. You can even put frames inside other frames.
Unlike groups, frames can have dimensions and properties of their own—like fills, rounded corners, and shadows. They also have features like
auto layout
constraints
, and
layout grids
, that allow you to control or influence the layers inside them.
Frame presets
Figma has frame presets for common assets, devices, and screen sizes. Whether you’re designing a mobile app or an Instagram post.
Explore frame presets →
Sections
The
section
tool allows you to designate and label a specific region of the canvas. You can use sections to group related concepts and ideas or organize your designs.
Sections help to draw focus, give context, and guide collaborators through processes. They’re perfect for activities like reviews or for sharing designs for handoff.
Check out our best practice guide for more information on
when to use groups and frames.
Explore layer properties
When you hover over a layer or object in the canvas, a box appears around the entire element. Click on a layer to select it and view more information about its properties.
In the left sidebar, you can view the layer’s name and how it’s organized. In the right sidebar, you can view the properties of the layer.
A layer's properties will include basic information about the layer, like its dimensions and location on the canvas. As well as any styling, like color, text properties, or effects like shadows.
Which properties you can see will depend on the type of layer you have selected. If a layer uses a style, then only the style name and icon will be visible in the right sidebar.
Layout
Appearance
Auto layout
Constraints
Fills
Stroke
Selection colors
Effects
Export
Supported on:
Frames
Groups
Components
Instances
Auto layout
Sections
GIFs
Supported on:
Frames
Groups
Components
Instances
Text
Shapes
Images
Auto layout
Sections
GIFs
Supported on:
Components
Instances
Auto layout
Supported on:
Frames
Groups
Components
Instances
Text
Shapes
Images
Auto layout
Sections
GIFs
Supported on:
Frames
Groups
Components
Instances
Text
Shapes
Images
Auto layout
Sections
GIFs
Supported on:
Frames
Groups
Components
Instances
Auto layout
Sections
Supported on:
Frames
Groups
Components
Instances
Text
Shapes
Images
Auto layout
Sections
GIFs
Supported on:
Frames
Groups
Components
Instances
Text
Shapes
Images
Auto layout
Sections
GIFs
Supported on:
Frames
Groups
Components
Instances
Text
Shapes
Images
Auto layout
Sections
GIFs
Can't edit properties?
If you click on a layer, but can't adjust its properties, it means you have view-only access. You can use the
Properties
panel to view the properties of the layer, but you can't make any changes.
If you're viewing the file as part of the handoff process, then Dev Mode is for you. Dev Mode is a developer-focused interface for inspecting and navigating design files.
Guide to Dev Mode →
Permissions in design files
Your permissions determine what actions you can take and whether you can make changes to files. We’re not going to do a deep-dive into Figma’s permissions model here. But there’s one concept to understand: the difference between
can
edit
and
can view
permissions.
People with
can edit
permissions can make changes to a file. That includes everything from moving layers, updating properties, and managing the file itself.
People with
can view
permissions can explore pages and prototypes, but they can’t make any changes. Viewers can still contribute to files by giving feedback.
Explore actions when you have
can view
permissions
Open and view design files
Measure distances between layers in design files
Select layers in the left sidebar or canvas
Use the inspect panel to view layer properties
Join audio calls (with captions)
Add, reply to, or resolve comments
View the version history of a file, then duplicate or share links to specific versions
View and interact with prototypes and presentations
View existing prototype flows and connections
Copy or export frames, components, and layers
Learn more about roles and permissions →
How to check your permissions
The quickest way to see whether you can edit a file is to check the toolbar. If you see the full toolbar, with all the creation tools and actions, you have edit access to the file.
If you see
Ask to edit
and just a handful of tools, you can only view the file.
Need edit access? Click the button to
request access to a file
from the toolbar. If you don’t see this option, it means your access has been restricted by a team or organization admin. If you’re on the Professional plan, reach out to your team admin. If you’re on the Organization or Enterprise plan,
request an upgrade to a paid seat
Ready to start creating?
These quick starter projects are the perfect way to kick-start your learning journey:
Design your first button
Create an illustration in Figma Design
Create a basic wireframe and prototype
Create pixel art in Figma Design
Make a custom profile card

--- Before you start ---
Before you start
Who can use this feature
Available on
any team or plan
Anyone with
can edit
access to a file can create prototypes.
In prototypes, we want our interactions to feel as much like the real thing as possible—especially when moving back and forth across multiple frames.
State management
allows us to maintain object properties and states when navigating in and across frames when playing prototypes.
State management can be used with
interactive components
scroll position
, and
videos in prototypes
in three ways:
State memorization:
Preserve the state of an object when you leave and return to the frame
State sharing:
Share states between matching objects in different frames
State reset:
Reset object states on each interaction
In order to share states across frames,
objects must match
Updates to preserve scroll position
We’ve made updates to the
Preserve scroll position
setting. Scroll position of top-level frames is now preserved automatically, as long as the top-level frame names have identical names or a shared prefix.
Bulk rename layers
to add a shared prefix.
Learn more about
preserving scroll position →
State memorization
When you navigate back and forth between frames, objects re-open in their last set state.
Interactive components
Figma memorizes the last set variant of your interactive component.
For example, you might have an interactive component for a checkbox. If you set the interactive component to the checked variant, Figma remembers the state of that variant. This means that if you navigate away from that frame and come back to it later, the interactive component will remain in the checked state.
Scroll position
Figma memorizes your scroll position.
For example, you might have a map with horizontal and vertical scrolling enabled. If you scroll to a specific location on the map, Figma remembers the position of your scroll. This means that if you navigate away from that frame and come back to it later, you will remain scrolled to the same location on the map.
Videos
Figma memorizes the play state of any videos used in your prototypes.
For example, you might start playing a video on one frame. When you get to the 5 second mark, you navigate to another frame. If you go back to the original frame, the video will continue playing from the 5 second mark, right where you left off.
State sharing
When you navigate between frames with
matching objects
, the state of the first object is shared with the second object.
Interactive components
Figma shares states between matching interactive components. States are only shared after the component has been initially interacted with.
For example, you might have an interactive component for a checkbox, with an instance of the unchecked variant on each of two frames. When you play your prototype, you check the checkbox in the first frame. Then, when you navigate to the second frame, the matching component on the second frame will also be set to the checked variant.
Scroll position
Figma shares scroll position between matching objects.
For example, you might have a map with horizontal and vertical scrolling enabled on each of two frames. If you scroll to a specific location on the map, then navigate to the second frame, the matching map object on the second frame will be scrolled to the same location.
Videos
Figma shares video play state between matching objects.
For example, you might start playing a video on one frame. When you navigate to a second frame with a matching video object, the video on the second frame will continue playing from where you left off.
State reset
When users are navigating through prototypes, an object’s state may need to be reset on specific interactions. Object states should be reset on the interaction that navigates to the next frame.
Click on a prototype connection to open the
Interaction details
panel.
In the
State Management
section of the panel, check off any of the following settings:
Reset scroll position
: Reset to original scroll location
Reset component state
: Reset to original component state, as set on the canvas
Reset video state
: Restart the video from the beginning, and reset to its original play state
Note:
The reset settings only appear on the
Interaction details
panel if they are relevant to the currently selected interaction. For example, if the interaction connects to a frame without a video, there won’t be a
Reset video state
setting.
Interactive components
Reset interactive component states to their original state, as set on the canvas.
For example, you might have an interactive component for a loading bar with
empty
and
complete
variants.
You want the loading bar to restart on the
empty
variant when the user clicks a reload button, so you check off the
Reset component state
setting on the button interaction.
Scroll position
Use
Reset scroll position
to return to the original scroll location, as set on the canvas.
For example, you might have a map with horizontal and vertical scrolling enabled. You want to return to the original scroll location when navigating between frames, so you check off the
Reset scroll position
setting on the interaction.
Videos
Restart the video from the beginning, and reset to its original play state, as set on canvas.
For example, you might start playing a video on one frame. When you get to the 5 second mark, you navigate to another frame. When you return to the original frame, you want to restart the video from the beginning, so you check off the
Reset video state
setting on the interaction.
Matching objects
In order to share states across frames, objects must match.
Learn more about
matching objects →
To identify objects that match between frames:
Open the
Prototype
tab in the right sidebar.
Hover over an object or layer in the canvas.
Figma will highlight the matching object in any other frames it exists in.
Nested objects
Objects are considered matching if they have the same layer name and the same
set of parents
across top-level frames.
Tip:
If you don’t want the state to be shared across two objects, you can rename them so they no longer match.
Top-level frames
Top-level frames are frames directly placed on the canvas. Since top-level frames don’t have parent objects, you can match them by doing one of the following:
Use identical layer names
Use layer names with matching strings and forward slashes. For example, a top-level frame with the name
Checkout / 1
will match another top-level frame with the name
Checkout /
, since everything before the forward slash is identical.
Tip:
Need to rename layers? Learn how to
rename layers in bulk →
Update to new state management
Figma updated to its current state management controls on May 24, 2023.
For prototype interactions that were created before May 24, 2023:
Interactive components cannot share states across frames
Scrolling objects cannot memorize their state when re-opened
Scrolling objects can share states across frames
only
the
Preserve scroll position
setting is checked
Note:
In new interactions, scroll position is shared automatically, as long as
object names match across frames
Learn more about
preserving scroll position and transitioning to new state management →
To update any older interactions to the new state management controls:
Click on a prototype connection to open the
Interaction details
panel.
Click
Update
Tip:
Once you update an interaction, a success message appears at the bottom of the canvas. Click the
Update all
button on the success message banner in order to update all other interactions in the file.

--- Before you start ---
Before you start
Who can use this feature
Anyone on
any team or plan
can use OpenType features.
Anyone with
can edit
access to a Figma Design file can apply and adjust OpenType features to text.
OpenType can refer to a format or a set of features or functions available in a font. In this article, we're referring to OpenType features.
Figma supports OpenType features
across all fonts, but not all fonts will support the same OpenType features. Typeface creators have full control over which OpenType features they support. They could be popular features - like kerning, case, or numerical figures. Or, custom features like alternative characters or glyphs, and stylistic alternatives.
You can explore OpenType features of your selected font from the
Typography
section of the properties panel. Click
to open the Type menu and select the
Details
tab.
You can hover over an OpenType property to preview of the feature. If a font doesn't support a specific OpenType feature, it will be greyed out in the menu.
You can also access these OpenType features in
Figma Slides
, if you are in
design mode
1. Letterforms
Letterforms include:
Ligatures
Rare Ligatures
Contextual Alternates
Ordinals
2. Stylistic Sets
ssxx
Stylistic sets vary greatly - in name and availability - between fonts. A font can support up to 20 stylistic sets. Some examples include:
Stylistic Alternates
Alternate Digits
Disambiguation
Lower case R curves into rounded neighbors
3. Character Variants
cvxx
Character variants vary greatly - in name and availability - between fonts. These are at the discretion of the typeface creator. They could include the following types of variations:
Open Four
Closed lower case G
Closed lower case A
4. Horizontal Spacing
Use horizontal spacing, like kerning and kerning pairs, to change the spacing between characters.
5. More features
More features can include fraction denominators, numerators, and more.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can edit objects on the canvas
Want to get hands-on with editing objects in bulk? Grab a copy of the
multi-edit playground file
to practice while you learn.
Select multiple layers across frames, groups, and sections and apply the same edits to them in bulk. For example:
Update the string on a text layer, and other selected text layers will update as well
Create multiple groups of objects across separate sections
Add auto layout to multiple nested objects across frames
Insert an object into one variant that repeats across all variants in a component set
Edit objects in bulk
You can select multiple layers across frames, groups, or sections either via the canvas or the Layers panel. You can also bulk select matching objects. Learn how to
select multiple layers and matching objects →
Once you’ve selected objects, you can bulk edit them at the same time. This includes rotating, grouping, masking, boolean operations, adding auto layout frames, and more. These actions work even if the selected objects live in different types of containers (frames, groups, and sections).
A couple of things to note:
Alignment:
Hold
⇧ Shift
and click one of the alignment buttons in the right sidebar to
align objects
to their respective parent frames.
Copy and paste:
Objects copied from and pasted to multiple frames are pasted in the order that they are copied and will repeat if there are additional frames. Learn about
how objects will be pasted →
Multi-edit text
You can update the content of multiple text layers at the same time.
Select more than one text layer. Learn how to
select multiple layers and objects →
Click
Multi-edit text
at the top of the right sidebar or press
Enter
Return
to edit the contents. All selected text layers will update to match.
Multi-edit variants
Multi-edit speeds up your workflow when editing
variants and component sets
. When you edit a variant while having multi-edit enabled, matching objects will automatically get the same edits.
To enable multi-edit:
Select a component set, a variant, or a nested layer inside a variant. If you select:
A component set
: Enabling multi-edit places a dotted rectangle around each variant within the set to indicate the objects you can edit
A variant
: Enabling multi-edit selects other component variants in the set
A nested layer
: Enabling multi-edit selects matching objects across other component variants in the set
Click
Multi-edit variants
at the top of the right sidebar, or press
To exit multi-edit, click
, or press
. You can also double-click anywhere on the canvas outside the component set.
Check out the entire multi-edit video playlist →

--- Before you Start ---
Before you Start
Who can use this feature
Available on all paid plans
Requires a
Full or Dev seat
The Figma for VS Code extension provides an
eas
y way for developers to access and inspect designs right from VS Code. You can navigate and inspect design files, collaborate with designers, track changes, and speed up design implementation—all without leaving your development environment.
Use the Figma for VS Code extension to:
See and respond to comments and activity in real time
Get code suggestions based on designs
Link code files to design components
You can install the
Figma for VS Code extension
from Visual Studio’s Marketplace. You’ll be prompted to sign in to your Figma account when you first open the extension in VS Code.
Open Figma designs in VS Code
There are a couple of ways to open a design file through the VS Code extension:
From Dev Mode
Set CSS as your preferred language in
Code
settings
or the
Code
section of the Inspect panel.
Click on a top-level frame.
In the Inspect panel, click
Options
next to the layer name.
Select
Open in VS Code
From VS Code
Open VS Code.
Click
Figma in the activity bar, or find Figma for VS Code from your list of extensions.
In the primary sidebar under Files, click on the design you want to open.
Inspect Figma designs in VS Code
Explore a design file in VS Code
Figma for VS Code
extends the functionality of Dev Mode’s inspection features
and brings design files right to your text editor. When you select a design file in VS Code, you’ll see frames in the file grouped by section, status (e.g ready for development) and page. If a frame doesn’t have a parent section, or an assigned status, those won’t be visible.
Inspect a frame
Select from a grid of frames and see them individually with focus view. Search for frames and filter through results to quickly find what you’re looking for.
See which designs are ready for development
Click
Layers in the toolbar to view sections marked as Ready for development.
View code snippets
View code snippets and relevant information like modes and styles in the
Code
tab.
Choose your preferred language and unit for code snippets in the top-right of the Inspect toolbar.
Access Dev resources
Access relevant development links in the
Dev resources
tab. Click
Add Dev resources
to add a link to a code file or dev resource.
If a link has a matching implementation in your current codebase, it opens the file in VS Code instead of the browser.
Link Dev resources to layers in Dev Mode →
View component properties
If you have a component selected, you can view its properties in the
Component
tab.
Export assets
Download and export assets for a selected layer in the
Assets
tab.
Learn more about exporting selections from Figma →
Auto-complete code suggestions
The Figma for VS Code extension provides auto-complete suggestions based on the selected layer. This is helpful if you’re building components that don’t have an existing implementation in your codebase.
View comment notifications
You can view comment notifications in real time under
Notifications
in the primary sidebar. Click on a notification to view and add a comment to the design through VS Code.
Guide to comments in Figma →
Run plugins in VS Code
Leverage third party tools and customized code without leaving your code editor.
Check out our docs to learn how to make your private plugin work in VS Code →
Log out of Figma for VS Code
While in VS Code, Press
Shift
Command
Show and Run Commands
Select
Figma: Log out
from the list of options in the search bar.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all paid plans
Requires a
Full or Dev seat
Users on the Organization or Enterprise plans with a Full or Dev seat can also access Code Connect snippets
Code snippets appear in Dev Mode’s Inspect panel when an object is selected on the canvas. The
Code
section provides relevant component details and generates code based on the selection and language preferences set in Inspect:
When text is selected, the
Code
section displays a typographic preview, followed by layout, typography, and content information.
With all other selections, a box model is displayed with margin, border, and padding details, along with layout and style information.
Note:
You can use Figma’s
Code Connect
tool to customize code snippets for design system components. With Code Connect, developers will see connected design system code from their libraries instead of auto-generated code when inspecting components in Dev Mode.
Learn more about implementing Code Connect in our API docs →
Set language preferences
You can choose a preferred language and unit for code snippets in the
Code
section of the Inspect panel. These settings apply to all generated code snippets for objects selected on the canvas.
To set a default language and unit:
Deselect all objects on the canvas.
Select an option from the
Language
dropdown:
CSS
(Web)
SwiftUI
UIKit
(iOS)
Compose
XML
(Android).
From the
Unit
dropdown, select a unit. Available units depend on the language selection.
Change language and unit preferences
Once you have an object selected, you can override the default language and unit.
In the
Code
section, select a language from the dropdown.
Select a unit under
Settings
in the dropdown menu.
Set unit scale
Unit scaling allows you to set unit dimensions relative to a specified size. For example, you can set a root font size for CSS rems, or set a scale factor for scaling dimensions into iOS points.
To adjust the unit scale for your selected language and unit:
Select an object on the canvas.
In the
Code
section of the Inspect panel, click [inspect settings icon]
Inspect settings
next to the language dropdown.
Select
Set unit scale…
Depending on the unit preference, enter or select the scale in the
Unit scale
modal.
Click
Supported unit types by platform
CSS
px:
Logical pixels defined by the browser.
rem:
Relative to the root font size (e.g.
1rem = 16px
by default).
iOS
px:
Canvas pixels.
pt:
Resolution-independent points used in UIKit and SwiftUI.
Android
px:
Physical screen pixels.
dp (density-independent pixels):
Scales consistently across screen sizes.
sp (scale-independent pixels):
Like dp, but also scales with the user’s font size preferences (used for text).
View code snippets
Code snippets are generated when you select an object on the canvas while in Dev Mode. The
Code
section displays relevant information depending on the type of object and language selected.
While most objects on the canvas will generate similar code snippets, text selections vary slightly. The
Code
section will display a typographic view instead of a box model, followed by code snippets of relevant typography information.
Any variables assigned to a selected object will also appear in the code snippet.
Code syntax allows you to represent variables in code using valid variable names to support a seamless handoff experience.
Learn more about code syntax and variables in Figma Design ->
Tip:
You can extend the functionality of code snippets with plugins or create custom code snippets for development using Figma’s Plugin API.
Copy code snippets
You can copy a code snippet and transfer it to a text editor. To copy a code snippet:
Select the object you want to generate code for.
Find the code snippet you want to copy under the
Code
section of the Inspect panel.
Hover over the code snippet and click
Copy
in the top-right corner.
Code Connect
Code Connect is a tool for design systems and engineering teams to bring component code into Dev Mode. When inspecting a component with connected code snippets, developers will see design system code from their libraries instead of auto-generated code.
Code Connect builds on the Figma API and is fully customizable to support multiple design systems, products, and languages.
Check out the Code Connect hub to learn how to sync custom code snippets to components →
Once Code Connect is implemented, your Dev Mode code snippets will say
connected
and will show snippets from your organization’s library.

--- Who can use this feature ---
Who can use this feature
Anyone on any plan can create styles. Anyone on
Education, Professional, Organization, and Enterprise plans
can publish styles.
Anyone with
can edit
access to a file can create and edit styles. Anyone with at least can view access to a library can use styles from that library.
Styles allows you to define a set of properties that can be reused across your team or organizations's files and projects. Use text styles to define typographic scale within your designs.
You can apply a text style to an entire text layer or a range of text within a layer. For example: you can apply header text to an entire text layer, or style a text string within a paragraph as a link.
Use the table below to see which properties are included in text styles. For more guidance on building typographic systems in Figma, check out our
best practices guide
Text property
Supported in text styles
Font family, weight, and size
Line height
Letter spacing
Paragraph spacing and indentation
Horizontal and vertical alignment
Color / fill
Decoration
Letter case (transform)
Lists
Resizing behavior
OpenType features
Learn more about text properties.
Create text styles
From an existing text layer
Create a text style from any text layer that has the properties you want to use.
Select the layer.
In the
Typography
section of the right sidebar, click
Click
to create a new style.
Give the style a name and click
Create style
to apply.
From Local styles
Once you have created at least one color style within a file, you can view the
Text styles
section under
Local styles
in the right sidebar.
Click
next to the
Text styles
section to create a new style.
Give the style a name and description and click
Create style
Tip!
In the Create new text style modal, click
under the
Properties
section to view and edit more type settings.
Apply text styles
Apply text styles to any text layers. If the style lives within your current file, you can reuse it anywhere within that file. To use the style in another file, you'll need to publish the styles as a library.
With the style applied, you can still change any text properties that aren't included in the style. You can also apply color and effect styles to text layers.
Select the text layer.
In the
Typography
section of the right sidebar, click
Select the style from the style picker to apply it to the selected layer:
Tip:
You can use keyboard shortcuts
⌘ Command
⌘ Command
, and
⌘ Command
to bolden, italicize or underline parts of a text layer without breaking the layer’s existing text style.
Edit an existing style
You can adjust the properties of an existing style at any time. This applies to local styles, as well as styles that are published in a team library. You need edit access to the file to change the styles.
Local styles
Local styles are styles in the current file. When editing a local style, your changes are immediately applied to any text layers using that style.
Edit local styles from the right sidebar and from the style picker.
From the right sidebar
Click on an empty spot in the canvas to make sure you have nothing selected.
In the right sidebar, you'll see a list of local styles.
Hover over the style you want to edit.
Click
to open the
Edit text style
modal.
Make your changes to the style properties. You can see a preview of your changes in the modal.
Update the name and description (optional).
Click anywhere outside the modal to save your changes.
From the style picker
Select a text layer that uses a text style. It doesn't have to be the text style you want to edit.
In the
Typography
section of the right sidebar, click
Hover over the style you want to edit. Click
to open the
Edit text style
modal.
Make your changes to the style properties. You can see a preview of your changes in the modal.
Update the name and description (optional).
Click anywhere outside the modal to save your changes.
Published styles
If your styles are published to a team library, you need to edit the style in the library file. You'll need edit access to the library file to make any changes.
Select a text layer that uses a text style. It doesn't have to be the text style you want to edit.
In the
Typography
section of the right sidebar, click
Right-click the style you want to edit and select
Go to style definition
In the right sidebar, you'll see a list of local styles. Hover over the style you want to edit.
Click
to open the
Edit text style
modal.
Make your changes to the style properties. You can see a preview of your changes in the modal.
Update the name and description if needed, then click anywhere outside the modal to save your changes.
You'll need to
publish these changes as an update
to your library. To see these changes in any subscribed files, you must review and accept the changes.
Learn how to manage and share styles.

--- Who can use this feature ---
Who can use this feature
Supported on
any team or plan
Anyone with
can edit
access to a file can apply and adjust text properties.
Type properties are text-specific properties that allow you to control everything from the style and format of the text, to specific OpenType features and variable font settings.
This article covers just one aspect of working with text and type properties. Check out these other articles to learn more about working with text in Figma Design.
Guide to text in Figma Design
: an overview of creating, editing, and styling text layers.
Add fonts to Figma Design
: instructions for using your own fonts in Figma Design.
Text dimensions and resizing
: control how text wraps and overflows in your designs.
Adjust
fill
stroke
, and
effect
properties: change other properties of text layers.
Troubleshoot issues with text and fonts
: fix issues with fonts and text layers.
Access type properties
You can find text-specific properties in the
right sidebar
. Your access and permissions will determine how you interact with text properties.
Edit text properties
Inspect text properties in Dev Mode
View text properties as a viewer
Edit text properties
As there are a number of typography properties available, we've grouped them by their location in Figma. You can view more details about each property in the
Explore type properties
section below.
Typography properties
You’ll find the most common text properties in the
Typography
section of the right sidebar. Use the image below to identify each property. Click the property name to learn more about each property.
View the list of properties and links
Select
to create and apply
text styles
Select the font name to
browse a list of web fonts, fonts installed on your computer, and shared fonts
to find a
typeface or font family
Select a font
weight
or style.
Adjust the
font size
of your text.
Use
line height
to adjust the vertical distance between lines of text.
Use
letter spacing
to adjust the horizontal distance between letters.
Adjust the
horizontal alignment
of text within the text box.
Adjust the
vertical alignment
of text within the text box.
Click
to open the
type settings
panel and explore more text properties.
Looking for the text
resizing
property? You can update
resizing
for text layers in the
Layout
section of the right sidebar.
Learn more about text dimensions and resizing
Type settings
The
Type settings
menu gives you access to additional text properties and OpenType features. Go to the
Typography
section and click
to open the type settings.
Type settings are grouped under two tabs:
Basics
and
Details
. If the font you’re using is a variable font, you’ll also see a
Variable
tab.
Preview type settings
You can use the
preview
at the top of the type settings panel to see how a particular property or OpenType feature looks.
Hover over any feature or property to see the preview. Figma displays sample text based on the feature you're previewing. This includes:
Blocks of text for alignment, spacing, and indentation.
Numerals for number properties.
Letters (or combinations of letters) affected by ligatures or stylistic alternatives.
Basics
Details
Variable
Adjust the
horizontal alignment
of text.
Apply
decoration
to text, like strikethrough and underline.
Adjust the
letter case
. Choose from uppercase, lowercase, capitalize, and small caps.
Toggle
vertical trim
Create
numbered or bulleted lists
Change the
spacing between paragraphs
of text.
Toggle
Truncate text
to hide any content that goes beyond the maximum number of lines.
Set the
maximum number lines
to determine when your text will be truncated.
Adjust
Indentation
settings:
Adjust
paragraph indentation
to offset the first line of text in a paragraph.
Toggle
hanging quotes
Toggle
hanging lists
Use
Letter case
to transform text into another case, this is a non-destructive action. Choose from uppercase, lowercase, capitalize, and small caps. If available, you can also toggle case-sensitive forms and capital spacing.
Adjust properties related to
Numbers
, such as
style
position (superscript and subscript)
fractions
, and more.
Adjust any
OpenType
features. These can vary between fonts. For example: in the Inter font, you can adjust Letter forms, Stylistic sets, Character variants, Horizontal spacing, and present numbers as fractional denominators and numerators.
Click
to close the type settings panel.
A variable font is a font that provides a range of dynamic font variations for a typeface in a single file. A regular static font can only contain one font per file.
You can
customize different properties of a variable font
, such as weight, width, optical size, and slant. Some font authors will additional properties you can customize for more style options.
Inspect text in Dev Mode
If you have access to Dev Mode, you can inspect text layers and their properties in the
Inspect
panel. Learn how to
access Dev Mode in design files
Confirm that you have a
Text layer
selected. If there have been changes since you last viewed this layer, you can
Compare changes
Choose the
Code
output you’d like to view text properties for.
Review text properties in the
Typography
section of the right sidebar.
Click to copy all text properties to your clipboard.
Preview and copy the
Contents
of the text layer.
View text properties as a viewer
If you have view access to the file, and don’t use
Dev Mode
, you can still view text properties in design files.
Select
Properties
in the right sidebar.
View the
Content
of the text layer.
View text properties in the
Typography
section.
Click
Copy
to add all text properties to your clipboard.
Click on a single property to copy that property to your clipboard.
Explore type properties
Alignment
Alignment determines how Figma distributes text within the bounding box. There are two alignment settings, one for each axis,
horizontal
and
vertical
Horizontal
Vertical
Horizontal alignment
defines how to align the text along the
x axis (horizontal)
. Use the icons to select the horizontal alignment. Choose from:
Left
Center
Right
Justify*
Justify
aligns the first word in each line of text to the left-most edge, and the last to the right-most edge. Figma spaces each word in a line of justified text uniformly.
Vertical alignment
aligns text along the
y axis (vertical)
. Use the alignment icons to select a vertical alignment. Choose from:
Top
Middle
Bottom
Note:
It's only possible to vertically align text in text layers with a
Fixed Size
. Layers with resizing set to Auto Width or Auto Height will ignore alignment.
Decoration
Apply text decoration to an entire text layer, or to selected text. You have two types of decoration available:
Strikethrough
Underline
Strikethrough
Underline
Strikethrough adds a horizontal line through the center of your text.
Use strikethrough to indicate obsolete or inaccurate information. This allows you to convey its state, without redacting or obscuring the original text.
Click the
icon to apply strikethrough to selected text.
Underline adds a horizontal line along the baseline of your text. Use underline to place emphasis on a particular section of the text, or show that it includes a link.
Underlining links is considered good practice in web design. If applied consistently, this can help to improve the accessibility of your design.
Click the
icon to apply underline to selected text, or use the keyboard shortcut:
Mac:
Option
Windows:
Ctrl
You can then access additional underline settings. From
Type settings
, select
the chevron to view and adjust
Underline details:
Style
: Select a solid, dotted, or wavy underline style.
Thickness
: Adjust the width of the underline.
Offset
: Adjust the distance of the underline text from its original position
Skip ink:
Adjust the behavior of the underline when the line passes through part of a letter or glyph. When enabled, the underline will skip areas where the part of a glyph character crosses an underline.
Color
: The color of the underline.
Font family, weight, size
Font family
Font weight or style
Font size
There are a few terms associated with a font:
typeface
is a set of letterforms and glyphs with similar design features.
font
is a file containing the visual details that make up the design of each glyph or letter in that typeface.
font family
is the collection of styles that make up a typeface. For example: Helvetica, Times New Roman, and Roboto are all font families.
Figma will use
Inter
as the default font for new text layers in a session. You can
select another font family using the font picker
. Click the arrow to explore styles for the selected font.
A typeface can have any number of styles or weights. Every font family will come with its own selection of styles. For example, a few font weights from the Inter font family include thin, light, regular, medium, bold, black, and more.
You can access weights once you select the font family. Adjust the font-weight using the field directly below the font family.
Click the arrow to explore styles for the selected font.
Use the keyboard shortcuts to increase and decrease the font-weight.
Mac:
Hold down
⌥ Option
⌘ Command
and
to increase or
to decrease.
Windows:
Hold down
Ctrl
Alt
and
to increase or
to decrease.
Font size controls the scale of your text. Figma represents font size in density-independent pixels.
Adjust the font size using the field next to the font style. There are a few ways to adjust font size:
Click the arrow to select a default font size.
Enter your own number in the field.
Use the keyboard shortcuts:
Mac:
Hold down
Shift
⌘ Command
and
to increase or
to decrease.
Windows:
Hold down
Ctrl
Shift
and
to increase or
to decrease.
Figma represents text sizes in a few different ways
If you're translating your designs to code, your screen resolution will determine the actual size of any text. You can view the CSS
pixel value (px)
of any text in the
Typography
section in Dev Mode.
You can also view these values in the
Properties
panel if you have view access to the file and don't use Dev Mode.
If you're exporting your designs to PDF, Figma will render font size using
traditional print points
(pt).
Hanging quotes
Toggle hanging quotes to move a text layer's opening quotation marks outside of the bounding box.
Hanging lists
Toggle hanging lists to move bullet points or numbers of each list item outside of the bounding box. This aligns text content with the bounding box.
Letter case
Letter case allows you to change the case of selected text. This is super handy when you want to switch between cases without having to delete and retype your text. Choose from:
Uppercase
: transforms text to
UPPER CASE
Lowercase
: transforms text to
lower case
Capitalize
: transforms the first character of every word to upper case. You may know this as
Title Case
Small Caps
: transform text to
MALL CAPS
. This displays uppercase letters inline with lowercase letters. While this looks like an UPPERCASE transformation, it's a little different. Small Caps characters usually have different proportions (for example, weight or aspect ratio).
Letter spacing
Letter spacing
lets you define the space between characters in a word, line, or paragraph. This can determine how easy your text is to read.
This is not to be confused with
kerning
, which refers to the process of adjusting space between individual characters in a typeface.
Adjust the letter spacing for an entire text layer, or a selection of text. To replicate kerning, place the cursor between two letters and adjust the letter spacing.
Use the
field to adjust letter spacing for your selection, or use the keyboard shortcuts:
Mac
: Hold down
⌥ Option
and
to increase or
to decrease.
Windows
: Hold down
Alt
and
to increase or
to decrease.
If you select text with different letter spacing values, Figma will scale the letter spacing proportionally.
Tip!
Tracking describes the letter spacing process in the manual printing process and is usually represented in 1/1000em. One unit of tracking (1/1000em) is approximately equal to 0.001em letter-spacing (CSS). You can use this formula to convert tracking to letter spacing:
letter spacing = tracking/1000
Line height
Line height
allows you to control the vertical distance between lines of text in a paragraph. This can help to balance designs and improve the readability of your copy. This is the same as
line spacing
Small line heights can make text difficult to read. Large line heights can make text look messy and disjointed.
Use the
field to adjust the vertical space between lines of text, or use the keyboard shortcuts:
Mac:
Hold down
⇧ Shift
⌥ Option
and
to increase or
to decrease.
Windows:
Hold down
Alt
Shift
and
to increase or
to decrease.
You can also view these values in the
Properties
panel, under
Typography
, if you have view access to the file and don't use Dev Mode.
Figma allows you to set a
fixed line height in pixels (px)
or a line height that's a
percentage of the font size (%)
By default, line height is set to
Auto
. This is calculated using the font's default line height, which varies between typefaces.
You can switch between fixed and percentage line heights and Figma will convert the value for you, to the nearest pixel.
Translating line height:
Each platform has a different way of representing line height. Figma includes values and measurements for each platform in Dev Mode.
You can also view alternative units of measurement. For line height this means both a fixed line height in pixels and as a percentage of the font size.
Lists
Lists are a great way to organize and emphasize related information. List items in Figma can either be ordered or unordered in the form of a numbered or bulleted list.
Learn more about creating bulleted or numbered lists →
List spacing
List spacing
lets you control the distance between each line item in a bulleted or numbered list. By default, list spacing is set to
when creating a new list and for any existing text styles. Figma represents list spacing in pixels (px).
To adjust list item spacing:
Select text in a list or a text layer with only list text.
Enter a px value in the
List spacing
field. Or hover above the icon and drag to
decrease (left)
increase (right)
the value.
You can also adjust list spacing from the
Type details
panel by clicking
in the
Typography
section of the right sidebar.
Numbers
The number section includes any properties or features for numerical figures. The properties in this section will depend on the font family you are using.
Fractions
Position (subscript and superscript)
Slashed Zero
Style
Create
fractions
from numbers. Enter a fraction as
X/X
and click the
to turn it into a fraction.
Use
subscript
superscript
to offset the position of numbers and characters.
Subscript characters are positioned below the line the type. Superscript characters are positioned above the line of type. Both default to a smaller size than the rest of the text.
Faux typography
When you apply superscript/subscript to text, Figma tries to use any superscript/subscript glyphs provided by the font. If it isn’t provided, Figma draws a synthesized version by using the font's standard version of the character, shrinking it, and positioning it accordingly.
This is often called “
faux typography
Also, if you mix available and unavailable superscript/subscript glyphs in the same text layer, they’ll all update to the synthesized form for consistency.
Use
slashed zero
to display the zero integer with a slash through it. This is another way to distinguish it from the letter O.
Style options include proportional figures and monospace figures.
Proportional
figures have varying spacing depending on the width of the character being used.
Monospace
figures, also known as tabular figures, have the same width regardless of the character being used.
Both figures are offered in uppercase (also called lining style) or lowercase (also called old-style).
Proportional uppercase/lining
Proportional lowercase/old-style
Monospace uppercase/lining
Monospace lowercase/old-style
OpenType features
OpenType can refer to a format or a set of features or functions available in a font. In Figma Design, we're referring to the OpenType features that a font supports.
Figma supports OpenType features
across all fonts. But its worth mentioning that not all fonts support the same OpenType features. Supported features can include settings like: letterforms, stylistic sets, character variants, horizontal spacing, and more.
Paragraph indent
Paragraph indentation offsets the text in the
first line
to the right. You can only apply paragraph indentation to text that uses the horizontal alignment setting
Text-align left
Figma represents paragraph indentation as a
pixel (px)
value. Use the
Paragraph Indent
field to adjust paragraph indentation.
A good rule of thumb is to avoid indentations greater than 4 x the font size. We also recommend taking the width of the text layer into account - the wider the layer, the larger the indentation.
Note:
Paragraph indentation applies to all paragraphs in a text layer. If you wish to indent a single paragraph, you will need to create a separate text layer for it.
Paragraph spacing
Paragraph spacing lets you control the distance between paragraphs. This can increase or reduce the whitespace around text in your design. White space can help to focus the viewer's attention, as well as increase legibility and readability.
Figma represents paragraph in
pixels (px)
. Enter a px value in the
Paragraph spacing
field. Or hover above the icon and drag to
decrease (left)
increase (right)
the value.
Note:
Figma will create a new paragraph when you use the
Enter
Return
keys. This is something to bear in mind if your
text resizing
is set to
Auto Width
Text truncation and max lines
Truncate text
hides text that overflows the bounding box. An ellipsis
...
is added at the end of the text to indicate hidden overflow text.
Max lines
allows you to set the number of lines of text before it truncates. Max lines is available only if truncate text is enabled, and:
Text resizing is set to
auto height
auto width
Vertical resizing is set to
hug contents
(for text living in auto layout frames)
Vertical trim
Use vertical trim to remove the extra space above and below text. This allows text layers to behave like other components in your layout by removing ambiguity around the bounding box of text content.
This can help with handoff by making it easier to parse CSS margin and padding values with accurate pixel measurements that match your designs.
Vertical trim in Dev Mode
If vertical trim is enabled on a text layer, you’ll see
leading-trim: both;
in the
Typography
section in Dev Mode.
Vertical trim translates to two CSS properties in Dev Mode:
leading-trim
and
text-edge
. It’s worth noting that both of these properties are draft features that aren’t widely supported by web browsers.
This setting won’t change the measurements or properties of the text layer, but it may change the final dimensions of its parent layer.

--- Before you Start ---
Before you Start
Who can use this feature
Supported on
any team or plan
Anyone with at least
can view
access to a file can add and view comments
Comments take collaboration to the next level. You can use comments to respond to feedback, tweak your designs, and iterate faster—all from the original design file or prototype.
Add comments to
files
prototypes
in comment mode. You can @mention your collaborators, as well as add emoji to your messages.
Learn how to add comments to prototypes.
Add a comment
Add a comment to a pinned location or region on the canvas.
Figma will attach your comment to frames
when you pin a comment or
select a region
inside a top-level frame, component, or group. If those frames are moved around the canvas, their comments move with them.
Comments won't attach to any nested frames, components, groups, or other layers.
Click
in the toolbar, or press
to enter comment mode. Your cursor will turn into a
Select a location to comment on:
Click the location on the canvas where you'd like the comment to be pinned.
Or, click and drag your cursor to select a region to comment on.
Type your message in the field. Click the emoji icon to
add emoji
, press
mention a colleague or collaborator
, or click
add an image or GIF
Click
to send your message.
You can also
add comments to files using the Figma mobile app
. Long-press the location on the canvas where you want your comment and start typing.
Learn how to view and manage comments.
Mention a collaborator
@mention
collaborators in comments by pressing
symbol and typing their name. This allows you to include a collaborator in the comment thread or draw their attention to a specific part of the design file.
There are some restrictions around @mention behavior depending on your permissions level—owner, admin, can edit, or can view—and your plan:
Personal user account
Can mention:
Users who have permissions on the file or who have previously commented on the file
Users who have permissions on a non-organization project or a team you have permissions on
Users who share the same permission level as you and who are in the last 100 users you’ve interacted with in Figma
Starter, education or professional team
Members can mention:
All team members
Users who have permissions on the file or who have previously commented on the file
Non-members who have permissions on any team resources
Non-members can mention users who are in the last 250 users you’ve interacted with in Figma that are either a member of the team or who have permissions on a team resource
Organization or enterprise
Members can mention all members and guests
Guests can mention:
Users who share the same permission level as you on folders or teams in the organization
The last 100 organization members you’ve interacted with in Figma
Users who have permissions on the file or who have previously commented on the file
Add a mention to a comment
Mention a collaborator when you add a new comment, or reply to an existing one.
In the comment field, click
or press the
key on your keyboard to trigger a mention.
Start typing in the person's
name
email
. Figma will suggest collaborators based on your history.
Click on the person's name in the list.
Figma will show mentions in blue text. Complete the rest of your message and click
Submit
Figma will send an email to the collaborator with the details of your comment and a preview of the design. If they have in-app notifications enabled, they will receive a notification in Figma too.
Note:
If you'd like to mention someone who is missing from your list, then you will need to
invite them to the file
first.
Add media to comments
You can attach up to 5 images or GIFs when adding or replying to comments. Comments support PNG, JPEG, and GIF media formats.
To add media to a comment, either-drag and-drop the file into the comment field, copy and paste the file from your clipboard, or do the following:
In the comment field, begin typing your message then click the
image icon.
Select an image or GIF from your computer.
After the media has been uploaded, click
to add your comment to the file or prototype.
To remove attached media, click the
in the upper-right corner of the attachment.
Note
: If you receive an error when attempting to add media to a comment, you may need to
adjust your firewall settings
Add emoji to comments
Add emoji when adding or replying to comments. Figma uses the Apple emoji collection.
In the comment field, begin typing your message then click the
smiley face icon.
Choose from your
Frequently used
emoji or browse through the catalogue of emoji.
Or, use the
Search
bar to find the exact emoji you're after.
Click on the emoji to add it to your message.
Click
to add your comment to the file or prototype.
Note:
You can add up to 100 comments per hour. This includes new comments and replies and applies across all your files and prototypes.
Add text styling to comments
Styling
Keyboard shortcut
Markdown syntax
Bold
Mac:
Command
Windows:
Control
**bold**
Italics
Mac:
Command
Windows:
Control
*italicized*
Strikethrough
Mac:
Command
Shift
Windows:
Control
Shift
~strikethrough~
Add URL
Mac:
Command
Windows:
Control
Numbered list
Mac:
Command
Shift
Windows:
Control
Shift
1. First item
2. Second item
3. Third item
Hit
Shift
Enter
to add multiple items to a numbered list.
Bulleted list
Mac:
Command
Shift
Windows:
Control
Shift
- First item
- Second item
- Third item
Hit
Shift
Enter
to add multiple items to a numbered list.

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
With Figma AI, you can add multiple prototyping interactions and connections to your designs in only a few clicks. This reduces the time spent
manually adding interactions
, providing a faster and simpler workflow for building an interactive prototype.
Guide to prototyping in Figma.
How it works
Add interactions
with Figma AI lets you create interactions and connections between frames in your selection. For example:
Create simple flows between a selection of top-level frames
Add interactions to back or next buttons
Link to individual frames from a navigation menu
This is helpful if you want to quickly build a basic prototype flow from your designs. You can always customize each interaction further or add more interactions to your prototype.
Consistent layer naming can help improve Figma AI output. Learn how to
rename layers with Figma AI
Add interactions with AI
Select the frames
on the canvas you want to create interactions between.
Open the
Prototype
tab in the right sidebar.
From the
Interactions
section, click
Add interactions
Once Figma AI completes adding interactions to your designs, you’ll see a banner at the bottom of the page that let’s you
Preview
the interactions. This opens the current flow as a prototype in the inline preview.
To accept all interactions, click
Keep it
Make changes to the prototype
You can edit or remove any interactions added by Figma AI, as well as
manually edit and add more interactions
Click on a connection to select a specific interaction.
The
Interaction details
modal will open on the canvas, where you can make any changes as needed.
To remove that interaction, find the corresponding interaction in the right sidebar and click
to remove it. Or you can press the
Delete
key on your keyboard.
To remove all connections on the current page, right click on the canvas and select
Remove all connections

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can use variable fonts
Variable fonts are different from variables. Looking to apply variables to font properties? Check out our
guide to variables
A variable font provides a range of dynamic font variations for a typeface in a single file. While static fonts can only contain one font per file, a variable font can contain many.
For example, if a
typeface
contains five font styles — italic, thin, regular, bold, and black — using the typeface’s static font files would require five font files. In contrast, using the typeface’s variable font version would combine all five styles into one file.
Variable fonts also contain
axes
singular noun
axis), which provide a range of property customizations. Standard axes include weight, width, optical size, and slant, but font authors can also provide alternative axes for more style options.
For example, instead of providing a few predefined properties (such as font weights of 300, 500, and 700), font authors can set a range so that users can apply granular values (so, font weights of 143 or 629 in a range from 100-800).
In this article, we’ll talk about how to replace static fonts with the variable font version, how to change axes, access previous axis settings, and developer handoff.
Check out our
variable fonts page
to learn more about axes and how they’re used, and for additional resources.
Note:
If you are using the
Figma desktop app
, you can use any fonts already on your computer. If you're using Figma in the browser, you can
install the Figma Font Helper
to access your installed fonts.
Replace static fonts with variable fonts
If the font you’re using contains a variable font version, you can replace the static font that you, your team, or your organization has been using with the font’s variable font file.
Keep in mind that when editing in Figma Design, Figma pulls fonts from three different sources: shared fonts, installed fonts, and web fonts (Google fonts) provided by Figma.
If the same font is available from more than one source, Figma will serve fonts in this order of priority:
Shared font uploaded to the organization →
Fonts installed on your device →
Default web fonts provided by Figma →
Shared fonts (Organization and enterprise plans only)
If the new variable font contains the font families of your previous static font files, then Figma will ask if you want to replace the static font with the variable font.
Once you click replace, Figma deletes the old static font from the shared fonts list and uses the variable version. Learn more about
shared fonts
Note:
A font’s variable version might not have the same font styles available as its static versions.
For example, say you want to replace your organization’s static fonts (which include light, regular, bold, and black styles) with the variable font version. However, the variable version includes all styles except bold. In this case, Figma keeps the static font file for bold so it can be used. The rest are replaced by the variable font version.
Installed fonts
To replace your static fonts with a variable version, be sure to install the variable version to your device. Learn how to
access installed fonts
If the variable font version contains all the families of your old static fonts, then there are no further steps to take. Figma will automatically prioritize using the variable font over the static ones.
However, if the variable font version is missing any families, you’ll see a missing font dialogue and will need to
choose a replacement style
Default fonts provided by Figma
If you’ve been using any default fonts, like
Google fonts
, transitioning to the variable font version depends on the font’s latest variable version.
If the variable font version contains all old static styles, then the replacement will be seamless.
However, if the variable font version is missing any families, you’ll see a missing font dialogue and will need to
choose a replacement style
Use variable fonts
Customize text using variable fonts by changing various axes. The most common options are weight, width, optical size, italic, and slant. The axes of a variable font depend on the author of the font.
You customize your variable font text from the type settings panel.
To access the type settings panel:
Select a text layer that is using a variable font.
Click
from the right sidebar to open the type settings panel.
Click the
Variable
tab.
From the
Variable
tab you can use the sliders and input boxes to change the values of each axis.
Tip:
Hover over an axis in the type settings panel to preview what the property looks like.
Access frequently used axis settings
Quickly access previous variable font settings you’ve applied to text. These settings are explicit to individual fonts, and Figma lists the most frequently used axis settings.
Select one or more text layers using a variable font.
Click the
to open the font style drop-down menu.
Options are listed just below the font families. Click a setting to apply it to the text.
View variable font properties in Dev Mode
If you have
can view
access to a file, use the
Properties
tab in the right sidebar to view a text layer's variable font properties.
If you're in Dev Mode, use the
Inspect
tab in the right sidebar to view a text layer's variable font properties and grab its code snippets. Learn more about
inspecting layers

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone with
can edit
access can create prototypes.
Anyone with
can view
access can play back prototypes in Presentation view.
Figma’s prototyping features allow you to create interactive flows that explore how a user may interact with your designs.
Prototypes are a fantastic way to:
Preview interactions and user flows
Share and iterate on ideas
Get feedback from collaborators
Test interactions with users
Present your designs to stakeholders
Watch our video on prototyping below. Or, check out our
Prototype & Collaboration Playlist
on Youtube.
Tip!
For an even more efficient workflow, you can quickly toggle between the
Design
and
Prototype
tabs using the keyboard shortcut
Shift
Flows and starting points
With prototyping in Figma, you can create multiple flows for your prototype in one page to preview a user's full journey and experience through your designs.
A flow is the network of frames and connections in a single page. A prototype can map out a user's entire journey through your app or website, or it can focus on a specific segment of it via its own flow. For example: your prototype covers all possible interactions on an eCommerce site. Within the prototype, you have flows for creating an account, adding items to a cart, and checking out.
Figma creates a flow starting point when you add your first connection between two frames. There are a few other ways to add a flow starting point to your prototype:
With the starting frame selected, click
in the
Flow starting point
section of the right sidebar.
Right-click on the frame, then click
Add starting point
Duplicate a frame with an existing starting point.
When it's time to test your designs, you can share the entire prototype or
copy the link to a flow starting point
Learn more about starting points and flows →
Note:
A top-level frame can be part of multiple flows, but can only have one starting point. Frames nested within a top-level starting frame can have connections that navigate the user around multiple flows. For example,
Log in
and
Sign up
buttons can be nested in the same starting point frame, then be connected to frames in separate flows for each experience.
Create connections
Select the hotspot for the connection.
Click
to create the connection.
Drag it to the destination.
If there are no existing connections, Figma will make the first frame a starting point.
Tip!
You can create connections from multiple objects to the same destination frame at the same time—saving you time and effort when building out your prototype flows. To do so, select multiple starting hotspots on your canvas, then click and drag the
icon to the destination.
Learn more about creating and editing connections in bulk →
Create interactions and animations
Open the
Prototype
tab in the right sidebar
Add
interactions
Set interaction details
Apply an
animation
Preview
your animation
Adjust prototype settings
Select a
Device
and
Model
Preview
your prototype
Select
Background
color
Set the prototype's
Starting Frame
Learn more about prototyping
Get started
Create prototype interactions and animation
Select a starting point for your prototype
Customize your prototype device
Prototype
actions
triggers
and
animations
Advanced interactions
Create overlays in your prototypes
Create advanced animations with Smart Animate
Prototype scroll interactions with overflow behavior
Add video to prototypes
Add animated GIFs to prototypes
Use variables in prototypes
Use expressions in prototypes
Multiple actions and conditionals
Variable modes in prototypes
Share and collaborate
View prototype connections
Set prototype presentation view options
Share your prototype
View prototypes on a mobile device
Give feedback on prototypes with comments
Glossary
hotspot
is where the Interaction takes place. A hotspot can be any object within the original frame, such as a link, button, image or icon, etc.
Connections
are the blue arrows or "noodles" that connect the hotspot to the destination. We apply the interaction and animation settings via the connection.
flow
is the network of connected frames that form a path through a prototype. Each flow has its own
starting point
. You can have multiple flows within a prototype.
The
starting point
is the first frame of a flow. Set multiple starting points to show different flows of the prototype in Presentation view.
The
trigger
determines what type of interaction with the hotspot will cause the prototype to advance. This could be a mouse or touch interaction, such as a tap, drag, click, hover, etc.
The
destination
is where the transition ends. This must be a top-level frame - a frame that is added directly to the canvas - and not an object within a frame. If we think of moving from A to B,
is the hotspot and
is the destination.
The
action
defines the type of progression is occurring in the prototype. For example, the action could be to navigate to another frame, or open an external URL.
The
animation
settings determine how the prototype moves from one frame to the other. You can control the type of animation, as well as the speed and direction.
transition
is the type of animation. This defines how the action moves to the destination.
The
direction
controls the direction that the transition comes from. Choose between left, right, top or bottom.
The
duration
controls the time it takes to complete the animation. The shorter the duration, the faster the transition. Select a duration between 1ms and 10000ms (10 seconds).
Easing
affects the acceleration of the animation
whether it starts slow or fast. This allows you to build animations that feel more natural.
Overlays
are frames that appear above the current screen or frame. You can use overlays to create tool-tips, interactive menus, alerts, or confirmations.
Overflow behavior
allows you to define how your prototype responds to scrolling. This allows you to create more advanced user interactions, such as carousels, galleries, or interactive maps.
Choose which
device
will be shown when presenting your prototype. Define both the device and the model.
The
background color
lets you define the color in the background of your prototype.
If you have a prototype with portrait and landscape frames, you can select an
orientation
. The orientation is set for the entire prototype. It's not possible to switch between portrait and landscape view within a prototype.
preview
will show you how something will look or work in the prototype. We show previews for both
animations
and prototype
device
settings.

--- Before you start ---
Before you start
Who can use this feature
Users on
any team or plan
can play prototypes
Anyone with
can view
access to a file or prototype can play prototypes. Anyone can adjust view options in presentation view.
Prototypes replicate how users might interact with your designs, allowing you to see and test how they work before moving to development. In Figma, build prototypes directly on the canvas. Then, play them to see prototype interactions and animations in action.
Before playing a prototype,
prepare the design
so that the prototype plays as desired.
Then, choose how you’d like to play the prototype:
Preview
: Play the prototype directly in the editor, with an inline preview. See how the prototype works as you build it—all in the same tab.
Present
: Play the prototype in presentation view, in a separate tab. Share the prototype with others or see how it looks on a specific device.
Prepare prototypes for play
The way frames and connections are set up on the canvas impacts how prototypes are played:
The design must be within a frame in order to
Preview
Present
If there are
prototyping connections
, Figma will only display those frames with connections while playing the prototype. Click through each screen or interact with any
hotspots
If there are no prototyping connections, you can navigate through frames from the current page.
Set up a
flow starting point
to determine where the user’s journey should start. You can set up multiple flow starting points.
For presentation view, set the prototype’s device type, starting point, and background color in the
prototype settings
Once you’ve prepared the prototype for play, choose to
Preview
Present
your prototype.
Preview a prototype
Use inline preview to play your prototype directly on the canvas alongside your design. With inline preview, any design changes are immediately reflected in the preview so you can see changes in real time. When you click another frame on the canvas, the preview jumps to that frame.
To open inline preview, do one of the following:
Click
Preview
in the top toolbar
Clicking the preview icon on any flow starting point
Use
⇧ Shift
Space
on your keyboard
From inline preview, you can:
Use the left and right arrows to navigate back or forward through the prototype.
Restart the prototype from the last selected frame on the canvas. You can also press
to restart.
Open the
overflow menu
to choose from different scaling options for your prototype.
Open the prototype in presentation view in a new tab.
Click the X to close the inline preview.
Resize the preview by clicking and dragging the edge of the preview window. Hold
⇧ Shift
to scale it proportionally.
Overflow menu options
The overflow menu for the inline viewer contains different scaling and view options for your prototype. The options available will vary depending on whether you have a
prototype device
selected. Some of these options overlap.
Fit width
Scale the prototype so it fills the width of the display. Available only if the prototype device is set to
No device
Presentation
on the page.
Responsive
The contents of the prototype will resize and re-layout as the prototype viewer resizes according to the constraints and auto layout properties applied to the design. This allows you to view designs at different window sizes and check their responsive behavior. In order for
Responsive
to work, there must be constraints and auto layout settings applied to the design.
Follow prototype
The selected frame on canvas updates to mirror the current frame in inline preview. As you navigate through the prototype in preview, your canvas selection and position will follow.
Resize window/device to 100%
Resizes the viewer or device to 100% of the frame size.
Respect aspect ratio
The inline viewer window resizes to match the aspect ratio of the current frame. Available only when a prototype device is set to
No device
Show device frame
Show or hide the physical device frame. Available only when a prototype device frame is selected.
Present a prototype
Use presentation view to play your prototypes in a new tab.  you can interact with hotspots or enter
keyboard shortcuts
within your prototype.
To open a prototype in presentation view on desktop, click
Present
in the toolbar, or use keyboard shortcut:
Mac:
⌘ Command
⌥ Option
return
Windows:
Control
Alt
enter
Figma will present the device against the
Background Color
you selected.
Tip:
Want to share your prototype with others?
Learn more about sharing prototypes
Want to play your prototype on mobile?
Learn more about viewing protototypes on a mobile device
Presentation view layout
Presentation view contains various options you can choose from to interact with a prototype.
From the left side of the toolbar, you can:
Click the Figma logo to go to the file browser
Click
to show and hide the left sidebar, where you can select flows and view their descriptions.
Click
to enter comment mode and add comments to the prototype.
From the right side of the toolbar, you can:
Click the arrow next to your avatar and choose to
spotlight yourself or follow a presenter
Share the prototype
Open the
options menu
to select different settings for the prototype.
Click
to enter fullscreen mode.
From the bottom of the presentation view, you can:
Use the left and right arrows to move between screens.
Use the
device switcher
to switch to a similar device and access other scaling options. Available if a device frame is selected for the page.
Click
Restart
or press
to return to the starting point of the current flow. If there are no flows, it will return to the first frame on the canvas.
Options menu
Click
to open the options menu for additional settings.
The following options are always available:
Enable Figma shortcuts
Enable
Figma keyboard shortcuts
, such as:
to open comments
to enter fullscreen
When enabled, users can navigate through prototypes with keys, such as the left and right arrows on their keyboard.
When disabled, users can only navigate through prototypes by clicking through hotspots or clicking the left and right arrow icons at the bottom of the screen.
Show hints on click
Hotspot hints help guide users through a prototype. They show where the Hotspots are in the prototype. When a user clicks outside of a hotspot, Figma highlight any clickable areas with a blue bounding box.
Make available offline
Preload your prototypes so you can
present them while offline
Accessibility settings
Accessibility settings help those with disabilities access and interact with a prototype. For example, those with visual impairments can adapt a prototype for screen readers and other assistive technologies.
Hide UI
You can choose to show or hide Figma's prototype UI in presentation view. This is useful when you're testing a prototype and want to avoid any distractions.
When you hide the Figma UI in presentation View, Figma will:
Hide the toolbar and footer on your current view.
Hide the flows sidebar if
Show sidebar
is checked in the
Options
menu.
Update the prototype URL with a
&hide-ui=1
variable.
Remind you how to restore the toolbar and footer.
Allow you to copy the updated share link. If you share this link, Figma will hide the toolbar, footer, and sidebar for any other viewers.
Note:
Adjusting some settings in the
Options
menu will update the URL for sharing the prototype. Make sure to copy the new URL if you make any changes.
The options menu also contains content and device scaling options to determine how your prototype or device frame displays and resizes. The types of scaling options available depends on whether you have a
prototype device
selected:
Without a device frame ↓
With a device frame ↓
Scaling options without a device frame
If you don’t have a prototype device selected on the page, the
options menu
provides the following content scaling options:
Actual size (100%)
Display the prototype based on the full size of the design frame. Depending on the frame and the screen size, this may result in a cropped prototype.
Responsive
The contents of the prototype will resize and re-layout as the prototype viewer resizes according to the constraints and auto layout properties applied to the design. This allows you to view designs at different window sizes and check their responsive behavior. In order for
Responsive
to work, there must be constraints and auto layout settings applied to the design.
Fit width
Scales the prototype so it fills the width of the display.
Fit width and height
Shrinks the prototype so that both the width and the height fit within the viewer window. It will not scale up the prototype.
Fill screen
Scales the prototype horizontally and vertically so that it fills the entire display. It will not overflow any content of the design.
Depending on the size of frames, the prototype will default to certain scaling settings and different options will show in the
Recommended
and
Other scaling options
sections of the options menu:
Default scaling setting
Other recommended and scaling options
First frame is wider than 1024px
Actual size (100%)
Responsive
First frame is narrower than 1024px
Actual size (100%)
Fit width and height
All frames have a 16:9 format, or device type set to Presentation
Fill screen
Actual size (100%)
If the device type is set to Custom
Fit width and height
Fill screen
Actual size (100%)
Scaling options with a device frame
With device frame, the
options menu
provides
Responsive
and
Fixed size
scaling options.
Responsive
The contents of the prototype will resize and re-layout as the prototype viewer resizes according to the constraints and auto layout properties applied to the design. This allows you to view designs at different window sizes and check their responsive behavior. In order for
Responsive
to work, there must be constraints and auto layout settings applied to the design.
Fixed size
Shows the design at 100% within the device. Depending on the frame and device size, this may result in a cropped prototype. You can control the size of the device with device scaling options.
If you have a prototype device selected, the device switcher becomes available at the bottom of presentation view, which allows you to choose prototype devices similar to the current one. It also has device scaling options for you to choose from:
Fit device on screen
Shrink the device frame so that it fits within the viewer window.
Zoom device to fill screen
Scale the device so that it fills the entire display.
Show device at 100%
Display the prototype at 100% of the frame’s size. Depending on the frame and the screen size, this may result in a cropped prototype.
Show device frame
If a prototype device is selected, this option allows you to show or hide the physical device frame.
Tip:
Press
on your keyboard while in presentation view to move between scale options.
Frame ordering and navigation
When playing your prototype, you can press
Space
, or
to navigate to the next frame, and
to navigate to the previous frame. This setting is enabled by default.
The next and previous frames are determined by the frames's position on the canvas or by the prototyping connections you've created.
Prototypes with a flow starting point
If your prototype has a
starting point
, Figma will create a "history" of frames you've visited when viewing the prototype.
will go to the previous frame, if one is available.
will navigate to the next frame. If there is no history—like after using
—then it will navigate to an adjacent frame you haven't visited.
Prototypes without a flow starting point
If a prototype doesn't have a
flow staring point
, Figma orders frames based on their co-ordinates in the canvas. First, by their x co-ordinate from left to right, then their y co-ordinate from top to bottom.
If the y co-ordinate is offset in any way, then frames may appear out of order. To fix, you can
set horizontal alignment
for each row of frames to align-top.
will go to the previous frame if one is available.
will navigate to the next frame. First by x co-ordinate, then y-co-ordinate.
Learn how to set a device and starting point →

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can create and edit prototypes.
Set how scrolling and panning works in your prototypes to replicate user interactions, such as:
Scroll up and down a long page of content
Scroll left and right to view different elements in a slider
Pan or scroll in any direction, like in an interactive map
Fix objects like navigation bars and menus to one position on the page while scrolling
Create “sticky objects” that stay in place at the top of the frame once you scroll past them
In order to use scrolling in your Figma prototypes, you must:
Prepare frames for scrolling:
Make sure content extends beyond the bounds of the frame’s dimensions.
Apply scroll overflow to frame:
Define if your frame will have vertical, horizontal, both, or no scrolling.
Apply scroll position to the objects within frame:
Define how objects in your frame behave when you scroll past them. They can scroll with the parent frame, stay in a fixed position, or stick to the top of their parent frame.
Once you’ve set up scrolling, you can also consider
preserving or resetting scroll position
when navigating between multiple frames.
Prepare frames for scrolling
In order to add scrolling behavior to a frame, the frame must have content that extends beyond the bounds of the frame.
Think of it like any webpage—when you browse on your phone, you can only see the content that fits the dimensions of your screen. However, there is “hidden” content that exists beyond what you see on your screen that you can only see with scrolling.
Extend content beyond frame dimensions
To resize a frame:
Select the frame you want to update.
Open the
Design
panel in the right sidebar.
Hover over the frame's edge until the cursor appears.
Drag the bounding box to resize the frame.
Constraints define how an object behaves when you resize them. To temporarily ignore
constraints
and auto layout resizing properties, hold down the modifier key as you resize the frame:
Mac
⌘ Command
Windows
Ctrl
To ensure that each object still sits within the selected frame, check the
Layers
section of the left navigation panel. Child objects are nested beneath their parent frame.
Clip content
You can hide any content that extends beyond the bounds of a frame with
Clip content
Select the frame you want to update.
Open the
Design
tab in the right properties panel.
In the
Layout
section, check the box next to
Clip content
Apply scroll overflow to frames
Scroll overflow defines how users can interact with content that extends beyond a frame’s dimensions.
You can only apply overflow behavior to frames. This applies to frames that are directly on the canvas (top-level frames), as well as frames nested within other frames or layers.
To apply scroll overflow to a frame:
Select a frame.
Open the
Prototype
tab in the right properties panel.
In the
Scroll behavior
section, select the
Overflow
dropdown. Choose from:
No scrolling
Horizontal
Vertical
Both directions
Note:
If you receive an error message marked by an exclamation point (”For scrolling to work on this frame, the content needs to be bigger than the frame”), this means you still need to
prepare the frame for scrolling
by extending the content of the frame beyond the frame’s dimensions.
Vertical
Vertical scrolling allows users to swipe or scroll up and down. Use this behavior to mimic scrolling down a long website, or page of content within an app.
Horizontal
Horizontal scrolling allows users to swipe or scroll left and right, while maintaining their vertical position. Use this to create sliders for content, like products, galleries, and libraries.
No scrolling
No scrolling prevents users from scrolling in any direction. Content that extends beyond the bounds of the frame will not be viewable.
Both directions
Both directions (horizontal and vertical) lets users navigate in any direction, like when viewing a map or enlarged image.
Apply scroll position to objects within a frame
Scroll position defines how layers in a frame behave when users scroll past them. You can only apply one scroll position to each layer.
Select an object, group, or component. The object must be on a frame that has scroll overflow applied.
Open the
Prototype
tab in the right properties panel.
In the
Scroll behavior
section, select the
Position
dropdown. Choose from:
Scroll with parent
Fixed
Sticky
Scroll with parent
Objects that scroll with parent move up and down the frame as you scroll. Use this behavior to mimic the behavior of scrolling up and down longer pages of content.
Fixed
Fixed objects don’t move, even as you scroll up and down. For example, use this option to fix a status bar to the top of the device, or fix a menu to the bottom of a frame.
You cannot assign a fixed scroll position to any objects in a frame with auto layout, unless the object has
absolute position
applied.
When you set an object to fixed, Figma will move it above the other layers in the frame and label them as
Fixed
in the
Layers
section of the left navigation panel. It's not possible to position scrolling objects above fixed layers.
Sticky
Apply sticky scroll position to any object within a frame that has vertical scrolling.
Sticky objects will scroll at first, but become fixed once its top edge reaches the top of its parent frame. (If you scroll up again, the object will unstick and move down the parent frame.)
Tip:
We use the terms
parent
child
sibling
, and
top-level frame
to describe relationships between objects in Figma. Learn more about
layer hierarchy in Figma →
If the sticky object is nested within another layer in a frame, it stays within its direct parent’s bounds. This means that when the direct parent layer is scrolled out of view, the sticky object continues scrolling with its parent.
Check the
Layers
section in the left navigation panel to see how sticky objects will stack when scrolling. Any layers below a sticky object will scroll behind it, and any layers above a sticky object will scroll in front of it. To change the order in which your objects stack for sticky scroll, change their order in the
Layers
panel.
Note:
In an auto layout frame, rearranging layers in the
Layers
section of the left navigation panel will affect the order in which layers visually appear on the canvas.
By default, objects in an auto layout frame have their canvas stacking setting set to
Last on top
, which means layers visually at the bottom of a frame stack in front of layers above them.
To reverse the order so that layers stack from top-to-bottom:
Select the auto layout frame.
From the
Auto layout
section of the right sidebar, select
Auto layout
settings
From the
Canvas stacking
dropdown menu, select
First on top
Learn more about
auto layout →
Preserve and reset scroll position
When your prototype contains multiple pages or screens, you can choose to preserve scroll position or reset scroll position between frames.
Preserve scroll position:
Maintain the user’s scroll position when they transition between frames
Reset scroll position:
Reset the user’s scroll position when they transition between frames
Learn more about
how to preserve or reset scroll position in prototypes →
Note:
Preserving scroll position is a type of prototype state management. State management allows us to maintain object properties and states when navigating in and across frames when playing prototypes—and can apply to scroll position, interactive components, and videos.
Learn more about
prototype state management →

--- Before you start ---
Before you start
Who can use this feature
Anyone on
any plan
can use icon fonts in their designs.
You need
can edit
access to edit text layers.
You can add icons to your designs as actual images, or use an icon font. Icon fonts are fonts that are made up of symbols, as opposed to regular letters and numbers.
Like regular text, icon fonts can be styled using CSS, which makes them popular in web development.
Access icon fonts
If you have icon fonts installed on your computer, you can use these as fonts in Figma. To access them,
use the Figma desktop app
, or
download the Figma font helper to be able to use them in a web browser
The font must be installed on your computer and be in an OpenType (.OTF) or TrueType (.TTF) format. Learn how to
add a font to Figma Design.
Use the Font Awesome icon fonts
Font Awesome
is a popular set of icons in an easy-to-use font format. There are both free and paid versions that are available to use in Figma.
Figma supports four different
Font Awesome
fonts. Browse each of the icon libraries associated with each font using these links:
Font Awesome 6 Pro
(Font Awesome subscription required)
Font Awesome 6 Free
Font Awesome 5 Pro
(Font Awesome subscription required)
Font Awesome 5 Free
Use Font Awesome icons in Figma
Create a text layer in the canvas.
In the
Text
section of the properties panel, click the arrow next to the font.
Select the
Font Awesome
font you want to use:
Font Awesome 5 Brands (Pro)
Font Awesome 5 Free
Font Awesome 6 Brands (Pro)
Font Awesome 6 Free
Find the icon you want to use from the corresponding Font Awesome library. Click on the icon to view the icon details:
Choose which weight of the icon you want to use. Figma supports both
Solid
and
Regular
icons.
Hover over the icon version in the top-right corner between the unicode value and the download icon. Click to
Copy glyph
to your clipboard.
Paste the icon into your text layer in Figma using the keyboard shortcut:
macOS:
Command
Windows:
Ctrl
Some Font Awesome icons only support
regular
solid
versions, while others support both. Based on your icon choice, use the font style field to select
Regular
Solid
Figma will display the icon in the canvas:
Font Awesome has both
regular
solid
versions of an icon. If an icon isn't showing up when you paste it, you may need to switch to the
solid
style to see the icon.

--- Before you start ---
Before you start
Who can use this feature
Available on
any paid plan
Anyone with
can edit
access to a file can detach component instances
You can detach any instance from its main component. This is useful if you want to make changes to the component that
aren't supported by overrides
Or, if you want to create a variation of a component from your changes.
When you detach an instance, Figma will:
Make the instance a regular frame, while keeping the current layers and properties.
Remove the link to the original component.
No longer apply any changes made to the component, to that object.
Note:
Figma Organizations can
track how often instances are detached with Design System Analytics
Instance menu
Select the instance you wish to detach.
Click on the instance menu in the Properties Panel.
Select
Detach instance
from the menu.
Right-click menu
Right-click on the instance on the canvas or in the Layers Panel.
Select
Detach instance
from the options:
Keyboard shortcuts
You can quickly detach instances using the keyboard shortcut:
Mac:
⌥ Option
⌘ Command
Windows:
Control
Alt
Tip:
Accidentally created a component? You can turn this back into an instance.
This allows you to keep the object(s) you created, without having them as components.
If you just created the component you can undo it right away using the shortcut:
Mac:
⌘ Command
Windows:
Control
If you want to revert something that's been a component for a while:
Create an instance of the new component.
Detach the instance from the component.
Delete the original component.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all paid plans
Requires a
Full or Dev seat
Dev resources are a great way for anyone to add external documentation that can help developers better understand and build a component. Dev resources can be linked to objects in Figma Design and are often related to the documentation or source code. Use Dev resources to:
Link a GitHub file to a component for quick access to the source code
Assign a Jira ticket to a specific part of a mockup
Connect Storybook to view stories in Figma
Note:
If an attached dev resource has a related plugin available, clicking the link will automatically launch it in the
Plugins
tab.
Link to a Dev resource
Dev resources can be added to any layer on the canvas. If a dev resource is added to a component, the link is inherited by all instances of that component. If a dev resource is added to an instance of a component, the link will only appear for that instance.
To link to a dev resource:
Copy the URL you want to add.
In Dev Mode, select a layer on the canvas.
In the inspect panel, click
Layer options
, and then
Add a dev resource link
In the box that appears in the inspect panel, paste the link.
Press
Enter
Remove a linked Dev resource
In the inspect panel
click
Additional options
next to the link to the resource.
Select
Delete link
Note:
Dev resources with related plugins may have different ways of detaching a link from a layer.
Learn more about using plugins in Dev Mode.

--- Before you Start ---
Before you Start
Who can use this feature
Supported on
any team or plan.
Anyone with
edit access
to a file can add or adjust blend modes
Blend modes allow you to define how you want two layers to blend together. This involves taking the pixels from each layer and applying calculations to them.
Blend modes allow you to adjust aspects of an image, like the background color. Or, create interesting overlays and textures.
You can adjust the blend mode of an entire layer, or an individual fill.
A frame or section with a blend mode applied will blend with layers nested inside of it. For other layers, a layer with a blend mode applied will affect any layers behind it.
Blend modes
There are 19 blend modes available in Figma.
Default
Pass through (layers only)
Normal
Darker
Darken
Multiply
Plus darker
Color burn
Lighter
Light
Screen
Plus lighter
Color dodge
Contrast
Overlay
Soft light
Hard light
Comparative
Difference
Exclusion
Color
Hue
Saturation
Color
Luminosity
Pass through
is an additional blend mode available for layers only.
Pass through
is the default for layers, while
Normal
is the default for fills.
Apply blend mode to a fill
With a layer selected, open the
color picker
from the
Fill
section of the right sidebar.
Click the
Blend mode
icon in the top-right corner of the color picker.
Select the desired blend mode to apply.
You can apply one blend mode per fill. You can create multiple fills per layer and add blend mode to each fill.
Learn how to create multiple fills →
Note:
Blend modes can’t be added to fills for color variables, or layers with styles or variables applied. Instead, apply a blend mode to a layer or to a color style.
Tip:
Preview blend modes on the canvas by hovering over each option in the menu before selecting it.
Apply blend mode to a layer
You can apply one blend mode to each layer. To apply a blend mode to an entire layer and any nested layers:
Select the layer you want to apply the blend mode to.
In the
Appearance
section of the right sidebar, click
Blend mode
. This will be set to
Pass through
by default.
Select the desired blend mode to apply. Once applied to a layer, the blend mode button in the right sidebar is highlighted in blue.
To remove a blend mode from a layer, click the blend mode button in the right sidebar again.

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access can update stroke properties
Strokes are a collection of properties you can apply to layers in design files. You can think of strokes as the visual representation of a vector network's path. Use strokes to:
Add outlines around
shapes
vector networks
, or
boolean operations
Create lines and arrows
Add borders to
images
The stroke properties let you control the appearance of a stroke's with color, weight, distribution, side, width and end points.
Note:
When you select an object, Figma applies stroke properties to the entire layer. You can use
vector edit mode
to adjust stroke properties for individual points.
Stroke properties
View and adjust stroke properties in the
Stroke
section of the right sidebar.
Paints
Paint is the main property you’ll use to define the stroke. You can apply more than one paint (color) to a stroke. This includes gradient and image paints. Paints must share the same weight, position, and style properties.
Use the
color picker
to select a paint type, value, and opacity.
Click
to add another paint to the current selection.
Select
to toggle the visibility of each paint.
Select
to open the Style picker. From there you can apply a color style or create a new one from the current selection.
Select
to remove the stroke from the selected layer.
Position
Figma lets you define where to apply the stroke on the layer’s path. Choose from
Inside
Outside
, or
Center
. The default option for most shape layers is
Inside
, except lines which are set to center.
The SVG format only supports center stroke. This is something to consider if you plan on exporting the layer as an SVG.
When you export a layer with inside or outside stroke to SVG, Figma will “simplify” the stroke. This makes an inside or outside stroke look like a center stroke. This won't affect the appearance of the exported object, but it will impact the complexity of the SVG code.
Learn more about simplify stroke →
Tip:
Preview stroke positions and styles on the canvas by hovering over each option on the dropdown before selecting it.
Weight
Use the
field to select the weight of the stroke, in pixels. Enter a value, or focus on the field and scroll through values using your mouse or trackpad.
Note:
Figma doesn’t include the stroke weight in the layer’s dimensions. This means you won’t see the stroke included in the layer’s dimensions in the
Inspect
panel.
Individual strokes
By default, Figma applies the stroke properties to all sides of a layer. If your layer is a rectangle, frame, or component/instance, you’ll also have a
Stroke per side
property.
Use the
Stroke per side
property to choose which side or sides to apply the stroke.
All
(default)
Top
Bottom
Left
Right
Custom
: to choose which sides to apply stroke. Custom also allows you to set a different stroke weight per side.
Tip!
Rectangles include any shapes created using the
rectangle tool, frames, and components and instances that use frames.
Custom strokes per side
When you select custom, you’ll see four individual fields in the
Stroke
section. Use the fields to adjust the weight for each side independently. To remove a stroke from a side, set the weight to
You can use individual strokes to create common design elements and patterns:
Apply a single stroke to the top or bottom of a row in a table
Show a horizontal line underneath a section header or divider
Apply a border to only three sides of an element
Add a color block to the left side of a card or task element
End points
Add styling to the end points of any open ended paths. The end point property will show up in two different locations, depending on the vector path you have selected.
Only two end points
If the layer is an open vector path, you can set the endpoints at the start and end of the vector path in the main
Stroke
section. For example: line and arrow shapes.
Use the two fields to set the
cap or tip style ↓
for the start (left) and end (right) endpoints.
More than two endpoints
If you have a closed vector path or shape—or an open path with more than two end points—you’ll find the end points settings in the
Advanced stroke menu
instead.
If you have the entire layer selected, you can use the
End points
property to set the same tip or cap style for all endpoints.
To edit them independently, you need to select each end point in vector edit mode:
With the layer selected, press
Enter
Return
to open
vector edit mode →
Select a single end point. You can identify the selected end point by the blue circle with a white stroke.
Select the
in the
Stroke
section of the right sidebar to open the
Advanced stroke
menu.
Update the
End point
property.
The
Advanced stroke
menu will stay open, allowing you to select another end point in the canvas and update the end point again.
Cap and tip endpoints
Choose from a selection of caps or tips to add to your end points:
None
: No cap or tip is added to the end of the path. The end are square, without adding any length to the path.
Round (default)
: Adds a cap half the stroke weight, as well as rounding the end point of the path to 50% the width.
Square
: Adds a cap half the stroke weight, while squaring the end point of the path.
Line arrow
: Two 45-degree lines to either side of the end point(s). The line arrow uses the same stroke weight as the path itself. You cannot change the length of the arrow head lines.
Triangle arrow
: Triangle arrowhead to both end points. You'll need to enter
vector edit mode →
to apply an arrow to only one end of the path.
Reverse triangle:
Reversed or flipped version of the triangle arrow, with the arrow pointing inward towards the path.
Diamond arrow:
Adds a solid diamond shaped tip to the end point.
Stroke types
You can use the advanced stroke settings to further customize how a stroke looks. To access these settings, navigate to the
Stroke
section in the right sidebar and select
Advanced stroke settings
Basic stroke
You can use the basic stroke settings to create a dashed or dotted stroke.
Note:
Figma starts and ends every dashed line with a half-length dash. You can use
Outline stroke
from the right-click menu to convert the stroke to a vector object. This will allow you to use edit object mode to remove or extend the half-dash.
Dashed
Create a uniform dashed line.
In the
Stroke
panel, select
to open the
Advanced stroke
menu.
Select the
Dashed
stroke style
Enter the length you want for the
Dash
, in pixels.
Enter the length of the
Gap
between dashes, in pixels.
Choose the type of cap for the dash:
None
Round
Square
Dotted
Create a dotted line.
In the
Stroke
panel, use the dropdown to change the stroke position to
Center
Select
to open the
Advanced stroke
menu.
Select the
Dashed
stroke style
Enter a
Dash
length of
pixel.
In the
Dash cap
setting, select
Round
Adjust the
Gap
between dashes to suit.
Custom
Create a dashed or dotted line with a custom pattern.
In the
Stroke
panel, select
to open the
Advanced stroke
menu.
Set the
Stroke style
setting to the
Custom
option.
Use the following syntax in the
Dashes
setting to define the dash pattern
dash, gap, dash, gap
...
Select the
Dash cap
you want to use.
For example: We want to represent the letter
in morse code
..-.
as a custom dash pattern. We’d enter the following in the
Dashes
setting
10, 20, 10, 20, 80, 20, 10, 100
Brush stroke
Brush strokes give your selection an organic, hand-painted look. Use the
Brush
tab in the
Advanced stroke settings
to browse through available brush styles, including custom brushes you’ve created. Hover your cursor over a style to preview how it will look on your selection. Once you apply a brush stroke, you can use the
Direction
setting to determine which direction the stroke will flow.
Note:
Brush strokes can only be positioned in the center of a stroke.
Dynamic stroke
Dynamic strokes give your selection’s stroke a hand-drawn, bumpy look. You can use the
Dynamic stroke
settings to configure the stroke’s appearance:
Frequency:
Determines the number of bumps in the stroke
Wiggle:
Determines how large the bumps appear
Smoothen:
Determines how jagged the bumps are
Note:
Dynamic strokes can only be positioned in the center of a stroke.
Join and miter angle
Define how lines join within a path or vector network. Adjust the joins in an entire path, or enter
vector edit mode
to select a single anchor point in the path. Choose from:
Miter:
Create a sharp point, like an arrow, where the two paths meet.
Bevel:
Cut off the sharp point to create a flat edge.
Rounded:
Round the point where two paths meet to soften to join.
Use the
Miter angle
setting to control the angle at which two joined lines bevel. For example: for a miter of 90°, any angle ≤ 90° will bevel; anything > 90° will create a sharp point.
Overview of supported stroke properties
Some properties are only supported on specific layer types. Use the table below to see if a specific property is supported on the layer type you’re working with.
Layer type
Paints
Position
Weight
Stroke per side
Color style
Endpoint
Join
Rectangle
Lines
Arrows
Ellipse
If altered with arc tool
Polygon
Star
Booleans
Vector networks
Open paths only
Text
Frames (including components)
View and copy stroke properties with view-only access to a file
If you have
can view
permission to a file, stroke properties show up in the right sidebar as
Borders
. You can choose to represent the properties as CSS, or color values like Hex, RGB, HSL, or HSB. Once you've chosen how to represent the properties, hover over the
Borders
section and click
Copy
Note:
Figma doesn’t include the stroke weight in a layer’s dimensions. You won’t see the stroke weight included in a layer’s dimensions in the right sidebar.
This is something to consider when translating designs to code, especially for layers with center and outside stroke.
In an auto layout frame, you can choose to include stroke in the layer’s total dimensions. When included, the layer’s dimensions in the right sidebar will include the weights of any strokes.
Learn more about strokes in auto layout →
Styles and strokes
You can only create and apply
color styles
to strokes. There isn't a way to save a stroke's other properties, like weight and position, as a style.
When you apply a color style to a stroke, you can still adjust the other properties. This includes the weight and distribution, as well as any advanced stroke properties like caps, join, and dashes.
Apply color styles to strokes
Select the layer you want to update.
In the
Stroke
section of the right-hand panel, click the
style icon.
Use the style picker to select the relevant color style.
Adjust any of the other properties of the stroke, as desired.
Scale and resize strokes
Strokes respond differently based on how you resize them.
Resize the object if you want to retain a stroke's weight, while adjusting the object's dimensions. Hover over the stroke's bounding box until the
cursor appears, then drag to resize.
Use the
scale
tool to scale the stroke properties along with the object's dimensions.
Learn how to use the scale tool →
Convert strokes to vector objects
Outline stroke allows you to convert strokes into vector objects. This will take each path in the object and turn it into a single editable shape.
This will allow you to:
Remove or extend half-dashes
Create custom shapes and edit them in vector edit mode
Combine multiple paths into a single object
Scale vector objects uniformly
Note:
It's not possible to convert a vector object back into a stroke, unless you undo the action. Use the keyboard shortcuts to undo:
Mac:
Command
Windows:
Control
Outline stroke
Right-click the layer and select
Outline stroke
, or use keyboard shortcut:
Mac:
⌘ Command
⌥ Option
Window:
Control
Alt
Figma will convert the path into a vector object and apply any paints you had as a stroke as a fill.
You can see how that vector object looks in vector edit mode. Press
Enter
Return
, or click
Edit object
in the toolbar to edit the vector object.
Note:
If you prefer to use
⌘ Command
Control
⇧ Shift
to toggle outline stroke, open the main menu in the top left-corner and go to
Preferences
Use old shortcuts for outlines
. This setting will also change the keyboard shortcut for
show outlines
⇧ Shift
Tip!
If you have a style applied to the stroke, Figma will also take the color properties of the style and apply this to the object as a fill.

--- Before you start ---
Before you start
Who can use this feature
Available on
any team or plan
Anyone with
can edit
access to a file can create sections
Organize your canvas with labeled sections to group related ideas and guide collaborators through your file.
Sections let you:
Designate areas of the canvas for collaboration or ideation
Organize files for easier navigation
Link to a grouping of designs
Mark content as "Ready for development" to help with the developer handoff
Sections in Figma Design are a top-level element on the canvas by default. Sections can contain all layer types, including other sections, but cannot be contained within frames or groups.
Create a section
There are a few ways to create a section:
Toolbar and shortcut
Click
Section
in the toolbar or use the keyboard shortcut
⇧ Shift
Click and drag the location of the canvas where you’d like the section to go.
You can also click and drag a section over the objects you want to add to it.
Selection
Click and drag objects on the canvas you’d like to add to a section.
Right-click the selection and select
Wrap in new section
from the menu.
Tip:
Double-click a section's icon in the
Layers
panel to navigate to it.
Add objects to a section
There are a few ways to add objects to a section:
Move a section over an object
Resize a section over an object
Select and move an object into a section using your mouse or keyboard arrows
Edit a section
Title
Double-click the section title on the canvas or
Layers
panel.
Edit the title.
Press
Return
Enter
Fill and stroke
Change the background and border color for a section using the
Fill
and
Stroke
sections of the right sidebar.
Learn how to add fills →
Learn how to apply and adjust stroke properties →
Share a section
You can direct collaborators to a specific section in your canvas by copying the link to that section.
Select the section you want to share.
Click
Share
in the right sidebar.
Mark a section as ready for development
Once content inside a section is finalized, you can mark the section as ready for development. This helps developers using Dev Mode by flagging the section for them.
To mark a section as ready for development:
Select the section.
Click
Mark as ready for dev
To unmark a section as ready for dev, click the
three dot menu in the
Ready for dev
label and select
Remove ready status
Note:
Marking a section as ready for development does not prevent changes from being made to content in that section.
Update the dev status
After you’ve marked the a section
Ready for dev
, if you make changes to the design, Figma automatically changes the dev status to
Changed.
The
Changed
status helps developers keep track of designs that iterate after being marked as ready for development.
To resolve the changed status for a section, click the
Changed
status indicator and enter a reason for the change. After, the dev status is returned to
Ready for dev
Learn more about managing the dev handoff process →
Delete a section
To delete a section and its contents:
Select the section.
Press
Delete
Backspace
To delete a section without deleting its contents:
Select the section.
Use the shortcut:
Mac:
Command
Delete
Windows:
Control
Backspace.
Prototype with sections
In prototypes, sections help connect flows across different portions of your design.
When you create a connection to a section, Figma remembers the last visited frame of that section and automatically returns to it.
Learn more about prototyping with sections →

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone with
can view
access can copy objects in a file
Anyone with
can edit
access can paste objects in a file
Hands-on learner?
Check out our
Copy and paste playground file
When you copy and paste an object in your canvas, Figma considers your intended placement of the object while keeping you aware of your location and view of the canvas.
Paste placement
Pasted objects try to maintain the same
and
positions within the destination frame relative to its position in the group or frame it was copied from. If the destination group or frame can't accommodate either of the object's
position in its previous container, Figma will paste the object in the center of the new frame.
In the example below, Frame 1 contains a purple ellipse, red star, and green square located at the top left, bottom left, and bottom right corners respectively.
When we copy the objects from Frame 1 to Frame 2:
the purple ellipse keeps its original position because both its
and
coordinates can be matched in Frame 2
the red star can only be matched with its original
coordinate and is centered on the
axis
the green square is centered on both axes because neither its original coordinates can be accommodated in Frame 2.
When we copy the objects from Frame 1 to Frame 3 below:
the purple ellipse keeps its original position because both its
and
coordinates can be matched in Frame 3
the red star keeps its original position because both its
and
coordinates can be matched in Frame 3
the green square is centered along the
axis because it can only be matched to its
coordinate in Frame 1.
Canvas view
If you have a frame selected while pasting a copied object, Figma considers your current view of the canvas to determine where to paste the object and whether to adjust your viewing area.
If your current view of the canvas is far from the selected frame, Figma will paste the object in the center of your current view to avoid moving you too far from your intended paste area or disorienting you within the canvas.
If the selected frame is just outside your current view, Figma will paste the object into the selected frame and adjust your viewing area slightly to bring the pasted object into view.
If the object being pasted is larger than your current view of the canvas, Figma will adjust your view's zoom level so you can see the full pasted object.
If the object is being pasted into a selected frame larger than your view of the canvas, Figma will place it inside the frame in a centered position to keep you within your viewing area.
Note:
Figma considers an area 50% larger than your current view of the canvas to determine whether to adjust your view after pasting an object. If your pasted object is placed within that area, Figma will adjust your view. Otherwise, Figma will paste your object on the canvas, centered to your current view, and adjust your zoom level to depending on the object's size.
Copy and paste
You can copy an object and paste in the same page, a different page, or a different file.
Select the layer or object.
Copy using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Navigate to where you want to paste the object.
Paste using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Duplicate
Duplicate an object is a shorthand for copy and paste if you want to duplicate an object on the same page.
Click and drag
You can click and drag a layer while holding this keyboard shortcut to duplicate it:
Mac:
⌥ Option
Windows:
Alt
Keyboard shortcut
You can duplicate a selected layer by using the keyboard shortcut:
Mac:
⌘ Command
Windows:
⌃ Control
If you are duplicating a top-level frame, the new frame will be placed to the right of the original. Otherwise, new objects are be placed on top of the original.
Tip:
You can combine both duplicate shortcuts to speed up your workflow!
If you use click and drag to duplicate, then use this keyboard shortcut to continue duplicating, Figma will continue the same distance between objects as you create the duplicate objects.
If you duplicate an object, rotate the new object, then continue duplicating the object using this keyboard shortcut, the new objects will continue rotating at the degree amount of the original duplicate.
Paste to replace
Use the
Paste to replace
function to remove a selected object from your canvas or frame and replace it with the object copied to your clipboard. This is useful when you want to replace placeholder items in a frame or populate low fidelity wireframes with assets.
Select and copy an object using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Select the objects you'd like to replace with the copied object.
Right-click your selection and click
Paste to replace
from the menu. You can also use the keyboard shortcut:
Mac:
⇧ Shift
⌘ Command
Windows:
Control
Shift
Note:
The pasted object will adopt the constraints of the object it replaced.
Learn more about constraints →
Paste over selection
The
Paste over selection
option will place a copied object on top of a selected frame, not inside it. The pasted object will match the
position of the selected object.
Select and copy an object using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Select the frame you want to paste the copied object on top of.
Click
to open the file menu >
Edit
Paste over selection
. You can also use the keyboard shortcut:
Mac:
⌘ Command
⇧ Shift
Windows:
Control
Shift
Multi-paste
Multi-paste is useful when you want to add one or more objects to multiple frames at the same time. For example, you can add a navigation bar to multiple mobile wireframes, or a footer to slides in a presentation deck.
Paste one object
To copy one object and paste it to multiple frames:
Select and copy an object using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Select the frames you want to paste your copied object to.
Paste the object using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Paste multiple objects
You can copy multiple objects and paste them to one or more frames. For example, you can copy different background styles and paste them across multiple slides so patterns rotate throughout your presentation.
Select multiple objects. These can be objects from within the same frame, across multiple frames, or a combination of both.
Learn how to select multiple objects →
Copy the objects using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Select the frames you want to paste your copied objects to.
Paste the object using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Objects are pasted in the order that they are copied and will repeat if there are additional frames.
If the number of frames copied from is more than the number of frames you paste to, the extra objects are pasted into the last frame.
Paste here
The
Paste here
option lets you choose the exact placement for a pasted object. The object is placed in the location of your cursor on the canvas or in a frame.
Select and copy an object using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Position your cursor where you want the top left of your copied object to be placed.
Right-click and select
Paste here
Note:
When you use
Paste here
with an auto layout frame, the object will be pasted on top of the frame, not inside it.
Paste to clipped frames
Copy pasting objects that are inside a frame, but visually outside the frame bounds will honor the outside position whether the destination frame is clipped or not.
This is handy for placing objects outside of the frame that will be animated into or out of a frame in a prototype with
smart animate
Copy as PNG
You can copy a selected object as a PNG image to your clipboard to paste inside Figma or other applications. Images created using
Copy as PNG
will default to a 2× size image output.
Select an object.
Right-click the object and select
Copy as PNG
. You can also use the keyboard shortcut:
Mac:
⌘ Command
⇧Shift
Windows:
Control
Shift
Paste the image using the keyboard shortcut:
Mac:
⌘ Command
⇧Shift
Windows:
Control
Shift
Copy as code
You can copy a selected object as code to use in other applications during the development process.
Select an object.
Right-click the object and hover over
Copy as code
. You can also use the keyboard shortcut:
Mac:
⌘ Command
⇧Shift
Windows:
Control
Shift
Select
CSS, iOS
Android
from the list of options.
Copy and paste image fills
Images in Figma behave as fills that can be layered and applied to shapes objects. You can select an image fill on a shape and copy paste it onto another shape.
In the
Fill
section of the right sidebar, select the area just to the left of the image preview.
Copy the fill using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Select the shape you want to add the copied fill to.
Paste the copied image using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Control
Learn more about how copy and paste works in our playground file →

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can crop an image
Crop an image to trim its outer edges and show only the section of the image that you want.
In Figma, cropping images is a non-destructive process, so the cropped area does not get deleted. Rather, it is hidden. This means you can make changes to the crop by going through the cropping process again.
To crop an image:
Select a layer with an image fill.
Choose one of the following:
Click
in the properties panel.
From the
Fill
section of the right sidebar, click the image thumbnail. Then, open the image mode dropdown and select
Crop
Click and drag one of the 8 blue handles around the image to crop it. You can also:
Reposition the image
: Click and drag.
Resize the image
: Click and drag the edges of the image.
Rotate the image or crop section:
Hover on the outside of a corner until the
rotate cursor appears. Then click and drag.
Keep the current aspect ratio of the image or crop section
: Hold
⌘ Command
for Mac or
Control
for Windows while cropping or resizing.
Crop or resize opposite sides of the image or crop section:
Hold
Option
for Mac or
Alt
for Windows while dragging.
Click anywhere on the canvas to apply the crop. You can also press
Esc
Return
Tip:
To quickly crop an image, hold
⌘ Command
for Mac or
Control
for Windows while clicking and dragging the corners of the image.
Note:
To crop your image into a circle or ellipse shape, you can either increase the layer’s
corner radius
create a mask

--- Before you start ---
Before you start
Who can use this feature
Users on
any team or plan
Users with
can edit
access can create prototypes.
New to Prototyping? Check out our
Getting Started with Prototyping
guide.
All prototypes start with a single interaction. Each interaction has a
trigger
and an
action
The trigger determines what type of
interaction with the hotspot
will cause the prototype to advance. This could be a mouse or touch interaction like tap, drag, click, and more.
This article covers our prototyping triggers in more detail.
Tip:
Learn how to create a
prototype interaction
, or review available
prototype actions →
On click/On tap
Triggers the action when the user
Clicks
(desktop) or
Taps
(mobile) on a hotspot in your prototype. You can add click or tap triggers to lots of different elements in a screen.
You can use them for navigation like opening links, using menus, or exploring websites. They can also be used when you need a user to click on buttons, fill in forms, or confirm and dismiss alerts.
On drag
Allows you to perform an action when you drag an element on the screen. This can be the entire frame or a single element like a slider.
You can use the
On Drag
in any direction: Left, Right, Up or Down. This is great for simple swipe gestures, or for more complex animations like a drag to refresh.
Drag allows you to move back and forward through the transition. This creates a continuum, instead of performing the action after a swipe gesture.
While hovering
Triggers the action when you hover over the hotspot. You can use this to replicate tooltips, on-screen prompts, or changes in state.
We will return the user to the original frame when they move the cursor off the hotspot. This makes it a great interaction when you don't want to take users away from the current screen.
While pressing
Triggers the action when you
click and hold
the mouse or trackpad on a desktop. Or, when you
tap and hold
on a mobile device.
You can use this trigger for navigating drop-down menus, or replicating long-press interactions like viewing a preview using 3D Touch on iOS.
When released, we will take the user back to the original Frame. This makes it great for Overlays that capture temporary interactions or state changes.
Keyboard/Gamepad
The Keyboard / Gamepad trigger lets you replicate interactions with a keyboard shortcut. This applies to user inputs from keyboards, controllers, and gamepads.
A trigger can be a single key or button, or a combination of keys.
For example: a trigger can be based on the user pressing the Enter key or ✕ button on a controller. Or using a shortcut like
Shift
Note:
We officially support the Xbox One, PS4, and Nintendo Switch Pro Controllers. Other controllers may work, but buttons displayed in Figma may not accurately reflect the controller.
Mouse enter
This shows the
Destination
frame when the mouse
enters
the hotspot area. This could be a small area like a button, or an entire section of the screen.
You could use this to expose the options in a drop down menu as your mouse enters the field. The menu will stay open until the user performs another interaction like selecting an item or clicking out of the field.
Once you’ve set up a
Mouse enter
event, you might want to set up a
Mouse leave
trigger to reverse the action on leaving the hotspot.
Note:
On November 16, 2023, Figma updated the behavior of the
Mouse enter
trigger to more accurately reflect the trigger name and description.
Mouse move inside
interactions trigger anytime the mouse moves inside the hotspot.
Mouse enter
interactions only trigger when the mouse initially enters the hotspot.
To keep existing prototypes intact, interactions created before November 16, 2023 are now labeled
Mouse move inside
Mouse move inside
interactions can no longer be created. All new interactions have the
Mouse enter
trigger.
Mouse leave
This shows the
Destination
frame when the cursor
leaves
the hotspot area.
You could use this for on-screen prompts, like an alert when you haven't completed a field or checked a box.
Note:
On November 16, 2023, Figma updated the behavior of the
Mouse leave
trigger to more accurately reflect the trigger name and description.
Mouse move outside
interactions trigger anytime the mouse moves outside the hotspot.
Mouse leave
interactions only trigger when the mouse initially leaves the hotspot.
To keep existing prototypes intact, interactions created before November 16, 2023 are now labeled
Mouse move outside
Mouse move outside
interactions can no longer be created. All new interactions have the
Mouse leave
trigger.
Mouse down (touch down)
This triggers the
Destination
frame when you first press the mouse or touch pad. For mobile devices, this is when the user's finger first touches the hotspot.
Mouse up (touch up)
This triggers the
Destination
frame when you release the mouse or touch pad. For mobile devices, this is once the user's finger no longer touches the Hotspot.
Apply the
Mouse Down
trigger to the menu header to open an Overlay.
Apply the
Mouse Up
interaction to the menu item in the Overlay.
When they release the mouse, we take the user to the relevant Frame.
Tip:
Use the
Mouse Down
and
Mouse Up
triggers together to replicate a user navigating a drop-down menu.
After delay
The
After delay
trigger allows you to trigger an action after the user has spent a certain amount of time on a given frame. You will need to set the duration of the delay in milliseconds (ms).
When video hits
The
When video hits
trigger is available for any connection that begins on a video file.
It allows you to set an action when the video hits a specific timestamp. This can be helpful when building prototypes for things like video ad breaks or triggering an overlay message during video playback.
If you select the
When video hits
trigger, there is a field to enter in a timestamp.
Note:
If you enter a timestamp beyond the full length of the video, the action is triggered when the video ends.
Learn more about prototyping with video →
When video ends
The
When video ends
trigger is available for any connection that begins on a video file.
It allows you to set an action when the video ends. This can be helpful when sequencing videos or creating an interactive video player experience.
Learn more about prototyping with video →

--- Advanced prototyping features (such as ---
Advanced prototyping features (such as
variables
conditionals
, and
expressions
) allow you to add a higher level of fidelity to prototypes, while reducing the number of frames and interactions needed to do so.
Use the examples below to inspire you on how you might use advanced prototyping features in your designs.
Create a required checkbox interaction
In this prototype, create a button with a required checkbox interaction.
Features used:
Variables
interactive components
component properties
using variables with interactive components
This interaction is common in online forms. For example, you might be required to agree to a site’s terms and conditions by selecting a checkbox before you can click a
Continue
button.
Create an
interactive component
set with two variants to represent a checkbox.
Name the
component property
isChecked
, with “true” and “false” variants.
Add a
Change to
prototype action between both variants—so when you click on the false variant, it will change to the true variant, and vice versa.
Create another component set for a continue button. One variant should represent an inactive state, and the other should represent an active state.
Name the
component property
hasAcceptedTerms
with “true” and “false” value names. The “true” variant represents the active button state, and the “false” variant represents the inactive button state.
Create a boolean variable
named “hasAcceptedTerms”, with a value of false.
Add instances
of your components to your design.
Add an instance of the “false” continue button variant.
Add an instance of the “false” checkbox variant.
Assign the
hasAcceptedTerms
boolean variable to both instances.
Click on the checkbox instance to select it.
From the right sidebar, hover to the right of the variant property and click
Assign variable
Select the
hasAcceptedTerms
variable to bind it to the property.
Repeat steps A through C for the continue button instance.
Tip:
You can bind a variable to a variant property as long as the values match. Since the boolean variable has
true
and
false
values, and the variant properties have
true
and
false
values, you can bind them together.
Now, whenever the variable changes to a true value, the instances will also change to their true variant.
Return to your continue button component set, and add an action to the active button variant. For example, you can add an
On click
interaction that navigates to the next frame.
Play your prototype
to test it out.
Add an error message for empty selection states
In this prototype, you can create a form that shows an error if users try to submit it without answering all the questions.
Features used:
Variables
interactive components
component properties
using variables with interactive components
boolean expressions
overlays
In this example, each question has two radio buttons a user can use to select their answer. Let’s create an
interactive component
set to represent each state the answer can be in: nothing selected, choice 1 selected, or choice 2 selected.
Make three variants to represent each state.
Name the
component property
selectedState
, with “choice1”, “choice2”, and “none” as variants.
Add a
Change to
prototype action between each variant—so whenever you click on the “Choice 1” object, the variant changes to choice1, and whenever you click the “Choice 2” object, the variant changes to choice2.
Since our form will have two questions, let’s
create two string variables
. These variables will let us validate whether the form is complete or not when a user submits it.
Name the first string variable “question1response”, with a value of “none”.
Name the second string variable “question2response”, with a value of “none”.
Now, let’s assemble our prototype. Add a frame to represent the design of your form. Include two instances of the “none” radio button variant, and a
Submit
button.
Assign the variables to the radio button instances.
Click on the first radio button instance to select it.
From the right sidebar, hover to the right of the variant property and click
Assign variable
Select the
question1response
variable to bind it to the property.
Repeat steps A through C for the second radio button instance, this time selecting the
question2response
variable.
Add two more frames: one to represent an error message
overlay
, and one to represent a success message.
Add a
On tap
prototype interaction to the
Submit
button. Use the
Conditional
action:
question1response
== “none”
question2response
== “none”, open the error message frame as an overlay.
Else,
Navigate to
the success message frame.
Play your prototype
to test it out.
Display count of selected items
In this prototype, we’ll increase a counter each time a user makes a selection.
Features used:
Variables
interactive components
component properties
using variables with interactive components
This type of interaction has several applications. For example, you might see the total number of items you’ve added to your cart on an e-commerce site, how many photos or messages you’ve selected in a messaging or social media app, or even how many glasses of water you’ve drank in your habit tracking app.
Create an
interactive component
set with two variants to represent a selected and unselected state.
Add a
Change to
prototype action between both variants—so when you click on the unselected variant, it will change to the true variant, and vice versa.
Add multiple instances
of the unselected variant to your design.
Add a text layer to your design that represents the number of selected items.
In our design, we’ve added two text layers in a single frame. One text layer states “Items selected:”, and the second text layer states “0”.
Create a number variable
named “itemsSelected”, with a value of 0. We’ll use this variable to store a count of how many items have been selected.
Assign the
itemsSelected
variable to the text layer.
Click on the “0” text layer to select it.
From the
Text
section of right sidebar, click
Assign variable
Select the
itemsSelected
variable to bind it to the text layer.
Return to your component set, and add an additional prototype action to each variant that calculates the number of selected items.
On the false variant, add a
Set variable
action that sets the value of the
itemsSelected
variable to
itemsSelected + 1
On the true variant, add a
Set variable
action that sets the value of the
itemsSelected
variable to
itemsSelected - 1
Play your prototype
to test it out.
Build a click counter
In this prototype, build a click counter. When a user clicks an object or objects the required amount of times, a success interaction initiates.
Features used:
Variables
expressions
conditionals
This type of interaction might be seen in the real world when users need to select a specific number of items to continue. For example, users might need to select a certain number of topics that interest them in an onboarding experience to customize their profile, or users might need to select a certain number of toppings to add to their meal in a food delivery app.
Add two variables:
A number variable named
clickCount
, with a starting value of
A boolean variable named
clickComplete
, with a starting value of
false
Add a rectangle object to a frame.
On the rectangle object, add a prototype interaction with an
On click/On tap
trigger. Add two actions, in this order:
Set variable
clickCount
clickCount + 1
Conditional
: If
clickCount == 5
Set variable
clickComplete
true
Add two text layers to the frame:
The first text layer should list simple instructions (“Press the square 5 times.”)
The second text layer should be a success message (“You did it!)
Apply the
clickComplete
variable to the layer visibility of the second text layer:
Select the text layer.
Go to the
Layer
section of the right sidebar and right-click the visibility icon.
Click the
clickComplete
variable from the variable selection panel. Now, the layer will only be visible if the
clickComplete
variable value is true.
Play your prototype
to test the interaction.
Build a volume control bar
In this example, we'll use variables to build a volume control bar.
Features used:
Variables
expressions
To begin, set up your frame with a few basic shapes to represent the volume bar and the controls:
Add one rectangle to represent the volume container—ours has a width of 260 and a height of 100.
Add a second rectangle to represent the volume level. This rectangle should be placed on top of the first one, and they should be aligned on the left side. The width of the second rectangle should be smaller than the first—ours has a height of 100 and a width of 14 to start.
Use lines to create objects that represent a plus sign and a minus sign, and place them beneath the volume container.
Next, we need to create a variable. In a new collection, create a number variable. Name it
volumeLevel
and give it an initial value of 14.
Now, let’s bind the
volumeLevel
variable to the width value of the rectangle representing the volume level.
Click on the smaller rectangle to select it.
From the
Design
tab of the right sidebar, find the width value.
Hover over the width value field, then select
Apply variable
From the variable selectional panel, select the
volumeLevel
variable.
Now that our frame and variables are set up, let’s create our prototyping interactions.
Click the plus sign object on the frame.
From the
Prototype
tab on the right sidebar, click
the plus icon to add a new interaction.
Set the trigger to
On tap/On click
, and set the action to
Set variable
. Select the
volumeLevel
variable.
Set the new value using an expression. We want the width of the volume level to increase by 5 each time a user presses the plus icon, so we’ll use the following expression:
volumeLevel + 5
Repeat steps 1-4 for the minus icon, this time setting the new variable value with the following expression:
volumeLevel - 5
Play your prototype
to test the interactions.

--- Dev Mode is out of beta ---
Dev Mode is out of beta
Dev Mode in Figma gives developers everything they need to transform designs into code. Starting January 31, Dev Mode will require a paid seat to access.
Learn about what it means for Dev Mode to leave beta →
Before you Start
Who can use this feature
Included in a
Full or Dev seat
Professional, Organization, and Enterprise plans.
Anyone with
access to Dev Mode
can use Dev Mode features.
Enabling Dev Mode changes the interface of a Figma Design file. In Dev Mode, the left sidebar provides an easy way to navigate between designs and identify which sections are ready for development.
Search
Use the
Search
field to find a specific component. Figma looks for objects in the current file, as well as any libraries you have access to.
Click in the left sidebar or use the following keyboard shortcut to open the search bar:
Mac:
Command
Windows:
Ctrl
Enter the text or layer name you want to find. The search results automatically populate as you type.
You can display results by your current page or see results for all pages
Click
Settings
to add search filters for layer type—such as text, frame, shape, etc
Use
and
to move through your results
In the Settings menu, use
Other
to search for everything else, such as widget or slice names
Click on a result to go to the layer on the canvas.
To return to the Navigation panel, click
or press
Esc
Pages
The Dev Mode icon indicates which pages contain sections marked Ready for dev. Sections marked as ready appear under
Ready for development
in the Dev Mode navigation panel.
Sections marked as Ready for development
The Dev Mode icon indicates which pages contain sections marked Ready for dev. Sections marked as ready appear under
Ready for development
in the Dev Mode navigation panel.
Layers
The Dev Mode icon indicates which pages contain sections marked Ready for dev. Sections marked as ready appear under
Ready for development
in the Dev Mode navigation panel.
Using the cursor to hover over layers on the canvas reveals more information about its layout, such as size, padding, and spacing.
When a top-level frame
is selected, you can use the left and right arrow keys or click the arrows on the screen to move between each frame on the page.

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone
can leave a library file.
When you disable the library, Figma will remove those components from the
Assets
panel and any styles from the style picker. As you still have access to the library, styles, components, and variables may still show up in your search results.
If you don't want those assets to show up in search results, you'll need to
leave the library file
where the main assets live.
Looking to unpublish a file or remove assets from your library?
Check out our
Unpublish a library
and
Remove styles and components
articles.
Open the library file
Open a main component in the file it lives in from any instance. You can do this from a few different places.
Canvas
Select an instance in the current file.
Open the
Design
tab in the right sidebar.
Click
in the instance section to open the library file.
Assets panel
Right-click on the component in the Assets panel.
Select
Go to main component.
Tip:
If you haven't used the component in your file, you can temporarily add the component to your file, then use any of the
Go to main component
approaches above.
Leave the file
Open the file where the component lives.
Click the
Share
button to open the file share modal
Find your name in the list of collaborators.
Click on your current access level and select
Leave
from the options.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Requires a
Full seat
on paid plans
Anyone with
can edit
access to a file can use the Pencil and Brush tools
The Pencil and Brush tools allow you to draw and paint directly inside a Figma Design file. Use the Pencil tool for quick sketches, notes, and line work, then enhance your creations with the Brush tool to add texture and color for a more organic, hand-painted appearance. You can access the Pencil and Brush tools while in
Figma Draw
Drawing with the Pencil and Brush tools i
nvolves creating
vector
networks
. Unlike the precise point-by-point creation process when using the
Pen tool
, the Pencil and Brush tools automatically place vector points along the path you draw. The number of points created is determined by the length and complexity of the path. You can adjust these vector points at any time in
vector edit mode
Draw with the Pencil or Brush tool
In Figma Design, click
Draw
in the toolbar to open Figma Draw.
Select the
Pencil
Brush
tool from the toolbar.
Use the secondary toolbar to set the stroke’s color, size, and style.
Click and drag your cursor to begin drawing. To draw a straight line, hold
Shift
as you move your cursor.
Note:
You can also apply brush styles to existing strokes in your designs. Learn more about
adjusting stroke properties
Create custom brush styles
You can personalize your design toolkit by creating your own custom brush styles. Custom brush styles can be created from any single vector layer, such as a shape, a custom vector path, or a
flattened text layer
Note:
Only closed vector paths can be used as a source for custom brushes. If you have an open vector path, such as a stroke from the Brush or Pencil tool, you can use
Outline stroke
to convert the stroke into a closed vector path.
To create a custom brush:
Right-click on a vector layer.
Hover over
Create brush
, then select
Stretch brush
. This will elongate the brush style along the length of the stroke.
Once created, you can access the brush from the Brush styles menu or the
Advanced stroke settings
Access custom brushes in other files
By default, custom brushes are only available in the file where they were created. To access a custom brush in another file, copy and paste a layer that uses the brush style into the new file. The brush will be automatically added to the brush styles menu and remain available even if you delete the layer you initially copied.

--- Before you Start ---
Before you Start
Who can use this feature
Anyone on
Education, Professional, Organization, and Enterprise plans
can create and use modes for variables
The number of modes you can create per variable collection
depends on your plan
Looking for more resources on variables?
Check out our guide to variables →
Variables allow us to store reusable values that can be applied to various design properties—such as color, spacing values, and dimensions.
Variable modes
allow us to represent different contexts of our designs without needing to create multiple frames for every context that we need. This is because variables can contain multiple values, organized by way of variable modes, where each mode stores one value per variable.
For example, let's say we need to create light and dark mode versions for a design:
Without variable modes, we could create designs for light mode (our default), then duplicate those designs and update every color fill necessary for dark mode.
If we use variable modes, we would create a collection of variables with two sets of values—or modes—one for light mode as our default and one for dark mode. We would apply the variables to one set of designs. Then, we could quickly switch designs between light and dark modes.
If we need a third color theme, all we need to do is create a new mode and input values for that theme. We wouldn't need to apply the values to our designs all over again.
There are many contexts that variable modes can help support. Here are a few ideas to get you started:
Create accessible color themes, like high contrast mode or different themes for color blindness, using color variables
Localize UI copy to see how copy flows in designs using string variables
Account for multiple device sizes, like watch, mobile, and desktop, to see how elements respond to varying spacing and padding sizes using number variables
Create a mode
Deselect all objects by clicking anywhere on the canvas.
Open the variables modal by clicking
Open variables
in the
Local variables
section of the right sidebar.
Open the collection you want to create a new mode in.
From an existing variable, click
New variable mode
to the right of the column headers. Figma duplicates values from the first column to the new one.
You can also duplicate a mode by right-clicking the mode header and selecting
Duplicate mode.
Change the default mode
In the variables modal, the default mode of a variable collection is the left-most mode column.
When an object is using a variable object or when a page contains objects using variables, the object or page will use values from the default mode until you explicitly set a specific mode to the object or page.
Change the default mode on a variable collection by reordering modes
To change the default mode to a different one:
From the
Variables
modal, open the variable collection where the variable mode lives.
Find the mode and either:
Right-click and select
Set as default
Or click and drag the variable mode to the left-most column.
If an object's or page's variable mode was set to "Auto" or "Default" instead of a specified mode, they will inherit whatever the new default mode is.
If an object or page was explicitly set to a mode that happened to be the default, they will stay linked to that mode even when it is no longer the default.
Reorder modes
To reorder modes in a variable collection, you can either:
Right-click and select
Move column right
Move column left
Or, click and drag the column left or right
If you move a column all the way to the left in a variable collection, this column becomes the default mode.
Switch between modes
Switch the mode on an object or page so the designs use the variable values you want. You can switch modes on:
Layers
Frames
Components and component sets
Sections
Groups
Pages
Tip:
Want to change variable modes while prototyping?
Learn how to use the Set variable mode prototyping action →
Switch modes on an object
For layers:
You can switch their modes if there is at least one variable applied and the variable has multiple modes.
For groups, frames, components, component sets, and sections:
You can switch their modes if
nested layers
have at least one variable applied and the variable has multiple modes.
To switch the mode on an object:
Select the layer, group, or container object.
From the
Appearance
section of the right sidebar, click
Apply variable mode
Hover over a variable collection and choose a mode.
Once you specify a mode on an object, a tag with the mode icon and mode name will appear next to the layer name in the
Layers
panel of the left sidebar. If there are multiple modes, hover over the tag to see a list of modes.
Switch modes on a page
You can switch modes on pages if any local collection of variables contains multiple modes.
Deselect everything on the canvas.
From the
Page
section of the right sidebar, click
Apply variable mode
Hover over a variable collection and choose a mode.
Set to auto mode (objects only)
Objects with variables have their modes set to
Auto
by default. This means they take on the mode of their parent container.
If their parent container is also set to Auto, objects continue up their layer hierarchy until they reach a container with a specified mode.
If no parent containers have a mode specified, then the objects fallback to the collection’s
default mode
, shown in parentheses.
Use with variant instances
Boolean, number, and string variables can be assigned to component instances with
variant properties
String and number variables
String and number variables can be mapped to variant instances so it switches to a different variant when its mode changes. To do this, the variable’s value must match the variant property’s values.
Create a string or number variable with multiple values (or modes).
Set the variable’s values to match the variant property’s values.
Grab a component instance of the variant, and hover over the variant property in the right sidebar.
Click
Assign variable
and choose the variable.
Now, the instance will switch to a different variant whenever the mode switches.
Boolean variables
Boolean variables can be mapped to variant properties with true and false values.
Note:
Currently, boolean variables cannot be applied to
boolean properties
. You’ll need to
add a variant property
to a component with two values: true and false. Then, add apply the boolean variable to the instance’s variant property.
Create a boolean variable with multiple values (or modes).
Create two variant instances within the same component set.
Set one variant’s value to
True
and the other one to
False
Grab a component instance of one of the variants, and hover over the variant property in the right sidebar.
Click
Assign variable
and choose the boolean variable.
Learn how to use variants and variables in prototypes →
Nested instances
You can also bind variables to variant properties on nested instances.
Create a component with a nested instance of another component.
Create a string, number, or boolean variable with multiple values (or modes).
Set the variable’s values to match the values of the nested instance component properties.
Create a instance of the component.
Assign the variable to the nested instance’s variant property.
Now, the nested instance will switch to a different variant whenever the mode switches.
Mode conflicts
Any modes with conflicts will show an
information icon
next to it in the mode switcher. Conflicts occur when objects in a file use different versions of the same variable.
If you select a mode with a conflict, the mode is only applied to layers that can render it. The layer must be using a version of the variable that contains that mode.
To resolve conflicting modes:
Open the file where the main variable lives and
publish it to team libraries
Review and accept the
updates from the library modal
from the file where the conflicts are happening.
Keep in mind that only those with
can edit
access to a file can make edits, publish, and review and accept library updates to the file.
Prevent mode conflicts
Mode conflicts can happen if a mode is deleted from or added to the variable, and the updates haven’t made their way to a file or object.
Here are a couple of ways these conflicts can happen and what you can do about them.
Scenario 1
Say you publish a variable collection with two modes—Light and Dark. You use them in a design file called Brand.
Later, a third mode is added to the collection—Superdark. In the file where the variable lives, you set a component to Superdark mode and insert it into the Brand file.
This creates a conflict in the Brand file with the Superdark mode. Even though layers in the Brand file use the same variable, layers using the older version don’t have access to Superdark. Even when you try to apply Superdark to them, they will only be able to render Light and Dark.
As a solution, make sure that updates to the variable are published, and accept the updates from the file containing conflicts.
Scenario 2
In some cases, there's a chain of files with connected assets that are experiencing conflicting modes.
For example, let's say you created a variable in File 1 and publish it to team libraries. In File 2, you use the variable on Main Component A. In File 3, an instance of Component A is inserted into Main Component B. Lastly, an instance of Component B is inserted into File 4. This chain looks like this:
File 1: Variable (version 1)
File 2: Main Component A (uses variable version 1)
File 3: Main Component B (uses instance of Component A)
File 4: Instance of Component B
One day, someone adds a new mode to the variable in File 1. You grab an asset from File 1 and insert it into File 4. You start seeing an
information icon
next to one of the modes in the mode switcher. So now, the chain looks like this (changes are
bolded
File 1: Variable (
version 2
File 2: Main Component A (uses variable version 1)
File 3: Main Component B (uses instance of Component A)
File 4: Instance of component B (
you spot a conflict
In this case, reviewing and accepting updates in File 4 will not resolve the issue if Files 2 and 3 haven't received and accepted updates yet.
As a solution, you will need to publish and accept updates to all files involved in the order of the chain.
File 1: Publish variable
File 2: Accept variable update; Then publish Main Component A
File 3: Accept updates to variable and Component A; Then publish Component B
File 4: Accept updates to variable, Component A, and Component B

--- Before you Start ---
Before you Start
Who can use this feature
Supported on
any team or plan
Anyone with at least
can view
access to a file can add and view comments.
New to comments in Figma?
Get started with comments →
Comments takes collaboration to the next level. They are a great way to give and receive feedback. You can add and reply to
comments on files
and prototypes using the browser or
Figma desktop
and
mobile app
Comment on prototypes
Comment on prototypes in presentation view. You can comment if you have at least
can view
access to the file and are logged in to Figma.
Note:
Prototypes with the
toolbar and footer hidden
will not display comments. You will need to show the toolbar and footer to comment.
View prototypes →
Add comments
Open the prototype in presentation view.
Navigate to the screen you'd like to comment on.
Click
in the toolbar or press
. Your cursor will turn into a
Select a location to comment on:
Click the location on the canvas where you'd like the comment to be pinned.
Or, click and drag your cursor to select a region to comment on.
Type your comment in the field provided. You can
mention collaborators
add emoji to your messages
Click
to send your message.
Click
again or press
Esc
to exit comment mode.
Learn how to comment on prototypes using the Figma mobile app →
Reply to comments
You can only view and reply to these comments from Presentation view.  When you click on a comment, you'll be prompted to join the conversation. Figma will thread any replies.
Click the on the comment to view the message.
Click in the
Reply
field to enter your response. You can
mention collaborators
add emoji to your messages
Click
to send your message. Figma will add your comment to the thread.
Resolve comments
When you've reached an agreement, or have resolved an issue, click [ICON] to resolve the comment.
Figma will remove the comment icon from the prototype. You can still access resolved comments, if you enable that setting (see below).
Adjust your comment settings
Show resolved comments
As long as you are logged in to your Figma account, you will be able to make comments on a prototype. You will be able to respond and resolve comments.
You can decide if you would like to show resolved comments on the prototype. This will display any comments you've already resolved alongside new or outstanding comments.
Click
to enter presentation view for the file.
Click
Options
in the toolbar.
Select
Show resolved comments
. A check will appear next to the setting when this is enabled.
Select the setting again to remove the check and hide any resolved comments.
Note:
If there are no comments on the prototype, then this setting will be greyed out and can't be updated.
Show only your comments
You can also choose to only view your own comments.
Click
to enter presentation view for the file.
Click
Options
in the toolbar.
Select
Show only your comments
. A check will appear next to the setting when this is enabled.
Select the setting again to show comments from all collaborators.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all plans
Anyone can import assets to their drafts
Anyone with
can edit
access can import assets to a design file
Anyone with
can edit
access to a team can import assets to that team
There are several ways to import assets into Figma Design. The best method will depend on what type of assets you’re importing. Use the following articles to learn more about importing in Figma.
Note
: If you receive an error when attempting to import media, you may need to
adjust your firewall settings
Import images, vectors, and videos
You can import images, vectors, videos, and GIFs to Figma Design.
Add images and videos to design files
Bulk add images and videos
Use animated GIFs in prototypes
Copy assets between design tools
Import design files
You can import Figma Design files (.fig) and Sketch files (.sketch) to Figma Design:
Import files to the file browser
Import Sketch files
Note
: Attempting to import very large files may result in a failed import. To prevent this, consider splitting up the file into smaller files before importing.

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can view
access to the file can export assets as long the file’s owner has not
restricted copying and sharing
on the file
Anyone with
can edit
access to the file can use the
Slice
tool
Export content to share designs with others, move content between tools, or save copies of your work outside of Figma.
Tip:
Some objects can be
copied and pasted
between design tools. Right-click on an object, hover over
Copy/Paste as
, and select
Copy as PNG
Copy as SVG
Select content to export
You can export the following from Figma Design:
Layers, frames, components, groups, or sections. Learn more about
selecting objects in Figma →
A portion of the canvas using the
Slice
tool.
The entire canvas of a page.
The entire file as a .fig file.
Learn more about saving a copy of a file to your computer.
Select part of your design to export using the Slice tool
If you have
can edit
access to a file, you can use the
Slice
tool to select and export a portion of your canvas. This is useful for sharing parts of your design workflow or creating high-quality screenshots.
The
Slice
tool is located under the Region tools dropdown in the toolbar. To create a slice, click and drag the
Slice
tool around the region you want to export. You can move and resize the slice as needed. Keep in mind that only content within the slice’s boundaries will be exported. Once the slice is positioned where you want it, you can apply export configurations to it like any other object.
Tip:
Slices also let you control padding around the exported object. Otherwise the padding is computed from the overall shape bounds. The latter adjusts when the shape changes size, whereas the slice is absolute.
Locate the export settings
After you’ve selected the content you want to export, you can create export configurations using the settings in the
Export
section. The location of the
Export
section differs depending on your level of access to the file and the mode you’re using.
Note:
If you don’t see the
Export
section, try refreshing the page. If that doesn’t work, the file owner may have restricted viewers from being able to copy or export assets from the file. Learn more about
restricting copying and sharing on files →
Design Mode
If you have
can edit
access to a file, the
Export
section is located toward the bottom of the right sidebar.
If you have
can view
access to a file, the
Export
section is located under the
Properties
tab in the right sidebar.
Dev Mode
If you are using Dev Mode, the
Export
section is located in the right sidebar, but is only visible if you have an object selected. Learn how to
export or download assets in Dev Mode
Add an export configuration
Use the
Export
section to choose which file format and export settings will be applied to the selection.
Select the layers you want to export. If you want to export the entire canvas of the current page, deselect everything on the canvas.
Click the
plus in the
Export
section to add an export configuration. You can add as many export configurations to a selection as needed.
Configure the export settings. Learn more about
Figma's export formats and settings →
Tip:
If you’re exporting a frame with a fill, you can hide the fill in the exported file by deselecting the
Show in exports
checkbox in the
Fill
section in the right sidebar.
(Optional) Click
Preview
to see how your asset will look. If you have multiple objects selected, the
Preview
setting does not display.
Click
Export
f you’re using Figma in the browser, the exported file will be sent to the download location set in your browser’s preferences. If you’re using the Figma desktop app, you are prompted to rename the file and choose where to send the export.
Note:
If you use a slash-separated naming convention, objects you export will be organized in nested folders that match your naming structure. For example, if you export a layer named “button/pill/default”, it will be exported nested in folders called “button” “pill” and the file will be named “default”.
Bulk export all selections with export configurations
You can bulk export every selection on your current page that has an export configuration applied.
Click the
Main menu
and select
File
Export
from the options. You can also use the keyboard shortcut:
Mac:
Shift
Command
Windows:
Shift
Ctrl
The
Export
modal displays all the selections with export settings applied. For each selection you can:
View the scale, format, and dimension of the asset
Hover over the thumbnail or layer name to view the exported file name
Click on the thumbnail to view that selection in the canvas
Uncheck the box next to any selections you don’t want to export.
Click
Export
to export the selected assets.

--- 050_Dev_Mode_for_admins.txt ---
Dev Mode in Figma gives developers everything they need to navigate design files and transform designs into code. With Dev Mode, designers and developers can stay on the same page, making sure important details aren’t lost in the handoff process.
Developers use Dev Mode to:
Access advanced inspection capabilities and more codegen languages
See what’s changed since you last viewed a file by comparing frame versions
Quickly review designs that are ready for development with statuses and annotations
Streamline your workflow with developer-focused integrations, like JIRA, Storybook and GitHub
Explore design system components in a playground
Connect designs with links to tickets, documentation, and components in code
Learn more in our Guide to Dev Mode →
Dev seats
Anyone with a Full or Dev seat can access Dev Mode.
Seat
What's included
Full
Full access to all Figma products, including Figma Design, Dev Mode, Figma Slides, and FigJam.
Dev
Full access to Dev Mode, Figma Slides, and FigJam.
View and comment access in Figma Design files.
Collab
Full access to Figma Slides and FigJam.
View and comment access in Figma Design files.
No access to Dev Mode;
basic inspection
only.
View
View and comment access to Figma Design, Figma Slides, and FigJam.
No access to Dev Mode;
basic inspection
only.
Users can
make requests to access
Dev Mode if their current seat doesn’t provide Dev Mode access. Admins can use
seat approval settings
to manage incoming seat requests.
Learn more about managing seats in Figma
Note:
Dev Mode is not available on the Starter plan.
Learn more about Figma's plans and features
Can developers still inspect designs without a Dev seat?
Want to see this in action? Follow Figma DA Tom Lowry on a
tour of the view-only experience →
Not everyone in your organization might require the
advanced features that come with Dev Mode
. The developers who don’t can still use Figma Design with a free View seat and do basic inspection like viewing properties and measurements, copying code, and exporting assets. As an admin, you can manage users who need View seats in Figma Design from the admin panel, just like you managed for Dev seats.
To learn more about inspecting with or without Dev Mode,
see the Guide to Inspection →
Helpful resources to share with your developers
Here are key articles to help get developers in your organization familiar with inspecting in Figma, across seat types.
Guide to Dev Mode
Guide to Inspecting

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in FigJam
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
Jambot is a
FigJam widget
that brings the power of ChatGPT’s AI to your boards.
Use Jambot to:
Brainstorm ways to kick off your team meeting
Summarize sticky notes on your board to help wrap up a meeting
Create visual mindmaps with AI
Reframe text for a specific audience, tone, or format
Learn something new by asking the widget a question or to expand on a topic
Generate code from a description or prompt
Learn about the risk of using AI tools →
Run Jambot
To find and run the Jambot widget:
Hover over the pile of recently used icons in the toolbar, then click
More
From the
Widgets
tab, search
Jambot
Click or drag to add the widget to the board.
Add text to the input sticky.
Select a function.
Use existing stickies as input:
Add the Jambot widget to the board.
Select existing stickies or sections.
Use the keyboard shortcuts
⇧ Shift
to create an elbow connector, and
for a straight line.
Drag a line from the selected stickies or section to the Jambot widget.
Select a function.
Note
Figma may limit the usage of beta features, including capping feature use due to high demand.
Jambot functions
Function
Use
Prompt
Ideate!
Generates and produces ideas related to the input
“Icebreaker questions for our weekly team sync.”
Quick question
Lets you ask Jambot a question about the text in a sticky
"What can I cook with [sticky text]?”
Teach me about this
Asks Jambot to explain what is in the sticky
"Impressionism”, “Design systems”
Give me…
Provides people, examples, ideas, statistic, and facts about the text in a sticky
“US Women’s National Soccer Team”, “Punk rock”
Rabbit hole
Lets you dig deeper into a certain topic
"Flamenco” will offer you information on The history of Flamenco or Regional variations of Flamenco music
Similar stuff
Shows you related topics to branch out to and open new areas to explore
“Cacio e Pepe” will show you explanations of similar recipes like Aglio e olio
Summarize
Convert selected stickies into a consolidated format or bullet point summary
[Selection of stickies with action items]
Rewrite this
Asks Jambot to reframe text for a different audience, tone, or style
“Thanks for your input, but I will be moving forward with the team’s existing plan” as a polite but assertive Slack message
Turn this into a…
Will rewrite a selected text into a joke, song, or poem
“Variables in Figma” as a poem
Code this up
Asks Jambot to generate code to implement what’s describe in a sticky
“12 column CSS flex box grid”
Custom
Lets you write your own prompt
“Write me a song about the Black-Crowned Night Herons of Lake Merritt.”
See what else you can do with AI in FigJam →

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any
plan
Anyone with
can edit
access to a file or prototype can add prototype connections.
New to Prototyping? Check out our
Getting Started with Prototyping
guide.
When a design reuses a component across multiple screens, you can prototype at the speed of light.
If you
add a prototype connection
from a main component, and use instances of that component in your designs, the prototyping connections of the instances will be inherited from the main component.
Use inherited prototype connections to connect:
A mobile app tab bar placed at the bottom of multiple screens
An arrow button to
navigate back
to the previous screen
A website footer or navigation menu
Any component used for navigation that appears frequently throughout your design
Add connections from main components
To prototype with main components:
Check that the main component is on the same page as the designs that contain the instances. Components from
team libraries
can't be prototyped this way.
Use instance(s) of the component in your designs.
Click the
Prototype
tab at the top of the right sidebar.
Click and drag from the
to create at least one connection from the main component.
In the example below, the mobile app design has a persistent navigation bar at the bottom of each screen. We can connect a tab in the main component to its destination screen, and all instances of the navigation bar inherit the same interaction. Without a main component, we would need to connect each tab of every navigation bar individually.
Note:
Figma won't display the inherited connections on the canvas by default. Select the instance to view its inherited connections.

--- Before you start ---
Before you start
Who can use this feature
Available on
any paid plan
Anyone with
can edit
access to a file can create prototypes.
Anyone with
can view
can view prototypes only
access to a file can view prototypes.
As your prototypes increase in depth and complexity, you can use multiple actions and conditionals to handle multiple or different outcomes within the same interaction.
Multiple actions
: Stack an unlimited number of actions on the same trigger
Conditionals
: Check if a condition is met before performing an action by using an if/else conditional statement
New to variables? Learn more here:
Guide to variables →
Use variables in prototypes →
Want to get more hands-on practice?
Check out the
advanced prototyping playground file →
Looking for more examples of how you can use variables in prototypes? Check out some more
advanced prototyping examples →
Note:
This video explains prototyping using Figma's old interface. For examples of the new interface, see the images in this article.
Multiple actions
Every prototype interaction has a trigger and one or more actions. A trigger is what causes the interaction to begin, and an action is the response.
Multiple actions allow you to add an unlimited number of actions on one trigger.
Create a
prototype interaction
To add an additional action, click
Add action
From the
Interaction
panel, select any action from the
Action
dropdown menu.
Tip:
Collapse or expand details of each action by clicking the chevron to the left of the action name.
Reorder actions
Actions run in the order in which they’re listed, from top to bottom.
To reorder actions:
Open an
Interactions
panel.
Click to the left of the action and drag to change its order.
Tip:
You can drag and drop any action into a
Conditional
action.
Changing the order of actions can change the outcome of a prototype.
For example, two sample prototype actions are listed below. For this example, the starting value of
numberVar
1. Set numberVar to 2
2. Conditional: if numberVar == 2, Navigate to Frame 2
In the first action, the number variable is set to a value of
. This means the conditional statement (
if numberVar == 2
) is evaluated to be true, so the action (Navigate to Frame 2) executes.
Now, switch the order of the actions:
1. Conditional: if numberVar == 2, Navigate to Frame 2
2. Set numberVar to 2
In the first action, the conditional statement (
if numberVar == 2
) is evaluated to be false, so the action does not execute, and the prototype stays on the current frame. Then, the value of
numberVar
is changed to
Animation order
Prototype animations
can be used to create smooth transitions between pages and define the behavior for actions like
Navigate to
Scroll to
Open overlay
, and more.
If you have multiple animations on a trigger, they run sequentially.
Conditionals
In prototyping, a conditional is a rule that defines if an action should trigger. Conditionals are written with if/else logic.
For example, consider building a checkout flow.
the cart total is higher than a certain amount, the user receives free shipping. If not, or
else
, the user sees the full shipping price.
In Figma, you can use the
Conditional
prototype action to build prototypes with conditional logic.
Create a
prototype interaction
From the
Interaction
panel, select any trigger from the dropdown menu.
From the
Actions
dropdown menu, select
Conditional
Complete the
condition:
In the
field, write a
boolean expression
to represent the condition that must be met.
Select an action (or multiple actions) from the dropdown menu. These actions will be triggered if the
statement is met.
Complete the
Else
condition:
Select an action (or multiple actions) from the dropdown menu. These actions will be triggered if the
statement is not met. Alternatively, leave the
Else
action blank.
Only conditionals written with
supported operations and format
will work. Invalid conditional statements will be outlined in red.
Evaluate conditional statements
Conditional statements are identical to boolean expressions—the statement is evaluated to have a true or false value. If the value of the statement is true, the
action is triggered. If the value of the statement is false, the
else
action is triggered.
Learn more about
how to format and evaluate boolean expressions →

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design, FigJam, Figma Slides, Figma Sites, and Figma Buzz
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
Use Figma AI to rewrite, shorten, and translate text in your design.
Rewrite text
How it works
Use
Rewrite this
to tailor your copy’s tone according to your intended audience. You can also use a prompt with
Rewrite this
to generate copy from scratch.
Example
: You're designing a travel app for booking hidden gem tours of a city. Your card for a tour has a title layer and a description layer. Use
Rewrite this
to generate realistic copy.
Write me an editorial title for a hidden gems tour in Sydney, Australia.
Example
: You're designing an error message to be displayed during an outage and want to convey sympathy while giving your reader confidence their issue is being resolved.
Rewrite this error message in a sympathetic tone for a customer who has lost connection during a temporary outage.
Tip:
If you're generating and rewriting copy for repeating elements, learn how to
replace content with AI.
Use Rewrite text
To use Rewrite text in Figma Design, FigJam, Figma Slides, or Figma Sites:
Select a text layer.
From the toolbar, click
Actions > Rewrite this
Enter in a prompt.
Click
Rewrite
To use Rewrite text in Figma Buzz:
Select a text layer.
From the inline toolbar, click
AI tools > Rewrite this
Enter in a prompt.
Click
Rewrite
Shorten text
How it works
Use
Shorten text
to rewrite any text layers you need to be more concise. This is great for simplifying long paragraph text, or for UX copy with limited characters or space.
Use Shorten text
To use Shorten text in Figma Design, FigJam, Figma Slides, or Figma Sites:
Select a text layer.
Click
Actions
in the toolbar and select
Shorten
To use Shorten text in Figma Buzz:
Select a text layer.
From the inline toolbar, click
AI tools > Shorten
Translate text
How it works
Translate text
can help you preview what your UX copy will look like in another language.
Use Translate text
To use Translate text in Figma Design, FigJam, Figma Slides, or Figma Sites:
Select a text layer.
Click
Actions
in the toolbar and select
Translate to...
Select a language.
To use Translate text in Figma Buzz:
Select a text layer.
From the inline toolbar, click
AI tools > Translate to
Select a language.

--- Who can use this feature ---
Who can use this feature
Supported on
any team or organization plan
Anyone with
can edit
access to a file can update text properties.
CJK languages refers to scripts that use Chinese characters and their derivatives. This includes Chinese (Simplified and Traditional), Japanese, and Korean.
Using a Chinese (Pinyin), Japanese (Kana), or Korean keyboard?
You can
update your keyboard layout
from any Figma file. This allows you to access shortcuts mapped to your specific layout.
Supported fonts
If you are using the
Figma desktop app
, you can use any fonts already on your computer. If you're using Figma in the browser, you can
install the Figma Font Helper
to access fonts installed on your computer.
Mac
Figma supports the following native fonts, by language:
Simplified Chinese 简体中文:
Song, ST Heiti, ST Kaiti, Fang Song
Traditional Chinese 繁體中文:
Apple LiSung, LiHei Pro, LiSong Pro
Japanese 日本語:
Osaka, Hiragino
Korean 한국어:
Hangangche, Seoul, Apple SD Gothic Neo
Windows
Figma supports the following native fonts, by language:
Simplified Chinese 简体中文:
SimSun, KaiTi, Microsoft YaHei
Traditional Chinese 繁體中文:
Ming Light, Microsoft JhengHei
Japanese 日本語:
MS Gothic, MS Mincho
Chinese 中文:
Microsoft JhengHei, Microsoft YaHei, SimHei
Korean 한국어:
Dotum, Gulim, Batang, Gungsuh
Font fallback
Font fallback allows you to use characters and icons that aren't specifically supported by that font.
If a font doesn't support a character you input, Figma will render that specific character in a Noto font. No more empty spaces or missing character icons.
For people writing in Chinese, Japanese, or Korean, Figma may choose the wrong version of a character.
To fix that, you can select your text and update the font to use the specific Noto font for your language. Or select another font that supports the language you’re writing in.
Google Noto Fonts
Google has a repository of open-source fonts that support a variety of syllabary and logogram based languages.
Search for languages, regional variations, and font names on the
Google Noto website
Filter by
Language
when looking for
Google Web Fonts
Figma includes a selection of popular Google Noto fonts in the font picker. This covers both the Serif and Sans Serif versions.
Select a Noto font
You can update the font for a selection of text, or an entire text layer.
Select the text layer you want to update.
Open the
Design
tab in the right sidebar.
Click the
next to the current font family.
Search for and select the relevant Noto font.
Figma lists Chinese, Japanese, and Korean Noto fonts in shorthand. For example:
Noto Sans Simplified Chinese
is shown as
Noto Sans SC
SC = Simplified Chinese
TC = Traditional Chinese
JP = Japanese
KR = Korean
You’ll see the full name for any other Noto Sans or Noto Serif fonts. This includes: Bengali, Javanese, Malay, Telugu, Tai, Thai, Tamil, Gujarati and Kannada.

--- Before you start ---
Before you start
Who can use this feature
Use variables with prototypes on
any paid plan
. The number of variable modes available per collection depends on your plan.
Anyone with
can edit
access to a file can create prototypes.
Anyone with
can view
can view prototypes only
access to a file can view prototypes.
Each variable in your collection can have multiple modes. You can select and use the values for specific modes in your prototyping actions and expressions.
There are several ways you can use variable modes to enhance your prototyping experience:
Set mode values based on context
: Use multiple mode values of the same variable in your design, and change their values independently in the same interaction
Use mode values in expressions
: Use the values of specific mode definitions to build interactions and perform calculations
Change variable mode with an interaction
: Use a prototype interaction to change the variable mode of a page
New to variables? Learn more here:
Guide to variables →
Use variables in prototypes →
Want to get more hands on practice?
Check out the
advanced prototyping playground file →
Set mode values based on context
When a variable has multiple mode definitions, use the
Set variable
action and mode context to change the value of a specific mode definition.
This can be helpful when modifying only one mode definition of a variable. When displaying or using multiple modes of the same variable in a design, adjust their values independently from each other.
For example, take a look at the design below:
Each produce item has a counter to adjust the number of items added to the cart.
If a number variable with only a single mode is used to represent the item count, a unique variable and interaction would be needed for each product listing.
Instead, you can use a number variable with multiple modes—one for each unique produce item.
By using multiple modes, each item count can be updated separately.
Set the mode
on the parent layers or objects.
Select the layer, group, or object that contains the applied variable. (For example, select the frame that contains the product image and information for the melon.)
From the
Appearance
section of the right sidebar, click
Apply variable mode
Hover over a variable collection and choose a mode. (Select the “melon” mode.)
Repeat for any other objects or layers that only apply to a specific mode. (Apply the “shiitakes” mode to the frame that contains the product image and information for the shiitake mushrooms).
Change the value of the applied variable with the
Set variable
prototype action. (For example, create a
Set variable
interaction on the + icon for each product counter. Set the
Amount in basket
variable to
Amount in basket + 1
Any variables contained within a layer that has a set mode will only update the value of that specific mode definition.
Tip:
Use
components
to save even more time while prototyping with modes. With components, you’ll only need to create the interaction once. Then, place multiple instances on the frame, and change the applied mode for each instance.
Use mode values in expressions
Select mode definitions in prototype actions
To select specific variable modes in prototypes:
Create or click on an existing prototype connection to open the
Interaction
modal.
Click on any variable name that you’ve used in the interaction.
From the
Modes
dropdown menu, select a specific mode of that variable.
Once you’ve selected a mode, the variable is represented with both the variable name and mode name:
variableName:modeName
Tip:
You can also use your keyboard to build expressions. To select a specific mode in the expression builder, enter in a variable. Then, press ← to highlight the variable name, and use your ↑ up and ↓ down arrows to select the mode. Press
enter
to confirm.
Build expressions with mode values
Use expressions with variable modes to calculate values across a single variable.
This can be helpful when writing expressions that use multiple mode definitions of one variable.
For example, consider the same design from above. This time, there are fields to calculate the item subtotal of each produce item, and an overall total to calculate the total price of the entire order.
Tip:
In order to apply different modes of the same variable on a the same design,
apply a variable mode to the frame or component layer
Now, take a look at the variable collection:
When using expressions, there are times when you’ll need separate values for each variable mode. For example, to calculate the
subtotal
of each produce type, use an expression that multiplies the mode’s
Price
by its
Amount in basket
Other times, you’ll need a single variable value to represent the total of different modes. For example, to calculate the order total, create a new variable collection for the
cartTotal
variable with only one mode.
Want to learn more best practices for prototyping with variables? Subscribe to
Figma’s YouTube channel
Change variable mode with an interaction
Use the
Set variable mode
prototype action to change the variable mode of the current page.
For example, if you have a design with a light and dark mode, you can use the
Set variable mode
action to switch between modes while playing a prototype.
To use the
Set variable mode
prototype action:
Create a
prototype interaction
For the prototype action, select
Set variable mode
and do the following:
From the first dropdown menu, select a variable collection.
From the second dropdown menu, select a variable mode.
The
Set variable mode
action changes the mode for the current page, and will change the mode for any objects on that page that have their mode set to
Auto
. Any mode explicitly defined on an object will still be used for itself and any nested children, regardless of the page level mode.
Learn more about setting variable modes on objects →

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can use the Shape builder tool
You can use the Shape builder tool to combine two or more vector layers into a single shape. This is useful for creating unique shapes for logos, icons, illustrations, and more.
Use the shape builder tool
You can access the shape builder tool while in
vector edit mode
Select one or more vector layers.
Press
Enter
to open vector edit mode.
Select the
Shape builder
tool from the secondary toolbar.
Once enabled, you can can hover your cursor over the individual regions of the selected layers. You can then use one of the shape builder options to create your new shape.
Note:
Unlike using
boolean operations
, using the Shape builder tool is a destructive action, meaning any layers you modify will be permanently changed. If you modify a layer on accident, you can use the file’s
version history
to restore a previous version or use the undo shortcut:
Mac:
Command
Windows:
Control
Shape builder options
Merge regions
Click and drag your cursor to select multiple regions, and merge them into a single layer.
Extract a region
Click on a specific region to extract it from the selection and move it to its own layer.
Subtract a region
Hold down the modifier key and click on a region to remove it from the canvas:
Mac:
Option
Windows:
Alt

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Anyone with
can edit
access to a file can create and edit frames
Frames are layers that act as containers to organize other layers—such as shapes, images, and text—into cohesive designs. You can even nest frames within other frames, allowing you to create more complex designs. Frames allow you to build everything from individual elements like icons or buttons, to entire website layouts and mobile app designs.
Frames that sit directly on the canvas are called
top-level frames
. Frames that contain other layers are called
parent
objects. Any layers or nested frames inside a parent frame are called
child
objects. Learn more about
the parent, child, and sibling relationship
Similar to other layer types, you can
adjust the properties of a frame
including its dimensions and fill.
Frames also give you access to other features including
layout guides
auto layout
constraints
, and
prototyping
You can identify frames in the
Layers
panel of the left sidebar by the
frame icon.
Select the frame tool
Enable the
Frame tool by selecting it in the toolbar, or by using one of the keyboard shortcuts:
Create a frame
Once the
Frame
tool is selected, there are several ways to create frames:
Click on the canvas
Use a frame preset
Duplicate an existing frame
Click on the canvas
With the
Frame
tool selected, do one of the following:
Click on the canvas to create a top-level frame. If this is the first top-level frame you’re creating during your current session in this file, the frame’s dimensions will be set to 100 x 100. Otherwise, the top level-frame will use the same dimensions of the last top-level frame you created.
Click inside an existing frame to add a 100 x 100 nested frame.
Click and drag on the canvas or in an existing frame to add a frame with custom dimensions.
Tip:
You can also create a frame around existing objects using Frame selection. Select one or more layers, then use the frame selection keyboard shortcut:
Mac
⌥ Option
⌘ Command
Windows
Ctrl
Alt
Use a frame preset
When the
Frame
tool is enabled, a list of frame presets become available in right sidebar. Click the arrow to expand the section and select a preset from the list. You can choose presets for popular device and asset templates:
Phone
Tablet
Desktop
Presentation
Watch
Paper
Social Media
Figma Community
Archive
If you want to change a frame to a different preset, select the frame and use the
Frame
dropdown in the right sidebar to select a different frame preset.
Duplicate an existing frame
There are two ways to duplicate an existing frame:
Quick-add
: With the
Frame
tool enabled, hover over an existing frame and pressing the +
plus
on either side of the frame. This will duplicate the frame and nudge other frames over to accommodate the new frame.
Duplication shortcut
: Select a frame and use the duplication keyboard shortcut
⌘ Command
(Mac) /
⌃ Control
(Windows). You don’t need to enable the
Frame
tool to use this method. Learn more about
duplicating options
For both methods, if your frame is in a section, the section will resize to accommodate the new frame.
You can also quickly create a blank frame of the same size by clicking the +
plus
on either side of the frame while holding the keyboard modifier:
Mac:
⌥ Option
Windows:
Alt
Frame properties
There are a few properties associated with frames. Frames support the following properties.
Corner Radius
: Round the corner of a frame to create softer edges.
Clip Content
: Hide any objects within the frame that extend beyond the frame's bounds.
Layout Guides
: Create guidelines to help with the visual structure to your designs.
Auto Layout:
Create dynamic frames that respond to their contents
Fill
: Apply a solid fill, gradient,
images
(PNG, JPEG, GIF, TIFF and WEBP) to a frame.
Stroke
: Add strokes to a frame to create a border or outline
Effects
: Add a shadow or blurs to a frame
Extra functionality
Frames allow you to access extra functionality in Figma. You will need to use frames to use the following features or functions:
Layout Guides
: Apply transparent uniform grids, columns, and/or rows to frames to provide visual structure
Constraints
: Define how child objects respond when you resize a frame. Apply constraints to
objects
within a frame.
Auto Layout
: Add Auto layout to frames to create dynamic layouts that respond to their contents
Prototyping
: Create interactive prototypes that move between frames in your canvas
A frame is a
parent
object. This means that it can control or influence any
child
objects you place within it.
Learn more about parent/child relationships in Figma.
Tip:
You can hand off frames for development without reorganizing your file.
Create a section for your frame
, or convert the frame to a section. Then,
mark the section as
Ready for dev
Adjust properties of the frame
In the past, it was possible to adjust the properties of child objects when you selected the frame. Now, you can adjust the properties of the frame itself.
Select a child object by using the keyboard shortcut:
Enter
Return
Press the
Tab
key to select the next sibling.
Press
Shift
Tab
to select the previous sibling.
Press
Shift
Enter
to select the parent
If you want to adjust the fill and stroke properties of a frame and it's children, you can use
Selection colors
view or adjust colors in a mixed selection
Nest frames within other frames
In Figma, you can create frames within other frames. We call this process nesting. This allows you to combine frames with different properties to build complex interfaces.
This creates new hierarchies or relationships:
Top-level frames:
Any frame that is directly on the canvas. For a frame to be a top-level frame, you can't nest it within another frame, group, or object
Nested frame
: Any frame that is placed within another frame. You can place frames within top-level frames, or within other nested frames. Nested frames are both a parent and a child
Children:
Any object that is within a frame
Learn more about parent, child, and sibling relationships.
Top-level frames
Figma
bolds
top-level frames in the layers panel and shows the name of any top-level frames on the canvas.
Nested frames
Nested frames are frames that you place within another frame or object. This makes them both a parent and a child. You can place frames within:
Top-level frames
Other nested frames
In groups
In our example below, each of our elements are in their own frame. We have a status bar at the top and a navigation menu at the bottom. We also have a card that includes the details of our Upcoming Tickets.
Using one of our device presets, we can create a top-level frame for our elements. We can add our elements to the top-level frame to build a single screen in our mobile app.
Resize frames
You can interact with frames like any other object on the canvas, including change the size or scale of frames. There are a few ways to change the size of a Frame:
Drag the frame
Drag to resize a frame manually.
Select the frame in the canvas, or layers panel in the left sidebar.
Click the handle in one of the corners and drag to resize. Or, click one of the edges and drag.
Tip!
To ignore any
constraints
on child objects, hold down the modifier key:
Mac:
⌘ Command
Windows:
Ctrl
Change the frame preset
Select another frame preset to change the frame's size.
Select the frame.
In the Properties Panel in the right sidebar, select the frame field.
Select a preset from the list.
Choose presets for popular device and assets templates:
Phone
Tablet
Desktop
Presentation
Watch
Paper
Social Media
Figma Community
Archive
Figma will update your frame's dimensions to match the preset.
Note:
If you have applied
constraints
to any child objects, Figma will resize them to match the new frame preset. Otherwise, objects inside the frame will stay at the original dimensions and position.
Properties Panel
Update the Frame's
Width
and
Height
using the right sidebar.
Enter a new number in the
and
fields, or hover over the icon to scrub the field. Drag left to decrease and right to increase.
Select <icon> Lock aspect ratio next to the
idth and
eight fields to maintain the layer’s proportions while resizing it.
Tip:
You can use the dimension fields to perform calculations. This allows you to quickly scale or resize objects.
Percentage, such as 50%
Add, such as +100
Subtract, such as -20
Multiply, such as *4
Divide, such as /8
It's not possible to
multiply
a width or height by a
percentage
, for example *50% will result in a value 50x the original, not 50%.
Resize to fit
You can resize a frame so that it shrinks or grows to fit its child objects. This will redraw the frame around the outermost bounds of the objects within it.
Use the keyboard shortcut:
Mac:
⌥ Option
Shift
⌘ Command
Windows:
Alt
Shift
Control
Click
in the
Layout
section of the right sidebar
Ungroup a frame
To ungroup a frame, select the frame and press:
Mac:
⌘ Command
Shift
⌘ Command
Delete
Windows:
Control
Shift
Control
Backspace

--- Before you start ---
Before you start
Who can use this feature
Users on
any
plan
Users with
can edit access
to a file can create and edit components.
Users with
can view
access to the original file can use components from that Library.
Video tutorials
Check out these video tutorials about components:
Overview
Components are elements you can reuse across your designs. They help to create and manage consistent designs across projects.
You can create components from any layers or objects you've designed. These could be a whole range of things like buttons, icons, layouts, and more.
There are two aspects to a component:
main component
defines the properties of the component.
instance
is a copy of the component you can reuse in your designs. Instances are linked to the main component and receive any updates made to the component.
You can create components to use within a single file. Or, you can use team l
ibrary
to share components and styles
across files and projects
Related articles
Read these articles to learn more detailed and specific information about components.
Create a component
Create and use variants
Create and use component properties
Name and organize components
Create an instance of a component
Swap between component instances in a file
Override properties of an instance
Reset instances to remove overrides
Detach instances from components
Make changes to components and instances

--- Before you Start ---
Before you Start
Who can use this feature
Anyone on
any plan
can use variables
Anyone with access to a file can use variables from that file
Looking for more resources on variables?
Check out our guide to variables
Apply variables to various layer properties in the right sidebar. You can also apply variables to properties in text styles and color styles. Learn about
which properties each variable type supports
You can use any variables created in the current file, or variables from any
published team library
to which you have access.
Apply a color variable
Color variables can be applied to solid fills or gradient stops for fills, stroke colors, and color styles. While shadow colors don't have gradient stops, you can still apply color variables to the shadow color.
Color variables and color styles are selected from the same
Libraries
picker.
Color variables are displayed in square swatches.
Color styles are displayed in circle swatches.
Use the search bar to search by variable name or variable group.
Open the dropdown to filter by library.
Tip:
You can apply existing variables and styles to layers using the
eyedropper tool
Solid fills
To use a color variable on a selected layer:
Click
Apply styles and variables
from the
Fill
Stroke
sections of the right panel.
Select a variable from the picker to apply.
You can also
apply color variables within a mixed selection
Learn more about fill and stroke properties
Gradient stops
Apply color variables to gradient stops of any fill or stroke property.
Select the layer, and add a fill or stroke if one doesn't exist yet.
Click the color swatch for your fill or stroke.
From the color picker, select the Gradient icon and click a color swatch from the
Stops
list.
From the new menu, open the
Libraries
tab and select a variable to apply to the gradient stop.
Repeat for any remaining gradient stops.
Learn more about using color variables on gradients
Shadow effects
To apply a color variable to the color property of a shadow effect:
Select the layer.
From the right panel, add a shadow effect if one doesn't yet exist.
Click the
Effect settings
icon of the inner shadow or drop shadow effect.
Click the color swatch.
Open the
Libraries
tab and select a variable to apply.
Learn more about shadow effects
Styles
Color variables can be applied to new and existing color styles as well as the color property of shadow effects.
Tip:
You can apply color variables to styles using the
eyedropper tool
Color style with solid fill
To use a variable on a solid color style:
Deselect everything on the canvas by pressing
Esc
From the right panel, edit an existing color style or create a new one.
From the menu, click a color swatch from the
Properties
section.
Open the
Libraries
tab and select a variable to apply.
Color style with gradient stops
To use variables on a gradient color style:
Deselect everything on the canvas by pressing
Esc
From the right panel, edit an existing color style or create a new one.
From the window, select the
Gradient
icon.
Under
Stops
, click a color swatch from the list.
From the new menu, open the
Libraries
tab and select a variable to apply to the gradient stop.
Repeat for any remaining gradient stops.
Effect style with a color property
To use a variable on the color of a shadow effect style:
Deselect everything on the canvas by pressing
Esc
From the right panel, edit an existing shadow style or create a new one.
Click the
Effect settings
icon of the inner shadow or drop shadow effect.
Click the color swatch.
Open the
Libraries
tab and select a variable to apply.
Apply a number variable
To apply a number variable to a selected object:
Click into the property field.
Press
to open the
Library
picker.
You can also choose one of the following methods:
Property
Additional methods
Font size
Gap between
Layout guide count
Width and height
Maximum width and height
Open the dropdown menu and select
Apply variable
Corner radius
Effects
Layout guide width, height, margin, offset, and gutter
Padding
Click
Apply variable
Hold
Shift
and click into the field
Layer opacity
Letter spacing
Line height
Paragraph indent
Paragraph spacing
Stroke weight
Hold
Shift
and click into the field
Right-click and select
Apply variable
From the
Library
picker, select a variable. Number variables are noted with a number icon.
Note:
If the methods above aren't working, it’s possible you don’t have any variables available to apply. Either create a supported variable in the file or enable a library containing a supported variable.
Apply a string variable
Text content
String variables can be applied to the text content of any text layer. This means if the string variable has the value
Figma
, then the text on canvas will display as
Figma
Select a text layer.
From the
Text
section at the top of the right sidebar, click
Apply variable
Select a variable from the
Library
picker to apply.
Tip:
You can also use number variables on text content. This can be useful for building prototypes that require calculations, such as subtotals in a shopping experience. Learn how to use
variables in prototypes
Font properties
String variables can be applied to font family or font weight and style.
To apply a string variable to a selected text layer:
Open the dropdown for font family or font weight.
Select
Apply variable
Select a variable from the picker.
To apply a string variable to a new or existing text style:
Edit or create a new text style.
From the window, open the dropdown for font family or font weight.
Select
Apply variable
Select a variable from the picker.
Apply a boolean variable
Boolean variables can be applied to layer visibility.
If the value of the boolean variable is
true
then the layer will be visible. If the value of the boolean variable is
false
then the layer will be hidden.
From the
Appearance
section of the right sidebar, right-click the
visible /
hidden icon.
Select a variable from the picker.
Apply variables to variant instances
Boolean, number, and string variables can be applied to instances with variant
properties
to switch between variants of a component set. This can help you switch between variants depending on the mode of the parent frame.
Learn how to create variable modes for variant instances
Detach a variable
To detach a variable:
For color, string, and boolean variables
: Hover over the variable in the relevant right sidebar section, and click the
Detach variable
icon.
For number variables
: Click into the property field and press
Delete
Backspace
. For certain properties, you can also click the
Detach variable
icon.
Note:
Using on-canvas controls to change an auto layout frame’s padding or gap between items will detach any applied number variables.
Paste unpublished variables across files
When you copy and paste an object from one file to another, you may want to duplicate the object's unpublished variables to the second file to continue editing variables on the pasted object—such as when you are building a prototype.
This is possible for objects that have:
Unpublished variables directly applied to their properties (such as fill color).
Or, unpublished styles directly applied to their properties, where the styles use unpublished variables. In this case, the pasted object will lose its connection to the unpublished style when opting to copy variables over.
Once you paste these objects to a different file, a toast notification is triggered at the bottom of the file. If you opt to copy the variables over, they’ll be copied into a new collection and the pasted objects will remap to the new variables.
If the object you copied is a published component and the destination file has access to it, then no remapping will occur.
Note:
Pasted objects will remap to existing variables within the second file if,
The second file contains a collection with an identical name as the collection from the first file;
And that collection in the second file also contains variables with identical names as the pasted variables
Ready to continue your variables journey?
Check out the following topics:
Switch contexts of your designs using modes for variables →
Use variables for advanced prototypes →

--- Before you start ---
Before you start
Who can use this feature
Supported on all plans. Publishing variants to a library is supported
paid plans
Anyone with
can edit
access to a file can create variants and component sets in that file.
Anyone with
can view
access to a file can use components or components sets from that
library
As you create components and build out your design system, you'll find the need for components that are similar to each other, with only slight differences.
For example: you might have multiple components for buttons, with separate components for various states and sizes, as well as light and dark modes.
Variants allow you to group and organize similar components into a single container. This simplifies your component library and makes it easier for everyone to find what they need.
Customize the properties and values of your variants, to take the guesswork out of your design system and bring your components closer to front-end code.
Note:
We don't recommend using variants to group different icons. If you have different sizes of the same icon, then you could combine these as variants instead.
Variant properties and values
Variant properties and their values allow you to define the attributes of your variants. Variant properties are a type of
component property
specific to variants and component sets.
You can add as many properties and values as you need, and customize them to suit your design system. You can even map your properties and values to code components in your design system.
Variant properties
are the variable aspects of our component. For example: the properties of a button component could be the
size
state
, or
color
Values
are the different options available for each property. For example: the state property could have
default
hover
pressed
, and
disabled
values.
All variants within the component set should use the same properties and values, but each variant needs to be a unique combination of them. You don’t need to have a component for every possible combination of properties and values.
Rename your components
Figma uses the slash naming system to organize components in the assets tab and instance menu. Each
in a component's name will create another level of hierarchy.
This makes it easier to navigate your library, or find and swap related components. Learn how to
name and organize components
Tip:
You can rename layers in bulk using the rename layers modal. Learn more about
renaming layers in bulk
You can also use this naming system to convert your existing components to variants. To be accurately converted, component names need to follow this structure:
componentName/property1value/property2value/property3value
The text before the first
will become the name of the component set.
Figma will create a new property for every other
in the component's name, then add the attribute as a value.
If you have used suffixes in your naming system, you will need to add these to the component's name, separated by a
Caution
: To make sure your values match up with the same property, every component you are combining needs to have the same number of slashes.
A button component with the name
Button/Primary/Large/Default/False
will have the following properties and values:
Component set name:
Button
Variant:
Primary
Property 2:
Large
Property 3:
Default
Property 4:
False
In the image below, we can see how the rest of our component names (on the left) are converted to variant values (on the right).
Organize components on the canvas
Note:
Component sets can only contain components, so it's not possible to add text or annotations, nest frames, or group a subset of variants inside a component set.
When combining components as variants, Figma will apply your existing layout and spacing to variants inside the component set. We recommend organizing your components before converting them, to save you from having to rearrange them after.
If you have a lot of variants for a particular component, you may want to organize your components in rows, columns, or grids. This will help to communicate their multi-dimensional nature to anyone who's using your design system. You can also add text layers beside your component set to annotate the relevant properties and values.
In our example below, we've arranged our button variants in a grid. We've also added text layers to the canvas that correspond to a property's values.
Tip:
By default, component sets have a dashed-purple stroke and no fill. You can adjust the fill and stroke properties of the component set to better suit your brand or design system.
Combine as variants
Select the components you want to combine. Learn how to
select layers and objects
In the right sidebar, click
Combine as variants
Figma will add all components to a single component set.
Give properties descriptive names
As part of the conversion process, Figma will create generic properties and add any attributes you added to the component's name as values.
As Figma doesn't know the names of the properties, it will name the first property
Variant
, then number them sequentially:
Property 2
, then
Property 3
, and so on.
You'll need to rename those properties to something more descriptive.
Select the component set.
Find the
Properties
section in the right sidebar.
Hover over a component property name and double-click it.
Edit the name and press
Enter
Return
to apply the edit.
Repeat for the remaining properties.
Note:
Figma handles component sets the same way as regular components. You can add descriptions and links to documentation to them. You can also drag them into the canvas from the assets tab, and swap between instances of them.
Create new variants
Note:
Figma places variants in a single container called a
component set
. Component sets can only contain components. Click
Create component
in the right sidebar, or use the keyboard shortcut to turn your selection into a component:
Mac
⌥ Option
⌘ Command
Windows
Ctrl
Alt
There are a few ways to create a new variant. Select a main component and:
Click
from the right sidebar, or
Right-click the main component >
Main component
Add variant
, or
Click
next to
Add property
from the right sidebar, then select
Variant
from the dropdown. This
creates a new variant property
and turns the main component into a component set.
From there, click
below the component set to add a variant.
Figma will do a few things:
Make an identical component with the same properties
Add both components as variants to a component set
If you used the slash naming convention, the text before the / will become the name of the component set, and the attributes after will be used as values.
You can also create new variants by
combining multiple components
If you have an existing component set,
add more variants
to it at any time.
Tip:
By default, component sets have a dashed-purple stroke and no fill. You can adjust the fill and stroke properties of the component set to better suit your brand or style guide.
Add properties and values
Create and apply properties and values to your variants when you first create them, or as your design system evolves.
Learn how to create and apply properties and values
Fix conflicted value errors
All variants within the component set will use the same properties and values, but each variant needs to be a unique combination of them.
If any variants have the exact same combination of values, Figma will let you know that there is a conflict. You'll see this error even if the variants themselves are visually different.
To resolve this issue, you'll need to add or update the values of the affected variants, so they have a unique combination of values.
Add more variants to a component set
Continue to add variants to your component set using any of the following methods:
Select a component set and click
in the right sidebar.
Select a component set and click
just below the component set.
Duplicate existing variant using the keyboard shortcut:
Mac
⌘ Command
Windows
Ctrl
Drag other components into the component set to add them as variants.
Tip
Dragging in other components won't reflow existing variants. You can use smart selection to adjust the layout of your variants.
Learn more about smart selection
Caution:
When you add an instance with variants to a file, Figma will import every variant in that component set. Importing large component sets will impact Figma's speed and performance.
Manage variants
Organize variants
When you add new variants to a component, Figma's default behavior is to add variants in a single column, with equal spacing between them.
If you have your components in another layout before converting them, Figma will keep the same layout for the component set.
You can override Figma's default behavior and arrange variants in any way you choose.
Select a variant and move it to new co-ordinates within the component set. Figma will allow you to place variants anywhere within the component set, including over the top of other variants.
Adjust the dimensions of the component set in the right sidebar, or resize it in the canvas like you would a regular frame.
With all variants selected: Use the fields in the right sidebar to adjust the
horizontal and
vertical space between variants.
Note
Figma will use the variant in the top-left corner as the default variant. This variant will represent the entire component set in the
Assets
tab of the left sidebar.
Manage properties and values
You can
rename and reorder
properties and values anytime after creation. Remove properties you no longer need.
If you reorder properties, Figma will adjust the name and syntax of your variants to match.
If you've converted your existing components to variants, you'll need to rename your properties to make them more descriptive.
Fix corrupted variant errors
You will get a corrupted variant error if any of your variants do not follow this syntax. This can happen if you mistype a property or value, or use an invalid naming structure when converting existing components.
To fix this issue, you'll need to rename the properties and values of the variant. While it's possible to rename them using this syntax in the layer name, we recommend renaming properties and values in the right sidebar instead.
Tip
Use
multi-edit
to speed up your workflow when editing component sets. While editing variants in with multi-edit enabled, matching objects also get the same edits without needing you to take extra steps to select them.
Publish component sets to a library
Users on paid plans can publish component sets to a
library
to share them with collaborators.
Publish component sets alongside your styles and regular components to allow members of your team or organization to use them.
Component sets appear in the assets tab alongside your other components. Figma will use the variant in the top-left corner of the component set as the default variant.
Collaborators can then drag the component set into their files to create an instance. They can then access all the other variants in the component set by configuring the property values in the right sidebar.
Are you a member of a Figma Organization?
Design system analytics
allow you to see how members of your organization are using components and variants.
Use variants
Component sets appear in the assets tab alongside any regular components. So instead of looking for a specific variant in the assets tab, you only need to select the component set.
Once you have an instance of that component set on the canvas, you can configure the instance's property values to select a variant.
Select component sets
Click on the
Assets
tab in the left sidebar, or use the keyboard shortcut:
Mac
⌥ Option
Windows
Alt
Click on a component set and drag it on to the canvas. Figma will create an instance of the default variant of that component set.
View the component set's name and properties in the right sidebar.
Use the dropdowns next to the property to select your preferred combination of values.
Turn specific properties off and on using the toggles.
Configure variants
Select other variants in a component set by configuring the properties and values in the right sidebar.
Select the instance.
View the name of the component in the right sidebar. If the component has variants, you'll see fields underneath the component name to configure the properties and values of that component set.
Use the dropdowns next to the property to select your preferred combination of values.
Turn specific properties off and on using the toggles.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all paid plans
Requires a
Full or Dev seat
Dev Mode allows developers to see when a frame or component was last edited and compare changes made at different points in its version history. Since the handoff between design and development can be iterative, being able to compare changes and version history brings clarity to the process. With compare changes, you can always track the latest updates and keep production code accurate.
Compare changes
If a frame or component has been updated since you last viewed it, you can compare its version history. You can also compare detached components, or instances with design overrides against the base component.
Select a top-level frame or component.
Tip:
Hold
Shift
and click to select two components on the canvas to compare them with each other.
In the Inspect tab of the right sidebar, click
Compare changes
Version history
View a timeline of the file’s history, including saved and autosaved versions. Click on a previous version to compare with the current version. Version history is only shown when comparing a top-level frame over time.
View edited layers
Under
Layers
, you can view how an asset’s individual layers have changed over time. Layer changes are labeled as one of the following:
Edited:
The layer was edited between the current and selected versions
Added:
The layer was added between the current and selected versions
Deleted:
The layer was deleted between the current and selected versions
Clicking on a layer in the list zooms in to the selected layer in the side by side or overlay view.
Side by side
A side-by-side view of the selected version and current version of an asset. Adjust the modal’s zoom settings using the
zoom in and
zoom out buttons on the right.
Overlay
An overlay view of the current frame version on top of the selected version is helpful for making smaller edits stand out. Use the slider on the right to adjust the current frame’s transparency or click
to toggle its visibility. Adjust the modal’s zoom settings using the
zoom in and
zoom out buttons on the right.
Compare code
When you select an edited layer, you can view updated code between the previous version and the current version. This is helpful for making sure your codebase is aligned with the most recent designs.
Use the dropdown to select your preferred language for the code panel, and click
to select your preferred unit.
Learn more about using code snippets in Dev Mode →
Compare properties
When you select an edited layer, the updated properties are displayed, along with the assigned values from the previous version and the current version.
Compare changes in focus view
When focused on a design in Dev Mode, you can take advantage of the version history in the focus view to compare changes. When you compare changes, the interface is the same as detailed in
Compare changes
To compare changes while in focus view:
Open a Figma Design file.
On the canvas, for the design you want to focus on, click the dev status indicator and select
Show in focus view
While nothing is selected, the focus view displays the version history on the right side of the view.
For the version that you want to compare with the latest, click
and select
Compare to latest version
Optionally, to get a link to the focus view that you can share with others, click
Copy link
Learn more about focus view →

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all plans
Available in Figma Design and Figma Sites. You can also access auto layout from design mode in Figma Slides and Figma Buzz.
Anyone with
can edit
access to a file can use auto layout
Auto layout can be used on frames so that designs will respond dynamically to content changes, saving you time and making your designs responsive and adaptable.
Elements in an auto layout frame are automatically arranged in a frame based on direction, spacing, padding, alignment, and other auto layout properties. When the content changes or elements are added, removed, or resized, the layout adjusts without requiring manual repositioning.
Use auto layout to create responsive designs, such as:
Buttons that grow or shrink as you edit the text label
Lists that adapt as items are added, removed, or hidden
Bento boxes and dashboards
A webpage that fits different screen sizes
Add auto layout
To start using auto layout on designs, select one or more layers and press
⇧ Shift
or click
Add auto layout
from the right sidebar. Figma will try to determine which
auto layout flow
—vertical, horizontal, or grid—you want to use. You can switch to a different flow at anytime.
Learn more about toggling auto layout on designs.
Choose an auto layout flow
Once auto layout is being used on a frame, you can choose from three options to determine the flow and arrangement of objects in the frame:
Vertical
Horizontal
Grid
Horizontal and vertical
The
Vertical
option places objects in your frame along the y-axis. Any objects you add, remove, or reorder will follow the y-axis. For example: Multiple list items in a to-do list, or posts within a newsfeed or timeline.
The
Horizontal
option places objects in your frame along the x-axis. Any objects you add, remove, or reorder will follow the x-axis. For example: A row of buttons, or icons in a mobile navigation menu.
When you have the horizontal selected,
Wrap
becomes available. Wrap pushes any overflowing objects to the next line in your frame.
The horizontal and vertical auto layout options also have additional properties like resizing, spacing, alignment, and more.
Learn more about the horizontal and vertical auto layout flows.
Grid
open beta
🚧 The grid option for auto layout is currently in
open beta
. Some functions and settings may not yet be available to grid. The feature may change and you may experience bugs or performance issues during the beta period.
The
Grid
option places objects in columns and rows, allowing you to create galleries, bento boxes, and dashboard layouts that respond and resize to different frame sizes.
Unlike the wrap setting for horizontal and vertical flows, objects in a grid don’t wrap to the next line. Instead, they are placed in a “grid” and have the option to span multiple rows or columns.
Grid auto layout frames will also have additional properties like column and row resizing, span, and more.
Learn about how to use the grid auto layout flow.
Adjust spacing properties
The types of properties available on your auto layout frame will depend on which auto layout flow is being used. However, all flows share a couple of key spacing properties:
Padding
is the empty or white space between the edge of a parent auto layout frame and its objects. You can set padding uniformly, vertically and horizontally, or have different values for top, right, bottom, and left padding.
Gap between
is the distance or distribution between objects in an auto layout frame. Use number value specify exactly how far apart you want objects to be. Or, for vertical and horizontal auto layout frames, you also have the option to set the gap between items to
Auto
so that objects have the largest distance from each other as possible.
Tip
: To learn more about properties specific to each auto layout flow, check out their respective help articles:
Horizontal and vertical flows in auto layout
Grid flow in auto layout
Adjust responsiveness with resizing
Note
: While grid is in beta, the
grid option
may be limited in in resizing properties and functionality.
One of the most powerful functions of auto layout is its ability to make objects adapt their dimensions to the settings and objects around them using the resizing property. You can set resizing behavior on a parent auto layout frame to determine how it resizes based on changes made to its contents, and vice versa.
Resizing settings can be applied on both the X and Y axes using the
width
and
height
dropdown menus in the right panel.
When you hover over a resizing option from the dropdown, lines appear on the canvas to indicate how the bounding box of the design will resize and change.
Resizing property
Can be applied to…
Dimensions behavior
Hug contents
Auto layout frames
Object resizes based on its child objects
Fill container
Child objects of auto layout frames
Object fills all available space
Fixed width / height
Both
Object stays fixed
Minimum width / height
Both
Object is equal to or greater than the minimum
Maximum width / height
Both
Object is equal to or lesser than the maximum
Hug contents
Use
hug contents
on any auto layout frame, so it keeps the smallest possible dimensions around its child objects while respecting any spacing values.
For example, let’s say you have a text layer that is 40px wide inside of a frame that uses auto layout. The frame’s padding is set to 10px on the left and right sides. Since its resizing is set to hug contents, the frame’s width is 60px. If the text layer gets updated and is now 50px wide, then the frame’s width will change to 70px.
Hug contents can be applied only to auto layout frames.
Tip
: Double-click the vertical or horizontal edge of an auto layout object's bounding box to set it to
Hug contents
Note:
If any child objects within an auto layout frame are set to
Fill container
, the parent frame will no longer hug contents and become
Fixed
for the axis.
Fill container
Layers set to
Fill container
stretches to occupy all available space in their parent frame, while respecting any spacing values.
Fill container can be applied only to child objects of auto layout frames, and is not available for top-level frames.
Child objects of an auto layout frame will also be set to
Fill container
if they are manually resized to the full available space of the parent frame.
Tip
: Hold
⌥ Option
Alt
and double-click the vertical or horizontal edge of an auto layout object's bounding box to set it to
Fill container
Fixed width or height
Set a
Fixed
width or height on a layer to make sure its dimensions stay fixed and unchanged, regardless of changes to surrounding spacing values and to child, parent, or sibling objects.
Fixed can be applied to any auto layout frame and its children.
If you manually resize a layer, or specify a value to its width or height field, then the resizing property will be set to fixed on the respective axis.
For example, let’s say you have a button component that uses auto layout, and its width is set to hug contents. If you enter a value like
125
into the width field, the resizing property will change to
Fixed width
Minimum and maximum dimensions
Note
: Minimum and maximum dimensions is an additional setting that can be used at the same time as other resizing properties.
Set minimum or maximum width and height to any auto layout frame and its children.
Open the
Width
dropdown to find
Add min width
and
Add max width
Open the
Height
dropdown to find
Add min height
and
Add max height
Select an option from the Width or Height dropdown menu. From the new field that appears, enter a value or use the dropdown to apply a number variable.
If an object contains a min or max setting, its respective width or height icon will gain two lines, one on each side. You can hover over these icons to preview the dimension limits on canvas.
When you deselect and reselect an object, its min and max dimension fields will be hidden from the right panel. To access them again, click on the width or height icon.
To remove a min or max setting, open the
Width
Height
dropdown and choose
Remove min and max
Ignore auto layout
Note:
Ignore auto layout was formerly known as absolute position. The feature has a new name, but it still works the same.
An object with
Ignore auto layout
enabled is excluded from an auto layout flow while keeping it in the auto layout frame. The object and its surrounding siblings ignore each other, even as they resize and move.
Much like absolute position in CSS, an object that ignores auto layout can be placed precisely where you want relative to its parent container.
Objects with ignore auto layout enabled are treated as objects in a regular frame. This means you can apply
constraints
to determine how they respond when its parent auto layout frame resizes. Other auto layout settings, such as resizing and layout options, aren’t available to these objects.
You can have an object ignore the auto layout flow by doing one of the following:
Select a child of an auto layout frame, and click in the right panel
Drag an object into an auto layout frame while pressing  ⌃ Control.
Nest auto layout frames
The true power of auto layout's responsiveness emerges when combining resizing behaviors across nested auto layout frame.
Nesting refers to the act of placing a layer inside of another layer, such as placing a button inside a component, or a shape inside of a frame.
Nesting an auto layout frame within another auto layout frame allows you to combine horizontal, vertical, and grid auto layout options to create complex interfaces. The nested frames will have both parent and child properties, each frame with its own separate padding and gap-between values, allowing us for multi-dimensional layouts with elements that flow in different directions and arrangements.
Learn how to create multi-dimensional auto layout flows.
Considerations with other features
Constraints
You can't apply constraints to child objects in an auto layout frame, unless the object
ignores the auto layout flow
. Instead, you can use the resizing property to define how objects respond as the frame, or the objects in the frame, resize.
You can still apply constraints to the auto layout frame itself if it's nested within a regular frame. The
Constraints
section and resizing options will appear, allowing you to set both the constraints for the Auto layout frame and the resizing behavior for any objects within it.
For example: Let's say we a habit logging app where each habit gets an analytics screen containing a calendar history of habit completions and a panel at the bottom for notes on any given day. This screen uses auto layout, but the notes panel ignores the auto layout flow. We can use set constraints
Bottom
and
Left and right
to make sure the notes panel responds correctly when its parent frame is resized.
Learn more about constraints.
Components and instances
As components are frames, you can add auto layout to them. You will need to add auto layout to each component individually. There isn't currently a way to add auto layout in bulk.
Action
Main component
Instance
Adjust vertical and horizontal padding
Adjust gap between
Reorder layers
Add new layers
Delete or remove layers
(Hides layer only)
Want to add icons to instances?
We recommend adding a placeholder icon, with 0% opacity, to the main component. You can then swap out the icon for another component in your library.
Prototypes with auto layout
There are a few things to be mindful of when creating prototypes with auto layout.
Smart animate transitions do not take into account the background of a frame. If you want to use a
Slide in
Move in
transition with smart animate, you will need to add a background. You can create a rectangle within a regular frame and place your auto layout frame within it. Learn more about
slide in and move in transitions
To apply scrolling overflow to a frame, you need to have content to extend beyond the frame's bounds.
As an auto layout parent's dimensions are content-driven, it will resize to fit the objects. To replicate scrolling overflow you will need to put the auto layout inside a regular frame.
Note:
Presentation view supports scrolling of long frames by default. You will only need to use this workaround when you want to clip content.
Text layers, max height, and max lines
Text layers cannot have both a
max height
and a set number of
max lines
. Adding a max height will set max lines to Auto. Setting max lines to a number will remove the layer’s max height setting.
Learn more about max lines
Text resizing
Text layers also have their own resizing properties. Within an auto layout frame, this may produce some useful results.
If you want your auto layout frames to be completely fluid, we advise against using fixed size text boxes. Fixed size text layers won't resize to accommodate your text, which may cause overlap between layers in an auto layout frame.
Learn more about text resizing.
Keyboard shortcut guide
Basic shortcuts
Action
Mac
Windows
Add auto layout
⇧ Shift A
⇧ Shift A
Suggest auto layout
Ctrl
⇧ Shift A
Ctrl
Alt
⇧ Shift
Remove auto layout
⌥ Option
⇧ Shift A
Alt
⇧ Shift A
Edit padding on all sides (from right panel)
⌘ Command
+ Click padding input field
Ctrl
+ Click padding input field
From the alignment box
Click the alignment box in the right panel and press the following keys to:
Action
Mac and Windows
Set alignment
Set alignment to edge
Toggle baseline alignment
Toggle gap between
From the canvas
Use these keyboard shortcuts while dragging on-canvas handles to:
Action
Mac
Windows
Set padding on opposite sides
⌥ Option
Alt
Set padding on all sides
⌥ Option
⇧ Shift
Alt
⇧ Shift
Set padding or spacing with big nudge
⇧ Shift
⇧ Shift
Use these keyboard shortcuts and click specific areas in an auto layout frame to:
Action
Mac
Windows
Input padding value on opposite sides
⌥ Option
+ Click padding area
Alt
+ Click padding area
Input padding value on all sides
⌥ Option
⇧ Shift
+ Click padding area
Alt
⇧ Shift
+ Click padding area
Set hug contents
Double-click vertical or horizontal edge
Double-click vertical or horizontal edge
Set fill container
⌥ Option
+ Double-click vertical or horizontal edge
Alt
+ Double-click vertical or horizontal edge
Resources
Articles
Article
Toggle auto layout on a design
Ready to start using auto layout? Learn how to use auto layout on frames and layers so that you can start making your designs responsive.
Article
Use the horizontal or vertical flows in auto layout
Learn about the properties available to the horizontal and vertical flows in auto layout.
Article
Use the grid in auto layout flow
Learn how to work with columns, rows, and cells with the grid layout flow.
Article
Create multi-dimensional auto layout flows
Combine multiple auto layout flows to build fully responsive components and screens.
Projects and hands-on learning
Figma tutorial playlist
Learn to create flexible designs and components
This playlist includes video tutorials that cover the basics of auto layout, how to apply auto layout to designs, and hands-on tutorials for more practice.
Community file
Auto layout playground
Grab a copy of the auto layout playground file to practice while you learn.
Community file
Grid playground
Grab a copy of the grid auto layout playground file to practice while you learn.
Project
Create a responsive card with auto layout and constraints
In this project, learn how to a responsive card design for a podcast app using auto layout, constraints, components, and shape tools.

--- Who can use this feature ---
Who can use this feature
Available on the
Organization and Enterprise plans
Requires a
Full or Dev seat
Code Connect is the developer bridge from your component codebase to Figma. With Code Connect, bring your design system component code directly into Figma's
Dev Mode
. Preview example components that mirror the framework of your production code.
Note:
This is a general overview for approaching Code Connect as an organization. For implementation details and code samples, see the
Code Connect developer documentation
When using Code Connect, Dev Mode displays real world code snippets defined by your design system instead of the autogenerated code snippets that Dev Mode provides by default. In addition to connecting component definitions, Code Connect can also map properties from code to Figma, enabling dynamic and correct snippets.
Code Connect is especially useful when you have an existing design system and want to drive consistent and correct adoption of that design system across design and engineering.
Overview
The exact steps you take to set up Code Connect depend on the architecture of your design system and codebase. For example, if you use SwiftUI, you'll plan your approach to use the SwiftUI resources we provide.
Generally, your organization will follow these steps to get started:
Plan the implementation.
Usually this includes:
Identifying the requirements of your front-end developers, such as whether you need support for React or SwiftUI.
Identifying the components in your codebase that you want to integrate with Dev Mode.
Planning the configuration of Code Connect and the mappings of your components.
Get the Code Connect repository.
Code Connect supports:
React (or React Native)
HTML (Web Components, Angular, Vue, etc.)
SwiftUI
Jetpack Compose
Implement the component mappings.
The exact way you build the mappings will depend on your codebase and design system, but broadly the process involves mapping properties from your design system components to properties in Figma. This allows Code Connect to generate snippets of code that map the values in Figma to the architecture of your components, and then surface those snippets inside Dev Mode.
Review in Dev Mode.
In Dev Mode, review the Code Connect output with your developers and designers to ensure the practical usability of the component examples and that the representations are accurate.
To take full advantage of Code Connect, the developers responsible for your design system components should work with your designers to implement the mappings from your production codebase to Figma.
What's available?
To get started with Code Connect, check out the detailed steps we provide in the
Code Connect developer documentation
Code Connect supports:
React (or React Native)
HTML (Web Components, Angular, Vue, etc.)
SwiftUI
Jetpack Compose
Additionally, Code Connect provides some advanced features:
Integration with Storybook
Custom parsers
Template API
The
Code Connect repository
is available on GitHub.
Privacy and Code Connect
Figma only collects the minimum data needed to enable Code Connect in the interface. When you run
figma connect
using the Code Connect command-line interface, Figma gets the following data:
The paths for components that are added
The repository URL where the Code Connect components are implemented
The properties and code in the .figma files
Figma logs only basic events for understanding Code Connect usage: when components are published or unpublished, and calls to get Figma data when using the command-line interface.
For more information about Figma's approach to privacy, see Figma's
Privacy Policy

--- Who can use this feature ---
Who can use this feature
Available on the
Organization and Enterprise plans
Only people with a
Full seat
in an organization or workspace can access the branching feature
Anyone with access to the main file can
share branches
This article covers one step in the branching process:
Create
Share
Update
Request
Review
Merge
Manage
If you're working on revisions or iterations on a branch, you may want to share your progress with other designers and collaborators.
Everyone with access to the main file can view and explore branches of that file. You can also share branches with other collaborators to allow them to view or edit their contents.
Giving someone
can view
can edit
access to a branch also gives them view access to the main file.
There are a few ways to share branches.
Main file
Anyone with
can view
access to the main file can view any branches on that file.
Click the
next to the main file name in the top left.
Select
See all branches
to open the branches modal.
Click the
next to the branch name, then select
Copy link
Tip:
You can tell if a file link is for a main file or a branch as all branches will include a
/branch/
variable in the URL followed by a unique ID string for that branch.
Share link
Share a branch link and control access to the branch using link sharing.
Open the branch.
Click the
Share
button in the top right.
Click
Copy link
to add the branch link to your clipboard.
Caution
: The
Allow viewers to copy, share, or export from the file
setting
must be enabled for viewers to create branches. If this is disabled, viewers won't see the option to create or edit branches.
Invite to branch
Invite a collaborator to the branch with specific permissions.
Click the
Share
button in the top-right corner.
Enter the collaborator's email in the email field.
Click
to adjust their permissions.
Select
can view
to give them view-only access to files in that project.
Select
can edit
to give them edit access to any files in that project.
Click
Invite
to send an email invitation to their address. If they're already using Figma, they'll get an in-app notification as well.
Tip:
You can also copy a link to a branch from the branches modal.
View and manage branches →

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone with at least
can view
to a file can use comments
Comments takes collaboration to the next level. You can use comments to respond to feedback, tweak your designs, and iterate faster—all from the original design file.
You can add comments to design and
FigJam files
or prototypes from a browser or the
Figma mobile
and desktop apps.
Browser and desktop app
Click
in the toolbar, or press
to enter comment mode. Your cursor will turn into a
Figma and FigJam mobile apps
Leave and view comments from anywhere with our mobile apps.
If you’re using the Figma mobile app, long-press any area of the canvas to add a comment. Learn more about
commenting in the Figma mobile app →
If you’re using the FigJam app, long-press any area of the board and select
Add a comment
from the menu. Learn more about
commenting in the FigJam app →
View comments
When you and your team add comments to a file, they're displayed on the canvas or board in the regions or locations they were added to. You can view and reply to them right from the canvas or board. On the browser and desktop apps, you can also view and manage comments from the right sidebar when you enter commenting mode. Comments can be hidden from your canvas or board view at any time.
Note:
When you're in comment mode, you won't be able to make any changes to objects in the canvas. Press
Esc
or select another tool to continue editing a file.
Learn more about comments in the articles linked below.
Make comments
Comment on Figma Design files
Comment on FigJam files
Comment on prototypes
Comment using the Figma mobile app
Mention a collaborator
Add emoji to a comment
Manage comments
Visit our
View and manage comments
article for instructions on how to:
View comments
Dock comments
Hide comments
Sort and filter comments
Reply and react to comments
Resolve comments
Delete comments
For information on managing your comment notification settings, visit the following articles:
Adjust comment notification settings
Manage comments on your Figma Community files, plugins, and widgets
Edit comments
Edit the content of a comment
Change the location of a comment

--- Who can use this feature ---
Who can use this feature
Available on
all plans
Requires
can edit
access
In Figma Design,
Actions
helps you go from imagination to reality, faster. Click the
icon in the Figma Design toolbar to:
Access Figma AI tools
Use common productivity actions
Search for assets
Access plugins and widgets
Tip:
You can also open the actions menu using
Command
on MacOS or
Control
on Windows.
Access Figma AI tools
Note
: Figma AI is launching in
limited beta
, so you might not have access to it in your account just yet. These features are currently free while in beta, but usage limits may apply. When made generally available, we’ll update you on pricing.
Figma AI helps you get started faster, find what you're looking for, and stay in the flow. When you open
Actions
, Figma shows you a collection of AI-powered design, writing, and image tools.
Make designs
: Transform ideas into editable designs in a couple of minutes.
Make prototypes
: Quickly turn your designs into an interactive prototype.
Rename layers
: Organize your file by giving all your layers meaningful names with a click.
Replace content
: Replace placeholder or duplicate text with unique, realistic content.
Riffing and writing
: Rewrite text to give it a different tone, translate it to another language, or shorten it to fit your designs.
Generate images and remove backgrounds
: Generate unique images using a written prompt, or remove an image’s background to isolate the main subject.
Use common productivity actions
Actions
offers a fast and easy way to access features in Figma Design.
Type relevant keywords into the
Search
field to quickly find the action you need. For example, typing ‘align’ will show all alignment-related actions.
Here are a few of the most common actions you can take in files:
Layer operations
Collapse layers:
Collapse all layers in the layers panel
Frame selection:
Create a frame around the selected objects
Rename selection / Rename layers:
Change the name of the selected layers or objects
Mark as ready for dev
: Set a design as ready for dev and add it to the summary view in Dev Mode
Selection and styling
Select matching layers:
Selects matching layers so you can
edit them in bulk
Select all with same instance:
Select all instances of the same component
Select all with same font:
Select all text layers using the same font
Select all with same fill / stroke / effect / properties:
Select all layers with the matching properties
Editing tools
Rasterize selection:
Convert vector objects to raster images
Paste to replace:
Replace the selected object with the copied content
Flip horizontal or vertical:
Flip the selected object horizontally or vertically
Place image/video:
Insert external images or files onto the canvas
Detach instance:
Detach the selected instance from the main component
View and navigation
Show or hide layout guide:
Show or hide layout guides in frames
Show or hide rulers:
Show or hide rulers on the canvas
Use dark mode:
Switch between light and dark mode
Show or hide UI:
Toggle the visibility of interface elements like the left and right sidebars, and toolbar
Show version history:
Display the version history of the file
File management
Save local copy:
Save the current version of the file to your device
Export:
Export selected items
Preferences
Snap to pixel grid:
Enable or disable snapping to pixel grid
Nudge amount:
Adjust your small and big nudge settings
Keyboard shortcuts:
View keyboard shortcuts in Figma
Search for assets
The
Assets
view uses Figma AI to help you track down designs from across your team or organization by starting a search using part of a design, a screenshot, or just a description.
Learn more about finding assets using AI →
Note
: If you don’t have access to the Figma AI
limited beta
yet, or if an admin has disabled Figma AI, you won’t be able to search for assets using AI—but you can still use the
Assets
view to search for components by name.
Find similar designs
Select an object on the canvas, like an image or part of a design. Then, open
Actions
and click
Find more like
to search for matching objects from across your team or organization.
If you’ve selected a screenshot, Figma will match the screenshot to the original editable designs.
Search via description
Click the
Assets
tab and enter a description to search for a component or other design.
For example, searching ‘icon that looks like a teardrop’ in Figma’s own organization surfaces the
blend modes
icon.
Access plugins and widgets
Plugins and widgets are third-party scripts or applications that extend the functionality of Figma Design. Use plugins and widgets to customize your experience or create more efficient workflows in your files.
Plugins
are only visible to the person who runs them
Widgets
are objects that can be added to a canvas, allowing everyone within a file to interact with them

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Requires a
Full seat
on paid plans
Anyone with
can edit
access to a file can use Figma Draw
Add personality and artistic flare to your designs with Figma Draw. Figma Draw lets you access illustration tools like
brushes
transforms
, and
textures
, directly inside a Figma Design file.
Want more hands-on experience using Figma Draw? Grab a copy of the
Figma Draw playground file
to practice while you learn.
Enter Figma Draw
Figma Draw is a set of visual design tools within the Figma Design editor. To open Figma Draw, click
Draw
in the toolbar.
Note:
If you don't see the
Draw
option in the toolbar, make sure you have
can edit
access to the design file.
Navigate Figma Draw
While using Figma Draw, the toolbar and sidebars change to provide a set of illustration-focused tools and properties.
The toolbar
The toolbar changes to give you quick access to the
Pen
Brush
, and
Pencil
tools.
The right sidebar
The right sidebar changes to a more streamlined view of illustration-related properties, with slider controls that help you balance artistic feel with pixel-perfect adjustments. You can also access
transforms
from the right sidebar while in Figma Draw.
The left sidebar
The
Layers
section in the left sidebar displays an enlarged visual preview of the layer’s contents. Double-click on the layer preview to zoom directly to that layer on the canvas.

--- Who can use this feature ---
Who can use this feature
Available on
paid plans
Only people with
can edit
access to the file, and at least
can view
access to affected libraries
Swap libraries lets you ‌quickly update instances in a file so they use components from another library. Use swap library to:
Use a different or newer version of a library
Swap to external or agency-provided libraries
Manage instances from missing or unpublished libraries
Note:
Library swap currently supports swapping components and styles, but not variables. However, if you swap a component or style out for an asset that contains variables applied to it, the variable will remain attached to the asset. You can also head to the
Figma Community
to find plugins that allow you to swap variables between libraries.
How does swap library work?
Swap library lets you replace styles and component instances in a current file with those of another published library. You can swap any library you have at least
can view
access to.
Swap library only works if the assets you want to replace originate from a different library. In other words, you cannot replace assets that live in the same file as their main source by swapping them with another library.
When swapping, Figma looks for any styles and components in the selected library with matching names. This includes components sets and the variants within them.
If you've deleted components, or recreated them with different names, Figma won't recognize or match these components.
Unmatched assets
If a matching style or component isn't found in the selected library, Figma won't swap those assets and they'll remain connected to the original library.
You can choose to ignore these styles and instances, delete them from the file, or manually swap instances using the
Instance menu
Swap between component instances →
Swap or override styles
The
Swap default styles in instances
setting allows you to control how styles are applied to instances and whether they'll be treated as overrides.
Checked
: Figma applies matching styles to instances as overrides. If you swap the instance via swap libraries, the applied matching styles will be preserved.
Unchecked
: Figma applies matching styles to instances as normal. If you swap the instance via swap libraries, the applied matching styles will not be preserved.
If you're swapping to an updated version of a library or replacing a missing library, you'll likely have both styles and components available for swap. If you want to swap only the instances and continue using the styles defined on the main components, leave this setting unchecked.
The swapped instances will continue to receive updates from their main components and any changes you applied to them via swap libraries will be overwritten.
Regardless of whether this box is checked, Figma will preserve any overrides—which aren’t related to swapped styles—applied to instances.
Learn more about override preservation →
Swap between libraries
Swap styles and components in the current file with instances from another library. This replaces instances with matching instances from another library.
Before you swap, make sure:
The current file you're working from contains at least one instance or style that you wish to swap, and the asset is from a different library.
Both libraries involved in the swap (the library being replaced and the soon-to-be-used library) are published to team libraries.
Any assets you wish to swap have matching names.
To swap between libraries:
Select the
Assets
tab in the left sidebar.
Click the
Library
icon to open the
Libraries
modal.  The icon’s tooltip may read
Review library updates
if there are updates to libraries you are using in the file, or
Review unpublished changes
if you have unpublished updates in your file.
Select
This file
and locate the library you want to replace.
Select the library and click
Swap library
at the bottom of the modal.
From the
Choose library
dropdown, find a select a replacement library.
View libraries available to the entire organization
Explore published libraries by team
Figma looks for any styles and components with a matching name. Use the checkboxes on the left to choose which assets to swap.
If a matching style or component is found, the box next to the asset is checked and you'll see a preview in the selected library.
If no matching styles or components are found, the box is unchecked and you'll see a
None found
message.
If there are incorrect or undesired matches, use the checkbox to remove the asset from the swap.
Decide whether to apply matched styles as overrides using the
swap default styles in instances
setting.
Check to apply matched styles as overrides.
Leave unchecked to swap instances and use the default styles defined on the main components. Figma will preserve any supported overrides you've applied (default).
Click
Swap library
to replace assets with assets from your selected library.
Manage missing libraries
Styles and instances can be disconnected from their library when the original file is unpublished, deprecated, or moved to a team you can't access.
Use the library modal to view styles and instances in the current file that aren't connected to an active library. Then use
Swap library
to replace any instances in the current file with instances from another library.
Figma matches styles and components by name only. It's not possible to manually select a new style or component, or match it to an asset with a slightly different name. Figma won't swap any styles and components without a match. You can also deselect any matched assets you don't want to swap.
Swap missing libraries
Before you swap to replace a missing library, make sure:
The current file you're working from contains at least one instance or style that you wish to swap, and the asset is from a different library.
The replacement library is published to team libraries.
Any assets you wish to swap have matching names.
Select the
Assets
tab in the left sidebar.
Click the
Library
icon to open the
Libraries
modal.  The icon’s tooltip may read
Review library updates
if there are updates to libraries you are using in the file, or
Review unpublished changes
if you have unpublished updates in your file.
From
This file
, scroll down and click
View missing libraries
at the bottom of the modal.
If there is more than one missing library, styles and components are grouped by their origin library along with details of the number of missing assets. Select a library to view the affected styles and components.
Use the
Choose library
dropdown to find and select a replacement library.
View libraries available to the entire organization
Explore published libraries by team
Figma looks for any styles and components with a matching name. Use the checkboxes on the left to choose which assets to swap.
If a matching style or component is found, the box next to the asset is checked and you'll see a preview in the selected library.
If no matching styles or components are found, the box is unchecked and you'll see a
None found
message.
If there are incorrect or undesired matches, use the checkbox to remove the asset from the swap.
Decide whether to apply match styles as overrides using the
Swap default styles in instances ↑
setting.
Check to apply matched styles as overrides.
Leave unchecked to swap instances and use styles defined on the main components. Figma will preserve any supported overrides you've applied (default).
Click
Swap library
to replace affected instances with instances from your selected library.
Undo swap library
You have a few options for reversing your changes:
If you're still working in the same session, undo the previous action by pressing
⌘ Command
⌃ Control
Swap the library back using the same method described above.
Restore a previous version of the library to a version before the swap.
If you checked "
Swap default styles in instances
" when swapping libraries, you can reset overrides to revert to the previous library.
Learn how to reset overrides →

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone with
can view
access can do view layer outlines
Viewing outlines in Figma Design is like putting an x-ray machine to your canvas, making it easier for you to inspect, select, and adjust hidden and nested layers.
View and select hidden or clipped objects
Select objects on the canvas that are behind other layers
View stroke details like inner, center, and outer placement
View all parts of a boolean operation
Show outlines
From the toolbar:
Open the
Zoom/view options
menu in the right side of the toolbar.
Go to
Outlines
Show outlines
In the same menu, you can choose if you’d like to
Include hidden layers
and
Include object bounds
You can also use the keyboard shortcut to enable and disable show outlines:
Mac:
⌘ Command
⇧ Shift
Windows:
Control
⇧ Shift
Note:
If you prefer to use
⇧ Shift
to toggle show outlines, open the main menu in the top left-corner and go to
Preferences
Use old shortcuts for outlines
. This setting will also change the keyboard shortcut for
outline stroke
⌘ Command
Control
⇧ Shift
Learn how to toggle layer visibility →

--- Who can use this feature ---
Who can use this feature
Available on
all plans
Anyone with
can edit
access to a file in a paid team has access to the component playground
Anyone with
can view
access to the file can use components from that library
New to components?
Guide to style and component libraries →
Components are UI elements that you can reuse across your designs.
The
main component
defines the properties of the element.
The
instance
is a copy of the component you can reuse in your designs.
There are a few ways to create and insert component instances into your designs:
From the
assets panel
in the left sidebar
From the
component details modal
, accessible from the assets panel
Using the asset tab of the
actions menu
copying or duplicating
an instance
Tip:
You can handoff component instances for development without reorganizing your file by
marking instances as ready for dev in Dev Mode →
Assets panel
The
Assets
panel in the left sidebar allows you to search for components to add to your file. You can choose which libraries are available in the
Assets
panel.
To open the Assets panel:
Select the
Assets
tab in the left sidebar, or use the shortcut:
Mac
⌥ Option
Windows:
Alt
Select a library with the component you'd like to use
Find the component you want to use
Click and drag the component onto the canvas to create an instance of that component.
Tip
You can customize the appearance of the Assets tab to match your preferences. Click
to switch between a grid or list view, and show or hide sub-folders.
Note
: Is the library you need missing from the Assets panel? Click
to browse available libraries in your team or organization and add them to your file.
Manage libraries for your drafts
Manage libraries in design files
Manage libraries in teams
Manage default organization libraries
Component details modal
The component details modal shows you:
The component’s documentation
The library it lives in
A preview of the component’s default state
If you have
can edit
access to a library in a paid team, you’ll have additional access to a component playground.
From the component playground, you can:
Preview the component’s variants
View and set component properties
View and set nested component properties, if
nested instances are exposed
View and change variable modes for any variables applied to the component
Insert the component onto the canvas
Select the
Assets
tab in the left sidebar, or use the shortcut:
Mac
⌥ Option
Windows:
Alt
Find the component and select it to open the component details modal.
Use the controls to configure your component.
To insert the instance, click
Insert instance
or drag the preview onto the canvas.
Quick insert from the actions menu
Insert instances of components from your keyboard using quick insert. Quick insert opens the Actions menu where you can find and view components from libraries that have been added to the file.
Use the shortcut
Shift
to open quick insert.
Use the
search
bar to find a specific component.
Tip:
Need to locate a main component from one of its instances? Right-click any instance and select
Go to main component
or use the keyboard shortcut:
Mac:
^ Control
⌥ Option
⌘ Command
Windows:
Control
Alt
Shift
Learn more about finding main components.
Copy or duplicate an instance on the canvas
Duplicate using the keyboard shortcut
If you're working in the same file, you can duplicate a component to create an instance. Duplicate using the keyboard shortcut:
Mac
⌘ Command
Windows
Ctrl
Drag to copy
You can also drag to copy a component within the same file:
Hold down
⌥ Option
for Mac or
Alt
for Windows and drag to create an instance.
Release the click
before
you release the modifier key. Otherwise, Figma will move the original component instead of duplicate it.
Copy and paste
You can copy and paste any component within the same file to create an instance.
Component instances and published main components can be copied and pasted across files.
Mac:
⌘ Command
and
⌘ Command
Windows
Ctrl
and
Ctrl

--- Note ---
Note
: The Figma feature "layout grid" has been renamed to "layout guide" as of May 2025, and is a different feature from the
grid option in auto layout
Layout guides are visual aids added to frames to ensure objects are precisely aligned and to help provide structure so we can keep designs logical and consistent across different platforms and devices.
Use layout guides to:
Establish consistency across multiple platforms
Make fewer decisions when defining layouts
Reduce the time taken to define layouts for mock-ups or wireframes
Support diverse layout techniques like galleries, icons, or entire page layouts
Tip
: Learn more about using grid systems in Figma Design in the blog post,
Grid Systems for Screen Design
Layout guide types
There are three types of layout guides: Uniform
grid
column
, and
row
Uniform grid
A uniform grid is square grid, useful when you require precision such as designing symbols or icons.
If you select a uniform grid, you can adjust its color and size.
Color
The default color of a layout guide is red (#FF0000), with an opacity of 10%. You can change the
Color
and
Opacity
of any layout guide.
Size
The size determines the pixel size of each square of the grid.
For example, in a default
10pt
grid, each square of the grid will contain be 10px by 10px, totaling 100 pixels per square.
Column and row
Columns
are vertical guides that span the height of a frame.
Rows
are horizontal guides that span the width of a frame. Both are ideal for designing responsive interfaces for web and mobile.
Both columns and rows have similar property types that you can adjust.
Color
The default color of a layout guide is red (#FF0000), with an opacity of 10%. You can change the
Color
and
Opacity
of any layout guide.
Count
Count
determines the number of columns or rows in your guide.
Click into the filed to type a number, or use the dropdown to choose from a number,
apply a variable
if any are available, or
Auto
Type
Column
types: Left, Center, Right, or Stretch.
Row
types: Top, Center, Bottom, or Stretch.
Stretch
allows the width of columns or height of rows to adapt their size whenever the frame is resized. When this type is selected, the width or height field in the layout guide settings window is disabled and set to
Auto
. Stretch also has a unique setting called
margin
The remainder of column and row types (left, right, top, bottom, and center) are sometimes referred to as “
fixed
”. This setting determines the side of the frame in which the layout guide begins.
For example, a column with a fixed type
Right
means the column will begin from the right side of the frame and make its way to the left side.
With fixed layout guides, you have the option to set the
width of columns or height of rows
, as well as their
offset
Height/Width
Set the
height
of rows or
width
of columns to define their exact size in pixels (px). Available for fixed types only (left, right, top, bottom, and center). The height/width field is disabled and set to auto for stretch types.
Offset (Fixed type only)
The
Offset
setting defines the pixel position where columns and rows begin. Offset is available for columns set to left or right, and rows set to top or bottom.
For example, if you have a
Row
layout guide set to
Bottom
with an offset of 16, the first row of your layout guide will begin 16px from the bottom of the frame.
Margin (Stretch type only)
Margin
defines how much space there is between either sides of your columns or rows and the frame in pixels (px). This setting is available for the
Stretch
type only.
Gutter (Stretch type only)
Gutter
defines how much space there is between each column or row and the frame in pixels (px). This setting is available for the
Stretch
type only.
Add and edit a layout guide
You can add a layout guide to any frame. Remember that components are also frames, so you can add them to components too.
To add a layout guide:
Select a frame.
Click
Add layout guide
in the
Layout guide
section of the right sidebar. A
uniform grid
will be applied to the frame by default.
To edit a layout guide, you can click on the
Layout guide settings
icon to change the layout guide type and adjust its settings.
Tip:
You can use one layout guide on its own or combine multiple layout guides to support more complex layouts. Learn more about
combining layout guides
Combine layout guides
As we mentioned above, you can add many layout guides to a single frame. This is handy when developing more complex Layouts.
For example, you can add both
Column
and
Row
layout guides for more control over vertical and horizontal alignment.
Select the frame you would like to add another layout guide to.
Click
next to
Layout guide
in the right sidebar.
Select the layout guide in the dropdown provided.
Define any other relevant properties.
Repeat to add more layout guides to the frame.
Hide or show layout guides
You can toggle the visibility of your layout guides. This is great for situations when you need to hide your layout guides, without removing them entirely. Layout guides will still work, even when they aren't visible.
To toggle the visibility for all layout guides in a file at once:
Open the
Zoom/view options
dropdown menu at the top of the right sidebar.
Click
Layout guides
to check (enable) or uncheck (disable) the setting. Or, you can press
Shift
on your keyboard.
To hide or show a specific layout guides:
Select the frame where the layout guide exists.
From the
Layout guide
section of the right sidebar, find the layout guide you want to toggle, and click
to show/hide it.
Create and apply layout guide styles
Once you have perfected the ideal layout guide, you can create a style to reuse it across your designs.
Learn more about creating styles.
Create a layout guide style
To create a new layout guide style:
Select a frame in the canvas with the layout guide(s) applied.
In the right sidebar, click
Apply styles
in the
Layout guide
section.
Click
Create style
Give the layout guide style a name and description.
Click
Create style
Apply a layout guide style
To apply a layout guide style:
Create or select a frame in the canvas.
In the right sidebar, click
Apply styles
in the
Layout guide
section.
Choose a layout guide style from the list to apply it to the frame.
Note:
Related Components will be determined by:
Select the frame you want to copy.
Click on the layout guide in the right sidebar.
When it is highlighted, use the keyboard shortcuts to copy the layout guide:
Mac
⌘ Command
Windows
Ctrl
Select the frame you want to apply the layout guide to.
Use the keyboard shortcut to paste the layout guide:
Mac
⌘ Command
Windows
Ctrl
Work with layout guides and constraints
For more complex designs, we need precision and flexibility to ensure our designs behave when resized.
Constraints are great at giving you a basic framework for where objects are positioned within a frame. When combined with layout guides, they provide the framework for a powerful layout system.
Learn more about combining guides and constraints.
8-point grid system
The 8-point grid system is a popular tool for designing UI layouts. It involves using multiples of 8 to define the placement of objects within your design.
You can use this system when designing for fixed constraints, like a mobile app. But it can also be a useful tool when designing responsive layouts.
There are two common methods for implementing the 8-point system:
Hard grid
: This involves placing objects on a fixed grid with 8-point increments. In Figma, this would involve applying a uniform grid to the frame with a size of
Soft grid:
This involves placing objects at distances from each other that are divisible by 8. This would involve applying a row or column layout guide with properties divisible by 8.
Learn more about the 8-point grid in this Spec.fm post.
Frequently asked questions
Can I toggle all layout guides at once?
Yes. This can be done from the View Settings menu in the top-right corner of Figma.
Learn more in the toggling layout guides section.
Why aren't my layout guides showing?
There are a couple of reasons why a layout guide may not be showing:
The layout guide has been toggled
off
in the right sidebar.
Layout guides have been toggled
off
globally.
The selected layer isn't a frame. Layout guides can only be applied to frames.
The frame has been rotated. Make sure your objects have their
rotation
set to 0º before applying a layout guide.
How do I copy layout guides?
You can copy a single layout guide and apply this to another frame. Or, you can create a layout guide style that can be reused across your designs.
Learn more in our layout guide styles section.

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone with
can edit
access to a file to create and edit text layers.
Lists are a great way to organize and emphasize related information. List items in Figma can either be ordered or unordered in the form of a numbered or bulleted list.
Figma currently supports up to
five
levels of indentation.
Bulleted lists
You can use bulleted lists to represent unordered sets of information. Figma bullets will keep the same styling at all levels of indentation. At the moment, bullets cannot be customized.
Create a bulleted list
Select the
Text
tool
in the toolbar or by pressing the
key.
Once in the text layer, there are a few ways to start a bulleted list:
Enter one
followed by a
Space
on a Mac or Windows.
Enter the keyboard shortcuts:
Mac:
⌥ Option
Windows:
Alt
In the right sidebar, under the Text properties section, you can click
to open the
Type details
panel. From the List style property, select
Bulleted list.
Tip:
You can use
⌘ Command
Shift
to turn an individual text selection or multiple text layers into a bulleted list.
Numbered lists
Numbered lists can be used to represent groups of ordered or sequential information. In Figma, numbered list counters rotate between numbers, alphabetical characters, and roman numerals with each indentation.
Create a numbered list
Select the
Text
tool
in the toolbar or by pressing the
key.
From within the text layer, there are a couple of ways to start a numbered list:
Enter one of the creation characters below followed by a
Space
Click
in the
Text
section of the right sidebar, then select
Numbered
list.
Tip:
You can use
⌘ Command
Shift
to turn an individual text selection or multiple text layers into a numbered list.
Format list items
Keep in mind that keyboard shortcuts will activate automatic list styling.
Using
⌘ Command
immediately after a list shortcut removes the default styling.
Indentation
Figma bulleted and numbered lists currently support
five
levels of indentation. To change a list item's indentation:
Increase indentation
Use
Tab
⌘ Command
Control
to increase the indentation of a line.
Pressing
Tab
will increase the indent again.
Decrease indentation
Use
Backspace
Delete
at the beginning of a list item to delete the counter, but keep the same level of indentation.
Each line's indentation can be decreased individually.
Use
Return
Enter
while on an empty list item to decrease indentation.
Spacing
List
List spacing
lets you control the distance between each line item in a bulleted or numbered list. By default, list spacing is set to
when creating a new list and for any existing text styles. Figma represents list spacing in pixels (px).
To adjust list item spacing:
Select text in a list or a text layer with only list text.
Use the
field to enter a px value in the list spacing field. Or hover above the icon and drag to
decrease (left)
increase (right)
the value.
You can also adjust list spacing from the
Type details
panel by clicking
in the
Text
section of the right sidebar.
Paragraph
Paragraph spacing lets you control the distance between paragraphs. This can increase or reduce the whitespace around text in your design. White space can help to focus the viewer's attention, as well as increase legibility and readability.
Figma represents paragraph in
pixels (px)
. Enter a px value in the paragraph spacing field. Or hover above the icon and drag to
decrease (left)
increase (right)
the value.
Note:
Figma will create a new paragraph when you use the
Enter
Return
keys. This is something to bear in mind if your
text resizing
is set to
Auto Width
Learn more about text properties →
Hanging quotes
Toggle hanging quotes to move a text layer's opening quotation marks outside of the bounding box.
Hanging lists
Toggle hanging lists to move bullet points or numbers of each list item outside of the bounding box. This aligns text content with the bounding box.
Learn more about formatting text →
List styling
Text color
The first character of the first item in the list sets the color for the bullets in the list
Following list items will take on the text color of the item preceding it
Stroke
Stroke properties are applied to the entire selected text layer.
Changes to the weight of your text will apply to the bullet associated with it.
Effects
Effects will be applied to the entire selected text layer. This includes any bullets and counters.
Tip!
Selecting the
No list property from the Type panel removes any current list styling from a text selection.

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Only people with
can edit
access to the file can make changes to a layer's position, dimensions, or alignment.
You can use your arrow keys to nudge the position of your layers. Figma allows you to set two default nudge amounts:
small nudge
and
big nudge
By default, small nudge is set to
and big nudge set to
. Both of these values are in resolution-independent points.
Adjust nudge settings
Click on the
menu.
Go to
Preferences > Nudge amount...
Enter your desired
Small nudge
and
Big nudge
in the fields provided.
Click outside the window or use the
icon to apply and close.

--- Before you start ---
Before you start
Who can use this feature
Anyone on
Education, Professional, Organization, and Enterprise plans
can use style libraries.
Users with
can edit
access to a file can create and edit styles.
Users with
can view
access to a published file can use styles from that library in files where they can edit.
Styles allow you to define a set of properties or attributes of an object. You can create styles for colors, text, effects, and layout guides and reuse them across your designs.
Apply a style to an object
Apply any styles created in the current file, or apply
styles from a published team library
Tip:
You can use the
eyedropper tool
to sample a color style and apply it to a selected layer.
Select the object(s) you'd like to apply a style to.
In the right sidebar, click the
Apply s
tyles
Apply s
tyles and variables
icon next to the property you want to update.
From the
Libraries
tab of the menu, you will see all styles created in the current file and any
styles shared via the team library
indicated by round thumbnails. The square thumbnails are
color variables
. Figma orders styles in the style panel accordingly:
Alphabetically by team name
Alphabetically by file name
Individual styles appear in the order they were created. Learn about
grouping and reordering styles
Use the All libraries dropdown to filter your styles and variables to those created in a specific library.
Search and select the style you want to apply to the selected object(s). The style picker can be viewed as a
list or
grid.
Tip!
If you aren't able to access styles from the properties panel, they may not be shared to your team library yet. Learn more about
managing and sharing styles
Use the color picker
You can also
use the color picker
to apply colors from styles to objects. This is handy for situations when you want to:
Create a custom color that matches some of a style's properties. For example, use a color from a style at only 50% opacity.
Apply a color style to an object or layer in a place that doesn’t support styles.
The
olor picker
allows you to switch between colors in the file (document colors) and from libraries added to the file. Click the On this page
dropdown to select a palette from an
added library
Caution:
When you select a style from the color picker, you are only setting the color, not applying a style.
Switch between styles
You can change the style that is applied to an object from the right sidebar.
Select the object(s) you'd like to update.
In the right sidebar, click on the style next to the relevant property.
Use the style picker to search for and select the new style.
Detach a style
When you detach a style from an object, that object will keep its existing properties. You can then make changes to those properties, as desired.
This is useful when using existing styles as the basis for future styles or iterations.
To detach a style from an object:
Select the object(s) you'd like to remove the style from.
In the right sidebar, hover over the relevant style.
Click the
detach style
icon when it appears.
You can now make any changes you want to the object, independent of the style.
Tip:
You can also edit any local style that's applied to an object by selecting the style to open the style picker, hovering over the style, and clicking
Share styles with libraries
When you
enable a library for a team
add it to an individual file
, Figma includes styles from that
library
in the style picker.
You can use any styles you have can view access to. You can only edit the style itself if you have can edit access to the original file.

--- Before you Start ---
Before you Start
Who can use this feature
Anyone on
any plan
Anyone with
can edit
access to a file can create and edit variables
Looking for more resources on variables?
Check out our guide to variables
Access the Variables modal
Use the
Variables
modal to create and manage:
Variable collections
Variables
Modes for variables
Variable groups
To access the
Variables
modal:
Deselect everything on the canvas by pressing
esc
or clicking the canvas.
From the right sidebar, find the
Local variables
section.
Click
Open variables.
You can click
Toggle sidebar
to see additional options in the variables modal.
Create a variable
From any collection, click
+ Create variable
Select a
variable type
from the dropdown.
Give the variable a name in the first column, and a value in the second column.
Tip
You can also create a variable using the
eyedropper tool
Each collection can have up to 5,000 variables.
To duplicate a variable, select one or more variables and press
⇧ Shift
Enter
To delete a variable, right click the variable and select
Delete variable
Tip
Those on Education or paid plans can add additional columns to store multiple values in a variable, allowing you to quickly switch between different contexts in designs. Learn how to
create multiple modes for variables
Create an alias
Create an alias for a variable to link its value to an existing variable. This allows you to implement design tokens and makes managing updates to your designs more efficient.
For example, say you have multiple color variables that reference the same color variable. If that color needs updating, you would only need to update the source instead of manually updating every instance of the color.
A variable can reference other variables of the same type.
To create an alias for a variable:
Open the
Variables
modal.
Right-click a variable’s value and select
Create alias
From the
Libraries
tab, choose a variable to set an alias. You can use the search bar to find a variable by name or browse through available libraries.
To detach an alias, hover over the value field and click
Detach alias.
Want to learn more about how aliasing works?
Check out the
Tokens, variables, and styles
lesson of Figma's Intro to Design Systems course.
Copy and paste variables
You can copy and paste variables to any collection, including collections in a different file.
Open the desired collection from the variables modal.
Select one or more variables.
Hold
⌘ Command
for Mac or
⌃ Control
for Windows to select multiple variables.
Hold
⇧ Shift
to select a range of variables.
Right-click the selection and select
Copy
From any collection, right-click and select
Paste
Edit a variable
Hover over a variable’s row and click the
Edit variable
icon to open its editing modal.
From there, you can:
Change the name of the variable.
Add a description to explain how the variable should be used.
Modify the values of the variable.
Add
code syntax
Hide the variable from publishing
Scope a variable
to limit which properties the variable can be applied to.
Scope a variable
Scope a variable to limit which properties the variable can be applied to. This reduces the guesswork when deciding which variables to use for your designs.
For example, if you scope a number variable to corner radius, the variable can only be applied to corner radius and won't appear as an option for any other supported properties.
Scoping is available for number, color, and string variables.
For number variables, you can scope:
Auto layout
Gap between
Padding
Corner radius
Font properties
Font weight
Font size
Line height
Letter spacing
Paragraph spacing
Paragraph indent
Layer opacity
Effects
Stroke
Text content
Width and height
For color variables, you can scope:
Effects
Frame fill
Shape fill
Stroke
Text fill
For string variables, you can scope:
Font family
Font weight or style
Text string
To scope a variable:
Right-click on a variable, or multiple variables, and select
Edit variable
. You can also click
Edit variable
, located to the right of any single variable.
Open the
Scope
tab.
Use the checkboxes to toggle the variable’s availability in that property. Check
Show in all
to make the variable available for all
supported properties
Add code syntax
Code syntax allows you to represent variables in code using valid variable names to support a seamless handoff experience. A variable’s code syntax will appear in code snippets in
Dev Mode
when inspecting elements using the variable. Currently, code snippets for variables are supported in CSS, SwiftUI, and Compose.
You can create one name per platform, including Web, Android, and iOS. This allows for up to three code syntaxes per variable.
To add code syntax to a variable:
From the
Code syntax
section of the the
Edit variable
modal, click
Add code syntax
From the dropdown, choose Web, Android, or iOS.
Use the input box to enter a variable name. A preview shows how the variable name appears in code snippets.
Tip:
In addition to viewing the code syntax, there are more ways to work with
variables in Dev Mode
. You can see variable details and suggested variables, and view local collections on the variables table.
Edit variables in bulk
To edit multiple variables at once:
Open any collection from the
Variables
modal.
Select multiple variables by using keyboard shortcuts:
Hold
⌘ Command
Control
and click to select individual variables
Hold
Shift
and click to select a range of variables
Right-click a selected variable and click
Edit variables
From the
Edit variables
modal, you can:
Scope variables, if supported by the variable type
Hide variables from publishing
Create and manage variable collections
A collection is a set of variables and modes. Collections can be used to organize related variables together. For example, use one collection to localize text in different languages, and another collection for spatial values.
Create a variable collection
To create a variable collection, go to the sidebar of the variables modal and click
More options
Create collection.
If a variable has not been created in a file, you will need to create a variable first in order to create new variable collections.
Tip
If your variable collection contains multiple variable modes, you can edit, reorder, and change the default mode my dragging the columns. Learn more about
variable modes
Rename a variable collection
To rename a variable collection:
In the sidebar of the variables modal, open the collections dropdown and choose the collection you want to manage.
Click
More options
and select
Rename collection
Delete a variable collection
Deleting a variable collection also deletes all of its containing variables. Any properties that were using the variables will no longer be connected to the variable and any existing modes. The variables and collection can only be restored by immediately undo-ing the action or by restoring an earlier version of the file.
To delete a variable collection:
In the sidebar of the variables modal, open the collections dropdown and choose the collection you want to manage.
Click
More options
and select
Delete collection.
Reorder variable collections in a file
Reorder your variable collections to organize and find variables faster when applying them to designs. Changing the order of variable collections will affect the order in which they appear from the variable mode selector and variable selectors.
To reorder variable collections in a file:
In the sidebar of the variables modal, click
More options
and select
Reorder collections
From the
Collections
popup, you can:
Click and drag to reorder the collections
Or click
Sort A to Z
to order collections in alphanumerical order
Group a selection of variables
You can further organize variables by adding them to groups within a collection. For example, use one group for colors used for text, and another for colors used on strokes.
To organize variables into a group:
From the
Variables
modal, select multiple variables:
Hold
⌘ Command
Control
to select multiple variables
Hold
⇧ Shift
to select a range of variables
Right-click the selection and select
New group with selection
Click and drag groups in the sidebar of the Variables modal to reorder groups. You can also click and drag groups into other groups to nest them.
Rename a group
In the sidebar of the variables modal, double click the group name.
Type a new name for the variable group.
Manage a group
In the sidebar of the variables modal, right-click the group name in the sidebar.
From the menu, choose from the following:
Ungroup
Duplicate group
Delete group
Ready to continue your variables journey?
Check out the following topics:
Publish variables to team libraries
Apply variables to designs
Create modes for variables
Use variables for advanced prototypes

--- 077_Variables_in_Dev_Mode.txt ---
As a developer, when you’re reviewing designs in Dev Mode, you’ll encounter color, number, string, and boolean variables. The values of those variables can be dependent on things like the variable mode, which sometimes makes it harder to identify the exact values you want to pull from the design.
Figma provides a few options in Dev Mode to make working with variables easier for developers:
Variable details
Suggested variables
Access local variable collections
Variable details
When you're inspecting a design in Dev Mode, you can view details about variables used in the design. The
Variable details
modal lists information about a variable including:
The name of the variable
A link to the file that hosts the variable
The name of the variable collection that contains the variable
The variable’s mode
The variable’s value and, if relevant, the chain of aliases to a raw value
The scope of the variable (where it can be used)
A code snippet for using the variable
A useful feature is the ability to follow the a chain of
variable aliases
back to a specific value. For example, in the previous image, the
Background/Positive/Default
variable uses
Green/500
as an alias, which corresponds to the color value
#14AE5C
Using the
Variable details
modal, you can also change modes, letting you see the other values the variable can have.
Open the Variable details modal
There are two ways to open the
Variable details
modal:
For variables that appear in a code snippet, such as design tokens in CSS, click on the variable name in the in the
Inspect
panel to open the
Variable details
modal.
For other variables, such as those that appear in the
Selection colors
section, click
Variable details
in the
Inspect
panel to open the
Variable details
modal.
Suggested variables
In Dev Mode, when you’re inspecting a design, you’ll sometimes encounter raw values rather than variables or styles. This can happen for a number of reasons, such as if a designer happened to detach a variable during the design phase. When you encounter a raw value, you may want to see if there’s an existing variable that should be used instead.
To help make identifying corresponding variables easier, Dev Mode can suggest variables.
To suggest a variable, the variable must have:
Exactly the same value
The appropriate scope
You can click a suggested variable to copy the name.
Get suggested variables
To get suggested variables for a value in Dev Mode, in the
Inspect
panel, click the value you want to get a suggestion for. The
Suggested variables
modal appears next to the value you clicked.
Access local variable collections
In Dev Mode, you can access and view the local variable collections in the file.
For example, in the previous image, in the
Collections from this file
section, the
Color Primitives
variable collection is selected. These names are just examples — the actual collection and variable names correspond to the local variables and collections in your file.
Below the
Collections from this file
section is a list of all the variable groups that appear in the collection, such as
Brand
Black
, and
White
. By default,
All variables
is selected. The groups are ordered the same way they’re organized in the
Variables modal
For the group that’s selected, the variables table displays the variables, along with the values for each mode a variable has. If you have
All variables
selected, the table is organized by group.
You can click on individual variables and values to copy them to your clipboard and to view details about the variable.
Open the variables table
When you have no layers selected in Dev Mode, you can open a table of all variables that were created in your file. To open the variables table, in the
Variables
section of the inspect panel, click
Open variables table
. The variables table expands to fill the canvas.

--- Before you start ---
Before you start
Who can use this feature
Available on
any team or plan
Anyone with
can edit
access to a file can create prototypes.
In prototypes, you can navigate through frames to demonstrate a user journey across multiple pages or screens.
Preserving scroll position lets you maintain the same scroll position when you transition between frames. This applies to both vertical and horizontal scroll locations. In older versions of Figma, preserving scroll position was something that needed to be enabled as a part of prototype interactions. Now, scroll position is
preserved by default
after your layers are
prepared for preserving scroll position
In terms of
state management
, the concept of "preserve scroll position" is a combination of
state memorization
and
state sharing
. State memorization preserves the scroll position of content in a given layer of a prototype. State sharing lets the scroll position of content be shared by different layers that meet certain criteria, thus preserving the scroll position throughout the prototype.
Note:
State management allows us to maintain object properties and states when navigating in and across frames when playing prototypes—and can apply to scroll position, interactive components, and videos.
Preserved by default
In your prototypes, the scroll position of top-level frames and scrollable layers is
memorized
by default.
For example, you have a prototype of a map app. In order to simulate the experience of scrolling the map, one of the frames contains an image of the map that overflows the frame. By default, when you navigate away from that frame in the prototype, the current scroll position of the map is memorized. When you return to the frame, the map is at the same position as when you left the frame earlier.
The scroll position of layers is shared by default if the
layers match
. Top-level frames can have
identical names or identical prefixes
, in order to help differentiate between frames in the prototype.
If you want an interaction to reset the scroll position of layers in a top-level frame (the
old state management behavior
), you can override the
state memorization
and
state sharing
behavior with
Reset scroll position
Learn more about
prototype state management →
Prepare layers for preserving scroll position
For interactions in your protoypes, scroll position is preserved between matching objects or frames.
Match nested objects
Nested objects are objects placed within another layer or frame. To match nested objects across frames, both of the following criteria must be met:
Objects have identical names
Objects have the same
set of parents
across top-level frames
Match top-level frames
Top-level frames are frames placed directly on the canvas. To match top-level frames,
only one
of the following criteria needs to be met:
Frames have identical names
Frame names have a common prefix, followed by a forward slash. For example, frames
Checkout / Empty
and
Checkout / Complete
match.
Rename layers in bulk
If you have unique names for each layer, but would like match them so scroll position is automatically shared, you can rename multiple layers at the same time to match, or (for top-level frames) add a prefix to the existing name (for example,
Prefix / Name
Select the layers you want to rename by doing one of the following:
Select an initial object on either the canvas or layers panel, then hold down
Shift
while clicking additional objects.
Drag your cursor across any objects you want to select. This creates a blue box around the selected objects.
Open up the rename layers panel:
Mac:
Command
Windows:
Control
In the
Rename to
field, enter a name name, or a prefix that you want to add to the layer name. For a prefix, include a forward slash after the prefix name.
If you're adding a prefix, click the
Current Name
button to add the current layer name after the forward slash.
Click
Rename
to apply the changes.
Learn more about
renaming layers →
Reset scroll position
To override the default behavior of
state memorization
and
state sharing
between layers, you can enable
Reset scroll position
when you're configuring an interaction.
To reset the scroll position:
Click on a prototype connection to open the
Interaction
panel.
In the
State
section of the panel, click the
Reset scroll position
checkbox.
Update old state management: Preserve scroll position
On May 24, 2023, Figma updated its prototype state management controls. This update changed how preserve scroll position is applied on interactions.
To preserve scrolling between top-level frames,
the top-level frame names have to be identical
have a matching prefix.
Turn off preserve scroll position
Turn on preserve scroll position
New state management
Use non-matching layer names or check reset scroll position
Use matching layer names
(Top-level frame names can be identical or have a matching prefix)
Old state management
Toggle off the preserve scroll position setting
Toggle on the preserve scroll position setting
Any new interaction automatically follows new state management rules. To update an old interaction to the new state management controls, click the
Update
button on the
Interaction details
modal.

--- Before you start ---
Before you start
Who can use this feature
Anyone with
can view
can edit
access in a Figma Design file can use cursor chat.
This article is for using cursor chat in Figma Design.
Read about cursor chat in FigJam →
Cursor chat allows you to type live, temporary messages to others in your Figma file. This is great for quick communication, such as:
Getting a collaborator's attention ("Love this!")
Lightweight collaboration ("Is this the latest version for production?")
Discussions about the contents of a file ("Is this the right color?")
Spontaneous file encounters ("I'm in here too! Wanna voice chat?")
Enter cursor chat
Enter cursor chat mode through the following ways:
Use keyboard shortcut
Right-click the canvas and select
Cursor chat
An empty speech bubble will appear next to your cursor.
Your chat bubble is anchored to your cursor and follows you around the canvas. You can pan around and pinch-to-zoom the canvas without exiting cursor chat.
Use cursor chat
Once cursor chat mode is activated, start typing and other collaborators in your file will see what you're typing as you're typing it. Because cursor chat is live, there is no action to confirm or send your message. Your cursor displays the message for five seconds after you're done typing.
Clear your chat
To clear your chat and type a new message, press
Esc
on your keyboard. Your previous message will disappear, and you can immediately type a new one.
A single chat has a 52 character limit. You can press
Enter
Return
on your keyboard to create a new line. When you type on the new line, Figma will remove your previous message.
Note:
Figma does not keep a log of messages from cursor chat. Once you clear your chat, it'll disappear forever. If you need your messages to be permanent, consider
dropping a comment
instead.
Exit cursor chat
There are several ways to quickly exit out of cursor chat mode:
Press
Esc
Click anywhere in your file
Switch to a different tool
Open a menu
FigJam also eventually fades your cursor chat and switches you back to the move tool if you haven't typed a new message in a while.

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Anyone with
can edit
access can use auto layout
This article covers just one aspect of working auto layout. Check out these other articles to learn more about working with auto layout in Figma Design.
Guide to auto layout
: An overview of auto layout, how it works, key properties, and browse a collection of auto layout resources.
Use the horizontal or vertical flows in auto layout
: Learn about the properties available to the horizontal and vertical flows in auto layout.
Use the grid auto layout flow
: Learn how to work with columns, rows, and cells with the grid layout flow.
Create multi-dimensional auto layout flows
: Combine multiple auto layout flows to build fully responsive components and screens.
Use auto layout
You can use auto layout on a frame or a selection of objects. This includes:
New or empty frames
Frames with existing content
Components and component sets
Groups or other selections of layers and/or objects
To use auto layout, select one or more layers and use one of the following methods:
Use the keyboard shortcut
⇧ Shift
In the right panel, click
next to
Auto layout
Right-click on a frame or object and select
Add auto layout
If you have a frame or a main component selected, you can also choose from one of the auto layout flows in the
Layout
section of the right sidebar:
Vertical
Horizontal
Grid
Note:
Auto layout is only supported on frames. If you have a one or more layers selected, Figma will create an auto layout frame around them.
Suggest auto layout
When you use
Suggest auto layout
, Figma will try to determine which objects in a frame or component should be placed in an auto layout frame, then adds as many auto layout frames as needed to make the full design responsive. These auto layout frames are created all at once, while attempting to preserve the placement of your designs.
This saves you time so that you don’t have to do the tedious work of adding auto layout frame-by-frame.
Note:
Suggest auto layout can handle moderately-complex designs, such as cards, navigation bars, or mobile screens. If you’re working with a large or complex design, such as website, use suggest auto layout in batches.
You can access this option from a few places:
Use the keyboard shortcut:
Mac:
⌃ Control
⇧ Shift
Windows
⌃ Control
Alt
⇧ Shift
Right-click the frame or object and go to
More layout options
Suggest auto layout
Select
Suggest auto layout
from the Actions menu
After you use this action, any nested auto layout frames that were created are indicated with a blue dot in the layers section in the left panel.
Note:
Occasionally, you may find an object in a different auto layout frame than you intended; or with a horizontal direction applied when you wanted vertical. Suggest auto layout might not get it right every time, but it is intended to speed up your workflow.
For elements that may be a bit trickier, we recommend framing, grouping, or using auto layout on nested elements before using
Suggest auto layout
on the parent frame.
Remove auto layout
When you remove auto layout, you will have access to a frame's regular properties.
There are a couple of ways to remove auto layout:
In the right sidebar, click
Freeform
Remove auto layout
Right-click on the frame and select
Remove auto layout
Use keyboard shortcuts:
Mac:
⌥ Option
⇧ Shift
Windows:
Alt
⇧ Shift
Remove all auto layout in a selection
To remove auto layout from a frame and all of its nested objects at once, right-click on the frame and go to
More layout options
Remove all auto layout
Note:
Auto layout cannot be removed from component instances. You will need to detach the instance from the component to make these edits, or update the main component.

--- Before you start ---
Before you start
Who can use this feature
Available on all
paid plans
In Figma, a library is a collection of design assets, like components, styles, and variables. These design assets live in a single file, but can be reused across different files or projects.
People often use libraries for sharing common design elements, like buttons, icons, pieces of UI, colors, or values for certain properties. This helps everyone stay consistent and makes it easy to build from existing designs.
When someone changes assets in a library, people can quickly review the changes and automatically update their designs.
Example
Here’s an example of how a design team working on the fictional app Habitz might use libraries in Figma:
In a file, Kai creates components for different parts of the app, like the nav bar, menu, header, and other UI elements.
They publish finalized components as a library from within the file.
Working in a different file in the same project, Timothy views the library and adds a few components to the canvas.
Some time later, Kai makes an update to one of the components in file where the library was published.
In all other files that use the component, people working in the file get notified there's an update available to the component. People can review the component, and accept the update when they’re ready. The update gets applied to any instances of the component they’ve used.
Want to learn more about Kai and the Habitz team? You can follow their journey to launching a design system in Figma’s
Introduction to design systems course →
Create components, styles, or variables to use in a library
The goal of a library is to share reusable design assets with other people you work with. These assets can be components, styles, or variables. Select a tab to learn more about each one.
Components
Styles
Variables
Components are the building blocks of a design.
They can be individual elements, like icons or buttons, or a collection of elements, like menus and layouts.
When using libraries, the library file contains the
main component
, which defines the properties of the component for everyone to use.
When you access a library in your file, you can add an
instance
of the component to the canvas. This instance will receive any updates made to the main component.
Learn how to create components in your designs.
Styles define a collection of properties or settings we want to reuse. For example, you can use styles to:
Capture specific color values for fills and strokes
Define text properties like font, line height and letter spacing
Make presets for shadow and blur effects
Create shareable scaffolding in the form of rows, columns, and layout guides
Learn more about creating styles for colors, text, effects and layout guides.
Variables store reusable values you can apply to all kinds of design properties.
For example, you can:
Create
design tokens
for better efficiency when managing design systems
Switch a frame between different device sizes and see spacing immediately update according to a defined spatial system
Preview how different languages affect a design
Create a fully functional checkout cart design that calculates order total based on which items were added to the cart
Build a prototype of an interactive quiz that uses conditional logic to show whether a user answers a question correctly or incorrectly
Learn more about variables.
Publish a library
Before you can access components, styles, or variables in other files, you need to publish them as a library. You can choose which ones to publish, and on the
Organization and Enterprise plans
, who can have access to them.
If you change a published style, component, or variable, Figma will only apply the changes to instances in the current file. If you want those changes to be reflected in your library, you will also need to publish those changes to the library.
Publish styles, components, and variables to a library
Choose which libraries to use in your files
You can access published libraries in any draft files or team files where you have
can edit
access. Admins can set default libraries for a team or organization, which automatically enables them in every file.
Enable access to libraries in your drafts
Enable or disable a library in a design file
Don't have a library to use?
Start building designs with
UI kits
instead.
Use library assets in a file
When you’ve found a library you want to use, you can add any components, styles, or variables to your file by following the instructions for each resource:
Create an instance of a component
Apply styles to layers and objects
Apply variables to designs
Accept updates to a library in your files
When someone publishes an update to a
main component
style,
variable
in a library, Figma makes the update available in every file where the component, style, or variable is used.
Anyone with
can edit
access to a file can review and accept or ignore the changes.
Accept updates from a library
Manage a library
People with
can edit
access to a library file can set permissions to the file, unpublish the library, and move assets between files.
Manage libraries in teams
Manage a library for a workspace or organization
Move published components between files
Unpublish a library

--- Who can use this feature ---
Who can use this feature
Available on
all plans
Anyone with
can edit
access can interact with all panels in the left panel
Anyone with only
can view
access can view layers and navigate between pages
Figma Design files have four distinct interactive areas: a toolbar, two panels, and a scrollable canvas. These areas allow you to access, create and adjust elements of your design.
In this article, we're going to cover the
Navigation panel
(left panel) which gives you access to layers and pages in your file. You can also use the left panel to view components created in the current file and access components from any libraries added to the file.
Open the Navigation panel
There are a two tabs in the Navigation panel:
File
and
Assets
. You can click to switch between each view in the panel, or use keyboard shortcuts:
Mac
File tab
⌥ Option
Assets tab
⌥ Option
Windows
File tab
Alt
Assets tab
Alt
Minimize or expand panels
Minimize
Expand
the left and right panels, click
in the left panel, or using the keyboard shortcut
Shift
If you select an object while the panels are minimized, the left panel remains minimized while the right panel expands so you can update the properties of the selected object. Once all objects are deselected, the right panel minimizes again.
Hide or show UI
Toggle visibility of the entire Figma UI to make more space to view designs. Find
Hide/Show UI
from Actions, or use the keyboard shortcut:
Mac
⌘ Command
Windows
Ctrl
Tip:
You can adjust the width of the left sidebar. This allows you to better see layer or asset names.
Hover your cursor over the right-edge of the sidebar. A bidirectional arrow will appear.
Click and drag to adjust the width of the panel.
Release to set the sidebar width.
Pages
Within a file, you can create as many pages as you need. Each page has its own canvas, where you can explore and iterate on your designs. You can even create separate
prototypes
on each page.
Create and manage pages →
View layers
Any frames, groups, or objects you add to the canvas will be visible in the
Layers
section of the
File
tab. New layers are added to the top of the list, or to the top of the group, frame, or section it is contained within. Or, just above the layer you currently have selected.
You can determine if a layer is a frame, group or a specific type of object by the icon next to it:
Frame
Group
Component
Instance
Text
Shape—Icon varies depending on the shape.
Learn more →
Image
Auto layout—icon varies depending on the auto layout configuration.
Learn more →
Section
Animated GIF or video
Figma nests any child objects within their parent group or frame. This allows you to collapse and expand layers within a group or Frame.
To collapse all expanded layers, click
Collapse layers
in the top right corner of the Layers panel. If you've already selected a layer when you collapse layers, all expanded layers collapse except for your selection.
There are many other ways to interact with layers:
Select layers, groups, and frames
Adjust the z-index with layer order
Rename layers individually or in bulk
Toggle layer visibility
Lock and unlock layers
Tip:
You can enable or disable the
Highlight layers on hover
setting. Go to
Menu
Preferences
Highlight layers on hover
View components in the assets tab
Components
are aspects of your designs that you can reuse. These could be buttons or icons, or more complex UI elements like navigation menus or status bars.
You can find all of your components in the
Assets
tab. You can drag any component from the assets view onto the canvas to create an instance of the component.
To open the assets view, click the
Assets
tab in the left sidebar, or use the keyboard shortcut:
Mac
⌥ Option
Windows
Alt
Once you've opened the assets view, you can:
Open the
Libraries
modal.
Use the search field to find a specific component. Figma looks for components in the current file, as well as any libraries you can access.
Open
Libraries and settings
to filter through available libraries, and to switch between
Grid
and
List
views.
Browse through
All libraries
that have been added to the file.
Note:
Figma groups components in the assets view by heading. If you have many components, Figma will present them as a path:
file
page
frame
Explore a file, page, or frame by clicking on the arrow to expand it
Figma lists team or organization libraries added to the file, and enabled UI kits, in the assets view
Create an instance by dragging a component from the assets view on to the canvas
Learn how to insert components from the assets tab →
Libraries
Libraries allow you to publish styles, components, and variables from your files as a library. You can then apply styles and variables, or create instances of your components across files.
Get started with libraries →
To access your libraries from the assets view panel, click
Libraries
to open the libraries modal.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can convert text layers to vector paths
You can convert any text layer into a vector path. Once converted, you can use
vector edit mode
to modify the layer's path. This is useful for:
Customize aspects of a typeface
Creating logos or wordmarks
Preparing assets for printing
Reducing file or export size
Combining multiple paths into a single object
There are two ways to turn a text layer into a vector path: flattening the layer or outlining the layer's stroke. Both methods are destructive actions, meaning you'll no longer be able to edit the text contents or any typography properties associated with it. If you convert a text layer by mistake, you can use the file's
version history
to restore a previous version or use the undo shortcut:
Mac:
Command
Windows:
Control
Note:
Looking for information about typing text on a vector path instead? Check out our
Guide to text
Flatten a text layer
When you flatten text layers, Figma will:
Combine any objects or layers you selected into a single layer
Convert text layers from editable text to vector paths
To flatten a text layer:
Select the text layer you want to flatten.
Right-click on the selection and select
Flatten
or use the keyboard shortcut:
Mac
Option
Shift
Windows
Alt
Shift
Once flattened, the layers will be combined into a single vector layer. Select the layer and press
Enter
to open
vector edit mode
Outline a layer's stroke
When you use outline stroke, Figma will:
Convert text layers from editable text to vector paths
Not combine any objects or layers you selected into a single layer
To apply outline stroke:
Select the layer in the canvas.
Right-click on the layer and select
Outline stroke
or use the keyboard shortcut:
Mac:
Command
Option
Windows:
Control
Alt
When
Outline stroke
is applied, each glyph is converted to its own vector layer, so you can edit each layer individually in
vector edit mode

--- Who can use this feature ---
Who can use this feature
Available on
any team or organization plan
Anyone with
can edit
access to a file can adjust a text layer's dimensions and resizing properties.
There are a few ways to control or change the size of a text layer
Dimensions
: Adjust the width and height, or size, of the the text layer’s bounding box.
Resizing
: Control how a text layer should wrap or reflow as you change the text contents.
Scale
: Use the scale tool to adjust the size of the text layer’s bounds
and
the font size at once. This is helpful if you want to resize a bunch of layers by the same factor.
Font size:
Adjust the font size of the text contents, not the layer (See:
Explore type properties
Text dimensions
Every text layer has a bounding box around it in the canvas. This controls how Figma positions and arranges text on the canvas. You can resize a text layer by changing it's bounding box.
Caution
: When you manually change a layer’s dimensions in the canvas, Figma will also update the
resizing property
Fixed size
Select the layer you want to edit.
Hover over the section of the bounding box you would like to change. Your cursor will change to the Scale icon.
Click and drag to change the dimensions of the bounding box. Figma will reposition the text within the layer based on its current
alignment properties
Text resizing
Text layers have a resizing property that determines how the layer’s dimensions, indicated by the bounding box, will respond when you change its contents.
You can update the
resizing
setting for a text layer in the
Layout
section of the right sidebar. There are three settings available:
Auto width
: the width of the text layer grow and shrink horizontally depending on the text contents. Figma will only create new lines of text when you use the
Return
Enter
key.
Auto height
(wrap): the
height
of the text layer will grow and shrink, depending on its contents. If you add more content, text will automatically wrap to the next line, increasing the height of the text layer. If you remove text, the height of the layer decreases to match.
Fixed size
: both the
width
and
height
of the text layer will stay the same, regardless of the layer's contents. Figma will wrap any additional text to prevent it from extending beyond the layer’s horizontal bounds. But text can still extend beyond the layer’s vertical bounds, which may overlap with surrounding layers.
The resizing property is set automatically based on how you create the text layer.
Single-click
: If you click on the canvas to create a text layer, the resizing property is set to
auto width
. This allows the text layer to grow horizontally to accommodate any new text you add.
Click and drag
: If you click and drag to create a text layer, Figma assumes you want the text layer to be those exact dimensions and sets the resizing to
Fixed size
. This means the width and height of the text layer will stay the same, regardless of the text content.
Scale text layers
You can also use the
scale tool
to change the size of a text layer. If you take this approach, you'll change the
font size
, as well as the bounds of the text layer.
The scale tool can be handy for situations where you want to resize a group of elements at once. This makes sure all elements, including text, are scaled consistently. It also allows you to ignore other settings, like constraints.
This can lead to fractional font sizes or layers with subpixel positions and dimensions. Aside from annoying pixel perfectionists, it can also lead to unwanted export artifacts and dimensions.
If you just want to change the size of a text layer in relation to other elements in a design, we recommend adjusting the
Font size
in the
Typography
settings instead. This makes sure your font size is a whole number.

--- Who can use this feature ---
Who can use this feature
Adding images is supported on
any team or plan
. Adding videos is supported on any
paid team or plan.
Only people with Can
edit access
to the file can add images.
Place image/video
allows you to import images and/or videos in bulk. You can then choose exactly where you'd like to place each file. As Figma treats images and videos as fills, you can add them to existing objects.
Tip!
Figma supports .png, .jpg, .tiff, or .heic image files, and .mp4, .mov, or .webm video files.
Learn more about working with videos in Figma →
Note:
If you are on the Starter plan, you can only add images—this means that instead of
Place image/video
, your action and menu item is labelled
Place image
Access
Place image/video
from any of the following places:
From the
menu, by searching
Actions
for
Place image/video.
From the
Shape tools
menu in the toolbar.
Use the keyboard shortcuts:
MacOS
Shift-Command-K
Windows
Shift
Ctrl
In the file browser that Figma opens, select multiple image and/or video files you'd like to use, and then click
Open
The cursor gets a badge showing the number of images that need to be placed.
A thumbnail of the current image to place appears next to the cursor. You then have two options:
Click on the canvas to add the image/video. Figma adds the image/video to the canvas where you clicked, using its original dimensions.
Select an existing object on the canvas. The image/video is applied as a fill with the
Fill mode
set to
Fill
Repeat the process for any remaining images/videos. To discard any remaining videos or images, press
Esc
Having issues loading images?
Learn about the most
common image loading issues
and how to fix them.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can create and edit guides
Guides are helpful when you're trying to precisely position layers or objects in your designs.
Enable rulers
Before you can add guides to your file, you must enable rulers on the canvas.
Open the
Main menu
Hover over
View
and select
Rulers
Create a new guide
To create a new guide, click and drag on the horizontal or vertical ruler to pull the guide onto the canvas.
You can also create a new guide from an existing guide by holding
Option
(Mac) or
Alt
(Windows), then clicking and dragging from an existing guide.
Figma has both canvas and frame level guides for positioning and aligning objects in your designs.
The dotted line acts as visual indicator that your guide is intersecting with a frame on the canvas.
View distances (redlines)
With a top-level frame selected, hold
Option
(macOS) or
Control
(Windows) as you click and drag out a guide. You will see the distance (in pixels) between the guide and the frame. This distance is also reflected in the ruler. When the guide intersects your frame it will begin measuring distances between the guide and objects in the frame.
When a frame is selected, the rulers are highlighted in blue, calling attention to the coordinates of the frame on your canvas. When you select objects in the frame, you'll see the same blue highlights for the selected object.
Guides inside frames are recognized as another object in the frame. This means you can view redline distances between the guide itself and other elements in the frame, as well as the parent frame.
Remove guides
To remove a guide, you can do any of the following:
Click and drag the guide back to the rulers
Select the guide and press
delete
Right-click on the guide and select
Remove guide

--- Before you Start ---
Before you Start
Who can use this feature
Users on
any plan
Anyone with edit access to the Figma Design file can create, manage, and use component props
This article covers how to create and configure component properties. Learn how to
edit instances with component properties
Component properties are the changeable aspects of a component. They allow you to communicate which parts of a component can be changed, such as:
Which layers in a component have the option to be hidden or shown
Whether an instance can be swapped and set preferred instances to swap to
Which text strings can be changed
Component properties are created and applied to main components and component sets to define parts of a design system and to make design systems easier to use.
Anyone using a component with component properties can view a single set of consolidated controls in the right panel, so they can understand at a glance what is changeable and make edits in one place.
This reduces time needed to refer to documentation, improves accurate usage of components and design systems, and decreases the need to select and override individual layers.
Explore the component properties playground file in the Figma Community
Types of component properties
Component properties are tied to different design properties. You can create component properties for any
main component
variants of a component set
, and apply them to nested layers of the component or variant.
Component properties come in different types:
Component property type
Use this to...
Boolean property
Indicate which layers can have their layer visibility turned on/off, such as an icon on a button.
Instance swap property
Indicate which instances can be swapped; Set preferred instances to swap to.
Text property
Indicate which text content can be changed.
Variant property
Define the different variations of a component, such as its different states, sizes, or colors.
Tip:
Communicate a component's intended usage by adding descriptions and links to documentation. Documentation helps to guide proper application, variant and state usage, and accessibility and contrast requirements to those who are using your design system. Learn how to
add documentation to design assets
Create and apply component properties
Boolean property
Use boolean properties to set true/false values, which allow you to toggle an attribute on or off. For example, if a design system contains buttons with and without an icon, instead of creating variants for each state, apply a boolean property to the icon’s layer visibility.
Currently, boolean properties only support layer visibility.
Create a boolean property
When a boolean property is created for layer visibility, a value set to false means the layer will be hidden. If toggle to true, the layer will be visible.
Select a main component or component set.
In the right sidebar, click
in the
Properties
section and select
Boolean
from the dropdown.
From the
Create component property
modal, use the fields and dropdown menus to configure the property.
Give your property a
name
in the text field.
Set the default
value
to true or false. You can also click
Apply variable
to apply an existing boolean variable, if available.
Click
Create property
Apply a boolean property to a component
Warning:
Before applying boolean properties to components, it’s important to consider any need for
interactive components
prototyping connections
. Prototyping noodles must connect between two objects. If you connect two components and consolidate them using boolean properties, the prototyping connections will be lost.
For example, you have a boolean property applied to an icon in a button component to represent two states: a button with an icon and one without. It’s not possible to set up an interaction between the two because you’re using a single component. Prototype interactions must be between two individual objects.
Select a layer nested within a main component or variant.
If you’re working with variants, you can click
to enable multi-edit to edit matching objects and speed up your workflow. Learn how to
multi-edit variants
In the right sidebar, find the
Appearance
section and click the
Apply variable/property
icon.
Choose a boolean property from the list. When applied, you’ll see a purple pill with the
property name
in the right sidebar.
Tip:
You can create and apply a boolean property from any nested layer in a main component or main variant. Select the nested layer and find the
Appearance
section, then click the
Apply property
icon. Once you create the property, it’ll be applied to the selected layer.
Instance swap property
The instance swap property allows you to indicate which instances nested in a main component or variant can be swapped.
When creating an instance swap property, you can set a default instance using any component created in the file, or from
libraries added to the file
. You can also set
preferred instances
so others know which instances they can swap to. Learn how to
swap components using the instance swap property
Create an instance swap property
Select a main component or component set.
In the right sidebar, click
Properties
section and select
Instance swap
from the dropdown.
From the
Create component property
modal, use the fields and dropdown menus to configure the property.
Give your property a
name
using the text field.
Set the default
value
by using dropdown to select an instance from any components created in the file, or from any libraries added to the file.
If desired, set up any
preferred instances
so others know which components they should choose from when swapping the instance.
Click
Create property.
Apply an instance swap property to a component
Select a instance nested within a main component or variant.
If you’re working with variants, you can click
to enable multi-edit to edit matching objects and speed up your workflow. Learn how to
multi-edit variants
At the top of right sidebar, click
Apply instance swap property
Choose an instance property from the list. When applied, you’ll see a purple pill with the
property name
in the right sidebar.
Tip:
You can create and apply a instance swap property from any instance nested within a main component or main variant. Selected the nested instance and click
Apply/create instance swap property
at the top of the right sidebar. Once you create the property, it’ll be applied to the selected layer.
Choose preferred values
Preferred values allow you to create a curated set of components to choose from when swapping instances (via the instance swap property). They reduce guesswork by communicating which specific components can replace an existing one.
For example, you create an icon button with an instance swap property to indicate that the icon can be swapped. However, your icon library contains over 100 icons, but only 8 of them should be used for this button.
To make it easy find these 8 icons and to know which one can be used, you add them as preferred values. Now, whenever designers go to swap the icon, they have a curated list of assets they know they can use.
When using a component with a preferred value, a list of preferred values appear by default when opening the instance swap property menu.
Note:
If you don’t want to use a preferred value, click the dropdown or use the search bar above the list to find other components from available.
To add preferred values for an instance:
Start by editing its existing instance swap property or creating a new one.
From the respective modals, click
in the
Preferred values
section and check the checkboxes next to the instances you want to include as a preferred values.
To remove a preferred value, click
next to the value in the
Preferred
values section of the modal.
Text property
Use text properties to indicate which text content in a component can be edited. Text content can be edited either from the right panel or on the canvas.
Note:
Text component properties currently don't support rich text — such as lists styles, superscript, and other
type settings
. You can still apply these settings to the text layer, but their formats won't be reflected in the component properties panel of the right panel.
If the text layer contains a
bulleted or numbered list style
, changing the text string from the right panel will remove the list style. To preserve it, update the string from the canvas instead.
Create a text property
Select a main component or component set.
Click
Properties
section of the right sidebar and select
Text
from the dropdown.
From the
Create component property
modal, use the fields to configure the property.
Give your property a
name
using the text field.
Set the default string of text by using the
value
text field. You can also click
Apply variable
to apply an existing string variable, if available.
Click
Create property.
Apply a text property to a component
Select a text layer nested in a main component or variant.
In the
Text
section at the top of the right sidebar, hover over the text field and click
Apply variable/property
Choose a text property from the list.
Tip:
You can create and apply a text property from any text layer nested within a main component or main variant.
With the nested text layer selected, find the text field in the
Text
section of the right sidebar.
Hover over the text field and click
Apply variable/property
From the menu, click
Create variable/property
From the
Create
dropdown, select
Property
. Then give the property a name and a default value.
Click
Create property
. Once you create the property, it’ll be applied to the selected layer.
Variant property
variant
is an individual component within a component set.
variant property
allows you to define attributes of your variants, such as state, color, or size.
A component set contains multiple variants, and the variants carry attributes that can be defined by variant properties.
Variant properties are specific to variants and component sets, and can’t be created or applied to main components.
Learn how to create variants and component sets
In the example below, we have a button component set with four variants. It has two variant properties, size and color. The size values include small and large, while color values include green and red.
Note:
We recommend reviewing your existing design system before you adopt component properties. That way, you can decide which aspects you can reflect as component properties and which need to be variants.
Switch to a different component property
If a layer has a component property applied to it, you can switch it to a different one at any time.
In the right sidebar, find the corresponding section for the component property you’d like to change.
Instance swap property
: Top of the right sidebar.
Text property
: Top of the right sidebar in the
Text
section.
Boolean property
: The
Appearance
section.
Click on the purple pill.
Select an existing property of the same type.
Customize a component property
Change the default value
Change the default value of a text, boolean, or instance swap property.
Select component set or main component.
Click
next to the variant property to open the edit property modal.
Use the text field or dropdown in the
Value
section to update the default value.
Updating the default value will reflect on canvas if the associated instance layer has no property overrides applied.
Note:
The default value of a variant property is determined by the variant in the top left corner of a component set. Learn how to
change the default variant of a component set
Expose nested instances
Expose specific nested instances to reveal their component properties alongside those of the top-level instance. This helps design system users discover nested instances and their component properties without deep-selecting layers to find them.
For example, you create a social media card component with multiple components nested inside — an avatar, name, buttons, and so on. You want to change the icon of the
default button
to a “send” icon, and change its text. You also want to change the
cancel button
state to a
disabled
state.
Instead of deep-selecting into each layer to find their component property controls, exposing nested instances allows you to click just the top-level component — in this case, the social media card — and edit your instance from a single place.
When you select a top-level instance with exposed nested instances, a list of component properties for the top-level and nested instances will appear in the right panel.
When hovering over a property row, a light purple highlight appears around the corresponding object on canvas so you know what you’re editing.
Note:
If you have an exposed nested instance with visibility set to hidden on a boolean property, any component properties attached to the instance will be hidden as well.
Choose nested instances to expose
With a main component or component set selected, click
in the
Properties
section of right panel and choose
Nested instances
under
Expose properties from
Note:
The option to expose nested instances is available only if a main component:
already has an exposed nested instance, or
contains nested instances with component properties applied to it
If you don’t see the
Nested instances
option, try applying a component property to a nested component first.
From the
Expose nested instances
modal, check the boxes for instances you want to reveal at the top-level.
A list of chosen nested instances will appear in the right panel.
To remove nested instances from being exposed, hover over the instance name on this list and click
Simplify instances
Simplifying an instance helps reduce clutter in the layers and properties panel by hiding layers without component properties applied. Figma assumes that a layer with no component property is a layer that should not be edited, and therefore can be hidden.
Note:
Simplified instances will hide certain layer names, but anyone with
can edit
permissions to the file can still edit the layers.
To simplify an instance, select a main component or component set, and click
Component configuration
in the right panel From the pop-up, check the
simplify all instances
checkbox.
When using an instance of a simplified component, excess layers will be collapsed under
See all layers
. Click
See all layers
to expand and see the layers. You can collapse it again by clicking outside the layers panel or selecting a different layer.
Manage a component property
After creating component properties and their values, you can manage them at any time. Rename, reorder, delete, change default values, and more.
Note:
To use new or updated components across different files, be sure to publish them to the team library. This allows you to share them with others or to use them in other files or projects. Learn how to
publish to team library
Detach a property
Detach text, instance swap, or boolean properties from a layer.
Select a nested layer with a component property applied.
Click
in right sidebar panel next to the property you wish to unlink.
This removes the component property from the layer, but the component property won’t be deleted.
Note:
It’s not possible to detach a variant property from a nested layer.
Rename, reorder, or delete
Properties
To rename, reorder, or delete an existing component property:
Select the main component or component set.
From the
Properties
section in the right sidebar:
Rename
: Double-click a property name. Type in a new name, then press
return
enter
or click outside the field to apply.
Reorder:
Hover over a property to reveal handles. Click and drag to reorder, then release to apply.
Variant properties always sit above other property types in the right sidebar. They can be reordered with other variant properties, but not with other property types.
Delete
: Right-click a property and click
Delete property
. Or, select a property and press
delete
If your component set or main component only contains one variant property, deleting the property will delete the entire component set or main component.
Values
To change or reorder values of a variant property:
Select component set or main component.
Click
next to the variant property to open the edit property modal.
Change:
In the
Values
section, use the text fields to change or update the values.
Reorder:
Hover over a value to reveal handles. Click and drag to reorder.
Component playground in Dev Mode
When selecting a component or instance in
Dev Mode
, you’ll see a component preview, a link to the main component, as well as any links to relevant documentation and dev resources.
The component playground appears in the inspect panel when a component instance is selected. Use the playground to experiment with the component’s different properties without changing the actual design. To open the component playground in Dev Mode:
Select a component instance on the canvas.
Click
Open in playground
in the Inspect panel.
Learn more about using Dev Mode to inspect designs

--- Before you start ---
Before you start
Available on all
paid plans
Anyone with
can edit
access to a FigJam file can make boards and diagrams using AI.
Check out the
Guide to FigJam →
🚧 FigJam AI is currently in open beta.
We’ll continue to add more functionality and polish the experience during this time.
Find out what’s coming next →
With FigJam AI, you can save time preparing and building boards for any team exercise, meeting, or personal project.
Use text prompts to make:
Boards for meetings and team exercises
Diagrams, mind maps, and flow charts
Visual timelines and Gantt charts
Plans for team projects
Make a board or diagram
To make a board:
From the toolbar, click
Quick actions
Select
Make templates and diagrams
Select a suggested template or click the
Let’s make a…
field.
Enter your own prompt or click a prompt suggestion.
Click
Make
and watch the magic happen.
At this point, FigJam will make your board or diagram. Adjust your prompt and click
Make
to create a new visual.
Prompting tips
FigJam AI can take some practice and guidance to make it work for you and your audience. Below are some details you can include in your prompt to get the best results:
FigJam boards
Add your agenda as a bulleted list along with details about what you need for each topic
Outline the goals of the upcoming meeting you are facilitating
Add any context about your attendees including how many participants and their roles
Example:
Let’s say you need to quickly whip up a meeting board for a last-minute launch retrospective session. We’ll click the text field and select
Team retrospective
from the suggested templates, then provide the following context:
A team retrospective with sections for what went well, kudos, what could have gone better, what we should keep doing.
We can then add
Next steps ↖︎
from the suggested sections.
Example:
You want to start hosting your 1:1s in a FigJam file to better visualize your work and keep all meeting discussions in one central file. We’ll click text and select
1:1
from the suggested templates, then provide the following context:
A 1:1 with my lead where we discuss current projects, upcoming projects, things i need help with, and personal updates.
We can then add
An agenda ↖︎
and
A calendar ↖︎
Diagrams
Diagrams provide a useful visual reference for things like processes, workflows, or structures. Diagrams are a part of your board and can be made using FigJam AI.
Currently, FigJam AI can create flow charts, Gantt charts, and org charts. Similar to meeting boards, the more detail you provide, the more custom your diagram will be.
Example:
Make a mind map of:
Team activities during an offsite
Foundational growth channels for a new website
Feature ideas for a customer management software
Example:
Make a flow chart for things like:
Uploading a file to AWS
New customers downloading a mobile app
Onboarding a new employee
Example:
Make a Gantt chart with:
Sections for research, design, development, and launch planning
A 3 month timeline
Project milestones every two weeks
Example:
Make a timeline of:
US cultural events to plan marketing moments in 2024
Project roadmap for three teams over the next quarter
Steps to plan a wedding in Hawaii in 6 months
Once your team has added all sorts of great ideas and feedback to the board, you can
use FigJam AI to sort and summarize sticky notes →

--- Who can use this feature ---
Who can use this feature
Available on
any paid plan
Anyone with
can edit
access to a file can accept library updates and apply them to styles and components in that file
New to libraries in Figma Design? Check out the
Guide to
librari
When someone publishes an update to a main component, style, or variable in a library, Figma makes the updates available in every file where the component, style, or variable is used.
View available updates
You can view all updates at once, or view updates to a single component, style, or variable.
View all updates
When library updates are available, the
Libraries
icon on the
Assets
tab in the left sidebar will display a blue badge.
Note
: The
Libraries
icon will also display a blue badge if you have made updates to a library resource that need to be published. Learn more about
publishing updates to libraries
To view all available updates:
Click
Review library updates
on the
Assets
tab in the left sidebar.
Select the
Updates
tab. By default, the
Updates
tab displays assets on the current page. Use the
Show updates for all pages
toggle to see all available updates.
Click
Update
next to an individual asset, or
Update all
to apply all updates. Updates are applied to assets on every page of the file.
View updates for a single component or style
When you select an instance or a layer using a style or variable with an available update, an
update icon will appear in the
Design
tab of the right sidebar. Click
Update available
and then select
Update selected instance
Review update
Review updates
You can review updates before applying them to instances in your file.
Click on an update from the
Updates
tab of the library panel or click
Review update
with an instance selected to review the changes.
By default, Figma shows a
Side by side
view of the change. Use the toggle to switch to an
Overlay
view, which places the updated component, style, or variable on top of the current instance. The
Overlay
view has a slide to change the opacity of the updated component, style, or variable to visually compare the difference with the original.
If there are multiple instances of the updated component, style, or variable in the file, you can use the arrows to review each instance on the canvas. Click
Update instance
to update each instance individually, or click
Update all
to change them all at once.
Note
: You won’t be able to visually compare updates made to hidden layers in a component.

--- Figma Design supports a variety of export formats and settings. Use this article to determine which format best suits your needs. ---
Figma Design supports a variety of export formats and settings. Use this article to determine which format best suits your needs.
When you’re ready to export your designs, check out
Export from Figma
for instructions on applying these settings.
Export formats
PNG (Portable Network Graphics)
PNG is a raster graphics format that supports lossless compression, transparency, and color contrast. Lossless compression maintains the original image quality and text readability when exporting. Keep in mind that exporting as a PNG will result in a much larger file than exporting as a JPG.
PNGs are best used for images that involve transparency, and graphics that contain both images and text such as logos, charts, or illustrations.
Note:
Figma supports 32-bit PNGs using the RGBA color model. The A in RGBA refers to the alpha channel, which controls the opacity of a pixel. It's not possible to export PNGs without an alpha value.
The following export settings are available for PNG:
Ignore overlapping layers
Include bounding box (text layers only)
Image quality
JPG (Joint Photographic Group)
JPG (or JPEG) is a raster image file format with lossy compression. Lossy compression reduces file size by permanently removing file data. This results in smaller files, but also a reduced image quality.
In most cases, JPG quality is fine for web use and will shorten loading time due to their reduced size. JPGs may also be used for print design and photography.
Keep in mind that JPGs don’t support transparency and compression can impact the readability of any text. If your image has text or transparency, export as a PNG or SVG instead.
Tip:
You can use the
Pixel preview option to preview how your designs will appear in a rasterized format. Learn more about
pixel preview →
The following export settings are available for JPG:
Ignore overlapping layers
Include bounding box (text layers only)
SVG (Scalable Vector Graphics)
SVG is an XML-based vector graphic. These are shapes based on numeric values and coordinates that you can render on any screen. As SVGs don’t rely on pixels, they can scale to any size without impacting image quality. They also support transparency.
You can represent SVGs in scripts or code, making them a popular choice for digital design. Use SVGs for logos, icons, or illustrations you plan to include in responsive designs.
Note:
Keep in mind the following when exporting to SVG:
Background blurs:
You will need to blur the layer directly
Text:
Text is exported as glyphs by default. This means that you won’t be able to edit the text layer once exported. To preserve text editing, click
and uncheck
Outline text
Strokes
: Figma exports strokes as fills
The following export settings are available for SVG:
Ignore overlapping layers
Include bounding box (text layers only)
Include “id” attribute
Outline text
Simplify stroke
PDF (Portable Document Format)
PDFs allow you to share complex and interactive layouts. PDFs include text, fonts, vector graphics and images in a fixed layout. PDFs allow you to render and manipulate individual elements of a design, in any system. This makes it a versatile format as it's independent of software, hardware, or operating system.
Xcode, Apple's mobile development language, supports PDF. This makes it a valuable tool in building iOS applications. Use PDFs in Figma to export slide decks or share assets for iOS development. You can also use them for print design mockups. Figma exports content to PDF 1.7 files.
Figma exports text as glyphs, which means you won’t be able to edit any text in the final PDF. You can still select and copy text when viewing the PDF in the browser or other compatible software.
Note:
The
Plus darker
and
Plus lighter
blend modes
are not supported in PDF exports.
Export settings
Export settings let you further control how Figma exports your designs.
Scale
Choose from the default scale options or enter a custom size in the field. To customize the size, enter a number along with one of the following:
Add an
after the value to use it as a multiplier
Add a
after the value to set a fixed width
Add an
after the value to set a fixed height
If you’re exporting content for high-density screens (like retina displays), consider exporting at a larger scale to increase the asset’s resolution.
By default, assets exported as images from Figma have a DPI of 72. To calculate the DPI of an image exported at scale, multiple 72 by the chosen scale. For example, images exported at 2x have a DPI of 144. Images exported at 3x have a DPI of 216.
Note:
You may notice that the visual size of an image exported at 2x is not increased if you import it back into Figma. This is because Figma assumes that images with a DPI of 144 will be used in designs for high-density screens and automatically scales them in half to accommodate. Learn more about
importing content into Figma →
There are some format restrictions around scaling:
Figma only supports exports for SVGs at 1x. You can still scale an SVG by adjusting the values in the code, or by using width and height variables. For example: <
img src="image.svg" width="50px"
Figma only supports PDF exports at 1x. To export assets at a different scale, you’ll need to choose another format.
Suffix
This is an optional setting. Anything you type in the Suffix field will be added to the file name once exported. Use this to help organize exported assets without having to modify the layer name. For example, if you’re exporting a frame labeled “HomePage” as a PNG and enter “draft” in this field, the exported file name will be “HomePagedraft.png”.
Format-specific export settings
Some formats support additional export settings. Click
in the Export section of the properties panel to view and adjust these settings.
This table shows which settings are available for each format:
Format
Ignore overlapping layers
Include bounding box
Include “id” attribute
Outline text
Simplify stroke
PNG
JPG
SVG
PDF
Color profile
By default, Figma exports assets using the color profile of the file. For example, if a file is set to Display P3, assets will export as Display P3.
However, you can choose a different color profile when exporting:
Click
Export settings.
Open the color profile dropdown and choose a color profile.
Same as file (color profile)
sRGB
Display P3
Learn more about color profiles and color management →
Ignore overlapping layers
This setting is enabled by default. When enabled, Figma only includes the selected layers in the export. Any other objects that intersect or overlap the selected object will not affect the export. When disabled, Figma includes any layers that intersect with the selected layer or group.
Exporting a slice?
The
Ignore overlapping layers
setting works differently for slices than it does other objects. If Ignore overlapping layers is enabled and the slice is contained inside frame or group, Figma will only export the content that is in the same container as the slice and is visually within the slice boundaries.
Ignore overlapping layers
is disabled, all content that is visually within the slice boundaries will be exported. If the slice is not contained within a frame or group, enabling or disabling the Ignore overlapping layers setting has no effect. All content that is visually within the slice boundaries will be exported.
Image quality
If you're exporting as a JPG (JPEG) or PDF, you have the option to select the quality and size of the image. By default, JPGs export at
High
quality, while PDFs export at
Medium
quality. This setting can be changed by clicking
in the
Export
section of the right sidebar.
Image resampling
When exporting to JPG (JPEG), PNG, or PDF, you can choose an image resampling option. Image resampling helps maintain the quality of your exports and is useful when exporting images to different sizes or when exporting a vector design to a raster format.
When you scale an asset, the resulting export will have either fewer or more pixels than the original. To recreate the image, Figma uses an image resampling method to determine the color of each pixel.
In Figma, there are two image resampling options:
Detailed (default)
: Best used when optimizing for detail in exports. For example: High-quality images, vector art, and assets with gradients or drop shadows.
Detailed uses an image resampling method known as “bicubic sampling”. This method looks at each pixel and uses a weighted average of at least four surrounding pixels from the original image to use for the export.
Basic
: Best used when optimizing for hard lines in assets or for assets that don’t need finer details. For example: Icons, logos, low-resolution images, and pixel art.
Basic uses an image resampling method known as “nearest neighbor sampling”. This method looks at pixels from the original image and finds the closest matching pixel to use for the export.
To choose an image resampling method on an export:
Click
Advanced export settings
Choose an option from the
Image resampling
dropdown menu.
Include bounding box
Available for text layers only. When enabled, Figma determines the size of the export by the text layer's bounding box. If the bounding box is larger than the text, Figma will include the empty space in the export. If it is smaller, Figma will trim and discard the portions of text that fall outside of the bounding box.
When disabled, Figma determines the size of the export based upon the dimensions of the text itself. Figma will trim and discard any space between the characters and the bounding box.
Include "id" attribute
When enabled, Figma adds an "id" tag to the SVG's metadata. This allows JavaScript to easily access the
<svg>
element and can also be used to point to a specific id selector in a style sheet. Figma bases the "id" on the object's name in the Layers panel.
Outline text
This setting is enabled by default if at least one text layer is selected. Figma converts any text layers into glyphs to maintain appearance. Text will not be editable after export if this setting is enabled. If you need to maintain editability, disable this setting.
Simplify stroke
This setting is enabled by default if the selected object is a vector network (not a basic shape) and includes an inside or outside stroke. In Figma, you can
apply inside, center or outside strokes
to an object. SVG only supports center stroke. This setting ensures that other systems render inside and outside strokes correctly.
Note:
If you disable this setting, Figma will increase the weight of any strokes and apply a mask. This achieves the same visual result, but requires Figma to add extra lines to the SVG’s code.

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Anyone with
can edit
access can use auto layout
This article covers just one aspect of working auto layout. Check out these other articles to learn more about working with auto layout in Figma Design.
Guide to auto layout
: An overview of auto layout, how it works, key properties, and browse a collection of auto layout resources.
Toggle auto layout on a design
: Learn how to add auto layout to frames and layers so that you can start making your designs responsive.
Use the horizontal or vertical flows in auto layout
: Learn about the properties available to the horizontal and vertical flows in auto layout.
Use the grid auto layout flow
: Learn how to work with columns, rows, and cells with the grid layout flow.
The true power of auto layout's responsiveness emerges when combining resizing behaviors across nested auto layout frame.
Nesting an auto layout frame within another auto layout frame allows you to combine horizontal, vertical, and grid auto layout flows to create intricate components and interfaces. The nested frames will have both parent and child properties, meaning each frame will have its own separate padding and gap between values, which allow for for multi-dimensional layouts with elements that flow in different directions and arrangements.
Tip
: Nesting refers to the act of placing a layer inside of another layer, such as placing a button inside a component, or a shape inside of a frame.
Learn more about nesting and parent, child, and sibling relationships.
In this article, we’ll go through a couple of examples of nesting auto layout frames, but you can mix and match combinations of auto layout flows to achieve your desired effect.
Nest grids inside a grid
🚧 The grid flow for auto layout is currently in
open beta
. Some functions and settings may not yet be available to grid. The feature may change and you may experience bugs or performance issues during the beta period.
In the mobile home screen example below, there are three levels of auto layout:
Apps in home screen
: The apps on the home screen live in a top-level auto layout frame that uses a grid flow with three columns and six rows (3x6).
Folders
: The folders are auto layout frames that uses a grid flow. Each frame spans across four grid cells.
Apps in folder
: Within the folder frames, one uses a 3x3 auto layout grid, and the other uses a 2x2 auto layout grid.
You can nest an auto layout grid into another grid in a couple of ways:
Click and drag an existing auto layout grid frame into a cell.
Press
to toggle the frame tool and click into a cell to create a frame. Then click the
Grid
option in the
Auto layout
section of the right sidebar.
Learn more about the grid flow in auto layout.
Nest vertical and horizontal flows
In the social media newsfeed example below, there are four levels of auto layout:
Button:
Each button is a horizontal auto layout. This allows the button to grow and shrink as we change the label text.
Button Row:
We then add both buttons to another horizontal auto layout. This allows objects to respond when we make any changes to a sibling's contents.
Post:
We then add our buttons to a vertical auto layout with the other objects in the post. This includes a description, an image and the user's profile.
Newsfeed:
We've added three to a vertical auto layout to create our newsfeed. The auto layout frame is the
top-level frame
which sits on the canvas.
You can nest auto layout frames in a couple of ways:
Drag an auto layout frame into an existing auto layout frame
Create a new auto layout frame around a selection of auto layout frames (and other objects).
Tip
You can bypass Figma's default
parenting behavior
. Hold down the modifier key to keep an object within the current frame, or prevent Figma from nesting it.
Mac:
⌘ Command
Windows:
Ctrl
Learn more about the horizontal and vertical flows in auto layout.

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
You will need can
edit access
to the file to use the color picker.
The color picker allows you to apply
paints
to text layers, strokes and other vector objects.
Use the color picker to apply solid fills, gradients, patterns, images or videos. You can also control the hue, saturation, or opacity of a color, as well as apply blend modes.
Open the color picker
You'll need to apply a fill or stroke to a layer before you can access the color picker. Once applied, you can access the color picker in the right sidebar.
If all layers in your selection have the same fill or stroke color, you can view and update the color in the
Fill
Stroke
section.
If the layers in your selection have different colors applied, you can view and update colors from the
Selection colors
section.
In the right sidebar, you can view a swatch of the current color, the hexcode value, and the opacity. To open the color picker, click on the color swatch.
Tip!
You can also type a CSS color directly in the field. See the list of CSS colors that are supported by all browsers on the w3 website:
https://www.w3schools.com/cssref/css_colors.asp
Use the color picker
Use the color picker to apply the following paint properties and settings:
Create a custom color, or browse color styles and variables from your libraries.
Learn more about applying colors from libraries
Click to add a new color variable.
Learn more about variables
Choose from solid, gradient, image, or video fill type.
Learn more about paint fill types
Preview and apply a blend mode to the current layer.
Learn more about blend modes
Check color contrast for WCAG accessibility.
Learn more about color contrast accessibility.
Use the color palette in the body of the modal to select a color.
Select any color from an image or layer in the canvas.
Learn more about the eyedropper tool
Adjust the hue using the slider below the palette. Click and drag left or right to adjust.
Adjust the opacity of the color using the second slider.
View and adjust the color notation across different color models. Use the dropdown menu to choose between RGB, HEX, CSS, HSL, or HSB.
Learn more about color models in Figma
Tip:
To quickly adjust the values in RGB, HSL, or HSB fields, use your trackpad or mouse to scrub their values up or down. Hold down
Option
(Mac) or
Alt
(Windows), then click and drag your cursor to the left to decrease the value or to the right to increase it.
View and select colors and styles in the current file, or from libraries added to the file.
Want to reuse colors across your designs?
Save your colors, gradients, and images as Styles. Learn how to
create color styles
Check your design for accessibility
Proper color contrast makes your designs more inclusive by improving readability for users with visual impairments. The built-in color contrast tool helps you quickly identify when a color combination meets accessibility guidelines—and when it doesn’t—so you can make adjustments as needed.
What do contrast ratios mean?
Contrast ratios measure the difference between two colors, ensuring text and UI elements are readable for all users. Higher ratios provide better readability, especially for users with low vision.
The
Web Content Accessibility Guidelines
(WCAG) provide best practices for color contrast, readability, and navigation. Following these standards helps ensure your designs are inclusive, user-friendly, and compliant with legal requirements. WCAG guidelines require:
4.5:1 for normal text
(AA compliance)
3:1 for large text
and graphics
(AA compliance)
7:1 for normal text
(AAA compliance)
Check color contrast
Click
to open the accessibility view in the color modal.
Review the contrast ratio between your foreground and background colors.
Note:
The color of your selected layer is always considered the foreground. The contrast ratio measures the luminance (brightness) difference between two colors. It ranges from
1:1 (no contrast)
21:1 (maximum contrast, black on white).
Follow accessibility guidance to see if your colors meet
WCAG level AA or AAA standards
AA:
essential accessibility for standard compliance
AAA:
highest-level accessibility for enhanced compliance
next to
AAA
indicates that your current values don’t meet accessibility standards and need to be adjusted.
Tip:
Click the
indicator to auto-correct the value to its nearest compliant color.
Click
to adjust color contrast accessibility settings. The following options are available:
Categories:
Auto (based on selected layer)
Large text
Normal text
Graphics
Compliance levels:
AAA (available for text only)

--- Who can use this feature ---
Who can use this feature
Available on
any team or plan
Anyone with
can view
can edit
access access can view prototype connections and flows.
Anyone with can view or can edit access to the file can view prototype flows and connections. This applies to anyone who views or accesses the file without explicit edit permissions.
People with view access can see interactions between variants in a component set (interactive components). Viewers can only see variant interactions on main components, not instances.
Note:
There isn't currently a way to share a file with prototype connections turned on by default for viewers.
View access
Viewers can access all prototype connections on the current page, including any flows and starting points.
To view connections on another page, viewers can select another page in the left sidebar.
Connections and interactions
Use the shortcut
⇧ Shift
to toggle the visibility of any prototype connections. Figma will show any connections between frames, as well as the starting points for any flows.
Frames can have connections related to multiple flows. To view details of a specific interaction, select the connection and not the frame.
If a starting frame has multiple connections, select the starting frame to view all connections and interactions.
View the connection details in the
Properties >
Interactions
section of the right sidebar.
Type of interaction that
triggers
the flow.
Prototype action
and the destination.
Type of
prototype animation
. If this is an animation that supports a direction, you'll see the origin direction next to the animation name. For example, if the next frame comes from the right and moves left, Figma will show this as
Right
The
easing curve
for the interaction. This can be a preset value, like
Ease out
, or a custom easing curve.
Duration of the animation in milliseconds (ms).
Tip:
You can also toggle prototype connections from the toolbar. Select
view settings
(current zoom percentage) and toggle
Prototyping
off or on.
Prototype flows
View prototype flows in the
Properties tab of the right sidebar
Deselect all objects by clicking on a blank spot on the canvas.
Select
Properties
in the right sidebar.
View a list of any
Flows
on the current page.
Prototype connections are hidden by default for anyone with view access.
Select
to toggle visibility on.
Select
to toggle visibility off.
Hover over the flow to view the actions you can take:
Select
Select frame
to select the starting frame in the canvas. This will also allow you to view details in
Interaction
section of the sidebar
Select
Copy link
to copy link to clipboard
Select
Preview
to open the flow in
inline preview
Edit access
If you have edit access to the file, you can view and edit any prototype flows and connections. This applies to any flows and starting points, as well as variant interactions on both main components and instances.
Anyone with edit access to the file can access prototyping settings in the right sidebar. The
Prototype
tab allows you to
view, edit, or create interactions and animations
There are a few ways people with edit access can interact with prototype settings:
Select
Prototype
tab in the right sidebar to enter prototype mode.
Use the shortcut
⇧ Shift
to open the
Prototype
tab and view any connections.
Note:
Figma won't display the inherited connections on the canvas by default. Select the instance to view its inherited connections.

--- Who can use this feature ---
Who can use this feature
Supported on
any team or organization plan
Anyone with
can edit access
can apply or edit paints
Paints can be colors, gradients, or images. In Figma, you can use the
Color picker
to apply paints to
fills
and
strokes
Paints can be applied to the following objects and shapes using the
fill
stroke
properties:
Text layers
Basic shapes
Vector networks
Boolean operations
Frames
Paint types
There are three different types of paints you can apply:
Solid
: A solid color or paint.
Gradients
: Choose from four different gradients:
Linear (gradient)
: A progressive transition between two colors on a straight line. You can choose the angle of the line.
Radial (gradient)
: A circular gradient that has a color at the center which transitions to another color on the edge. This could be another color, or a fade to transparent.
Diamond (gradient)
: A gradient with four points that starts in the center of the object or layer. You can adjust the width and height of the gradient individually.
Angular (gradient)
: Creates a gradient clockwise from the starting position. You can adjust the location of both colors in the gradient to create a softer or harsher angle.
Pattern
: Pattern fills reference another object on the canvas. Learn more about using
pattern fills
Image or GIF
: A static image or animated GIF. Learn more about
adding images to your designs
Video
: Upload a .mp4, .mov, or .webm video file. Learn more
about using videos
Using gradients
To use a gradient as a fill or stroke:
Select the color swatch in the
Fill
Stroke
section of the right sidebar.
From the color picker, select the
Gradient
icon.
From the dropdown, select either
Linear
Radial
Diamond
, or
Angular
Each gradient will automatically start with two color stops. Color stops are the point where a gradient switches from one color to the next. Learn more about
adjusting colors and using the color picker →
To add additional color stops to a gradient, click anywhere along the gradient color slider.
To remove a color stop from a gradient, click on the stop from the color slider and select
Delete
Backspace
Use variables with gradients
Color variables store individual, raw color values. Learn more about
variables →
Gradients are a blend between two or more colors. You can use variables on color stops in a gradient to maintain consistency in your design system or to take advantage of theming, such as dark and light mode.
To apply a variable to a gradient color stop:
Select the color swatch in the
Fill
Stroke
section of the right sidebar.
From the color picker, select the
Gradient
icon.
Select a color swatch from the list of colors in the gradient.
Select the
Libraries
tab.
Select a color variable to apply to the gradient color stop.
To detach a variable from a gradient color stop:
Hover over the color stop that has the variable applied.
Click
detach.
You can save gradients, which may contain variable values, as styles to be reused in your design. Learn more about
creating color styles →

--- Before you start ---
Before you start
Who can use this feature
Supported on
any plan
Available in Figma Design and FigJam files
Users with
can edit
access to a file can use RTL and bidirectional text controls
RTL languages and bidirectional text are supported in Figma Design and FigJam files. Control the direction of bidirectional text on text layers, stickies, arrows, and more.
RTL
(right-to-left) refers to scripts, or writing systems, that start on the right and continue to the left. This includes Arabic, Hebrew, Farsi, Urdu, and more.
Bidirectional
(bidi) text refers to text containing both RTL and LTR (left-to-right) scripts, or writing systems.
By default, Figma automatically handles text direction based on language detection. However, you can override
text direction with controls ↓
in Figma Design and FigJam files.
RTL fonts are available by default in Figma Design. If a character isn’t supported by the font you’re using, Figma will
fall back ↓
to a Noto font.
Note:
If any RTL plugins were previously used on text layers in files, the text will be preserved. However, you can
upgrade these text ↓
layers to use Figma’s RTL and bidi features.
RTL text
Align text
In Figma Design files, text layers default to
left alignment
. That is, the blocks of text align to the left side of the layer’s bounding box. However, Figma will remember the alignment setting of the previous edited text layer until the file tab refreshes or closes.
Note:
Each text layer can have one text alignment. If you need different text alignment, create a new text layer.
FigJam
, text will automatically right-align on new stickies if you’re typing in an RTL script.
Navigate text
Mixing RTL and LTR scripts in the same text layer affects how highlighting and cursor movements work.
When using the left and right arrow keys to navigate through your text, think of their directions as “forward” and “backward” based on the
direction setting ↓
of the text.
When clicking and holding your mouse to highlight bits of text, the highlight moves in the direction of the selected language.
Direction controls
Figma supports bidirectional text, so you can write in both LTR and RTL scripts in the same paragraph. By default, Figma automatically handles text direction based on language detection. However, controls are available to override text direction per paragraph in Figma Design and FigJam files.
If an RTL script is detected in your text layer, a
will appear in the text section of the right sidebar, allowing you to control the text direction.
Figma Design
Change the direction of RTL text in a Figma Design file from the right sidebar, quick actions menu, or main menu.
Right sidebar:
Select text layer(s) containing RTL script.
Click or
to toggle between RTL and LTR directions.
Quick actions:
Select text layer(s) containing RTL script.
Open the
quick actions
menu.
Mac:
⌘ Command
Windows:
Control
Use
right to left text direction
left to right text direction
Main menu:
Select text layer(s) containing RTL script.
Click
to open the main menu.
Go to
Text
Text direction
Select
Left to right
Right to left
FigJam
Change the direction of RTL text in a FigJam file from the quick actions menu or the main menu.
Quick actions:
Select text layer(s) containing RTL script.
Open the
quick actions
menu.
Mac:
⌘ Command
Windows:
Control
Use
right to left text direction
left to right text direction
Main menu:
Select text containing RTL script.
Open the main menu in the top left corner.
Go to
Text
Text direction
Select
Left to right
Right to left
Supported fonts
If you are using the
Figma desktop app
, you can use any fonts already on your computer. If you're using Figma in the browser, you can
install the Figma Font Helper
to access your installed fonts.
Figma’s default font list includes RTL fonts.
If the font you’re using does not support the RTL scripts you’re typing, Figma will
fall back to a different font ↓
Tip!
Figma supports most Google fonts. Go to
fonts.google.com
and use the
Languages
filter to find fonts that support the script you want to use.
Font fallback
Font fallback allows you to use characters and icons that aren't specifically supported by that font.
If a font doesn't support a character you input, Figma will render that specific character in a Noto font. No more empty spaces or missing character icons.
Text using RTL plugins
Any RTL plugins previously used on text layers in Figma Design or text in FigJam will be preserved. However, you can upgrade the text to use Figma’s RTL and bidirectional control features.
Before you upgrade:
Check the RTL plugin for a way to reset the text to its original state before the plugin was used. This ensures your text will flow as expected when you upgrade to using Figma’s RTL and bidirectional features.
If the plugin doesn’t provide a way to reset the text, you can still upgrade it to use Figma’s RTL and bidi features, but you will need to create a new text layer and rewrite your copy.
Figma Design
Upgrade specific text layers using RTL plugins in Figma Design files to use Figma's RTL and bidirectional text features.
Right sidebar:
Select text layer(s) that previously used an RTL plugin.
From the right sidebar, click
in the
Text
section to open the
Type details
panel.
At the bottom of the Type details panel, click
Upgrade
Quick actions:
Select text layer(s) that previously used an RTL plugin.
Open the
quick actions
menu.
Mac:
⌘ Command
Windows:
Control
Use
update to support bidirectional text
FigJam
Upgrade specific text using RTL plugins in FigJam files to use Figma's RTL and bidirectional text features.
Select text that previously used an RTL plugin.
Open the
quick actions
menu.
Mac:
⌘ Command
Windows:
Control
Use
update to support bidirectional text (RTL)

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Users with
can edit
access to a file can use the arc tool
You can use the arc tool to create shapes like pie charts, rings and broken rings.
Use the arc tool
Draw a circle using the
Ellipse
tool.
When you hover over the circle, a single handle will appear on the right-hand side. This point (0) determines where you can begin to create an arc.
Click and drag the
Arc
handle up or down to change the sweep. This create a gap in the circle.
Tip:
The tooltip will indicate the sweep percentage. Dragging the handle up will produce a positive percentage, while dragging the handle down will indicate a negative percentage.
Now there will be three handles shown:
The
Sweep
indicates how complete the circle is, shown by the percentage of the circle that is filled.
The
Start
handle (which has a dot inside it) indicates where the arc begins. The starting position of the handle is set to 0, but you can drag this around the circle to change the position of the ring.
The
Ratio
handle at the center of the circle allows you to change the circle to a ring. By dragging the Ratio handle around, you can determine which segment is shown (either the gap or the remaining circle), as well as the size of the ring.
To make a closed ring, you will need to adjust the
Ratio
of the arc:
Drag the
Sweep
handle to make a pie.
Drag the
Ratio
handle to the desired size for the ring.
Drag the
Sweep
handle back to meet the start position, to close the ring.

--- Who can use this feature ---
Who can use this feature
Supported on
all paid plans
Anyone with
can edit
access can add GIFs to Figma Design files
Add GIFs to your design files and view them in
presentation view
. This allows you to simulate videos or animations, and create more dynamic prototypes.
Due to browser limitations, the width or height of an image
must not be larger than 4096 pixels
. Figma will scale any larger images so they fit within these limitations.
Add animated GIFs
Like
regular static images
, you can apply animated GIFs to layers as fills. This means you to apply them to any vector shape, including text layers. There are a few ways to add GIFs to your designs:
Drag and drop GIFs onto the canvas
Import files via the file browser
Add images to objects in bulk with place image
Upload image as fills
Copy and paste image fills between layers
Want to copy and paste an animated GIF from a website in the browser?
Some browsers will only allow you to copy a static version of the GIF. We recommend saving a copy of the GIF to your computer, then dragging the file into Figma.
View animated GIFs
Animated GIFs only play in
presentation view
. When viewing the file in the editor, animated GIFs appear as static images.
Identify GIFs by their GIF label in:
Fill
section in the right sidebar
Fill
modal
Layers panel
Next to the image's dimensions in the canvas
Manipulate or edit GIFs
Like static images, you can also manipulate aspects of a GIF. You can:
Scale, rotate and adjust the dimensions of GIFs
Adjust the opacity, fill mode, and rotation of a GIF
Apply or combine with blend modes
Create styles and components with GIFs
Apply masks to only show a part of the GIF
Apply scrolling overflow settings to GIFs
Create overlays in prototypes using GIFs
There are also a few extra options for GIFs:
View images and animated GIFs in the
Figma mobile app
Keep and export metadata including Frame delay and # of Loops
Choose which frame of the GIF you want to display in the canvas
There are some actions you can't take with animated GIFs. You can't:
Apply
image adjustments
to GIFs. We recommend layering fills and using
blend modes
instead.
View animated GIFs in the canvas (editor). Animated GIFs only play back in
presentation view
Export animated GIFs from Figma. Figma can only export animated GIFs as static images.

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Anyone with
can edit
access can use auto layout
This article covers just one aspect of working auto layout. Check out these other articles to learn more about working with auto layout in Figma Design.
Guide to auto layout
: An overview of auto layout, how it works, key properties, and browse a collection of auto layout resources.
Toggle auto layout on a design
: Learn how to add auto layout to frames and layers so that you can start making your designs responsive.
Use the grid in auto layout flow
: Learn how to work with columns, rows, and cells with the grid layout flow.
Create multi-dimensional auto layout flows
: Combine multiple auto layout flows to build fully responsive components and screens.
Vertical and horizontal flows
The
vertical
auto layout flow places objects in your frame along the y-axis. Any objects you add, remove, or reorder will follow the y-axis. For example: list items in a to-do list, or posts within a newsfeed or timeline.
The
horizontal
auto layout flow objects in your frame along the x-axis. Any objects you add, remove, or reorder will follow the x-axis. For example: a row of buttons, or icons in a mobile navigation menu.
When you have the horizontal selected,
Wrap
becomes available. Wrap pushes any overflowing objects to the next line in your frame.
Resizing
Resizing allows for objects to adapt their dimensions to the objects and spacing properties around them. You can set resizing behavior on a parent auto layout frame to determine how it resizes based on changes made to its contents, and vice versa.
Learn more about the resizing property.
Alignment
Choose how to align child objects within an auto layout frame. What alignment options are available are determined by the flow of the auto layout frame and the distribution, or gap between items.
Unlike objects in a regular frame, you can't control the alignment of the objects individually. For that reason, you set the alignment of the child objects on the parent auto layout frame.
Use the alignment box in the right panel to select from nine layout options for the children in a frame.
Select the box and use arrow keys to switch between the different alignment settings.
Select the box and press
to set alignment to the edge of the frame.
If gap between items is set to
Auto
, you have three options for each flow:
Vertical auto layout flow: Left, Center, Right
Horizontal auto layout flow: Top, Center, Bottom
If gap between items is set to a specific number, you have the same nine options for each auto layout flow:
Top left
Top center
Top right
Left
Center
Right
Bottom left
Bottom center
Bottom right
Note
: When one or more resizing properties are set to hug contents, some selections won't result in visually different layouts on the canvas. This is because hug contents removes any extra space around the child objects.
Spacing
Gap between items
Use
gap between items
to set the distance, or distribution, between objects in an auto layout frame.
Gap between items has two different settings:
Auto
: Set the gap between objects to be the largest distance possible. Type
Auto
in the field or select it from the dropdown menu.
A specified gap:
Specify how far apart you want objects to be. Enter a value into the field, nudge the values using your arrow keys, or scrub the field using your cursor.
To quickly toggle between these two settings, click the alignment box and press
If the auto layout frame's flow is set to vertical or horizontal, you'll be able to set gap between items vertically or horizontally, respectively. If the frame's flow is set to wrap, then you'll be able to set both horizontal and vertical gap between items.
Tip:
Hold
⇧ Shift
while dragging handles to increase and decrease using your
big nudge
values.
Padding
Padding controls the empty or white space between the boundary of an auto layout frame and the frame’s child objects. You can set padding uniformly, vertically and horizontally, or have different values for top, right, bottom, and left padding.
Adjust the padding using canvas controls or spacing fields in the right panel.
To access canvas controls, select an auto layout frame and hover over it. Pink handles will appear, similar to those in smart selection.
Click handles to open input fields and enter a numeric value
Or, click and drag the handle to change the spacing
Tip
: Check out our
keyboard shortcut guide
for shortcuts on setting padding on opposite sides, all sides, and more!
Padding controls in the right panel are separated into vertical (top and bottom) and horizontal (left and right) padding by default.
To set individual padding, click to use top, right, bottom, and left padding fields.
To set uniform padding or to use CSS shorthand, hold
⌘ Command
Control
and click into any padding field. You can also type CSS shorthand. For example, entering
1,2,3,4
sets the top, right, bottom, and left to 1, 2, 3, and 4 respectively. Entering
1,2
sets the values to top/bottom: 1 and left/right: 2.
Tip
: Press the
tab
key to move between input fields.
Additional auto layout settings
Text baseline alignment
A baseline is the invisible line in which text or a layer sits. In typography, descenders will extend beneath this line.
In some cases, aligning the baselines of layers can create more balance—such as when aligning baselines of text layers with varying font sizes, or when aligning an icon with a text layer.
To align layers by their baselines, select the layers you want to align, and click from the right panel to open auto layout settings. Next to text baseline alignment, click to enable baseline alignment.
Tip:
Click the alignment box in the right panel, and press
to toggle text baseline alignment on and off.
Strokes in layout
By default, strokes aren’t accounted for when calculating the size of objects, and thus don’t affect their parent frame or surrounding siblings.
This may not be ideal during developer handoff, as it doesn’t accurately represent how CSS renders borders.
Choose whether strokes will take up space in an auto layout frame by going to the auto layout settings, and using the dropdown next to
stroke
to select
included in layout
excluded from layout
Canvas stacking order
When multiple layers have negative spacing creating a stack, the last object (either the right-most or bottom-most object) in the stack will be on top by default.
You can change the visual order of the stack as seen on the canvas.
With the auto layout frame selected, click from the right panel to open auto layout settings. Next to
canvas stacking
, select:
First on top:
the first layer in the stack will be on top
Last on top:
the last layer in the stack will be on top
Note:
When the stacking order changes, the order of layers in the layers panel stays the same. Canvas stacking is solely a visual change that happens on the canvas.
Work with objects in the frame
Add objects
To add a layer or object to an auto layout frame.
Click and drag an object over an auto layout frame.
Use the blue indicator to choose where to place the object.
Note:
The object's size determines if it can be added to the auto layout frame. If any of the object's dimensions are larger than the parent frame, you won't see the option to add it to the auto layout.
Use the modifier key to bypass Figma's default behavior and add larger objects to an auto layout. Or, to add objects to a nested auto layout:
Mac:
⌘ Command
Windows:
Ctrl
Learn more about parent, child, and sibling relationships
Duplicate objects
You can duplicate existing objects to add them to the Auto layout. Figma will add the duplicate to the right (horizontal) or below (vertical) the original object.
Select a child object in an Auto layout frame.
Duplicate it by using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Ctrl
Arrange or reorder objects
Note:
You can't reorder objects in an instance. You will need to change the object's order in the main component, or detach the instance to reorder objects. Learn more about
using auto layout in components
You can change the order that objects appear in an auto layout frame. This is only supported on main components, or auto layout frames outside of a component.
Select the child object. If the layer is nested, you'll need to use the modifier key to deep select:
Mac:
⌘ Command
Windows:
Ctrl
There are a few ways to reorder objects:
Use the arrow keys on your keyboard the object to a new position.
Click-and-drag the object to a new position.
Remove objects
To remove an object from a main component or auto layout frame:
Drag the object outside of the auto layout frame
Click
next to
Appearance
in the right sidebar, or next to the layer in the left sidebar to toggle the layer visibility
Select the object and press the
Delete
Backspace
key
You can't delete a layer or object from an instance. If you try, Figma will only toggle the layer's visibility instead of removing it.
Tip
Toggling a layer or object's visibility will hide it from an auto layout frame. If you want to create a gap in where the object should be, you can adjust the opacity of the object instead. In the right panel, update the
Layer
settings to
Try it out
New to auto layout? Play around with the different auto layout properties in the interactive sandbox below to see how they work. Just keep in mind that this demo is a simplified version and doesn’t fully replicate how auto layout works in Figma Design.
Try it!
Change me
Auto layout
Add
Component
What did you think of this demo? Let us know by rating this article at the bottom of the page.
More ways to learn:
Figma tutorial playlist:
Learn to create flexible designs and components
This playlist includes video tutorials that cover the basics of auto layout, how to apply auto layout to designs, and hands-on tutorials for more practice.
Community file:
Auto layout playground
Grab a copy of the auto layout playground file to practice while you learn.

--- Before you Start ---
Before you Start
Who can use this feature
Notifications and the
Ready for dev
status are available on all paid plans
The
Completed
status is available on the
Organization and Enterprise plans
Requires a
Full or Dev seat
Statuses and notifications in Dev Mode help to manage developer handoff.
Statuses
are used to track when sections, frames, or components are ready for development.
Notifications
are based on status changes so developers can react to the state of designs.
Statuses
Dev Mode statuses show the current stage of a design for handoff. Designers can add notes to statuses about updates or changes.
There are two statuses available in Dev Mode for managing handoff:
Ready for dev
: Indicates that sections, frames, and components that are ready for a developer to review and implement.
Completed
(Organization and Enterprise plans): Indicates that development work for the design is complete.
Both the
Ready for dev
status and the
Completed
status also have a
Changed
state. The
Changed
state is set when a design that’s been marked ready for dev or completed is modified. It cannot be set manually.
When a designer updates a design previously marked ready for dev or completed, they should follow the steps to
update the status for the changed design
to clear the
Changed
state.
When a developer encounters a design that’s changed, they can
compare changes
to see why the state has changed and the differences from the previous version. The developer should also reach out to their designers to
update the status of the changed design
A design won't be marked as changed in the following instances:
If a component instance is updated from a shared library
If there’s a change in value of a variable that’s already attached to a layer in the design
If there’s a change in value of a style that’s already attached to a layer in the design
If the change is temporary, such as when hovering an object over a design that uses auto layout
Statuses, including updating a status that’s changed, can be set while editing designs or in Dev Mode. You can also change and update statuses in Dev Mode
ready for dev view
and
focus view
Mark a design as ready for dev
To mark a design as ready for dev:
In Figma Design or Dev Mode, select a section, frame, or component.
For sections and frames, next to the label, click
Mark as ready for dev
. For components, the button is above the upper-right corner. Any users that previously opened the file in Dev Mode are
notified
that the design is marked
Ready for dev
Remove the Ready for dev status
To remove the
Ready for dev
status:
For the section, frame, or component where you want to clear the status, click
Ready for dev.
In the drop-down menu, click
Remove status
Mark a design as completed (Organization and Enterprise plans)
To mark a design as completed:
For the section, frame, or component that you want to mark completed, Click
Ready for dev
In the drop-down menu, click
Mark as completed
. Any users that previously opened the file are notified that the design has been completed.
Update the status for a changed design (Organization and Enterprise plans)
To update the status for a design that’s changed:
For the section, frame, or component that was updated, click
Ready for dev
Optionally, in the text box that appears, type a reason for the change. The reason is included in the version history for the design and
notifications
triggered by the change.
Click
Done with changes
. The status is set to
Ready for dev
. Any users that previously opened the file are notified that the design has been updated. If you wrote a reason for the change, that reason is included in the notification.
Notifications
Dev Mode notifications keep you informed when statuses change in a file. Figma supports email, desktop, and mobile push notifications by default. You can also set up:
Slack notifications with the
Slack integration for Figma
Teams notifications with the
Figma app for Microsoft Teams
If you’ve viewed a file in Dev Mode and have either a full or dev seat, you’ll receive notifications when designs are first marked as
Ready for dev
If you have an Organization or Enterprise plan, additional notifications are triggered:
For designs that were previously
Ready for dev
Completed
, when the status is
updated following a change
to the design.
When a design is
marked Completed
If multiple designs change status within an hour, the notifications are grouped by type. For instance, several
Ready for dev
updates will be combined into a single notification.
Dev Mode notifications include links to the relevant designs:
The
Inspect in Dev Mode
link goes to the
ready for dev view
for the corresponding Figma file
The individual cards for designs open the corresponding design in
focus view
Manage Dev Mode notifications
To modify your Dev Mode notification settings for a file:
Open a Figma Design file.
Click the Dev Mode toggle or use the keyboard shortcut
Shift
Click
Comment
or press
to enter comment mode.
Click
Settings
at the top of the right sidebar.
From the dropdown, select one of the following:
Status changes
: This setting notifies you any time a design in the file is marked
Ready for dev
Nothing
: You are sent no Dev Mode notifications.
The settings for Dev Mode notifications can be changed in the Dev Mode interface and when focused on a design.

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can add images
You can use an image as a layer's fill. You will need to have the image downloaded to your computer to upload it.
Change a layer's fill to an image
Select a layer on the canvas.
Click on the swatch in the
Fill
section of the right sidebar to open the color picker.
Select
Image
from the fill options. A placeholder image of gray and white checks will be applied to the layer's fill.
Click
Upload from computer
to upload an existing image or click
Make an image
to create an image using
Figma AI.
Replace image fills
You can change an image fill at any time. This will keep any fill mode settings you've applied, including any cropping or positioning.
There are a few ways to do this:
Drag the image file over the image preview in the color picker
Double-click on the image and choose a new image using the color picker
Drag the image file over the swatch in the
Fill
section of the right sidebar

--- Who can use this feature ---
Who can use this feature
Available on
any team or plan
Anyone with at least
can view
access to a file can add and view comments
New to comments?
Learn how to get started with comments.
Comments allow you to respond to feedback, collaborate with others, and iterate faster.
If you are the owner of a file, you will receive email notifications for all comments by default. If you are not the file owner and leave two or more comments on a file, you’ll be notified about all new comments that file receives.
Note:
When a file's permissions changes from
Anyone
Only invited people
, collaborators who previously received notifications on the file will stop receiving notifications if they don't have a direct role in the file or the containing project or team.
Email notifications
To modify your email notification settings for a file:
Click
Comment
or press
to enter comment mode.
Click
Settings
at the top of the right sidebar in comment mode:
From the dropdown, select one of the following:
Everything
: This setting will notify you of any comments made on the file, @mentions that mention you, and replies or reacts to threads you’ve created or participated in.
Just mentions and replies
: This setting will notify you of @mentions that mention you and replies or reacts to threads you’ve created or participated in.
Nothing
: You will not be sent any email notifications for new comments. You will still receive an email for @mentions that mention you, even if you have this option selected.
Note:
In addition to receiving email notifications, you will also receive in-app notifications. In-app notifications cannot be disabled.
Learn more about notifications in Figma.
Slack notifications
Connect Slack to your Figma account using our
Slack integration
. This lets you receive notifications in Slack when a team member comments on a file or thread you're active on.
Manage Figma notifications in Slack.

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in FigJam and Figma Slides
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
You can use Figma AI to adjust the tone of any text within your file. Quickly rephrase, condense, or expand content to reduce manual rewriting and keep your tone consistent.
Use Adjust tone
To use Adjust tone in FigJam or Figma Slides:
Select a text layer.
From the bottom toolbar, click
Actions > Rewrite this
On the prompt box, click
Adjust tone
Drag the tone dial inside the axis or choose a tone preset: Executive, Technical, Basic, or Educational. Figma AI will attempt to detect the language you’re using and adjust the text accordingly.
If you aren’t happy with the adjusted text, click
Try again
to rewrite the text again. To undo the changes, click
Reset
in the adjust tone axis.

--- Before you start ---
Before you start
Who can use this feature
Anyone on
any team or plan
has access to the layers Panel in the Editor.
Only users with
can edit access
can lock and unlock layers.
Lock layers to prevent them from being moved in the canvas, or protect them from accidental edits. When you lock a layer, you can't interact with or move it around in the canvas. You can still select a locked layer in the Layers Panel or adjust any properties of the layer.
If you lock a parent frame or group, then any
child layers
of that frame or group will also be locked. It's not possible to unlock child layers without unlocking the parent.
Learn about parent and child relationships →
Note:
It's possible to
select locked layers
via the right-click menu. Right-click on the layer, choose
Select layer
, then select the layer from the options. Locked layers have a
padlock next to them.
Keyboard shortcuts
Mac
⌘ Command
⇧ Shift
Windows
Ctrl
Shift
Canvas
Right-click on the layer in the canvas.
Select
Lock
Unlock
from the options.
Layers Panel
Hover over the layer in the Layers Panel until the
appears.
Click the padlock to lock the layer. Figma will close the
padlock next to the layer in the Layers Panel.
If this is a frame or group, then any children of that frame/group will also be locked.
You will no longer be able to edit the layer in the canvas.
Click the
padlock again to unlock the layer.
Tip!
You can lock/unlock multiple layers at once. Click on the
and drag across the layers you want to update.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone can import Sketch files to their drafts
Anyone with
can edit
access to a team can import Sketch files to that team
You can import Sketch files (.sketch) into Figma. When you import a file, it is converted to a Figma Design file and any further changes made to the original file in Sketch will not be reflected in Figma.
Note
If you’re using a beta version of Sketch, there may be discrepancies with how assets are imported into Figma. We recommend saving files using the latest version of Sketch before importing them to Figma.
If you only want to import individual assets from Sketch, you can also copy and paste the asset into a design file. Learn more about
copying assets between design tools →
How Sketch features are converted in Figma
After importing a Sketch file, you’ll notice that existing Sketch features will have been converted to Figma features.
New to using Figma?
Learn more about what to
expect when moving from Sketch to Figma →
Artboards
Any artboards in the Sketch file will be converted to frames in Figma. Like artboards, frames are used to contain content but include some additional functionality. Learn more about
working with frames →
Pages
Like Sketch, Figma supports having multiple pages within a single design file. Any page that exists in your Sketch file will be imported as a separate page within the design file.
You can navigate between pages using the Layers panel in the left sidebar. Learn more about
using the Layers panel →
Symbols and libraries
When you import a Sketch file into Figma, any symbols included in the original file are converted to components in Figma. The Symbols page in the Sketch file will be imported into Figma as a page named “Symbols” that contains your main components. Learn more about
working with components →
When you import a symbol library from Sketch, it is imported as a design file, not a library. If you’re on a paid plan, you can publish the components to a library after importing. This allows you to use the components across multiple design files. Learn more about
publishing libraries →
Note:
If you a import Sketch file that includes symbol instances, you’ll need to reconnect those instances to the main component after publishing the symbols to a library. You can do this either by
swapping individual components
or by
performing a library swap
Fonts
If your Sketch file uses fonts stored on your computer, you will need to make those fonts available in Figma. If you’re using the
Figma desktop app
, these fonts are accessible by default. If you’re using Figma in the browser, you’ll need to download the
Figma font installer
to access them. Learn more about
accessing fonts on your computer →
If you receive a “Missing fonts” error message after importing a Sketch file, you’ll be prompted to update any affected text layers. Learn more about
managing missing fonts →
Note:
Figma does not support fonts installed on devices running ChromeOS or Linux. Organization admins can upload custom fonts for members of the organization to use. Learn more about
uploading custom fonts to an organization →
Styles
Styles are not retained during the import process. You will need to recreate any styles you used in Sketch after the file has been imported. Learn more about
creating styles →
Import a Sketch file
You can import a Sketch file using the file browser or the editor.
Note:
Attempting to import very large Sketch files may result in a failed import. To prevent this, consider splitting up the Sketch file into smaller files before importing.
Import a Sketch file using the file browser
From the
file browser
, click
Create
Import
at the top-right of the page.
Click
From your computer
Select the Sketch file you want to import and click
Open
. Depending on the file size, the import process may take a few moments.
Click
Done
Note:
You can also drag and drop files from your computer to import them to the file browser.
Import a Sketch file from a Figma Design file
Click
Main menu
Select
File
New from Sketch file
Select a .sketch file and click
Open

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
With First Draft, you can transform ideas into editable wireframes or designs in a couple of minutes. This helps you explore a wider range of design possibilities quickly and reduces the amount of effort needed to create early explorations from scratch.
How it works
Figma AI uses Figma-built wireframing and design libraries as the foundation for generating designs.
Each library has a set of building blocks—or stacks of components—that are used to piece together your design based on the description you provide.
The libraries excel at generating designs that match common design patterns on websites and mobile apps. But, you might find things go awry when generating concepts from outside these design frameworks.
The following prompts typically generate strong outputs:
A checkout page for a store that sells BBQs
A food delivery app for pet food
A marketing website for a content strategy consultancy
Figma AI might struggle with these prompts, as they don’t use design patterns common to websites or mobile apps:
A book layout for a novel
A birthday party invitation
A flyer in the shape of a fish
Once you’ve generated a design, you can make changes to it using another prompt, or with a collection of style controls.
Tip
: It’s not possible to generate designs using your own design system, although we hope to make that functionality available soon.
Make a first draft
Click
Actions
in the toolbar.
Select
First Draft.
If needed, click
Library
to make a website or mobile app wireframe or basic design. If you don’t choose a library, Figma AI will select the one best suited to the prompt.
Enter a prompt, like: ‘A pricing page for a developer tools startup’, or click one of the available suggestions.
Click
Make it
Preview different themes by clicking the thumbnails underneath the prompt.
If you’re happy with the design, close the actions menu. If you’d like to refine it further, click
Make changes.
Make changes to the design
Note
: Once you close
Actions
, you won’t be able to make changes to the design using
First Draft
libraries. Instead, you can keep editing your design by modifying its properties—just like with any other design.
You have two options for modifying your design when you click
Make changes
Use a prompt to describe your changes
Use the style controls to customize the color, typography, spacing, and border radius
You can switch back and forth between each option while making changes to a single design.
Tip
: Want to compare different riffs? Duplicate the selected frame using
Control
on Windows or
Command
on MacOS and then keep making changes.
Use a prompt to customize the design
Using a prompt, you can modify the theme, content, or structure of your design. Here are some examples:
Theme
Use a watermelon theme
Try a different color scheme
Make this more vibrant
Content
Change the settings icon to a gear
Make this about audiobooks rather than podcasts
Change the names of the customers in the customer testimonial section
Structure
Add another section under Top of the Charts called Trending in Germany
Move the Featured section below the nav bar
Tip
: Select one or more parts of the design to only apply the prompt to the selected elements.
Use style controls to customize the theme
Adjust the theme using the style controls gives you control over the color, border radius, spacing, and typography of the design.
Color
Click
to toggle between light and dark mode. You can also apply a new color to the theme by choosing one of the preset colors or clicking the color wheel to choose your own color.
Border radius
Drag the slider to increase or decrease the border radius for eligible objects.
Spacing
Drag the slider to increase or decrease the spacing between items.
Typography
Click
title
body
, or
label
to select a group of text elements to change. Then, click a new font to preview it in the design.
Tip
: Something not working as expected? Check out our guide to
Troubleshooting AI tools in Figma Design →

--- Before you start ---
Before you start
Who can use this feature
Available on
any paid plan
Only team admins can manage default libraries for the team
Team admins can choose which libraries are available in team files. This allows you to quickly share styles, components and variables across team files. This applies to both Figma Design and FigJam files.
Note:
You need to
publish styles, components and variables to your library
before you can enable them as a default library.
Manage team libraries
Manage team libraries in the team's
Settings
. Make libraries available in
Design files
FigJam files
, or
All files
Professional plan
Organization and Enterprise plan
From the file browser, click
All projects
Click the
dropdown menu
next to the team name and select
View settings
Under
Libraries
Shared
, click the
View team's libraries
option.
View a list of available libraries in the library modal. Every library corresponds to a file with published styles, components and variables.
Click the library name to view assets in that library.
Click
Off
next to the library to adjust.
Choose which files to make the library available in:
Design files
FigJam files
Slide decks
All files
To remove a library from your files, click
next to the current setting and select
Off
Navigate to the team in your organization.
Click the
dropdown menu
next to the team name and select
View settings
Under
Libraries
Shared
, click the
Enable libraries
option.
View a list of available libraries in the library modal. Every library corresponds to a file with published styles, components and variables.
Click the library name to view assets in that library.
Click
Off
next to the library to adjust.
Choose which files to make the library available in:
Design files
FigJam files
Slide decks
All files
To remove a library from your files, click
next to the current setting and select
Off
Note:
On the
Enterprise plan
, you can set a
default mode
for the team if the library contains a
variable collection
with at least two
modes
For example, you might have a variable collection that contains spacing values for different screen sizes. The variable collection might have three modes: desktop, tablet, and mobile.
If your workspace is dedicated to mobile apps, you could set the default mode to mobile. When someone creates a new file in the workspace, the page level default mode is set to mobile and applies to all variables used on the page. People can always switch to another mode if they need to.
Tip:
Admins can manage a team's access to UI kits from the team's libraries settings. Admins can also disable or enable the UI kit feature for an entire team or organization. Learn more about
UI kits and how to toggle their access →
Access team libraries
Design files
When you make a library available in a design file, you can:
Find and apply styles using the
style pickers in the right sidebar.
Apply styles to layers in Figma Design →
Drag components into the canvas from the
Assets
panel in the left sidebar. Click to select variants of a component.
Add components to your designs →
Review any variables published in the library whether they are included as a style or are mapped to a property in a component.
Apply variables to designs →
FigJam files
Access components, along with stickers curated by Figma, from the
library
tool.
Use stickers and components from libraries →
Note
: This video explains a feature using Figma's old interface. For examples of the new interface, UI3, see the content in this article.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Requires a
Full seat
on paid plans
Anyone with
can edit
access to a file can use transforms
Transforms allow you to create dynamic, repeating patterns from objects in your design file. You can access transforms while in
Figma Draw
Similar to using
boolean operations
, transforms are non-destructive actions, meaning they don’t permanently alter your original object. When you add a transform to an object, the object is added to a transform group. This preserves that original object, allowing you to select and modify it at any time. You can also add additional objects to the transform group to increase the complexity of your design.
There are two types of transforms:
Radial repeat:
Repeats the object around a central point, creating circular arrangements
Linear repeat:
Repeats the object in a horizontal or vertical line, creating evenly spaced sequences
Tip:
Want more hands-on experience using transforms? Check out this
bite-sized illustration project
to practice while you learn.
Add a transform to an object
To add a transform to an object:
In Figma Design, use the toolbar toggle to switch to
Draw
Select the object you want to transform.
In the right sidebar, select an option from the
Additional transform modifier
menu.
After adding a transform, you can click on it in the right sidebar to access the
Transform
settings. From here, you can adjust the number of repetitions and how the repetitions are spaced.
Using transforms doesn’t automatically add additional layers to the canvas. To convert your transform into layers, select
Apply transforms to selection
when you’re happy with your arrangement.

--- Who can use this feature ---
Who can use this feature
Images are available on
all plans
Video is available on
all paid plans
Anyone with
can edit
access to a file can upload images and videos
Add images and video to your design files to incorporate photography, screenshots, or other visual assets to your designs.
Supported file types include:
JPG, PNG, HEIC, WebP, TIFF (only available on Safari), and GIF raster image files
MP4, MOV, and WebM video files
Note:
When a Scalable Vector Graphic (SVG) is imported into a Figma Design file, the SVG is no longer treated as an image. While raster images are applied to layers as fill properties, vector images are converted to
vector layers
that you can edit, just like other shapes drawn in Figma.
Figma doesn't have a specific layer type for raster images and videos. Instead, they are a type of
fill
. This allows you to add images and videos to any shape or vector network.
View and update image and video fills in the
Fill
section of the right sidebar. Figma will show a thumbnail in the swatch and an
Image
Video
, or
GIF
label.
Raster images and videos added to the canvas create a rectangle with the asset set to the object's fill. They can be identified in the left sidebar with the following:
Static images will have an
image icon next to its layer name
Videos and GIFs will have a
video icon next to its layer name
If you add them to an existing object, Figma uses the layer icon and description of the original layer.
Note:
Figma downsizes images with a width or height
larger than 4096 pixels
. This scales the image's original dimensions proportionally, so the longest edge is less than 4096 pixels.
Sometimes, Figma needs to decode and convert an image before adding it to the file. For this reason, we can't guarantee that all file metadata will be preserved.
Add images and videos to files
As raster images and videos are fills, you can add them to any vector or shape. This gives you greater flexibility and control.
There are a number of ways you can add images to design files:
Drag and drop image files from your computer onto the canvas
Import static images into the file browser
Add images and videos in bulk
Use the color picker to upload an image or video
Copy and paste an image between objects and from your clipboard
You can also
add video
and
animated GIFs
to your prototypes. GIFs only playback when viewing designs and prototypes in presentation view.
Edit images
There are lots of ways to edit or adjust images:
Scale, rotate and adjust the dimensions of any layers with images
Crop and re-position images applied to layers
Adjust the image options including the fill mode, rotation and blend modes
Includes images in
styles
and
components
Apply
masks
to only show a part of the image
Make
adjustments to images
like changing the hue, saturation, or contrast
Having issues loading images?
Learn how to
troubleshoot common image loading issues

--- Before you Start ---
Before you Start
Who can use this feature
Users on
any
plan
Users with
View
Edit
access to a file can find text
Users with
Edit
access to a file can replace text
Using FigJam?
Check out our
Find and replace text in FigJam boards
article.
Locating items
in large files can be a challenge. Find and replace lets you quickly find, select, and make changes in bulk.
Find items
Use the Find option to quickly search your entire file for text, shapes, frames, and more.
Click
in the left sidebar or use the following keyboard shortcut to open the search bar:
Mac:
Command
Windows:
Ctrl
Enter the text or layer name you want to find. The search results automatically populate as you type.
You can display results by your current page or see results for all pages.
Click
to add search filters for layer type—such as text, frame, shape, etc.
Use
and
to move through your results.
In the Settings menu, use
Other
to search for everything else, such as widget or slice names.
Click to select a layer. Edit, replace, or delete selected layers as needed.
To return to the Layers panel, click
or press
Esc
Replace text
Use the Replace option to quickly replace text layers.
Click
and select
Replace
Search for the text you want to replace.
Note:
Only text layers display as options to be replaced. If you search for an item that cannot be replaced (such as a widget or frame name), no results will display.
From the search results, select the layer you want to replace.
To select several layers, hold
Command
(Mac) or
Ctrl
(Windows) and click each layer.
To select all layers within a range, hold
Shift
and click layers at the beginning and end of the range.
Enter the replacement text in the
Replace with
field.
Click
Replace
to replace the selected layers, or click
Replace all
to replace all layers on the page.
To return to the Layers panel, click
or press
Esc

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can adjust corner radius and smoothing
In interface design, we see rounded corners on screens, icons, buttons, and cards. It's easier for eyes to follow circles and curves, while sharp edges disrupt our line of sight.
Figma represents corner radius in (density-independent) pixels. You can adjust corner radius for an entire shape, or for each point in a vector object.
Figma has two features for creating rounded corners:
Corner radius:
Rounds the corner where two lines meet. Use this to create shapes with rounded corners.
Corner smoothing:
Adjusts a rounded corner to create a continuous curve. Use this setting to create "squircles".
Note:
Rounded corners may not be available for rectangles you create with the pen tool or rectangles you edit in vector edit mode.
You can apply corner radius and smoothing to:
Frames
Rectangles, polygons, and stars
Vector networks that are closed shapes
Boolean operations that contain rectangles
Note:
It's not possible to apply corner radius to lines, arrows, vector networks with only a single stroke, or boolean operations that only contain ellipses.
Adjust corner radius for an entire shape
There are a few ways to adjust the corner radius for a vector object or shape.
Tip:
Your S
mall nudge
and B
ig nudge
settings apply to corner radius too. Use the
and
keys to use your small nudge. Hold down
Shift
to use your big nudge settings with the arrow keys.
Design tab
Select the layer.
Enter a pixel value in the
Corner radius
field in the right sidebar or hover your cursor over the
icon, then click and drag left to reduce or right to increase.
Canvas
You can also adjust the corner radius for rectangles, stars, and polygons on the canvas.
Select the shape you want to update.
Hover over the corner you want adjust until the radius handle appears.
Drag to adjust the radius.
Adjust the radius of an individual corner
By default, Figma applies corner radius to the entire shape. There are a few ways to adjust the corner radius for individual corners.
Caution:
It's not possible to adjust an individual corner's radius in an instance. This is something to think about when setting corner radius for components.
Independent corners setting (rectangles and frames only)
Select the rectangle or frame you want to update.
Click
Independent corners
in the right sidebar.
In the
Corner radius details
panel, you can:
Enter a pixel value for each corner
Click
Apply variable
in any of the four corner radius fields to
apply a number variable
Use the slider to adjust
corner smoothing
Canvas (rectangles only)
You can also adjust the corner radius for an individual corner in the canvas. This only applies to rectangles.
Select the shape you want to update.
Hold down the modifier key to adjust a single corner.
Mac:
⌥ Option
Windows:
Alt
Hover over the corner you want adjust until the radius handle appears.
Drag to adjust the radius.
Vector edit mode (shapes only)
Select the shape you want to update.
Double-click on the shape or press
Enter
Return
to enter vector edit mode.
Select the individual point on the canvas.
Adjust the corner radius using the
field in the right sidebar.
Enter a pixel value in the
Corner radius
field or hover your cursor over the
icon, then click and drag left to reduce and right to increase.
Corner smoothing for squircles
Designers noticed a difference in the rounded corners of iOS7 app icons. This corner smoothing created a seamless continuous curve that regular rounded corners couldn't.
We refer to shapes that use this particular effect squircles. A shape that's somewhere between a square and a circle. We still see squircles in Apple's later designs, including OS14.
There's quite a bit of mathematics that goes into a squircle. Learn more about
one Figma engineer's search for squircles
Adjust corner smoothing
You can apply corner smoothing to any shape you can apply corner radius to. Unlike corner radius, you can only apply corner smoothing to the entire shape.
Select the layer you want to update.
Open the
Design
panel in the right sidebar.
Click the
Independent corners
icon to open the
Corner radius
panel.
Use the slider to adjust corner smoothing or click
iOS
to set corner smoothing to 60%, the default for iOS.

--- Before you start ---
Before you start
Who can use this feature
Available on
any paid plan
Anyone with
can edit
access to a file can create prototypes.
In Figma, variables are stored values that represent design attributes or saved states. They can be string, number, color, or boolean value types.
You can set and modify the values of variables with prototyping actions—allowing you to create immersive prototypes that dynamically change based on user selection, using only a few simple frames and interactions. This means you can use prototype actions to:
Update text content with string variables
Change object dimensions, corner radius, or auto layout properties with number variables
Toggle layer visibility with boolean variables
To begin using variables in prototypes,
set up your variables
, then
use the
Set variable
action
to change or modify your variable values.
Once you’ve got the hang of using variables and prototypes together, try some more advanced features to extend their power even further:
Expressions
: Manipulate variables with basic operations, allowing you to build more advanced prototypes with flexible values
Multiple actions and conditionals
: Use if/else statements to check if a condition is met before performing actions, and stack an unlimited number of actions on a single trigger
Learn more about variables in Figma
Try it out
Want to get even more practice? Check out the
advanced prototyping playground file
Looking for more examples of how you can use variables in prototypes? Check out some more
advanced prototyping examples
Set up your variables
Before you can prototype with variables, you need to:
Create your variables
Learn how to create and organize variable collections
Apply variables
Learn how to apply variables to text content, object dimensions, layer visibility, and more
Set variable values
Once you’ve created and applied variables throughout your design, you can start using them with prototypes.
Each prototype interaction has a trigger (what causes the prototype to advance forward) and one or more multiple actions (what happens as a result of the trigger).
The
Set variable
action allows you to set or modify the value of a variable as a result of a prototype trigger.
To use the
Set variable
action on a prototype interaction:
Create a
prototype interaction
Navigate to the
Interaction
modal and select a trigger from the dropdown menu.
From the
Action
dropdown menu, select
Set variable
From the
Target
dropdown menu, select the variable you want to set a new value for.
In the
Value
field, enter in a new value for the variable. The new value type must match the variable type you’re changing. For example, if you selected a number variable, the new value must also be a number.
String values
: Enter any text string literal (contained in quotations), or select any string variable from the selection panel
Number values
: Enter any number value, or select any number variable from the selection panel
Boolean values
: Enter
true
false
, or select any boolean variable from the selection panel
Color values
: Enter any hex code, or select a hex code from the color picker
Play your prototype
to test the interaction.
Note:
Do your variables have multiple modes?
Learn more about setting variable values to specific mode values
Tip:
Use
expressions
to manipulate variables with operations. For example, you can perform basic math on number variables, combine multiple string variables together, or use boolean expressions.
Try it out
Let’s create a collection of variables titled “Shapes”. This collection will include one string variable that represents the name of the shape.
Deselect all items on the canvas, then find the
Local variables
section in the right sidebar and click
Open variables
Click
Create variable
, and select
String
In the
Name
column, enter “shapeName”.
In the
Value
column, enter “circle”.
Now, you can apply the
shapeName
variable to your design. For this example, we’ve created a simple design that includes a frame with two shapes (a circle and a square) and two text layers. We want to bind the
shapeName
variable to the bottom text layer so that it changes based on the selected shape.
Recreate the design pictured below. Add an ellipse object, a rectangle object, and two text layers to a frame. Enter “You picked:” as the content of the first text layer.
Click to select the bottom text layer on your frame.
From the
Design
tab in the right sidebar, find the
Text
section and click
Apply variable
Select the
shapeName
variable from the variable selection panel to apply it to the text content.
Now, let’s add an interaction with a
Set variable
action.
Select the ellipse object.
From the right sidebar, switch to the
Prototype
tab. In in
Interactions
section, click
the plus sign to add a new interaction.
In the
Interaction
modal, create an interaction with an
On tap/On click
trigger and the
Set variable
action.
Select the
shapeName
variable from the
Target
dropdown menu. In the
Value
field, set the new value to “circle”.
Repeat steps 1-4 for the rectangle object. This time, set the
shapeName
variable to “square”.
Now, you’re ready to
play your prototype
to test it out. When you click each shape object, the text layer will automatically update based on the new variable value.
Prototype with variables and components
Once you’ve learned the basics, you can start using variables and components together in your prototypes.
Apply variables to components to automatically update your component when you change the value of a variable in a prototype. Any change in variable value also updates any other elements bound to that same variable.
The value of a variable can be changed by:
Using the
Set variable
action
Using the
Change to
action in an interactive component
Using the
Set variable mode
action
Example
An interactive button component set has a
default
and a
hover
state. The component uses the
Change to
action, so that when you hover over the
default
variant, it switches to the
hover
variant (and vice versa).
A boolean
hoverState
variable is applied to both an instance of the variant and the visibility of a separate, overlay layer.
When you hover over the
default
variant in your prototype:
The instance updates to the
hover
variant
The
hoverState
boolean variable updates from false to true
The image layer is made visible
Want to practice with a similar example? Check out the “Try it out” section below.
The location where you apply the variable determines the scope of changes in the prototype.
Apply variable to:
When prototyping:
Variant properties of component instances
Change the value of the variable to update the variant of the instance.
Component properties
Change the value of the variable to update all instances of the component.
Learn more about applying variables to component and variant properties
Try it out: Example 1
Create an
interactive component set
Create a button component that has a “clicked” variant property with “true” and “false” values.
Add a prototype interaction on the “false” variant, using the
On click
trigger and the
Change to
action. Now, when the false variant is clicked, it will switch to the true variant.
Place an instance of a variant from the interactive component set in a frame.
Add the false variant to a frame.
Assign a variable to the interactive component instance. The value of the variable must match a
variant property value
Create a boolean
circleVisibility
variable with a default false value.
Select the instance of the button.
From the right sidebar, hover over the clicked variant property.
Select
Apply variable
Click to select the
circleVisibility
variable to bind to the property.
Assign the same variable to another layer in your design.
Add an ellipse object to the frame.
From the
Appearance
section of the right sidebar, right-click the
Hide
icon.
Select the
circleVisibility
variable to apply the boolean variable to the visibility of the ellipse layer.
Play your prototype to test the interaction. When the interaction is triggered and the component is changed, the value of the variable also changes. This means that if you have that same variable bound to any other values, those will also update.
Try it out: Example 2
Create a component set with at least two variants.
Create a component set that has a “shape” variant property with “circle” and “square” values.
Place an instance of a variant on a frame.
Assign a variable to the instance. The value of the variable must match a
variant property value
Create a
shapeType
string variable with a default “circle” value.
Click on the instance to select it.
From the right sidebar, hover to the right of a variant property and click
Assign variable
Select the variable you’d like to bind to the property.
Create an interaction on any object within the frame that uses the
Set variable
action. Change the value of the variable to match the value of the unused variant property.
Add a prototype interaction on an object, using the
On click/On tap
trigger and the
Set variable
action. Set the
shapeType
variable value to “square”.
Play your prototype to test the interaction. When the interaction is triggered and the variable is changed, the variant also updates.

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Users with
can view or can edit
access to a file can measure distances between objects on the canvas
Vector mode requires
can edit
access to a file
Measure distances between objects in the canvas with measurement guides. This allows you to measure the distance between:
Vector shapes and paths
Text layers
Frames
Components
Groups
Guides
Note:
It's not currently possible to measure the distance between two guides. To calculate the distance between two guides, select the first guide and hover over the second guide. Figma will display the position of both guides on the axis so you can calculate the difference.
Measure distances
Measure distances between objects, even if they are nested within Frames, groups, or Components.
Select the first object in the canvas.
Hold down the modifier key:
Mac:
⌥ Option
Windows:
Alt
Hover over the second object.
Figma will display a red line between the two objects, as well as horizontal and vertical measurements.
Measure distances between nested layers
Select the first object in the canvas.
Hold down the modifier keys:
Mac:
⌘ Command
⌥ Option
Windows:
Control
Alt
Hover over the second object.
Figma will display a red line between the two objects, as well as a measurement.
Note:
It's not currently possible to change the weight or color of the red measurement line. If you are working with similar or low-contrast colors, and want to see the measurement line, you can toggle the Fill visibility of the low contrast layer.
Object bounds
Figma will measure the distances between the
bounds
of each object - the bounding box that surrounds an object or layer.
There are some situations of types of objects where this behavior may not be what you expect.
Strokes:
If you have strokes applied to an object, Figma will measure to the object's bounds and not the outer limit of the stroke. You will notice this more on objects with
Center
Outside
stroke.
Text layers:
Figma will measure the distance from the text layer's bounds. If you're wanting to measure to the baseline of the text, we recommend updating the bounds of the layer to match the baseline. You may also need to adjust the
text resizing property
Polygons and stars:
If you have shapes with an odd number of sides, an object's bounding box may extend beyond the shape's dimensions.
To snap the
bounding box
to the shape's true boundary, you can
flatten
the shape.
Right-click
Flatten
Overlapping layers
Overlapping layers may prevent you from being able to measure the distance between nested objects. This includes masks, locked layers, and layers with low-opacity fills.
If you're having trouble measuring to a nested layer, we recommend you check the layers panel for any of the above layers.
If there is a layer blocking your measurement, you can:
Toggle the layer's visibility
to temporarily hide it. Use the keyboard shortcut:
Mac
⌘ Command
Shift
Windows
Control
Shift
Toggle the Fill visibility
Reorder the layer
so that it's below the layer you want to measure to
Hold down the modifier key to measure to a nested layer
Mac
⌘ Command
Option
Windows
Control
Alt
Tip!
Want to add more permanent measurements to a file? Check out the
Figma Measure plugin
Vector edit mode
Measure between anchor points when you are in vector edit mode. Use this to measure distances between existing anchor points, or to create a new point.
Select the object you want to edit.
Click
Edit object
in the toolbar, or press the
Enter
Return
key.
Click on an anchor point to select that point.
Hold down the modifier key
Mac:
⌥ Option
Windows:
Alt
Hover over an existing to measure the horizontal and vertical distance between those two points.
You can also use the measuring tool to see the distance between the selected point and a new anchor point. Click on the canvas to add a new point in that position.
Press
Enter
Return
to leave vector edit mode.

--- Who can use this feature ---
Who can use this feature
Available on
any plan
Anyone can add a font to Figma Design
By default, Figma includes
Google fonts
and
Apple fonts
in Figma Design files. To use a different font, you can install it on your computer and access it in your Figma Design files.
Caution
: If you use your own font in a Figma Design file, anyone you share the file with can preview the font. To edit text layers using that font, they will need to install it on their computer. They may see errors related to
managing missing fonts
Follow the steps below to use your own font in Figma Design:
Prepare and download the font files
Install the font on your computer
Install the Figma font helper (browser only)
Use your font in a design file
1. Prepare and download the font files
Fonts are typically collections of OpenType (.OTF) or TrueType (.TTF) files. Each font can have several styles, and each style has its own file.
For example, using Inter Regular, Inter Bold, and Inter Extra Light requires three font files.
Tip:
If you're using a font that other people use too, make sure you have the same styles. If someone uses a font style in a file but you don't have that style on your computer, you'll get
a missing font error
Note
: Figma only supports .TTF and .OTF font files.
2. Install the font on your computer
To use a font, it must be installed in your computer’s font manager.
On Mac, the font manager is called Font Book. Apple provides guidelines for
installing and validating fonts in Font Book on Mac.
As a general rule, if you can see your font in Font Book, it’s installed on your computer.
On Windows, you can install fonts by adding font files to the
Fonts
folder.
Add a font →
Note
: Figma doesn't support fonts for devices running ChromeOS or Linux. Chromebook and Linux users can only use Google fonts and available Apple fonts (SF Pro and SF Compact), which are the default fonts in Figma.
3. Install the Figma font helper
Note
: If you're using the desktop app, you can skip this step. The desktop app includes the Figma font helper.
If you use Figma in your web browser, you need to install the Figma installer, otherwise known as the font helper, before you can add your own font to Figma Design files.
Download the Figma font installer
After installation, reload any open files in your browser to start using your font.
Note
: The Figma font installer, FigmaAgent, runs an HTTP and HTTPS server on
localhost
. It only allows connections from
figma.com
and isn't exposed to the public internet.
You may see events related to the FigmaAgent in your console log or when monitoring activity on your computer. The loopback address for localhost resolves to
127.0.0.1
You can always
uninstall the font helper
if you need to.
4. Use your font in a design file
To find and use your font:
From a Figma Design file, select or create a text layer.
Open the font selector in the right sidebar.
Open the filter dropdown and choose
Installed by you
Tip
: Learn more about
browsing and applying fonts in your files
Note
: Got stuck? Check out our guide to
troubleshooting font issues →

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can create and manage component properties
New to component properties? Learn how component properties works by
exploring the different types
, preferred values, exposed nested instances, and more.
Component properties are the changeable aspects of a component, so you know which parts of a component — like icons or text — can change.
When editing an instance containing component properties, the their component properties controls appear in a single section of controls in the right sidebar. This makes it easy to know what is changeable and to make those changes in one place.
This also removes the need to select and override individual layers, reduces time needed to refer to documentation, and removes the guesswork out of design systems!
When editing an instance, you can check any available descriptions or documentation to ensure accurate use of the asset. Component documentation can include a description, a link to external documentation, or both. Learn how to
view component documentation
Configure properties
When you select an instance containing component properties, the Properties section of the right sidebar will populate with different component property controls. Use the accompanying dropdowns, toggles, or text fields to make changes, and they will be reflected in the instance.
Boolean property:
Allows you to set true/false values to turn a specific property on or off. Currently only available for layer visibility. Use the toggles to turn the setting on and off.
Instance swap property:
Indicates which instances can be swapped. Dropdowns with a
denote instances that you can swap.
Text property:
Indicates which text strings can be edited. Update the text in text fields to directly change the string of text that appears on the canvas.
Variant property:
Allows you to define specific values and attributes to your variants, such as state, color, or size. Dropdowns with no icon denote variant states that you can change.
Learnn more about
component property types
Overrides
You can still make overrides to non-component properties of a single instance. Figma records the changes you make to an instance and preserves them, even when you swap between instances or select different variants.
Learn more about
overrides and override preservation
Tip:
Component properties are supported in Figma's plugin API. Learn more from
Figma's plugin developer docs

--- Use the pencil tool to sketch on the canvas or other objects. It's a great way to call attention to something on the canvas or draw something fun. ---
Use the pencil tool to sketch on the canvas or other objects. It's a great way to call attention to something on the canvas or draw something fun.
Use the pencil
By default, the pencil tool sketches with a round 3px stroke weight in black, unless you're sketching on a dark canvas or frame. These properties can be adjusted before or after you start sketching.
To start drawing:
Open the Creation tools menu from the toolbar and select the pencil or use the keyboard shortcut
Pick a color fill, stroke weight, and end point style from the
Stroke
section of the right sidebar.
Click and drag on the canvas to sketch.
The pencil tool stays active until you select another tool or press
Esc
Tip:
Want to draw in a straight line? Hold
Shift
while drawing, or try the
pen tool
Edit pencil sketches
Color and stroke properties
You can change a pencil sketch's colors, add a color style, end point style, and stroke weight at any time.
Select the sketch on the canvas.
Edit the color fill, stroke weight, and end point style from the
Stroke
section of the right sidebar. You can also click
to change the line style to dashes, or created a custom style.
Learn more about applying paints with the color picker.
Dimension
To change the dimension of a pencil sketch:
Select the layers
you want to adjust.
Drag the side or corner of a sketch's bounding box to resize its dimensions.
You can resize proportionally by pressing
⇧ Shift
while dragging.
Learn more about editing vector networks.
Delete pencil sketches
To delete a pencil sketch:
Select any sketches you want to remove from the canvas or
Layers
panel.
Press
Delete

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans.
Anyone with
can edit
access to a file can create prototypes.
Prototypes are designs you can interact with.
In Figma, all prototypes start with a single interaction. Each interaction consists of two parts: a
trigger
(what causes the interaction to start) and an
action
(the result of the trigger).
Some interactions take place on a single object—such as clicking on an object to open an external URL, or clicking a video to play and pause it.
Other interactions take place between two objects or frames—such as clicking a button to navigate to the next frame, or clicking an icon to open an overlay. These interactions are considered
connections
, which consists of three parts:
Hotspot:
A hotspot is where the interaction takes place. A hotspot can be the frame itself, or an object within the frame. You can create a hotspot on anything, like a button, icon, or heading.
Connection:
A connection is the arrow or "noodle" that connects the hotspot to the destination. Define the interaction trigger, actions, and adjust animation settings from the connection.
Destination:
The destination is where a connection ends. In most cases, the destination must be a top-level frame. Only connections using the
Scroll to
action can be set to a destination within the same top-level frame.
Add an interaction
An interaction is created by selecting a hotspot, or starting point.
Navigate to the
Prototype
tab of the right sidebar.
Select a layer or object for the interaction's hotspot.
Create the interaction by doing one of the following:
Hover over the object, and drag the
plus icon to the destination frame
Click the
Add
in the
Interactions
section of the
Prototype
panel.
Once the interaction has been made, use the
Interaction details
panel to set the interaction trigger, action, and destination.
Tip:
If you haven’t yet interacted with the
Interaction details
panel, you can press and hold
Shift
to hide it from the canvas.
Create interactions in bulk
You can create interactions from multiple objects at once. This can help you save time when creating multiple connections to the same destination.
Select your starting objects, or hotspots, where the interactions begin. You can select multiple objects via one of the following methods:
Select an initial object, then hold down
Shift
while clicking additional objects
Drag your cursor across any objects you want to select
Create the interactions by doing one of the following:
Hover over one of the selected objects, then click and drag the
plus icon to the destination frame
Click the
plus icon in the
Interactions
section of the
Prototype
panel, and use the Interaction details panel to set the trigger, action, and animation details
Tip:
You can also add interactions in bulk if you’re working with a main component. Learn how to
add prototyping connections for components
Interaction details
Once you create an interaction, use the
Interaction details
modal to configure the following:
Trigger
: Defines what type of interaction will cause the prototype to advance forward, such as a mouse click or touch gesture.
Action
: Defines what type of event happens when a user interacts with the hotspot, such as moving to another frame, or engaging an overlay.
Destination
: Defines where the interaction ends. This could be another screen in the prototype, or an overlay that appears above the current screen. Not all interactions have destinations—for example, the
Back
trigger automatically returns to the previous frame.
Animation settings
: Determine how the prototype moves from one frame to the other.
State management
Click to reset object properties and states when navigating in and across frames.
Add action
Add another action to the same trigger.
Close the
Interaction details
modal.
A single object can have multiple interactions, each with its own trigger. For example, you might have an object with a video fill that has two interactions: One that plays the video
On click
and one that opens an overlay
When video ends
A single object can have:
Any number of the following triggers:
Key/Gamepad
On drag
When video hits
One of each of the following triggers:
On click / On tap
While hovering
While pressing
Mouse enter
Mouse leave
Mouse down / Touch press
Mouse up / Touch release
After delay
When video ends
Note:
You're not able to combine
On click / On tap
with
While hovering
. Instead, consider using
Mouse enter
and
Mouse leave
triggers in place of
While hovering
Adjust the animation
The animation settings determine how the prototype moves from one frame to the other.
Animation
: The animation is how the prototype transitions from one frame to the next, such as push, slide, or dissolve.
Direction
: For certain animation types (such as move in or push), you can set the direction controls which way you want the transition to move in. Choose between left, right, down, or up.
Animate matching layers
: Check this box to apply the
Smart animate
transition to any matching layers.
Easing and spring animation
: Easing determines the acceleration of the transition between a starting frame and its destination.
Duration
: Duration controls how long it takes, in milliseconds (ms), to complete the transition. Choose a duration between 1ms and 10000ms (10 seconds).
Preview the animation.
Select and edit interactions
Use the tools below to improve and speed up prototype editing.
Select matching interactions
Matching interactions are identical interactions that begin from matching objects in other frames.
Identical interactions
are interactions with the same action and destination
Matching objects
are objects in different frames that have identical names and matching hierarchy levels
Tip:
Figma makes it easy to identify matching objects—when you hover over an object, any matching objects in other frames are highlighted. Learn more about
matching objects →
To select matching interactions:
Select an interaction.
On the
Interaction details
modal, click
Select matching interactions
Edit interaction details to update all selected interactions at once.
Note:
We’ve tidied up the canvas! When there are matching interactions on a canvas, only the first connection (the top-left one in view) is displayed. Select that connection to display all other matching interactions in view.
Update connection destinations in bulk
If you have multiple connections, you can change the destination of those connections at the same time.
Select the connections you want to edit. You can select multiple connections via one of the following methods:
Select an initial connection, then hold down
Shift
while clicking additional connections.
Drag your cursor across any connections you want to select. This will create a blue box around the selected connections.
Hold and drag the connections to a new destination frame. You can also select the interaction from the right sidebar and change the destination frame from the Interaction details panel.
Copy and paste interaction details
Prototype faster by copying interaction details and pasting them on other objects.
Select a prototype interaction on the canvas.
Press
⌘ Command
Control
to copy or
⌘ Command
Control
to cut the interaction details.
Select another object on the canvas.
Press
⌘ Command
Control
to paste the interaction details on to the new object.

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Users with
can edit access
to a file can create and edit prototypes.
Users with
can view access
to a file or prototype can view prototypes.
Smart animate looks for matching layers, recognizes differences, and animates layers between frames in a prototype.
You can select
Smart animate
from the list of transitions, when building a prototype. You can also apply
Smart animate
with other transitions to create seamless animations.
Smart animate allows you to quickly create advanced animations. Use
Smart animate
to replicate:
Loading sequences
Parallax scrolling
Touch gestures, for example Drag, Swipe, Long-Press
Sliders, Toggles and Switches
Expanding content (Show more / Show Less)
Pull to refresh
Learn more about how we built smart animate in our Blog post:
Announcing smart animate
Supported properties
Smart animate looks for matching layers that exist across multiple frames. Figma takes into account both the
layer's name
and where it sits within the
hierarchy
For layers that match between frames, Figma recognizes what's changed and applies transition to animate between them.
You can apply smart animate to entire objects or Components, as well as individual layers within a Component or group.
It's likely that more than one of an object's properties will change between Frames. We've isolated each of the properties we support below, so you know what to expect.
Scale
If an object changes in size between frames, Figma will animate it shrinking or growing.
Position
Figma recognizes if an object's location, the x and y co-ordinates, have changed. It will then animate the object moving from its current position, to its position in the destination frame.
Opacity
Smart animate can also recognize a layer or object's opacity. You can adjust opacity to make an object to appear or disappear between frames.
Set the opacity of the layer to 0%, instead of toggling the layer visibility. Figma will apply a dissolve transition to animate the layer's opacity.
You can adjust opacity through a layer's Fill properties, as well as through the
Layer
property. Smart animate will apply to both.
We recommend adjusting the entire layer's opacity. Adjust the opacity
Layer
setting in the
Design
tab of the right sidebar.
Rotation
Smart animate also takes the layer's rotation and orientation into account.
You can
rotate an object
using the
rotation field in the right sidebar or in the canvas itself. Hover over the corner bounds of an object until the rotation cursor
appears.
Rotate a single layer at once, or rotate a group of them around a single anchor point.
Fill
Figma will smart animate any changes to an object's fill. This allows you to animate changes between solid colors, gradients and even image fills.
Things to note
Figma supports smart animate for layers with texture, noise, background blur, or layer blur
effects
applied. Because texture and noise effects are randomly generated, we recommend duplicating the frame to ensure smart animate works as expected. If the frames are not identical, Figma will apply a default dissolve transition.
Figma does not support smart animate for layers with drop shadow and inner shadow
effects
, or for moving between
shapes
. If a frame includes an unsupported property, Figma will apply a default dissolve transition.
Figma doesn't support smart animate for
overlay actions
. This is because Figma treats overlays as new frames. You can use smart animate when
swapping between overlays
, if those overlays have matching layers.
If you introduce a new layer in the destination frame, smart animate will dissolve the layer into view.
If a layer's properties stay the same between two frames, Figma won't animate that layer at all. This is great for status bars and menus, and interactions when you don't want to move to a different UI.
If you check the
Fix Position when Scrolling checkbox
for any layers, Figma will add them to the list of
Fixed
layers. Smart animate handles layers differently when you
combine
Smart animate
with other transitions
Apply smart animate
There are two ways you can use smart animate in your prototypes. As a stand alone transition, or by using
Smart animate matching layers
with another animation.
Smart animate
Select
Smart animate
in the transition field to animate between two frames.
Open the
Prototype
tab in the right sidebar.
Select layer, group, or frame in the canvas. A connection node will appear on the right-edge.
Click on the node and drag it to the next frame to create a connection.
Define the
Interaction
in the right sidebar by choosing a trigger and action. Figma will set the second frame as the destination.
In the
Animation
section, select
Smart animate
from the transition field.
Apply
Easing
to the transition, or change the
Duration
(optional).
Repeat for any other frames you want to smart animate.
Click the
in the toolbar to
open the prototype in Presentation View.
In our example below, we have three frames with some matching layers. We want smart animate to animate removing the Abel Tasman Coast Track from our list of favorites.
Smart animate now moves us smoothly between each frame in our prototype!
Smart animate matching layers
If you want to smart animate some layers in your prototype while using another main transition, you can check a box to
Smart animate matching layers
Figma treats fixed layers differently when using smart animate with other transitions.
Layers that don't match:
Figma will use the main
transition
you select.
Layers that do match:
Figma will
Smart animate
any differences for supported properties.
Fixed layers that do match
: Figma won't apply any transition.
Fixed layers that don't match
: Figma will apply a dissolve transition instead of the transition you select.
To use
Smart animate matching layers
, check the box in the right sidebar when adjust the animation:
In our example below, we have a status bar and navigation that exist across all three frames. We want these to stay in place when we switch between tabs.
We've selected a
Push
Transition to move between Frames. We choose not to check the box next to
Smart animate matching layers
When we view our Prototype, we can see that everything in our destination frame uses the
Push
transition. This makes it pretty obvious that we're moving between separate screens in a prototype.
If we check the box next to
Smart animate matching layers
, our status bar and navigation stay in place, while the other content uses
Push
Tips for Smart Animation
Before smart animate, Figma didn't place much importance on layer names. As Smart Animate is reliant on
Layer name
and
hierarchy
, this may require you to use a different approach.
Learn more about creating
matching objects with layer name and hierarchy →
We've outlined a few ways to troubleshoot unexpected smart animate results below.
Tip:
We recommend increasing the duration while building your prototype. This lets you see what's happening and make any adjustments.
Layer names
One quick way to create frames for smart animate is to
duplicate
them. This keeps the naming consistent between each frame. You can then add and remove layers to each frame, as needed.
Figma names frames and layers based on the way you duplicate or copy and paste them.
Within a frame:
Figma numbers layers them sequentially. For example: Frame 1, Frame 2 etc.
Between frames
: Figma uses the same name. For example: If you copy
Rectangle 1
from one frame, Figma will paste it as
Rectangle 1
in the next frame.
You may have objects or layer that exist across frames, but have different names in each. Or, you may have the opposite problem - layers that all have the same name, which you don't want to match.
You can view and update your layer names using the
Layers panel
in the left sidebar. Learn how to
rename layers in bulk
View matching layers
Figma has also made it easier to identify layers or objects that exist - or match - between frames. This applies to all layers, groups, frames, and Components.
Open the Prototype tab in the right sidebar.
Hover over an object or layer in the canvas.
Figma will highlight that layer in any other frames it exists in.
Layer order and hierarchy
Smart animate
and
Smart animate matching layers
take into account the layer order, or hierarchy of your layers.
Normally,
Move in
Slide in
will transition the entire destination frame above the original frame. With smart animate matching layers, Figma will move or slide in layers based on their hierarchy, which can cause some confusing or unexpected results.
In our screenshot below, we have two matching objects between our frames (
Explorer 1
and
Explorer 2
). These are the
Status Bar
and the
Navigation
If we have layers above any matching layers, Figma will animate them above the destination frame. In our screenshot below, we can see layers from
Explorer 1
appear above the destination frame.
By moving our matching layers to the top of the hierarchy instead, we can make sure the entire destination frames slide above the original frame.
Group layers
To be more precise in deciding what to smart animate, Figma matches layers based on their
name
and
hierarchy
. This also lets you quickly un-match layers between frames.
Let's say that we have five rectangles in each of our frames. These rectangles contain different content between each frame. We labeled them as
Trip 1
Trip 5
across all three frames.
When we try apply a
Push
transition, smart animate recognizes them as matching layers. Instead of treating these rectangles as new content, Figma smart animates the change to their position.
To change this behavior, we can group the rectangle trips in each frame and give them a unique name.
When we preview our transition, smart animate no longer recognizes these as matching layers. Our content will
Push
in together, making our Prototype look much more realistic.
Smart animate with Slide in and Move in
There are a few things to consider when using
Smart animate matching layers
with Slide or Move transitions.
When selected, Figma will animate any matching layers between frames. This means Figma can't animate the entire destination Frame (B) over the initial Frame (A), like it normally would.
Figma also doesn't include a frame's fill as part of the animation. This can cause layers to overlap, making the transition look messy.
To prevent this, we can add a rectangle with a solid fill behind our other layers. Now, when we view our prototype, the content in each frame slides in together.

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can create prototypes.
New to Prototyping? Check out our
Getting Started with Prototyping
guide.
The action defines the next step or event in the prototype. It is the response from the interaction trigger event. For example, the action could be to
Navigate to
another frame, or open an external URL.
Learn more about building prototypes with interactions and animations →
Action types
Navigate to
This action takes you from one frame in a prototype to another. This is the most common type of action to use when moving between entire screens.
Back
This allows you to navigate back to the previous screen. This is perfect for simulating the
Back
button in your Prototypes.
Set variable
The
Set variable
action allows you to set or modify the value of a variable as a result of a prototype trigger.
Learn more about using variables with prototypes →
Set variable mode
Use this action to change the variable mode of a page while prototyping.
Learn more about the set variable mode action →
Conditional
Check if a condition is met before performing an action by using an if/else conditional statement.
Learn more about
using conditionals →
Scroll to
This action allows your prototype or a nested scrollable container scroll to any object within the top-level frame. This is useful to replicate anchor links and interactions with scrollable elements like carousels.
If you add
Scroll to
using the
Interactions
section of the Prototyping panel, you can only pick direct children of scrollable frames. To pick any object within the top-level frame, drag out a noodle and link it to the object you want to set as the destination.
With
Scroll to
, you can set the scroll animation to be
Instant
set an ease
using the
Animate
option.
Note:
To drag a connection to a destination hidden by a clipped frame, uncheck
Clip content
from the frame section of the
Design
panel to expose the destination frame first.
Open link
This allows you to direct the user to a URL outside of the prototype. This is great for external links, or additional resources that aren't available in the main navigation.
Enter your URL in the field provided, once you select this option.
Tip!
When you click on an
Open link
hotspot, the link opens in a new tab. If this is a link to an external website, the user will be notified they are leaving Figma. You can use the checkbox provided to skip this jump page in the future. This setting will only be saved on the current device.
Open overlay
This action opens the
Destination
frame above the current frame. This can be used to display a modal, tooltip, or alert—from a button or other object in the design.
Close overlay
This action allows you to close or dismiss any overlays that have appeared over the original frame. You can use this to replicate an on-screen prompt or alert being accepted or dismissed.
Swap overlay
This action allows you to replace one frame with another. This will behave similarly to the
Navigate to
option, when triggered from a hotspot in a regular frame.
If you apply
Swap overlay
to a hotspot in an overlay, it will swap the current overlay with the new
Destination
frame. The new overlay will retain the same overlay settings as the original.
Note:
Using
Swap overlay
won't add that frame to the prototype's history. If you’d like a user to be able to use the
Back
action to move between overlays, we recommend using the
Navigate to
option instead.
Play/pause video
The
Play/pause video
action is available for any interaction that ends on a video. When selected, the following actions are available:
Play video
- Begin video playback
Pause video
- Pause video playback
Toggle play/pause
- Toggle between playing and pausing video playback
Learn more about prototyping with video →
Mute/unmute video
The
Mute/unmute video
action is available for any interaction that ends on a video. When selected, the following actions are available:
Mute video
- Turn off video sound
Unmute video
- Turn on video sound
Toggle mute/unmute
- Toggle between turning on/off video sound
Learn more about prototyping with video →
Set to specific time
The
Set to specific time
action is available for any interaction that ends on a video. This action jumps to specific timestamp in the video. You can set the timestamp after selecting the
Set to specific time
action.
Note:
If you enter in a timestamp that is past the total length of the video, the action will jump to the end of the video. If the
video loop setting
is turned on, the video will begin playing again from the beginning.
Learn more about prototyping with video →
Jump forward/backward in time
The
Jump forward/backward in time
action is available for any interaction that ends on a video. When selected, the following actions are available:
Jump forward
- Set a number of seconds to fast forward in video playback.
Jump backward
- Set a number of seconds to rewind in video playback.
This action can be helpful when designing an interactive video player experience.
Note:
If you jump forward past the total length of the video, the action will jump to the end of the video. If the
video loop setting
is turned on, the video will begin playing again from the beginning.
Learn more about prototyping with video →
Change to
The
Change to
action is available when prototyping with interactive components.
Use the
Change to
action to switch between variants in a component set. For example, you might have a component set for a checkbox icon, with a
checked
variant and an
unchecked
variant. With the
Change to
action, you can switch between the checked and unchecked variants in your prototype.
Tip:
You can use the
Change to
action on a nested instance to change the parent component variant.
Learn more about interactive components →

--- Before you start ---
Before you start
Who can use this feature
Users on
any team or plan
Users with
can edit
access can create prototypes.
New to Prototyping? Check out our
Getting Started with Prototyping
guide.
Animations can be used to create smooth transitions between pages and define the behavior for actions like expanding a menu, swiping between pages, or opening a gallery.
Instant
The Instant transition will immediately display the
Destination
Frame, when the hotspot is interacted with (clicked, hovered over, or pressed).
Dissolve
The Dissolve transition will fade in the
Destination
frame, on top of the original frame.
Supports:
Duration
Easing
Smart Animate
Smart Animate looks for matching layers that exist across multiple frames. For layers that match, we recognize what's changed and apply transitions to seamlessly move between them.
Supports:
Duration
Easing
Move In / Move Out
The Move transition will slide the
Destination
frame
into
out of
view, above the original frame.
Supports:
Easing
Direction
Duration
Push
The Push transition will push out the original frame, as the
Destination
frame is moved into view. This is the perfect transition for replicating a swiping gesture.
Supports:
Direction
Easing
Duration
Slide In / Slide Out
The Slide will move the
Destination
frame
into
out of
view. Slide will slowly offset the frame as it dissolves, while the Move transition keeps the original frame stationary.
Supports:
Direction
Easing
Duration
Tip!
Use
prototype easing and spring animation curves
to give your animations a unique and natural feel.

--- Before you Start ---
Before you Start
Who can use this feature
Available on the
Organization and Enterprise plans
Anyone with
can edit
access to the main file can merge branches.
This is one step in the branching process. For more information on branching, check out our
Guide to branching
There are a few steps involved in receiving updates and merging changes. And while uncommon, it’s possible for something to go wrong at one of those steps.
If it does, you may find yourself in a situation where a merge or update didn't complete. We’re working on improvements that will reduce the chances of this happening.
In the meantime, there are a few things you can do if something doesn’t look right after a merge or update.
Issues
Problem
Solution
Updates from a previous merge show up as conflicts you still need to resolve. This means a previous update from main didn’t complete.
You have two options available:
Repeat the process by
resolving the conflicts
Restore the branch ↓
to a version before the failed update. You can restore from the
Before update
checkpoint in the branch’s version history.
Changes from the branch have been applied to the main file, but the branch hasn’t been closed.
If all your changes have been successfully applied, you can
archive the branch
Not all changes from the branch are applied to the main file.
Restore the main file ↓
to a version before the failed merge. Then repeat the merge process.
You accidentally merged changes from a branch, or want to undo your changes.
You can
restore a previous version of the main file ↓
Restore an earlier version of a branch
Tip!
You can identify a branch by looking out for this structure next to the file name:
File name
Branch name
Open the branch.
Click on an empty spot in the canvas to deselect any layers.
Click the dropdown next to the file name in the left sidebar.
Select
Show version history
In the right sidebar, select a previous version checkpoint.
Click
next to the version name and select
Restore this version
Click
Done
in the toolbar to exit version history.
Restore an earlier version of the main file
Caution:
Restoring a previous version applies to everyone with access to the main file. This won’t preserve any other changes made to the main file, including other branch merges.
Note:
Reversing or undoing a merge won’t restore an archived branch. You’ll need to
restore the branch
before trying to merge the branch again.
From the main file, click
next to the file name in the left sidebar.
Select
Show version history
to open version history in the right sidebar.
You can identify a merged branch with the
Branch merge
icon.
Select a version before the merged branch. This could be the “Before merge” checkpoint or any other checkpoint.
Click
next to the version and select
Restore this version
Click
Done
in the toolbar to exit version history.
View a file's version history →
Restore an archived branch
Click the file/branch name
in the left sidebar.
Select
See all branches
to open the branches modal.
Select the
Archived
tab to view any archived branches.
Click
next to the branch you want to restore and select
Restore
You can then switch to the
Active
tab, hover over the branch and click
Open

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We'll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design, FigJam, Figma Slides, Figma Sites, and Figma Buzz
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
With Figma AI, you can create and edit images. This helps to make images to add to your designs, remove the background from any existing image, as well as boost image resolution.
Make an image
Use a custom text prompt with Figma AI to make images. You can fill an existing frame or shape, or make an image in a new shape.
To use Make an image in Figma Design, FigJam, Figma Slides, or Figma Sites:
Select where you’d like to add the new image. You can select a layer to fill an existing layer, or deselect all layers to make a new image layer.
Open the
Actions
menu and select
Make an image
Enter a prompt in the text field. Try to include as much context as possible.
From the dropdown menu, select an available AI model.
Click
Make it
or press
⌘Command
Enter
If you’d like to make any adjustments, click
Make changes
Tip:
You can also use
Make an image
when you add an image fill to an object.
To use Make an image in Figma Buzz:
Select where you’d like to add the new image. You can select a layer to fill an existing layer, or deselect all layers to make a new image layer.
From the inline toolbar, click
AI tools >
Make an image
Enter a prompt in the text field. Try to include as much context as possible.
From the dropdown menu, select an available AI model.
Click
Make it
or press
⌘Command
Enter
If you’d like to make any adjustments, click
Make changes
Edit image
Note:
Edit image
is currently free while in
beta
, but usage limits may apply. When made generally available,
Edit image
will become a paid feature. We'll update you on pricing before that happens.
Edit any image with a custom text prompt. You can edit images that were created with
Make image
, or images that were directly added to your file.
To use Edit image in Figma Design, FigJam, Figma Slides, or Figma Sites:
Select the image you'd like to edit.
Open the
Actions
menu and select
Edit image
Enter a prompt in the text field. Try to include as much context as possible.
Click
Edit image
or press
⌘Command
Enter
To use Edit image in Figma Buzz:
Select the image you'd like to edit.
From the inline toolbar, click
AI tools
Edit image
Enter a prompt in the text field. Try to include as much context as possible.
Click
Edit image
or press
⌘Command
Enter
Remove background
You can use Figma AI to remove the background from any image. This comes in handy when layering an image over a design.
To use Remove background in Figma Design, FigJam, Figma Slides, or Figma Sites:
Select the image you want to edit.
Click
Actions
in the toolbar.
Select
Remove background
To use Remove background in Figma Buzz:
Select the image you want to edit.
From the inline toolbar, click
AI tools > Remove background
in the toolbar.
Boost resolution
You can use Figma AI to enhance the clarity of low-resolution images.
To use Boost resolution in Figma Design, FigJam, Figma Slides, or Figma Sites:
Select the image you want to enhance.
Click
Actions
in the toolbar.
Select
Boost resolution.
To use Boost resolution in Figma Buzz:
Select the image you want to enhance.
From the inline toolbar, click
AI tools
Boost resolution

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with at least
can view
access to the file can save the file as a local copy as long as the file’s owner has not
restricted copying and sharing
You can save a local copy of a file in the
.fig
(Figma Design),
.jam
(FigJam), or .deck (Figma Slides) formats. This is useful if you want to duplicate files between Figma accounts or teams, or if you want to manually back up your files.
Figma doesn't include any version history or comments when you save a local copy of a file. When you reimport this file, Figma treats this like a new file and it won't be connected to the original. Any components in the imported file
will
become new main components. Instances in the imported file will connect to the new main components and will not receive updates from components in the original file.
Note:
The .fig, .jam, and .deck file formats are proprietary and may change in the future. We recommend against using any third-party tools that ask for these file types because they may not be able to properly read these files. If you're building a third-party tool, we recommend accessing files and their contents through one of
Figma’s officially supported APIs
To save a local copy of a file:
Open the file you want to export.
Click
Main menu
Go to
File
Save local copy
to download a copy of the file to
your downloads folder
Note:
If you don’t see the
Save local copy
setting, the file owner may have restricted viewers from being able to copy or export assets. Learn more about
restricting copying and sharing on files →
To import a local copy of a file:
Open the Figma account you want to import the file to.
Drag the file into the file browser.

--- Before you start ---
Before you start
Who can use this feature
Anyone on
any team or plan
Anyone with
edit
access to a Figma Design file can use masks
Use masks to show specific areas of objects while concealing the rest.
It's like placing a photograph inside a picture frame with a small opening. You'll see a portion of the photograph peeking through the opening, while the rest is concealed without the need to trim it down to size.
Since no portion of masked layers are modified or deleted in this process, masks are a non-destructive action. This allows you to preserve the concealed areas without the need to trim them down to fit.
How masks work
Any layer can be used as a mask, including vector shapes, text layers, images with transparency channels, groups, and more.
When you use a layer as a mask, a
mask object
is created, which includes the mask and any layers it is masking. A mask object can be identified in the
Layers
section of the left navigation panel. The
mask icon identifies the mask, with an upward-facing arrow along the layers that are being masked.
Masks are positioned below masked layers on the z-axis. The mask applies to all siblings above it until it reaches:
Another mask or mask object
The mask's parent frame or group
A frame or component with clip content on
Learn more about parent, sibling, and child relationships →
In the example below, the purple ellipse is acting as the mask. If the mask sits below the image of the person on the z-axis, it'll successfully mask that image. If the mask sits above the image, it won't be masked.
Mask types
Alpha
All masks in Figma support alpha channels. Alpha channels represent the degree of transparency, or opacity, in a color, image, or object.
When working with alpha masks, masks are applied based on the opacity of the mask. The higher the opacity, the more that is revealed. Zero percent opacity reveals nothing.
This means we can utilize blurs and opacity in our masks:
Import existing PNGs, GIFs, and WebP files with transparency (alpha channels)
Use layer blur effects to replicate feathering
Apply drop and inner shadows to create depth
Add fills, strokes, and gradients with varying opacity
In the example below, we've used an ellipse with an outside stroke as our mask. The opacity of the ellipse's fill is 100% and the opacity of the stroke is 30%. More is revealed in the center of the image, because the mask's opacity is higher (100%).
Vector
Vector masks, or using shape outlines as masks, ignore the translucency—or opacity value of more than zero percent—of a mask's fill or stroke. If a mask contains any area with an opacity of more than zero percent, then its outlines are used as the mask and the entire mask assumes 100% opacity.
In the example below, an image of a heart with a completely transparent background is being used as a mask. The object on the bottom-left is using an alpha mask, so we see the outline of the heart. The object on the bottom-right is using a vector mask, and uses the outline of the entire image as the mask.
Luminance
Luminance allows you to use brightness to determine a mask. The brighter the area of a mask, the more that is revealed, or in other words, the higher the opacity of the layers being masked.
The darker the area, the less that is revealed. If a mask has a black fill, or
#000000
, this will reveal nothing and masked layers render at zero percent opacity.
Create and edit masks
Create a mask
Choose an object you want to use as your mask, and place it behind all objects that'll be masked on the z-axis.
Select all layers that will be a part of the mask object.
From the right sidebar, select
More options >
Use as mask
, or press:
Mac:
⌃ Control
⌘ Command
Windows:
Ctrl
Alt
Note:
If you only have one layer selected, select
Use as mask
directly from the right sidebar.
Figma will create a mask group with all selected layers.
By default, the mask type is set to
Alpha
. To change it, select the layer being used as a mask and
open the dropdown in the
Mask
section of the right sidebar
. Hover over any option to preview it on the canvas.
Learn about mask types ↑
To add layers to an existing mask object, use the
Layers
panel to click and drag them into the mask object.
Learn more about reordering layers →
Resize and move
Masks and masked layers move and resize independently from one another. This means that when you move or resize a mask, any masked layers will be unaffected, and vice versa.
This is because they are siblings of one another, so masks don’t have any parenting behavior that a frame, group, or component might have.
Learn more about parent, sibling, and child relationships →
Remove a mask
To stop using an object as a mask, use any of the following methods to toggle it off:
Select the mask and click
in the right sidebar
Right-click the mask and select
Remove mask
Select the mask and use the keyboard shortcut:
Mac:
⌃ Control
⌘ Command
Windows:
Ctrl
Alt
Any portions hidden by the mask will reappear.
Reveal mask outlines
By default, Figma does not show the boundaries of a mask. Use mask outlines when working with complex masks or to check for unintended empty spaces.
To toggle mask outlines:
Open the
Figma menu.
Go to
View
Mask outlines
Once the setting on, masks in your file are outlined in green.
Note:
If all layers being masked are hidden or have zero percent opacity, then the object's mask outlines won't appear.

--- Who can use this feature ---
Who can use this feature
Supported on
any team or plan
Anyone who
can edit
the file can add images.
Figma doesn't have a specific layer type for images, instead, images are a type of
fill
. This allows you to add images to any
shape
, including
custom vector networks
There are lots of ways to
add images to design files
. In this article, we'll show you how to paste from the clipboard and what outcomes to expect.
Due to limitations with Chromium,
it's not possible to paste from the clipboard on Windows devices
. Instead, we recommend you
upload images as fills
Create a new layer
If you want to create a new layer from an image on your clipboard, you can paste it directly on the canvas. This allows you to copy images from the web without having to download them to your device.
Click an empty spot in the canvas to deselect any layers.
Paste the image to add a new layer to the canvas using the keyboard shortcut:
macOS:
⌘Command
Windows:
Ctrl
Figma will create a rectangle shape with the same dimensions as the original image and apply the image as a fill.
Add image to an existing layer
If you select a layer before pasting an image, Figma will add the image to that layer as a fill. You can use this process to replace an existing fill or add another fill to a layer.
By default, Figma will add a new fill to the layer. If you want to replace the existing fill, you can select the fill in the right sidebar before pasting.
Select the layer you want to add the image to.
To replace the existing fill (optional):
select the fill layer in the right sidebar. You'll need to click to the left of the image thumbnail. The fill layer is highlighted in blue when successfully selected.
Use the paste shortcut
macOS:
⌘Command
Windows:
Ctrl
Figma will add the image to the selected layer as a new fill. The fill mode of the image is
Fill
by default, but you can change this to
Fit
Tile
, or
Crop
Paste GIFs
Most browsers do not support copying animated GIFs to your clipboard. If you copy a GIF directly from the browser and paste this into Figma, it will result in a static image.
We recommending downloading a copy of the GIF to your computer, then import it to Figma using another method.
Add animated GIFs to prototypes →

--- Before you start ---
Before you start
Who can use this feature
Colors are available on
any team or plan
Anyone with
can edit access
to the file can use the color picker and select a color model.
There are lots of terms used to describe color. In this article, we use the term color model to describe the different ways your can represent a color.
Figma allows you to see colors across five color models: Hex, HSB, HSL, CSS, and RGB.
Switching between color models only affects how Figma describes colors; It doesn't affect how Figma renders them.
Color profiles
affect how Figma renders colors. You can choose between sRGB or Display P3 as your default color profile, as a design file's color profile, or for exporting assets.
Learn about color profiles and color management →
Color models
By default, Figma represents color values using the
Hex
model. You can also view color notation for other models in the
color picker
Hex
Hex is the default color model in Figma and refers to the Hexadecimal color. This is an alphanumeric shorthand representative of the RGB values.
Creators in web or digital design refer to the notation for this color model as hex codes.
Hex values have 8 characters and use the following syntax:
#RRGGBBAA
The RR represents the red component.
The GG represents the green component.
The BB represents the blue component.
The AA represents the alpha component. An alpha value of 00 represents a fully transparent color, and an alpha value of FF represents a fully opaque color.
RGB
RGB or
reen
lue is the most commonly used color model.
Every color that is rendered on a monitor or screen will be made up of varying amounts of
ed,
reen, and
lue.
RGB values are in the following syntax:
(red, green, blue, alpha)
Red, green, and blue values define the intensity of the color with an integer between 0 and 255
The alpha value defines the opacity as a number between 0.0 (fully transparent) and 1.0 (fully opaque)
HSB
aturation
rightness is an alternative representation of the RGB model.
This is based around how the
human eye
perceives color, versus how a display would (in RGB).
HSB values are in the following syntax:
(hue, saturation, brightness, alpha)
The hue value is measured in degrees, and is represented with an integer from 0 and 360
The saturation value is represented with an integer from 0 to 100, with 100 being the most saturated
The brightness value is represented with an integer from 0 to 100, with 100 being the brightest
The alpha value defines the opacity as a number between 0.0 (fully transparent) and 1.0 (fully opaque)
HSL
aturation
uminance is another color model based around how the human eye perceives color.
Like HSB, it is an alternative representation of the RGB model. The main difference between HSB and HSL is how saturation and lightness are treated.
HSL values are in the following syntax:
(hue, saturation, luminance, alpha)
The hue value is measured in degrees, and is represented with an integer from 0 and 360
The saturation value is represented with an integer from 0 to 100, with 100 being the most saturated
The luminance value is represented with an integer from 1 to 100, with 100 being the lightest
The alpha value defines the opacity as a number between 0.0 (fully transparent) and 1.0 (fully opaque)
CSS
The CSS color model allows you to view or enter RGBa values using CSS syntax.
CSS values are in the following syntax:
rgba(red, green, blue, alpha)
Red, green, and blue values define the intensity of the color with an integer between 0 and 255
The alpha value defines the opacity as a number between 0.0 (fully transparent) and 1.0 (fully opaque)
Want to communicate colors to a developer or engineer?
The CSS model lets you copy CSS-friendly notation for the selected color. This lets you paste this directly into a stylesheet, formatting included. Learn more about
developer handoff
View and adjust color model values
View and update colors across different color models in the color picker.
Click on the
Fill
Stroke
in the right sidebar to open the color picker.
Below the
Hue
and
Opacity
sliders you can see the current color model and the corresponding values.
Use the dropdown to switch color models. Choose between
Hex
HSB
HSL
CSS
and
RGB
Figma will shows values in the notation you selected.
You can also adjust color by inputting the values directly in the available fields.
RGB, HSL, and HSB color models have a separate percentage field for alpha values
The CSS model must include an alpha value as a number between 0.0 and 1.0
For Hex, you can either:
Input a 6-digit hex code and use the separate percentage field for adjusting the alpha value
Input an 8-digit hex code that includes the alpha value as the last two digits

--- 🚧 Grid in auto layout is currently in ---
🚧 Grid in auto layout is currently in
open beta
. Some functions and settings may not yet be available to grid. The feature may change and experience bugs or performance issues during the beta period.
Before you start
Who can use this feature
Available on
all plans
Anyone with
can edit
access can use auto layout
Grid is one of three auto layout flows that you can apply to frames. It consists of “cells” organized into rows and columns where you can place layers and assets. Objects can span multiple cells, and when a frame using grid is resized, objects in these cells will respond with it.
The grid auto layout flow is ideal for creating designs like bento boxes, dashboards, and editorial layouts.
This article covers just one aspect of working auto layout. Check out these other articles to learn more about working with auto layout in Figma Design.
Guide to auto layout
: An overview of auto layout, how it works, key properties, and browse a collection of auto layout resources.
Toggle auto layout on a design
: Learn how to add auto layout to frames and layers so that you can start making your designs responsive.
Use the horizontal or vertical flows in auto layout
: Learn about the properties available to the horizontal and vertical flows in auto layout.
Create multi-dimensional auto layout flows
: Combine multiple auto layout flows to build fully responsive components and screens.
Note
: Grid in auto layout is a different feature than the
uniform grid option in layout guides
. Auto layout allows content to resize and reflow, while layout guides are used as visual aids while designing.
Glossary
Cell
: The intersection between a grid column and grid row
Cell layer
, or
cell object
: A layer or object that lives inside of a cell. They are considered children that live inside a grid.
Child
: A layer that lives inside a container
Container
: A structure (such as a cell) or layer (such as a frame or component) that can hold other layers
Nested
: Describes a layer that lives inside a container
Parent
: A layer—namely frames, components, groups, and sections—that contains other layers
Span
: The ability of a cell object to occupy multiple cells at a time
Top-level
: Describes a layer that sits directly on the canvas and does not contain a parent
Track
: An individual row or column
Columns and rows
The grid auto layout flow brings two-dimensional layout control—rows and columns—into your designs. Once you’ve
enabled grid
on a frame, you can choose the desired number of rows and columns by clicking on the grid picker in the right sidebar. Enter a value in the
Number of columns
and
Number of rows
fields, or use the interactive selector.
Note
: If you’re decreasing the number of rows or columns in a grid, you will need to make sure the row or column is empty first.
Resize columns and rows
The size of each column and row is set to
Auto
, and is calculated based on how much space is remaining after factoring in other
spacing
values and column or row sizes.
To resize a track (column or row):
Select the frame.
Hover your cursor over the top or left sides of the frame. You can also hover your cursor over the desired track, or select an item from the desired track. A blue dot will appear.
Hover over the blue dot and and click the label, indicating the track size, that appears.
From there, you can resize the track in the following ways:
Automatic sizing
: For the track to automatically resize based on the available space, type
Auto
then press
Enter
Return
Specific size
: Click and drag the edge of the track to resize to a specific value
Spacing
Gap between
Gap between
sets the distance between columns and rows. You can do this using the
Gap between rows
and
Gap between columns
fields in the right sidebar when the grid auto layout frame is selected. Enter a number value into the field, nudge the values using your arrow keys, or scrub the field using your cursor.
Padding
Padding controls the empty or white space between the boundary of the auto layout frame and the frame’s cells. You can set padding uniformly, vertically and horizontally, or have different values for top, right, bottom, and left padding.
Default
: Padding controls are separated into vertical (top and bottom) and horizontal (left and right) padding by default.
Individual padding
: Click
to use top, right, bottom, and left padding fields.
Uniform padding or CSS shorthand
: Hold
⌘ Command
Ctrl
and click into any padding field. You can also type CSS shorthand.
Example: Entering
1,2,3,4
sets top: 1px, right: 2px, bottom: 3px, and left: 4px
Example: Entering
1,2
sets top/bottom: 1px and left/right: 2px
Tip:
Press the
Tab
key to move between input fields.
Resizing
Note
: Resizing properties are covered in full in our
Guide to auto layout
article. This section covers details specific to the grid auto layout flow. These details may change as the feature develops throughout grid’s beta period.
Resizing options are available to any child layer of a grid auto layout frame, including nested grid auto layout frames. Resizing options are not available to top-level auto layout frames using grid. Learn more about
nesting auto layout frames
The following resizing properties are available:
Fixed
width or height: The dimensions of the cell object or nested grid auto layout frame remains the same, regardless of the size of its parent cell or parent frame
Fill container
: The cell object or nested grid frame stretches to fill the width or height of the cell or parent frame
Work with objects in grid cells
Add and move objects in a grid
Create shapes, frames, and text layers
: Create these elements directly in a cell
Move objects into a grid
: Drag one or more layers and drop it into any empty cell or in between two cells
Reposition child objects
: Drag one or more child objects and drop it into an empty cell, or in between two cells
Duplicate existing objects
: Select one or more child objects and use the keyboard shortcut
⌘ Command
for Mac, and
Ctrl
for Windows
Objects will be placed in succession from left to right, top to bottom. If there are not enough empty cells available, Figma will reposition obstructing objects into available cells or create new rows or columns to accommodate.
Span objects across multiple cells
You can span a child object to stretch across multiple cells in a grid, allowing it to resize when the parent is resized.
To span a child object, select it and resize it on the canvas. While resizing, if the object snaps to the edge of a cell, its auto layout resizing property will update to
Fill container
for the adjusted dimension (width or height).
Align objects to their cells
Within a grid auto layout frame, a child object can be aligned to its cell.
Select a child object and use the alignment buttons in the
Position
section of the right sidebar.
Align left
Align horizontal centers
Align right
Align top
Align vertical centers
If you have multiple child objects selected, each one will align to its respective cell.
Try it out
To get some hands-on practice, grab a copy of our
Grid community file

--- Who can use this feature ---
Who can use this feature
Available on
Organization and Enterprise plans
Anyone with a
paid seat
in an organization or workspace can access the branching feature
Anyone with
can view
can edit
access to the main file can
request a review
This article covers one step in the branching process:
Create
Share
Update
Request
Review
Merge
Manage
When you've finished making changes in your branch, you can request one or more people to review and approve the changes before merging the branch to the main file.
If you don’t have edit access to the main file, you must request a merge from someone who does have edit access. Reviewers can either
Approve
the branch or
Request changes
You can request a review from anyone who has access to the main file. This can include members of the team, as well as anyone who has access to the file or project.
A reviewer can then review the changes in your branch and choose whether to approve them or suggest changes.
Request review
You can request one or more people to review and approve the changes before merging the branch to the main file. This process is not a requirement for merging to the main file.
Open the branch you want reviewed.
Expand the
menu next to the file/branch name in the toolbar.
Click
Review and merge changes...
to open the
Branch review
modal.
You can preview any changes you've made as well as select reviewers to approve the changes.
Figma will suggest people with
can edit
access to the main file. Click
Add
next to the suggestion to add them as a reviewer.
To select another team member, or someone outside of your team, click
Browse
Other team members
in the list.
Use the
Search
field to find a specific person.
Once you've added your reviewer(s), click
Request review
Use the description field to give reviewers more context for the changes you're making.
Click
Send to reviewers
to submit the request.
Figma will notify reviewers by in-app notification and email. A label will also appear next to your branch name when viewing the Branch review window to show the branch is
In review
View reviewer feedback
Reviewers can choose to approve your branch or suggest further changes. Figma will send you a notification and email (if enabled) to let you know the review outcome.
There are three possible outcomes from a review. Figma represents these outcomes as a status next to the branch name in the Branch review window:
In review:
A gray badge shows that a branch review has been requested from another user. No changes have been suggested or approved yet.
Changes suggested
: A yellow badge indicates that the reviewer needs you to make some changes before the branch is accepted. You can open the review modal to view the suggestions.
Reviewers may have added feedback to individual layers or designs using comments. If there are comments, you'll see a
View comments
banner.
Approved:
Your changes have been approved, but the branch has not yet been merged. This usually means the reviewer does not have edit access to the main file or is waiting for other reviewers to add their reviews too before merging.
When ready, you can click
Merge branch
in the bottom right corner of the Branch review window, which will merge the branch into the main file. The branch will be archived and locked after it has been merged.
Learn more about merging branches.
Resend request
Resend a review request to any reviewers. You can do this to remind a reviewer of an outstanding review or to submit another request after making changes.
Open the branch you want reviewed.
Expand the
menu next to the file/branch name in the toolbar.
Select
Review and merge changes
to open the
Branch review
modal.
Select
Request another review
Update the description of the review to account for any changes (optional).
Click
Send to reviewer
. Figma will notify any reviewers of the request via email and in-app notification.

--- Who can use this feature ---
Who can use this feature
Available on
all plans
Anyone with
can edit
access can apply and edit constraints.
Constraints tell Figma how layers should respond when you resize their frames. This helps you to control how designs look across different screen sizes and devices.
You can check out the video below, or continue reading to find out more.
Horizontal and vertical constraints
You can apply constraints along both the x (horizontal) and y (vertical) axis.
We set a layer's constraints to
Top
and
Left
by default.
Horizontal
Horizontal constraints define how a layer behaves, as you resize the frame along the x axis.
Left
maintains the layer’s position, relative to the left side of the frame.
Right
maintains the layer’s position, relative to the right side of the frame.
Left and right
maintains the layer’s size and position relative to both sides of the frame. This may cause layers to grow or shrink along the x axis, when resized.
Center
maintains the layer’s position, relative to the horizontal center of the frame.
Scale
will define the layer’s size and position as a percentage of the frame's dimensions. It will then maintain those proportions as you resize it.
For example: The frame's width is 100px and the layer's width is 70px, so the layer takes up 70% of its parent frame. If we resize the frame to 200px wide, Figma will resize the layer to a width of 140px, 70% of 200px.
Vertical
Vertical constraints define how a layer behaves, as you resize the frame along the y axis.
Top
maintains the layer’s position, relative to the top of the frame.
Bottom
maintains the layer’s position, relative to the bottom of the frame.
Top and bottom
maintains the layer’s size and position relative to the top and bottom of the frame. This may cause layers to grow or shrink along the y axis, when resized.
Center
maintains the layer’s position, relative to the vertical center of the frame.
Scale
will define the layer’s size and position as a percentage of the frame's dimensions. It will then maintain those proportions as you resize it.
Note:
Depending on the layer’s position, more than one constraint may achieve the same result.
Apply constraints to a layer
You can apply constraints to any layer within a frame. It's not possible to apply constraints to layers outside of a frame, or layers in an
auto layout frame
You can also apply constraints to frames you have nested within other frames.
You can apply both
horizontal
and
vertical
constraints to layers.
You can't apply constraints to groups. A group will inherit its bounds from the layers contained within it. They aren't considered a single layer with bounds.
Note:
If you apply constraints to a group, Figma applies constraints to the individual layers.
To set the constraints for a layer:
Select the layer or parent within the frame. The blue dotted line on the canvas shows which constraints are currently applied.
Click [icon]
Constraints
from the
Position
section of the right sidebar.
Adjust the vertical and horizontal constraints.
Use the drop down menus to set the layer's constraints.
Or, click on the lines in the interactive diagram to select a constraint.
Tip!
Hold down
Shift
to select or apply more than one constraint at a time. For example: left and right constraints.
Ignore constraints
Sometimes you may want to resize a frame or layer, without using the constraints that are applied to it. You can temporarily ignore any constraints applied to a layer by holding down a modifier key.
Mac:
Hold down
Command
when you resize
Windows:
Hold down
Ctrl
when you resize
Constraints and layout guides
Constraints give you a basic framework for positioning layers within a frame. When it comes to more complex designs, we need more precise control and flexibility. This ensures our designs behave when resized.
That’s where guides come into play. When you use a guide within a frame, Figma aligns any layers within the frame to that guide. Learn how to
work with constraints and layout guides →

--- Who can use this feature ---
Who can use this feature
Supported on
any team or plan
Anyone with
can edit
access can create interactive components.
Anyone with
can edit
access to the file can publish components to a library.
New to Prototyping? Check out our
Guide to prototyping in Figma →
Interactive components allow you to create prototype interactions between variants in a component set. Any time you add an instance to your designs, those interactions are set up and ready to go. This saves you time when creating prototypes and prevents unnecessary noodle soup.
Create interactive elements that automatically switch between variants, like buttons that change from hover to pressed states.
Set default interactions at a component level and remove the guesswork when it comes to building prototypes.
Reduce the amount of frames and connections needed to prototype input fields, like a set of checkboxes or toggles.
Note:
Interactive components are an extension of variants. If you don't have a component set to work with, you'll need to create one first.
Learn how to create and use variants →
Before variant interactions
In the example below we've added all the possible connections to prototype a frame with five checkboxes. Without interactive components, we would need to duplicate the same frame 32 times and create 160 connections between them to prototype every possible combination.
With variant interactions
With interactive components, we only need to add an instance of the checkbox to our design and its variant interactions are ready to go. When we view the prototype, Figma automatically switches between the checked and unchecked variants.
Create interactive components
You can only create interactive components using variants from the same component set. If you don't have a component set to work with, you'll need to create one first.
Learn how to create variants →
Create variant interactions
Interactive components introduces a new
prototype action
Change to
Navigate to the
Prototype
tab of the right sidebar.
Click the
on the frame's bounding box and drag it to the destination variant. You can also click the
in the
Interactions
section of the
Prototype
panel, set the action to
Change to
, then select the destination variant using the dropdown menu.
Once the connection has been made, use the
Interaction
panel to adjust the trigger and action.
You can also use the
Change to
action on a nested instance to change the parent component variant. In the example below, a variant from a component set is nested within another
Expandable
component set. A
Change to
interaction is placed on the nested instance to change the parent component from its
Collapsed
variant to its
Expanded
variant.
Hands-on learner?
Explore the interactive components playground file →
Use interactive components
Add instances of interactive components to your designs like any other component. The only difference is the instances already have interactions applied for prototyping.
To use interactive components:
Add an instance
of an interactive component to a frame in your design.
When you're ready to prototype your design, navigate to the
Prototype
tab of the right sidebar.
Build your prototype
Preview designs and interactions in Presentation view
Note:
Figma will
use the existing rules to preserve any overrides
you apply to the default variant in a component set. For example: changing the contents of a button label or swapping an icon.
When you add an instance of a component set to the canvas, you also bring along the other variants in that component set. While you can technically still apply overrides to those other variants, Figma won't reflect those overrides in presentation view.
Add more interactions
When you're building a prototype with interactive components, you can add regular interactions on top of the variant interactions.
In the example below, we have added an interaction with a hover trigger on top of the variant interaction triggered by a click.
The interaction order will depend on whether the triggers you use are the same triggers as the variant interactions.
Learn more about prototype triggers →
Same triggers
When both interactions use the same trigger, Figma will use the prototype interaction and ignore the variant interaction.
For example:
A toggle switch has an
On click
Change to
variant interaction between the
and
Off
variants in its component set.
You add an
On click
Navigate to
interaction from the toggle switch to another frame.
Figma will navigate to the next frame when the user clicks on the toggle switch.
Different triggers
When you add an interaction with a different trigger, Figma will play both the interaction and the variant interactions.
For example:
A button has an
On hover
Change to
variant interaction between the
default
and
hover
variants.
You add an
On click
Navigate to
interaction when building your prototype.
Figma will
Change to
the
hover
variant on
hover
, then
Navigate to
the next frame
On click
View interactions
When using interactive components, you will see separate sections for
Interactions
and
Variant interactions
in the
Prototype
tab of the right sidebar.
Use the
Interactions
section to
create prototype interactions and animations
Use the
Variant interactions
section view a variant interaction's details
Edit variant interactions
You can override a variant interaction for an instance in your prototype. If you want to edit a variant interaction for the main component, you'll need to do so from the source file.
To access a component set from an instance and make your edits:
In design mode, select the instance.
At the top of the right sidebar, click
Select
Go to main component
Navigate to the
Prototype
tab of the right sidebar.
Make your edits to the variant interactions.
State management across frames
Your prototypes likely involve interactions across multiple frames. By default, Figma uses state management controls to determine how interactive components work across frames.
State memorization
: Figma memorizes the last set variant of your interactive component.
For example, you might have an interactive component for a checkbox. If you set the interactive component to the checked variant, Figma remembers the state of that variant. This means that if you navigate away from that frame and come back to it later, the interactive component will remain in the checked state.
State sharing
: Figma shares states between matching interactive components. States are only shared after the component has been initially interacted with.
For example, you might have an interactive component for a checkbox, with an instance of the component on each of two frames. If you set the interactive component to the checked variant on the first frame, then navigate to the second frame, the matching component on the second frame will also be set to the checked variant.
If you don’t want to maintain states across frames, check off
Reset component state
on the
Interaction details
panel of the prototype interaction.
Learn more about prototype state management →
Use with variables
Apply
variables
to interactive components to extend their power even further.
When you click an interactive component with an applied variable:
The variant updates
The variable updates, which in turn updates any other elements bound to that same variable
Learn more about
using variables with interactive components →
Interactive components with custom fonts
When using custom fonts for text inside interactive components, keep in mind that prototype viewers might not have those custom fonts installed on their devices. In these cases, Figma uses cached information about variants of interactive components to display custom fonts correctly when presenting a prototype, but may replace a font with Inter when we can’t both preserve text overrides and change font settings for an interaction.
For example, let's say a person viewing your prototype doesn't have the custom font being used installed on their device. If an instance of an interactive component has a text overrides:
Figma may replace the custom font with Inter if the change in variants includes changing a font setting like weight or underline.
Figma will display the correct font if the change in variant isn't related to a font setting, like a button's background color.
We recommend using
Google fonts
for prototypes that are being shared with viewers who may not have access to custom fonts in your designs.
If your team is on the
Organization or Enterprise plan
, you can make sure prototype viewers have access to custom fonts by
uploading them as shared fonts
Tip!
Visit the
Figma Forum
to ask questions, share feedback, and connect with the Figma community!

--- Before you start ---
Before you start
Who can use this feature
Available on
any team
Anyone with
can edit
access to the file can set a custom thumbnail
Every design file has a thumbnail that shows you a preview of a file's contents. Figma displays this thumbnail wherever the file appears in the file browser.
By default, Figma will base the file thumbnail on the contents of the first page of the file.
You can use the
Set as thumbnail
setting to choose any frame to use as the thumbnail. This is a great way to set expectations and communicate the file's contents.
Note:
Only frames can be used for thumbnails. If you don't see the
Set as thumbnail
option, add your layers to a frame and try again.
Thumbnail dimensions
The exact dimensions of a file thumbnail depends on your display. To make sure your thumbnails aren't awkwardly cropped, we recommend setting the frame’s dimensions to 1920 x 1080 (16:9).
Tip:
Use the
Plugin / file cover
preset from the Figma Community frame templates in the right sidebar.
Set a custom thumbnail for a Figma Design file
Open the design file and find the frame you want to use as the thumbnail.
Figma will scale the selected frame so it fills the thumbnail. We recommend setting the frame’s dimensions to
1920 x 1080
for a proper fit.
Right-click on the frame in the canvas.
Select
Set as thumbnail
from the options.
Figma will update the file's thumbnail and show the
custom thumbnail
icon next to the frame.
Want to remove the frame from the thumbnail?
Right-click on the frame in the canvas and select
Restore default thumbnail
. Figma will use the contents of the first page in your file as the default thumbnail.
Set a custom thumbnail for a FigJam file
By default, Figma uses an overview of the entire FigJam board to create a file's cover.
You can use a section as the thumbnail image for the file or a
custom template
Select a section.
Click
Set as thumbnail
You can also create custom thumbnails in Figma Design files to use them for FigJam file covers.
Create a frame to use as a custom thumbnail
Copy/paste the frame to your FigJam file.
Right-click on the frame in the FigJam board.
Select
Set as thumbnail
from the options.

--- Before you start ---
Before you start
Who can use this feature
Available on
any team or plan
Anyone with
can edit
access can apply fonts to text
Check out guide to
Getting started with text →
Text is one of the crucial components of interface design. Picking the right font can help determine the legibility and appeal of your design.
When editing text, fonts can be applied to:
All text within a text layer
A number of selected text layers
A string of text within a text layer
When applying fonts, you can search for a font by name or use the filter options to browse font collections:
Search
: Use this field to search the font list by name.
All fonts:
Will show all fonts that are available to you, including installed fonts, shared fonts, and those provided by Figma.
In this file:
Fonts used in the current file
Popular:
A list of commonly used fonts, curated by Figma
Used at [your organization]:
Shared fonts
uploaded by your organization
Installed by you:
Fonts you have installed to your computer
Google fonts:
Fonts available via Google fonts in Figma
Variable fonts:
All
fonts that have at least one variable font axis
Browse and apply fonts
Browse and apply fonts from the
Text
section in the
right sidebar:
Select a text layer, or some text within the layer, in order to adjust its properties.
The current font is displayed at the top of the
Text
section. Click the font name to open up the font picker.
Search or select a font from the list, or click
All fonts
to select a filter. Hover over a font name to preview it on any selected text layers.
Click
to close the window and return to the canvas.
Figma will remember the last font filter used per session.
Learn more about using text in Figma →

--- Before you start ---
Before you start
Who can use this feature
Anyone on
any team or plan
Anyone with
can edit
access to the file can create and edit prototype connections.
New to Prototyping in Figma?
Check out our
Getting Started with Prototyping
and
Build Prototypes with Interactions and Animations
articles.
Prototypes often require transitions between screens in a design. For some interactions, you may want to keep the user on the same screen, but show additional information.
Overlays allow you to show new content or information above the current screen in a prototype. Use overlays to prototype:
Alerts or confirmations
Interactive hamburger menus
Tooltips and additional information
On-screen keyboards
Overlay actions
In a prototype connection, an action usually takes the user from
. When the action is an overlay, Figma shows the overlay above the current screen.
Figma usually applies interaction settings to just that the connection. When you create an overlay, Figma applies those settings to the overlay itself, not the connection.
This allows you to apply those settings once and reuse that overlay across your prototype.
Tip!
You can create interactions between overlays using the
Swap overlay
action. Learn more in the
Swap between overlays
section.
Create an overlay
You create an overlay when you define the interaction of a connection. Overlays can be triggered from any object, layer, group or frame. The overlay must be inside a frame.
Click the
Prototype
tab in the right sidebar.
Hover over the object you want to start the overlay from. Click on the prototype node and drag a connection to the frame you want to become the overlay.
Now you can customize the interaction. There are three aspects of the interaction, the trigger, action and destination.
Select what kind of interaction will trigger the animation.
Select
Open overlay
from the actions.
Figma determines the
Destination
based on where the connection ends. For this interaction, you want this to be the overlay frame.
There are a few aspects of an overlay that you can customize:
Position:
The location of the overlay relative to the original frame. Choose from seven default options or set a position manually.
Close when clicking outside
: Check this setting to dismiss the overlay when a user clicks outside the overlay's dimensions.
Add background behind overlay:
Check this setting to add a background color behind the overlay and in front of the current frame. Set both the color and the opacity.
In the Animation section, customize how the overlay will appear. Select the (1) transition and any additional settings, including (2) direction, (3) easing, and (4) duration. Learn how to
build prototypes with interactions and animations
Tip!
Add GIFs to your overlays to simulate more advanced animations. GIFs show up as static images in the Editor, but playback as GIFs in
Presentation View
Swap between overlays
When working with overlays, you can choose the
Swap overlay
action. This allows you to keep the existing settings while you swap one overlay for another.
In the following example, we used
Swap overlay
to show a user interacting with our in-app help menu.
The user clicks on the help icon, which opens the first overlay (
Help menu
They select the
Get Help
option from the menu.
We replace the
Help menu
overlay with a
Chat window
overlay.
Note:
Figma doesn't record
Swap overlay
actions in a prototype's history. When you create a
Back
action from a
Swap overlay
transition, Figma will take you back to the previous screen, not the previous overlay.
Use Swap Overlay
Select the first overlay in the canvas.
Open the
Prototype
tab in the right sidebar.
In the
Trigger
field, choose the type of interaction you want to use as the trigger.
In the
Action
field, select
Swap overlay
In the
Destination
field, select the overlay you'd want to swap to.
Customize the
Animation
with transition, direction, easing, and duration settings.
Preview your overlay in
Presentation view
Note:
You can't set a different position for the new overlay. Figma places the new overlay in the same position as the original overlay.
Edit or delete an overlay
Unlike other actions, overlay settings are applied to the overlay and not the connection. This means you can update the overlay's settings in one place.
You can only edit or remove an overlay in
Prototype
mode.
Edit overlay
Identify an overlay using the blue
icon. This will appear next to the frame in the canvas.
Click the
icon to view overlay's settings in the right sidebar.
Make any changes to the overlay, as required.
Tip!
You can also access the overlay settings by clicking on a hotspot, or on an arrow from one of the connections.
Delete Overlay
There are a few ways to delete an overlay:
Click on the connection arrow and drag it to an empty part of the canvas.
Click the
icon to select the overlay, then press the
Delete
key.
Remove all connections on the current page. Right-click on a connection and select
Remove all interactions

--- Who can use this feature ---
Who can use this feature
Supported on
any plan
Anyone with
can edit
access to a design file can use shape tools
Shapes make up the majority of your layers in any given design. Use the following shape tools as your building blocks:
Rectangle
Line
Arrow
Ellipse
Polygon
Star
You can access these tools from the
Shape tools
menu in the toolbar. Click the arrow next to the
Rectangle
to open the menu.
You can use the following shortcuts when working with shapes:
Hold down
Shift
when dragging to create perfect squares, circles and polygons.
Hold down
Option
Alt
to create and resize shapes from their center.
Hold down
Shift
and
Option
Alt
at the same time to do both actions.
Note:
For designs that require unique or complex shapes, you can build your own vector networks using the
Pen
tool.
Learn more →
Rectangles
Use the
Rectangle
tool to create both rectangles and squares.
Select the
Rectangle
tool from the toolbar, or press
Click on a spot in the canvas and drag to create the rectangle. You’ll see the rectangle’s dimensions underneath the bottom edge.
There will be a handle in each corner of the shape, this allows you to resize the shape as you see fit.
Adjust corner radius
In addition to the regular handles, rectangles also have four circle handles on the inside of every corner. These handles allow you to adjust the corner to round the corners of the rectangle.
Learn more →
Lines
The
Line
tool allows you to create lines in any direction. Lines are an effective way of breaking up content within a design, or simulating CSS borders.
Select the
Line
tool from the shape tools or press
Click on a spot in the canvas and drag in any direction to create the line.
You can make any changes to its appearance in the
Stroke
section of the right sidebar. This includes the color, position, weight, style, and end point tips or caps.
Learn more →
Create dashed lines
You can specify both the length of the dash and the gap between dashes.
Draw or select the line.
In the
Stroke
section of the right sidebar, select
to open the
Advanced stroke settings
menu.
Enter the length you want in the
Dash
and the
Gap
fields.
Arrows
The
Arrow
tool allows you to draw one-sided and two-sided arrows. You can customize the tips or caps of the arrow’s end points.
Select the
Arrow
tool from the shape tools menu, or use the shortcut
⇧ Shift
Click on a spot in the canvas and drag in any direction to create the arrow.
Like the line tool, you can make adjustments to the
Stroke
properties.
Learn more →
Ellipses and circles
Use the
Ellipse
tool to draw both ovals and circles. These can be used as they are, or manipulated to create custom shapes with curved lines.
Select the
Ellipse
tool from the shape tools menu, or press
Select a spot in the canvas and drag in any direction to create the ellipse. The shape's dimensions will be shown in blue underneath the layer.
There will be a blue bounding box around the ellipse, with a handle in each corner. This allows you to resize the shape.
Tip:
Use the ellipse tool to create other shapes, like semi-circles, pie charts, rings, donuts and semi-circular rings.
Learn more →
Polygons
The
Polygon
tool allows you to draw an enclosed shape that is made up of any number of straight lines.
The default shape for the polygon tool is a triangle, but you can add extra points to the object to create your own custom polygons.
Select the
Polygon
tool from the shape menu.
Select a location in the canvas and drag to create the polygon. The shape's dimensions will be shown in blue underneath the object.
The blue bounding box around the shape has a handle in each corner. This allows you to resize the shape as you see fit.
Enter
Edit object
mode by double-clicking on the polygon layer. This allows you to add additional points to the polygon and manipulate each point individually:
You can round the corners of a polygon too. Hover over the handle in the corner until the
radius
is shown. Click and drag the handle towards the center of the object to round the corners.
Polygons and bounding boxes
You may have noticed that when we drew our polygon, in this case a triangle, the blue bounding box around the shape is below the bottom of the shape.
This allows the bounding box to remain a consistent shape or size, when additional points are added to the polygon. To snap the bounding box to the shape's true boundary, you can
flatten
the shape.
Stars
The
Star
tool creates polygons that are arranged in a star shape. When you create a star layer, the default will be a five pointed star with ten sides.
Select the
Star
tool from the shape tools menu.
Select a position in the canvas and drag in any direction to create the star.
You’ll now have three handles you can use to manipulate the star:
Count
: How many points there are to the star. The minimum is three and the maximum is 60.
Ratio
: The distance of the inner points of the star from the center. This is represented as percentage of the star's diameter.
Radius
: Allows you to round the points of the star.

--- Before you Start ---
Before you Start
Who can use this feature
Supported on
any team or plan
Anyone with
can view
can edit
access to a file or prototype can follow.
Spotlight lets you share your view of a Figma Design file or prototype. This allows others to follow along with you and track each movement you make on the canvas, including actions like zooming in or switching between pages. Spotlight does not share your actions in the toolbar, sidebars, or anything outside of the canvas.
Spotlight allows you to:
Walk through designs with remote collaborators
Present designs during a
design crit
Demonstrate tasks and specific actions
Reference a particular part of the file when talking with collaborators
Remove the need for screen-sharing when you have a slow internet connection
Follow students as they complete exercises
Spotlight yourself in a file
Hover over your avatar in the toolbar and click to open the
Multiplayer tools
dropdown menu.
Click
Spotlight me
Everyone currently viewing the file will be notified that you’d like them to follow you. They’ll have a few seconds to click
Not now
before automatically being shown your view of the file. Once you’re in the spotlight, you’ll see how many people are following you and your avatar in the toolbar will have a dashed border.
To stop a spotlight, click
Stop
at the top of your canvas.
Follow another user in a file
Find the person’s avatar in the toolbar.
Do one of the following:
Click on the user’s avatar in the menu bar to automatically follow them.
Hover over the user’s avatar and click
Ask to spotlight
to send them a spotlight request. The user is notified that you would like them to spotlight themselves and can accept or reject the request.
We will display a border around your canvas, in the color of the person's avatar. A message displays at the top of the screen to show who you are following. Once you follow someone, you will see their actions and cursor as they move through the prototype.
To stop following the user, click
Stop following
following
at the top of your canvas.
Note:
We won't tell someone if you follow them. We do still show your cursor's location when you're following a presenter or someone else in a file. If they have
Multiplayer Cursors enabled
, they will be able to see your cursor in their viewport.
Use spotlight in prototypes
You can use spotlight while in
presentation view
. This allows you to follow along with a user while they interact with your prototype.
You can use this to:
Walk through prototype Interactions with remote collaborators
Track what actions a user is performing during a usability test
Switch between presenter views during a presentation
Remotely control a presentation from your phone
To follow someone in a prototype:
Open the prototype in presentation view.
Hover over the top of the screen to show the menu bar.
Do one of the following:
Click on the user’s avatar in the menu bar to automatically follow them
Hover over the user’s avatar and click
Ask to spotlight
to send them a spotlight request. The user is notified that you would like them to spotlight themselves and can accept or reject the request.
Once you follow someone, you will see their actions and cursor as they move through the prototype.
Tip:
If you leave a person’s spotlight and want to rejoin while they are still spotlighting, click
Follow
from the message at the top of the screen

--- Before you start ---
Before you start
Who can use this feature
Available on
any paid plan
Team admins or anyone with can edit access to the file can unpublish a published library.
New to component libraries? Check out our
Guide to components
and
Guide to libraries
articles.
If you maintain a library of styles, components, and variables, you may need to unpublish a library. This means anyone using this library will no longer be able to access the library or receive updates to its styles, components, and variables.
Open the file that you want to unpublish. Make sure you select the library file where your main components and styles are located.
Go to the
Assets
tab and click the
Library
icon. The tooltip may read
Review library updates
if there are updates to libraries you are using in the file, or
Review unpublished changes
if you have unpublished updates in your file.
Select the
This file
section and click on the current file to view the styles, components, and variable collections in the library.
Click the
Unpublish
button at the bottom of the modal.
Click
Remove File from Library
to confirm. Figma will remove that file and any styles and components from the library modal.
Note:
Team members can still use instances from an unpublished library. They will no longer receive any updates made to those instances.

--- Before you Start ---
Before you Start
Who can use this feature
Available on the
Organization and Enterprise plans.
Users with
Full, Dev, or View
seats can access the ready for dev view.
Users with
Full or Dev seats
can change statuses.
Users with
full or dev seats
can access the focus view.
When you’re using the
ready for dev view in Dev Mode
to explore sections, frames, and components that are ready for development, you’ll frequently want to inspect specific designs more closely. To get details for designs that are ready for dev, use the Dev Mode focus view. With the focus view, you get:
All the same tools you normally have available in your Dev Mode toolbar.
The same
Inspect
and
Plugins
tabs you have access to in Dev Mode’s full experience.
A version history with descriptions specific to the design you’re viewing that you can use to compare different versions and see changes over time.
An easy way to expand and explore the layers of a given design that’s ready for dev.
The ability to mark work as completed for a specific design.
To access the focus view:
Open a Figma Design file.
Click
Ready for dev
in the left sidebar. The ready for dev view opens, displaying a list of all designs marked with a dev status.
Click the design that you want to focus on.
Alternatively:
Open a Figma Design file.
On the canvas, for the design you want to focus on, click the dev status and select
Show in focus view
Optionally, click
Copy link to focus view
to get a link to the focused design that you can share with others.
The focus view opens, displaying the following:
The design you wanted to inspect appears in the center of the focus view. You can use your Dev Mode tools to do things like measure, annotate, and comment on the design.
The
Inspect
and
Plugins
tabs
, where you can do things like generate code, view the properties of the design, export or download various, and run plugins for Dev Mode.
The
Mark as completed
button, which you use to confirm that the dev work for the design is done.
Navigate
In the focus view, Figma provides a few ways to navigate to other areas of Dev Mode.
To go to the ready for dev view, in the upper-left corner of the focus view, click
Ready for dev.
To see the design in the context of the canvas, in the upper-right corner of the focus view, click
and then select
Show on page
To return to the area of the Figma interface you were using before you entered the focus view, in the upper-right corner of the focus view, click
. If you entered the focus view from the canvas, you’re returned to the position you were at on the canvas. If you entered from the ready for dev view or using a link, then you are returned to the ready for dev view.
Explore layers
The focus view provides an easy way to explore the individual layers of a given design. The focus view’s layer panel appears when you select one or more parts of the design.
Inspect and Plugins panels
The
Inspect
and
Plugins
panels are the same as your regular Dev Mode experience, simply limited in scope to the design you’re viewing. To learn how to use the panels, see
Guide to Dev Mode →
Version history
Similar to the
version history that’s available for files
, the focus view includes an annotated version history that tracks iterations of work on the design.
Normally, the file-wide version history shows you every version in a file, but often there can be a lot of activity and you care most about what’s changed in a specific frame or section that you’re reviewing and implementing. The version history in focus view shows you versions and works the same as the file-wide history, but is scoped to only versions that affect the specific design you have open in focus view.
As designers and developers iterate on a design, they update the
status
and add notes to describe the changes. Each time the status updates, an entry in the version history is added. You can also compare different versions in order to identify the changes between each iteration.
You can inspect older versions, copy a link to that particular version, or compare it to the latest version currently in your file.
Learn more about comparing in Dev Mode →
Mark as completed
To show the dev work for a design is done, use the
Mark as completed
button at the top of the focus view.
When a design is marked completed, a new entry is added to the version history, and the design remains available in the
ready for dev view
for later iterations.

--- Before you Start ---
Before you Start
Who can use this feature
Users on
Any
plan
can edit image properties
Users with
Edit access
to a File can edit image properties
You can access the Image Properties from the
Fill
section of the Properties Panel.
A static Image will be an "Image" in the Fill section. An animated GIF will be a "GIF".
View a thumbnail of the image or GIF. Click the thumbnail to open the Fill menu.
Adjust the
Opacity
of the Image using the field provided. We represent this as a percentage value (%).
Toggle visibility of that Image by clicking the eye icon.
Remove the image from the object by clicking the [-] icon.
Add new Fill layers by clicking the [+] icon.
Create Color Styles from Images, solid colors and gradients. Click the Style icon (four dot square) to view, apply or create Styles.
You can also click the image thumbnail in the Properties Panel to access more image settings. This allows you to adjust the following:
Fill Type (
Add Fills to layers
Blend Mode (
Create unique effects with Blend modes
Fill Mode
Rotation
Image Preview
Image Adjustments
Fill Mode
There are four different modes that decide how Figma will apply a Fill to your object. This takes into account the dimensions of both the image and the object you're adding it to.
We keep the selected Fill mode, even as you scale or manipulate the object.
Fill
will position and scale the Image so that it takes up the entire object it's applied to. If the image and the object are different shapes, we may clip the Image. This ensures the shape is completely filled.
Fit
ensures the entire image is visible within the object it fills. This ensures no part of the image hidden, even when you resize the object. Depending on the shape of the object, the Image may not completely fill the object.
Crop
allows you to adjust the boundary lines of your image. This allows you to control which part of the image you can see. This is a
non-destructive
action that works like a
mask
Tile
creates a repeated pattern of the original image, which fills the entire object. You can adjust the size of the tile using the percentage value. We base this on a percentage of the image's original dimensions.
You can enter a percentage in the field provided. Or, click and drag the blue handles in the canvas to adjust the scale.
Images that scale
As we apply Images as Fills, it's not possible to adjust the scale or dimensions of the Image itself.
But like any other object, you can scale the object the Image fills. We will scale and position the Image based on the Fill mode you've selected.
In the example below, our Image is set to Fill. When we resize the object, Figma scales our Image to ensure it fills the entire object.
Rotation
You can use the Image options menu to rotate the Fill within an object. This won't affect the orientation of the object itself, just the Fill within it.
The rotate icon allows you to rotate the Fill
clockwise
at 90º increments.
Select the object you want adjust.
Click the image thumbnail in the Properties Panel to open the Image options menu:
Click the rotate icon to rotate the Fill
90º clockwise
Repeat as many times as you need.
Click X in the top-right corner of the
Image options
menu to close and return to the canvas.
Image preview
The Fill menu allows you to see a preview of the Image. From here, you can perform some extra actions:
Upload images from your computer:
Hover over the preview so that the
Choose Image
button appears. If you already have an image added, this will replace the existing Image with the new one.  Learn more in our
Upload Images as Fills
article.
Replace Images:
Drag Image Files over the Image Preview to replace the Image. This will preserve the Fill mode and settings of the previous image.
Preview GIFs:
If you've added a GIF, you can select which Frame you can see in the Editor. You can use the slider to choose your Frame, or press the play and stop icons to select a Frame.
Image adjustments
You can also apply adjustments to Images. These work like the filters or settings you'd see in photo editing software.
We apply these on top the Image as opposed to editing the image itself. Adjustments are non-destructive, you can reverse or update these settings at any time.
Apply Image adjustments
Types of a adjustments
Apply image adjustments
You can apply Image Adjustments via the
Image options
menu:
Select the Layer with the Image you want to adjust.
Click the Image thumbnail in the Properties Panel.
This will open up the Image menu where you can see a preview of the Image.
You'll find the. Each setting has a scale which you can drag to adjust.
Generally, you can drag the handle:
To the
left
to apply a
negative
adjustment.
To the
right
to apply a
positive
adjustment
You can see the adjustments on the Image inn the canvas, as well as in the Image Preview.
Click the
to apply your adjustments and return to the Canvas.
Types of adjustments
There are seven Image adjustments available:
Exposure
Contrast
Saturation
Temperature
Tint
Highlights
Shadows
Note:
It's not possible to apply adjustments to animated GIFs.
Exposure
Traditionally, exposure indicates how much light reaches the sensor within a camera. You can decrease the exposure to create a darker image (underexposure). Or, increase it to create an image with more light (over exposure).
Contrast
Contrast refers to the difference between the light and dark pixels within an Image.
You can decrease the contrast to narrow the range of colors and create a muted Image. Or, increase the difference between the light and dark portions of your images.
This results in more vivid images with brighter highlights and darker shadows.
Saturation
Allows you to adjust the intensity of the colors within an image. You can decrease the saturation completely to get a black and white image. Or, increase the saturation to create an image with more intense, saturated colors.
Temperature
Temperature refers to the tone of the image. We measure Temperature along a horizontal axis, from blue to amber.
"Cooler" images have blue undertones, while "warmer" images have amber undertones. You can drag the slider to the left to create cooler toned images. Or, to the right to create warmer images.
Tint
Allows you apply a Tint to the colors within an image. We measure Tint along a vertical axis, from green to magenta.
You can drag the slider to the left make the image appear more green. You can drag the slider to the right to makes the image appear more magenta.
Tip!
You can use Temperature and Tint together to adjust the
white balance
of the image.
Highlights
Allows you to isolate and adjust only the lighter areas of an image. You can use this to create more distinction between the highlights and shadows. As well as adjust the relative exposure.
You can decrease to reduce the level of light in the highlights. Or, increase it to create even brighter highlights.
Shadows
This allows you to isolate and adjust only the darker areas of an image. You can use this to create more distinction between the highlights and shadows. As well as adjust the relative exposure.
You can apply a negative adjustment to reduce the level of light and create deeper shadows. Or, a positive adjustment to increase the amount of light to create brighter shadows.

--- Before you Start ---
Before you Start
Who can use this feature
Available on all paid plans
Anyone with a
Full seat
and
can edit
access to a file can add measurements and annotations
Anyone with a
Full
or a
Dev seat
and at least
can view
access to a file can view measurements and annotations
Use annotations and measurements to create speedier and more transparent handoffs that stay up-to-day, even as designs change.
With annotations, designers can communicate and connect key details directly to designs:
Highlight important properties so developers can't miss them
Help developers quickly visualize specs like spacing and sizing
Share additional context with text notes
Create and categorize annotations for easier navigation
Developers can see annotations update in real time as they work in Dev Mode, ensuring they don’t miss any crucial callouts during handoff.
Add measurements to a design
Adding measurements
to quickly
visualize spacing and sizing between components.
To add a measurement to a design:
Click
Measurement
in the toolbar or use the keyboard shortcut
Shift
Hover over a layer to see options for where to start your measurement.
Click and drag from your starting point to the layer where you want the measurement to end.
Click and drag the measurement so it doesn’t cover the design.
You can double-click on the measurement to customize its text.
Tip:
To delete a measurement, click it and press the
Delete
Backspace
key.
Add annotations to a design
Designers can add annotations to provide context, define design properties, or communicate other relevant information for developers to turn design into code. You can annotate a layer’s
defined properties, like alignment direction or sizing, or provide additional details with free text.
Even if designs are later updated, annotation properties stay-up-to-date and accurate, ensuring nothing gets lost in translation.
You can add annotations from Design or Dev Mode. To add annotations to a design:
Click
Annotation
in the toolbar or use the keyboard shortcut
Shift
Select the layer you’d like to annotate.
Write a note in the text field, or click
+ Property
to select a property from the list. You can include both plain text and properties in an annotation.
Categorize annotations
Give annotations even more clarity by categorizing them. Categories help distinguish different types of annotations, making it easier to scan for relevant information.
Editors can use the default labels, as well as edit or delete those categories. Category labels only apply to the current file
nothing will change in other files when you edit or delete the default categories.
Figma design files come with preset annotation categories:
Development
Interaction
Accessibility
Content
To add a new category:
Select an existing annotation or create a new one, then click the category dropdown.
Click
Edit categories…
Click
, then select a color and type in a name for your new category label.
Note:
Copying layers that have annotations with categories will copy over the category from the source file to the target file. If there is no exact match in the target file (color and label), a new category is defined.
Tip:
With the plugin API, teams can build custom Dev Mode plugins to create and manage annotations in bulk.
Check out the Figma Plugin 
Filter by category
You can filter annotations by category, making it even easier to find the details you need on the canvas. There are a couple of ways to filter annotations by category:
Right-click menu
Right-click an annotation on the canvas.
Select
Filter by
Select which category you want to filter by, or select
All categories
Zoom menu in Dev Mode
Click the zoom dropdown in the Dev Mode right sidebar.
Hover over
Annotations
Select which category you want to filter by, or select
All categories
Hide annotations
All annotations on a Figma Design file are visible in Dev Mode by default. To hide annotations:
Click
Main menu in the toolbar.
Hover over
View
in the dropdown.
Deselect
Annotations
Tip:
To delete an annotation, click it and press the
Delete
Backspace
key.

--- Before you start ---
Before you start
Who can use this feature
Anyone on any plan can create styles. Anyone on
Education, Professional, Organization, and Enterprise plans
can publish styles.
Anyone with
can edit
access can create styles.
About styles
Use styles to define the color, text and any effects applied to objects; or to define the structure and appearance of layout guides.
Create styles for:
Paints and colors
: fill, stroke, background color
Text
: font family, size, line height, spacing
Effects
: drop shadow, inner shadow, layer blur, background blur
Layout guides
: row, column, grid
Whenever you make a change to a style's properties - like updating a text style's color from red to blue - Figma will apply those changes to any objects using that style.
Tip
: Like
components
variables
, styles can be shared by publishing them to your
team library
. This allows you to easily establish and maintain consistent styles across your team projects.
Use styles
Create paint, text, layout guides and effect styles
Apply styles to layers and object
Manage and share styles
Learn more about when to use styles in our blog post:
Best practices: components, styles, and shared libraries

--- Before you start ---
Before you start
Who can use this feature
Available on
any paid plan
Anyone with
can edit
access to a file can create prototypes.
Anyone with
can view
can view prototypes only
access to a file can view prototypes.
Prototyping with variables allows you to create realistic prototypes that change based on user selection, using only a few simple frames and interactions.
Expressions can help make your prototypes even more powerful. With expressions, you can generate dynamic string or number values, or even evaluate boolean expressions.
Prototyping with expressions makes it possible to do things such as:
Create a shopping cart that calculates purchase total
Build objects that scale in size, like volume or progress bars
Combine and build new text strings based on user selection
New to variables? Learn more here:
Guide to variables →
Use variables in prototypes →
Want to get more hands-on practice?
Check out the
advanced prototyping playground file →
Looking for more examples of how you can use variables in prototypes? Check out some more
advanced prototyping examples →
Where to use expressions
Expressions provide a way to manipulate the values of variables with basic operations. They can be used in:
The
Set variable
prototype action, if the selected variable is a number, string, or boolean type
The
Conditional
prototype action, as a part of a
conditional statement
You can write expressions directly in the following fields on the
Interaction details
modal:
[Set variable] to
: Enter an expression to represent the new value of the selected variable
[Conditional] if
: Enter a boolean expression to represent the condition required for the action
To build expressions in your prototype, you can either write them directly in the available fields using supported syntax, or use the selection panel to choose from suggested variables and operators.
Once your expression is complete, press
Enter
Return
. Only expressions written with supported operations and syntax will work. Invalid expressions will be outlined in red.
Write expressions
Expressions are made up of values and operators.
Operators
represent the function you are performing or evaluating (such as addition or subtraction)
Values
are the items that the operators are performing on or evaluating
For example, take a look at the following expression:
variableName + 2
In this example, the operator is addition, represented by the + plus symbol. The values are
variableName
and
The expression type determines which values and operators are available.
Numerical expressions
Numerical expressions can be written with the following value types:
Number variables
Number literals (such as 0.5, 1, 10)
The following operators can be used in numerical expressions:
Operation
Symbol
Addition
Subtraction
Multiplication
Division
String expressions
String expressions can be written with the following value types:
String literals (such as "John Doe”, “item 2”, “5”)
Number literals
String and number variables
String literals must be contained in quotations. Number values can be added on to a string value.
The following operator can be used in string expressions:
Operation
Symbol
Add to string
Boolean expressions
Boolean expressions can be written with the following value types:
Boolean literals (true, false)
Number literals
String literals
Boolean, string, and number variables
The following operators can be used in boolean expressions:
Operation
Symbol
Equal to
Not equal to
And
and
Greater than
Less than
Greater than or equal to
Less than or equal to
Addition**
Subtraction**
Multiplication**
Division**
Add to string**
** Numerical and string operators are not used to evaluate boolean expressions, but can be used as supporting operators in
complex expressions
Boolean expressions must resolve to a
true
false
value. When setting a boolean variable with an expression, the result of the expression is evaluated to have either a true or false value—therefore setting the new value of the boolean variable.
For example, take a look at the simple interaction and expression below:
Set itemCount to 0
itemCount > 5
The value of
itemCount
, which is not greater than
. Therefore, the value of this expression is
false
. However, now take a look at the following example:
Set itemCount to 6
itemCount > 5
The value of
itemCount
, which is greater than
. Therefore, the value of this expression is
true
Examples of boolean expressions are listed in the tabs below. For these examples, the following statements are true:
numberVariable1 ==  1
numberVariable2 ==  2
stringVariable1 ==  red
stringVariable2 ==  blue
Equal to (==)
Not equal to (!=)
And (and)
Or (or)
Returns
true
when the values are equal.
Returns
false
when the values are not equal.
Examples:
Set booleanVariable to:
numberVariable1 == numberVariable2
Answer:
Since
does not equal
booleanVariable
is set to
false
Set booleanVariable to:
numberVariable1 + 1 == numberVariable2
Answer:
Since
does equal
booleanVariable
is set to
true
Returns
true
when the values are not equal.
Returns
false
when the values are equal.
Examples:
Set booleanVariable to:
stringVariable1 != stringVariable2
Answer:
Since
red
does not equal
blue
booleanVariable
is set to
true
Set booleanVariable to:
numberVariable1 + 1 != numberVariable2
Answer:
Since
does equal
booleanVariable
is set to
false
Returns
true
when both values are true.
Returns
false
if one or both values are false.
Examples:
Set booleanVariable to:
numberVariable1 == 1 and numberVariable2 == 2
Answer:
Since
equals
and
equals
booleanVariable
is set to
true
Set booleanVariable to:
numberVariable1 > 5 and numberVariable2 == 2
Answer:
Since
is not greater than
booleanVariable
is set to
false
Returns
true
when one or both values are true.
Returns
false
when both values are false.
Examples:
Set booleanVariable to:
stringVariable1 == red or stringVariable2 == purple
Answer:
Since
red
does equal
red
booleanVariable
is set to
true
Set booleanVariable to:
stringVariable1 == green or stringVariable2 == orange
Answer:
Since
red
does not equal
green
orange
booleanVariable
is set to
false
Note:
Boolean expressions are also used to evaluate
conditional statements
Complex expressions and order of operations
Complex expressions are built by using multiple operators within a single expression. Use parentheses to group expressions.
In complex expressions, basic math operations are performed in the following order:
Parentheses
Multiplication/Division
Addition/Subtraction
Boolean expression operators are performed in the following order:
Parentheses
Comparisons (==, !=, >, <, etc.)
And
All operations are performed from left to right.
For example, in the following expression:
x + y * z
First, multiply
. Then, add
In the following boolean expression:
x == (y > z)
First, evaluate if
is greater than
. Then, evaluate if
is equal to the solution of
y > z
Concepts in expressions
Negative numbers
You can use negative numbers in expressions. To represent a negative number, use a
minus sign.
Negate boolean values
Negating a boolean value means flipping its logical state. Negating a true boolean value would make it false, and negating a false boolean value would make it true.
Negating boolean values can be valuable when buildings objects that have two opposing states—such as toggles, buttons, or other settings.
In order to negate a boolean value, enter
not
before the boolean variable.
For example, consider the following expression:
! boolVar
If the
boolVar
value is
true
, the statement is overall evaluated to be
false
If the
boolVar
value is
false
, the statement, is overall evaluated to be
true

--- Who can use this feature ---
Who can use this feature
Available on
all plans
If you’re new to Figma, we recommend our
guide to exploring design files
At Config 2024, we introduced a redesigned Figma, called UI3. This guide was created to help you switch over to the new designs and see how things have changed.
Why we redesigned Figma
Figma has grown more complex over time, and UI3 is an effort to simplify your design experience. Our intent is to make Figma Design feel more focused for designers and more approachable for a broad range of people. We’re also creating a consistent foundation for our existing products—and products yet to come.
This new design:
Gives you more control over the interface, with resizable and collapsible panels
Draws more emphasis to your work on the canvas
Makes features more intuitive by improving their placement, grouping, and how they adapt to different contexts
Adds consistency with our other products, making it easier to switch between Figma Design, FigJam, Dev Mode, and Figma Slides
Tip:
Want to read more about the redesign? Check out our blog post:
Inside the redesigned Figma, where your work takes center stage
What's changed
Navigation panel
We’ve reorganized the navigation panel on the left side of the canvas to house all the information about your file and make it easier to use.
Minimize the UI
If you need a bit more room on the canvas, you can now minimize the UI from the navigation panel. Click
Minimize UI
to collapse both the navigation panel and
properties panel
If you select something on the canvas with the UI minimized, the properties panel temporarily opens back up so you can access each property’s controls.
File name and location
Click the
dropdown icon next to the file name to take action on a file, like
moving it
publishing a library
, creating a
branch
, or showing the
version history
Assets tab
We’ve made it easier to
search, browse, and insert components
from the
Assets
tab.
Toolbar
The
new toolbar
moves design tools to the bottom of the editor. This frees up more working space on the canvas and introduces brand new AI capabilities via the new actions menu.
Note
: The AI features in Figma Design are rolling out over the coming months.
Learn more →
Actions
Actions
is a brand new item in the toolbar, and is all about helping you go from imagination to reality, faster. From here, you can access all Figma’s AI tools, common productivity actions, plugins and widgets, components, and more.
Enter Dev Mode
You can now access
Dev Mode
in the toolbar, making it easier to switch between modes in Figma Design.
Properties panel
The
Design
view of the properties panel is easier to use and properties are now grouped to match more modern workflows.
You can also resize the properties panel, which is handy for working with components with long names.
Property labels
New to UI3, you can now turn on
Property labels
to make it clearer what each property does.
To turn on property labels, click the
dropdown menu next to the 100% zoom percentage in the properties panel and select
Property labels
Selection actions
The properties panel now features a header row with actions you can perform on a selected object.
For example, you might find the buttons to apply a
mask
, create a
component
, or perform a boolean operation—or they might be tucked away in the
More
menu.
Layout
Layout
contains all the properties related to an object’s layout, like width and height.
When you click
Use auto layout
on a frame, the
Layout
label changes to
Auto layout
, and all the auto layout properties become available.
Position
You can now access all properties related to an object’s position on the canvas, including constraints, under
Position
Tip
: You can now
spotlight
yourself from the properties panel. When people enter spotlight, we’ll minimize the left and right panels, and the toolbar, so you have more room to show off your work.
Where did a feature move to?
Take a look at the list below to see everything that’s moved—and where you can find it.
Old design
Redesign
Ask for edit access
If you have
can view
access to a file and would like to edit it, you can request edit access by clicking
Ask to edit
in the toolbar.
Absolute position
Absolute position
is now
Ignore auto layout.
When you ignore auto layout, you can manually position an object inside an auto layout frame without following the auto layout structure.
To ignore auto layout, select a child of an auto layout frame, then click
in the properties panel.
Align objects
The
alignment controls
help you align an object to its parent layer, or align multiple objects to one another.
Select more than one object, then click one of the alignment tools under
Position
in the properties panel.
Auto layout
When you use
auto layout
on a frame, it will adjust dynamically to content changes and different screen sizes.
To use auto layout on a frame, click
in the
Layout
section of the properties panel.
Blend modes
Blend modes
define how you want two layers to blend together.
To apply a blend mode, select an object, click
next to
Appearance
, then select a mode.
Clip content
Clip content allows you to hide parts of a layer that extend beyond the bounds of the parent frame.
Use the
Clip content
checkbox under
Layout
to choose whether to clip or show content.
Component properties
Component properties
are the changeable aspects of a component. You can define which parts of a component others can change by tying them to specific properties.
If a component has component properties available, you can find them underneath the name of the frame in the properties panel.
Constraints
Constraints
tell Figma how layers should behave when you resize their parent frames.
With a child layer selected, the
Constraints
icon will appear next to the X and Y position values in the
Position
section of the properties panel.
Corner radius
Corner radius
is a property that allows you to round the corners of an object.
With an object selected, click the
corner radius field under
Appearance
and change the value.
You can also click
to modify each corner individually.
File name, project name, and file actions
The name of a file, its project, and the file actions dropdown have moved to the navigation panel.
Go to main component
You can navigate to the main component of an instance directly from the properties panel.
Mask
Use a
mask
to show specific areas of an object while concealing the rest.
With an object selected, click
Use as mask
to create a mask group with the object as a mask. Depending on the number of available actions,
Use as mask
might be in the
More
menu.
Multi-edit
Multi-edit
lets you select multiple layers across frames, groups, and sections and apply the same edits to them in bulk.
Click
in the properties panel to enable multi-edit.
Plugins and widgets
To access
plugins
and
widgets
, open
Actions
from the toolbar, then click the
Plugins & widgets
tab.
Resize an object's width or height, or resize to fit
Change an object’s width and height under
Layout
. You can also resize a frame to fit its child layers by clicking the
icon.
Rotate
Rotating or flipping
let you manipulate objects by changing their orientation. With an object selected, find
Position
and:
Click
to rotate an object 90° to the right
Click
to flip horizontally
Click
to flip vertically
Show or hide an object
hide an object on the canvas
, click
next to
Appearance
. To show it again, click
Text
Text
is now called
Typography
You can now resize a text layer under
Layout.
Paragraph spacing has moved to
Type settings
. From
Typography
, click
to open the
Type settings
panel.
Variable modes
Variable modes
represent the different contexts of a design. A mode contains a list of values for
a variable within a collection
If a variable collection has multiple modes, then you can switch modes on layers and elements to quickly change designs for different contexts.
As long as an object is bound to a variable with multiple modes, you can click
next to
Appearance
to switch the variable mode.
Add variant
Variants
allow you to group and organize similar components into a single container. When you insert a component instance, you can switch between the variant properties of the component set.
To add a variant, select a main component, then click
Add a variant
next to the component name in the properties panel.
Edit a vector path
To edit a vector path, click
Edit object
next to
Vector
If you select multiple vector paths, the
boolean operations
menu will appear. From here, you can perform the following operations:
Union
Subtract
Intersect
Exclude
Zoom / view options
From the
Zoom / view options
menu, you can
adjust your zoom settings
, or
configure view options
like layout grids or multiplayer cursors.

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
Use text suggestions
Use AI text suggestions to automatically complete text strings based on the context of your design—saving time and allowing you to focus on your work.
Text suggestions appear as transparent text while you're typing, when relevant suggestions are available.
To accept the suggestion, press
tab
To accept only the first word, press the right arrow →
To dismiss the suggestion, press
esc
or continue typing
Disable text suggestions
To disable text suggestions:
Click the
main menu >
Text
Toggle off
Show text suggestions
Note:
Disabling text suggestions only applies to the AI autosuggest feature. Admins can
disable all AI features
across Figma from admin settings.

--- Who can use this feature ---
Who can use this feature
Available on
all plans
You can customize your preferences for design files the
Zoom/view options
menu. Adjust your zoom settings, or toggle on other view options like layout guides or multiplayer cursors.
Access the
Zoom/view options
menu from the right sidebar.
Canvas zoom settings
There are a number of ways to adjust canvas zoom in design files. Any changes you make to zoom only apply in the current tab for that file.
When you first open a file, the default zoom level will be set to
Zoom to fit
. This focuses the viewport so you can see everything on the current page.
Note:
These zoom settings only apply to layers and objects on the canvas. If you're using the desktop app, you can
adjust the scale of Figma's interface
, which includes the toolbar, and the left and right sidebars. If you're using Figma in a browser, you can use your browser's zoom settings to adjust the size of the interface.
Zoom percentages
View the current zoom percentage in the top-right corner of the right sidebar.
Click to open the
Zoom/view options
menu.
Figma focuses on the current percentage field. Start typing to enter a specific percentage.
Select one of the default zoom percentages:
Zoom to 50%
Zoom to 100%
Zoom to 200%
Keyboard shortcuts
Zoom in:
Shift
Zoom out:
Shift
Zoom to fit:
Shift
Zoom to selection:
Shift
Tip:
If you are opening a Figma URL that links to a specific node, the canvas will be zoomed to fit that specific node.
Mouse and trackpad gestures
You can also use your mouse or trackpad to zoom the canvas.
On both
Mac and Windows trackpads
, you can use the following gestures to adjust zoom:
Stretch two fingers apart to zoom in
Pinch two fingers together to zoom out
On an
Apple Magic Mouse
Hold down ⌘ Command (Mac) or Ctrl (Windows) and scroll up and down
Double-tap with one finger to zoom in and back out
another type of mouse
Hold down
⌘ Command
(Mac) or
Ctrl
(Windows) and scroll the mouse wheel up to zoom in, or down to zoom out.
Pixel preview
By default, vectors in Figma are rendered as resolution-independent. This means that there aren't fixed resolutions for the paths you create in the canvas.
To support pixel-precise editing, you can enable pixel preview. This allows you to preview vector objects in their rasterized format.
You can view pixel preview in either 1x or 2x mode. This allows you to preview how objects will appear on both low and high resolution displays.
To enable Pixel preview:
Open the
Zoom/view options
menu.
Hover over the
Pixel preview
option to open the menu.
Select either
from the options.
A checkmark will appear next to the setting in the menu. You will also see a notification at the bottom of your screen to confirm Pixel preview is enabled.
To disable pixel preview:
Select the
Zoom/view options
menu in the toolbar.
Hover over the
Pixel preview
option.
Select
Disabled
from the options.
Tip:
You can also use the shortcut to toggle pixel preview off and on:
Mac:
⌃Control
Windows:
Control
Alt
Pixel grid
For greater accuracy when placing and aligning objects, you can enable the
pixel grid
. Each square in the pixel grid represents a single pixel, when exported at 1x resolution.
Open the
Zoom/view options
menu.
If there is no check next to it: select
Pixel grid
to toggle this on.
If there is already a check next to
Pixel grid
, you can click it again to toggle it off.
You can also use the keyboard shortcuts to toggle the pixel grid off and on:
Mac:
⌘Command
Windows:
Ctrl
Snap to pixel grid
The pixel grid is only visible at zoom levels of 400% or higher. If you want to use the pixel grid while zoomed out, the
Snap to pixel grid
setting is a great tool.
When you enable this functionality, we will align objects to the underlying grid when placing or moving them. This can help to prevent mis-aligned pixel errors when exporting elements.
Note:
Frames, sections, and components always snap to the pixel grid, even if
Snap to pixel grid
is disabled.
To toggle snap to pixel grid, open the
Zoom/view options
menu (from the zoom level in the toolbar) and select
Snap to pixel grid.
Or use keyboard shortcut:
Mac:
⌘Command
⇧ Shift
Windows:
Control
⇧ Shift
Tip:
You can temporarily disable
Snap to pixel grid
by holding
Control
while in
vector edit mode
and zoomed in to the canvas.
To know if you’ve zoomed in to the canvas enough, turn on the pixel grid
⇧ Shift
and zoom in until the grid is visible. You can disable the pixel grid at anytime as it isn’t needed to disable snap to pixel grid.
Layout guides
You can toggle the visibility of all layout guides in your files, from the
Zoom/view options
menu. This is great if you'd like to preview how a design will look, without having to remove or hide layout guides for individual objects.
Open the
Zoom/view options
menu.
If there is no check next to the
Layout guides
option, click to display them:
If there is a check already showing, clicking
Layout guides
will hide them:
You can also use the keyboard shortcuts to toggle layout guides:
Mac:
Control
Windows:
Ctrl
Shift
Learn more about layout guides.
Multiplayer cursors
If you're collaborating with other team members in a file, you will be able to see their actions via the Multiplayer cursors. Collaborator names and cursors are shown next to their location on the canvas.
If you don't want to be distracted by other team member's actions, you can hide their cursors from your view.
Open the
Zoom/view options
menu.
If there is no check next to the
Multiplayer cursors
option, click to display them.
If there is a check already showing, click
Multiplayer cursors
again to hide.
You can also use the keyboard shortcut
Option-Command-\
to toggle multiplayer cursors.
Prototype flows
A prototype is the network of frames and connections in a single page. Prototypes can map out a user's entire journey through your app or website, or can focus on a specific segment or flow.
Learn more about prototyping →
If you only have
can view
access to a file, you can't create prototypes or make changes to an existing prototype. However, you can still view existing prototype connections by toggling the
Prototyping
view option.
In the toolbar, click the current zoom percentage to open your view options menu.
Select
Prototyping
to toggle prototype connections on or off.
Note:
If you have edit access to the file, you won’t have the
Prototyping
setting in your view options. Instead, you can view prototype flows by switching to the
Prototype
tab.
Learn more about viewing prototype connections →

--- Before you Start ---
Before you Start
Who can use this feature
Available in Figma Design files on
all plans
Anyone with
can edit
access
UI kits are a set of libraries curated by Figma and partners, optionally available from the assets tab in Figma Design files.
UI kits contain high-quality components, styles, variables, and example screens to kick-start your designs, even if you don’t have a design system of your own. They behave just like any other library in Figma, in that you can pull assets onto your canvas directly from the assets tab.
There are three UI kits available:
iOS and iPadOS 18
by Apple*
Material 3 Design Kit
by Google
Simple Design System
by Figma
Unlike other Community resources, updates to UI kits are automatically available in your design files where you have the option to accept the updates.
Each UI kit also supports Code Connect for those on Professional, Organization, and Enterprise plans, so you can grab code to assets at any time.
*Before you use Apple's UI kit
Apple requires users to accept an end user licensing agreement (EULA) before using their kit.
Learn more →
Find and use UI kits
UI kits are automatically enabled on Starter teams. They are optionally available for Professional, Organization, and Enterprise plans.
Admins may toggle access to UI kits
for their team or organization.
From the Assets tab
You can access UI kits from the
Assets
tab in the left panel/sidebar of a design file. How you access UI kits depends on your plan:
Starter
Professional, Organization, and Enterprise
UI kits are enabled on all design files in a Starter team. From the file, UI kits are listed at the top of the libraries list in the
Assets
tab. Double-click a UI kit to open it to browse through the available assets.
For design files within Professional teams and organizations, UI kits can be added to individual files:
Select the
Assets
tab in the left sidebar.
Click
Libraries
to open the
Libraries
modal. The tooltip may read
Review library updates
if there are updates to libraries you are using in the file, or
Review unpublished changes
if you have unpublished updates in your file.
Select
UI kits
in the sidebar.
Click
Add to file
next to the UI kit you want to enable in the file. To remove from the file, click
Remove
Once UI kits are added to a file, you can access them in the Assets tab at the bottom of the list of libraries.
If you don’t see UI kits in the Assets tab, make sure you have
can edit
access to the file and that
UI kits are enabled
by your team or organization admin.
Once you’ve accessed the UI kit, you can use it like you would any Figma library, such as inserting components onto the canvas, swapping instances, and customizing component variants before inserting.
From the Community
UI kits can also be accessed in the
Figma Community
Open the Community page for the UI kit that you want to use.
Click
Open in Figma
From the prompt window, choose
Show kit in Figma
If you belong to one or more team or organization, you’ll be asked to choose a space to create a new draft.
Make a copy
You can make a copy of a UI kit to edit its assets or browse the design system.
Open the UI kit’s Community page.
Click
Open in Figma.
From the prompt window, choose
Make a new copy
In the next prompt, choose the team or organization you want the copy to live in.
Once you choose a team or organization, a copy of the kit will be added to the draft folder of that space.
Receive updates
Note:
Copies of UI kits will not receive updates from the creators if there are updates to the library. If you want to use assets from the kit and receive updates to them, use assets directly from the UI kit.
Updates to UI kits are managed by the UI kit authors. If an author publishes updates to their UI kit, you’ll have the option to accept the updates from within individual design files.
To view and accept updates to a UI kit, check the
Library updates
modal from any design file.
Manage access to UI kits (admins only)
Admins can control the level of access to UI kits for their team or organization in two different ways:
global setting
to enable or disable the UI kit feature for an entire team or organization (paid plans only)
Individual settings to
toggle specific UI kits
on or off for a team
Toggle UI kits globally
If you’re a team admin for a Professional team or admin for an organization, you can toggle the UI kits feature globally for your entire team or organization.
When the UI kits feature is disabled globally, you won't be able to add individual UI kits to files and their assets won't be discoverable. However, team members can still
make a copy of UI kits
from the Community and use the assets from the duplicated file.
Open your team or organization space in the file browser.
Click
Admin
from the left sidebar.
Open the
Settings
tab, and go to
Resources
UI kit
Use the toggle to enable or disable the UI kits feature. This setting applies to all files within the team or organization.
Toggle individual UI kits for a team
Team admins can toggle individual UI kits from their team’s default libraries settings. These settings apply to all files within the team by default.
When an individual UI kit is disabled, assets from the UI kit are still discoverable and team members can still
add the UI kit to a file
for use.
If your team is part of an organization or is on a Professional plan, UI kits will need to be
enabled globally
in order for to access individual settings.
Open your team in the file browser.
Open the dropdown next to the team name and click
View settings
From the settings modal, go to click
View team libraries
Open the
UI kits
tab.
Use the dropdowns next to the UI kit’s name to turn it on or off. These settings apply to all files within that team.

--- Before you Start ---
Before you Start
Who can use this feature
Supported on
any team or plan
Anyone with at least
can view
access to a file can add and view comments
Comments takes collaboration to the next level. You can use comments to respond to feedback, tweak your designs and iterate faster—all from the original design file.
When you and your team add comments to a file, they're displayed on the canvas in the regions or locations they were added to. You can view and reply to comments right from the canvas using the browser, desktop, and
mobile app
. You can also view and manage comments from the right sidebar when you enter comment mode.
Comments can be hidden from your canvas at any time ↓
View comments
From the canvas
Comments in a file are pinned to the point or region of the canvas selected by the commenter. How comments display depends on your zoom level of the canvas and the amount of comments.
Pins
: Individual comments are represented by a
. Hover over a pin to preview the comment. Click the pin to open the comment modal, where you can reply
Clusters
: As you zoom on the canvas, multiple comments that are pinned closely to each other are consolidated into clusters. Hover over a cluster to preview the amount of comments and avatars for their authors. Click on a cluster to focus on the comments within it, then hover or click on individual comments to view them.
Click on the comment to open the comment modal. From here, you can:
Hover over the comment body to activate the
to use a reaction.
Click
Mark as unread
Copy link
to the comment, or
Delete
the thread if you added the comment. Click
Resolve
the comment,
to dock the comment to the top of your canvas to keep it open while editing your file, and
to close the comment modal.
Type a
Reply
to the comment, then click
Submit
Hide comments from the canvas ↓
From the right sidebar
You can also access and manage all comments in a file by clicking
in the main toolbar or pressing
to enter comment mode. From here, you can view, search, sort, and filter comments. Click on a comment in the right sidebar to open it in the canvas.
When you're viewing comments in the right sidebar, each comment will include the page it's located in. When you click a comment to open it, you'll be navigated to that page and the location of the comment.
Note:
When you're in comment mode, you won't be able to make any changes to objects in the canvas. Press
Esc
or select another tool to continue editing a file.
Hide comments
Comments are always visible on the canvas by default, whether or not you're in comment mode. If you rather hide comments from your canvas and only see them when in comment mode, you can do so at any time.
To hide comments, use the keyboard shortcut
⇧ Shift
to toggle them on or off. Press
show and hide comments in the Figma mobile app
Sort and filter comments
All the comments in the file will be listed in the right sidebar when you're in comment mode. Click
at the top of the right sidebar to sort and filter which comments you'd like to view.
Comments in the right sidebar can be sorted by:
Date
: displayed in order from the first comment in a thread
Unread
: displayed by date, prioritizing comments that haven't been read
Click
at the top of the right sidebar.
By default, comments are sorted by
Date
. Click
Sort by unread
to prioritize unread comments.
By default, the sidebar will display all comments in a file. Check
Only your threads
to view the comments that are relevant to you. This includes:
Comments you have been @mentioned in.
Comments on threads you've replied to.
Comments you've created that collaborators have replied to.
You can also decide if you'd like to
Show resolved comments
. Click on the setting to turn it off and on.
Tip:
You can also open a comment from the notification. Click the link in your email to
View comment
. If the comment was made on the canvas, the email link will direct you to the canvas view. If the comment was made on a prototype, the email link will take you presentation view instead.
Learn how to edit and move comments →
Reply and react to comments
Anyone can add, view, and reply to comments, including
viewers
Select the comment in the canvas, or from the right sidebar.
The comment box will appear with a
Reply
field attached. Click
Reply
and start typing in your message, or hover over the body and click
to react to the comment. You can also add any
emoji
@mentions
as needed.
Click
or press
Return
Enter
to add your comment to the thread.
Add further replies to the thread as needed.
Tip:
You can also reply to comment notifications from our
Slack
Microsoft teams
integrations.
Resolve comments
Once the feedback has been addressed, or a resolution reached, you can
Resolve
the comment.
This will hide the comment from both the right sidebar and the canvas.
Select the comment in the canvas, or from the right sidebar.
Click
in the top-right corner to mark it as
Resolved.
We will hide the comment from both the right sidebar and the canvas.
Unresolve comments
If a comment is resolved by mistake, you can undo this action by unchecking the
in the comment. Click
in the right sidebar when in comment mode and toggle the
Show resolved comments
filter on.
Learn how to sort and filter comments ↑
Delete comments
You can also delete any comment you post. If you delete a comment with replies, this will delete the entire thread.
Caution:
Deleting a comment is a permanent action. It's not possible to restore a deleted comment, even if you restore an earlier version of the file.
Delete a single comment
Select the comment in the canvas, or from the right sidebar.
Click
next to the comment.
Choose
Delete comment
from the options.
Delete an entire thread
You can also choose to delete an entire thread. This will delete both the initial comment and any replies.
Select the comment in the canvas, or from the right sidebar.
Click
next to the comment's title.
Select
Delete thread
from the options.
Click
Delete
to confirm.

--- Who can use this feature ---
Who can use this feature
Available on
all plans
Users with
edit access
to a file can create and edit links
Users with
view access
to a file can only follow links
Links in text also work in prototypes.
Learn how to
get started with prototyping
Add links to any text layer within your design file to:
Direct collaborators to external sites like documentation and project management tools
Create navigation within a large Figma file to specific frames and pages
Link to other Figma files and prototypes
Represent actual links that will exist in production
Note:
It's not currently possible to add links to images or vector objects in the Editor, only when
creating prototype hotspots
. Linking to default email clients using HTML like
mailto:
is not supported at this time.
Create a link
You can add a link to an entire text layer, or to a selection of text within the layer. Select the text layer, then press the Enter key to edit the text layer and make your selection.
From the Properties panel
Make your selection.
Click
Create link
in the properties panel.
Type or paste a URL into the provided input box above the selected text.
Press
Enter
to apply the link.
Use the keyboard shortcut
Make your selection.
Use the keyboard shortcut to open the link input box above the selected text:
Mac:
⇧ Shift
⌘ Command
Windows:
Shift
Control
Type or paste a URL into the input box.
Press
Enter
to apply the link.
Use paste in place
Add links directly to text without using the link input box.
Make your selection.
Paste a URL from your clipboard using the keyboard shortcut:
Mac:
Command
Windows:
Control
If you want to display the full URL in the page, use the paste keyboard shortcut twice—once to paste it as text, and once more to turn it into a link.
Learn more about how links work in our
Links playground file
Tip:
To add a URL or an email without creating a link, use the keyboard shortcut:
Mac:
⌘ Command
Shift
Windows:
Control
Shift
Copy a link to a file, page, or frame
Create navigation links to pages and frames within a large file, or link out to other Figma files and prototypes.
File
To copy a link to a file:
Open the file.
Click the
Share
button.
From the share modal, set any
link sharing permissions
Click
Copy link
to copy the URL to your clipboard.
Prototype
To copy a link to a prototype:
Open the file.
Click
Present
to open the prototype in
presentation view
Click the
Share Prototype
button and set any
link sharing permissions
Click
Copy link
to copy the URL to your clipboard.
Page
To copy a link to a page:
Open the Layers panel and expand the page list.
Right-click on the page's name and select
Copy link to page.
Frame
To copy a link to a frame:
Right-click the frame on the canvas or from the Layers panel.
Go to
Copy/Paste as
Copy link
Once copied, you can create a text layer and use it as a link to a page, file, frame, or prototype.
Tip!
If you're using Figma in the browser, you can copy a link to the selected object from the browser's address bar.
Interact with links
Preview or follow a link
To preview a URL link, hover over the linked text.
To follow a link, click the linked text. What happens when you follow the linked text depends on the type of link:
Figma Design or FigJam files:
Links to other Figma files, prototypes, frames, or pages open in a new tab.
Page or frame in current file:
Figma takes you to the page or frame in the current file.
External website:
All external links open in a new tab in your browser. If it’s your first time opening a link, you'll need to confirm that you're leaving Figma.
To prevent a link from opening when clicking it, hold
⌘ Command
Control
while clicking.
Note:
If you’re in text edit mode, you’ll need to hover over the linked text and click the URL from the link modal.
Edit or delete a link
Double-click the linked text to enter text edit mode.
Click or hover over the linked text to open the link modal.
Click
Edit
Update the URL, or delete the URL to remove the link.
Note:
If you double-click a linked text and the
Edit
button is unavailable, this means the layer is locked.
Learn how to lock and unlock layers →
Style links
You can style linked text as you would any other text layer. Whether this is applying text styles or adjusting text properties, like underline, font, or color.
Links are styled with an underline by default. Use the keyboard shortcut to remove the underline:
Mac:
Command
Windows:
Control
Learn more about
editing and styling text
in Figma.

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone with
Can edit access
to a file can add or adjust fills.
Paints are colors, gradients, or images. Fills are just one of the ways you can use paints in Figma.
Apply paints to text layers, or any vector object, this includes shapes, vector networks, and boolean groups. You can add, adjust, and remove fills in the
Fill
section of the right sidebar.
Add fills
Add fills to text layers, frames, and any vector objects. You can even add more than one fill to a single layer. This allows you to layer gradients over images, or apply blend modes to create unique effects.
We treat each fill as a unique layer, so you can adjust the properties individually. You can even toggle the visibility of each fill independently.
Select the layer(s) you want to add a fill to.
In the
Fill
section of the right sidebar, click the
icon to add a fill to the layer.
Figma will add a default
Solid
fill with a hex value of
C4C4C4
. Click on the fill swatch to open the color picker:
From the color picker you can select a paint type, choose a color, and apply blend modes.
Learn more about using the color picker.
Tip:
Want to reuse fills across your designs?
Create Color Styles
from fills or strokes and apply them to objects in the canvas.
Adjust fills
Add, remove or adjust fill properties at any time. You can adjust fill in the
Design
panel of the right sidebar.
Selection colors
allows you to view and adjust the paints applied to a selection, individually. This also allows you to change the fills of child objects, when you have the parent selected.
If selected layers share the same fill properties, you can adjust them in the
Fill
section of the Properties Panel.
If selected layers have different fill properties, you can adjust each fill individually in the
Selection colors
section of the Properties Panel.
Hover over the left edge of the fill to reveal the drag handles
. Click and drag on the handles to reorder fills.
Click the
icon to toggle visibility off and the
icon to toggle visibility on.
Learn more about toggling visibility.
Click the
icon to remove a fill from your selection.

--- Sections ---
Sections
are a great way to visually group frames on the canvas – and they can help reduce the number of connections you need in your prototype, too
When you create a prototype connection to a section, Figma remembers the last-visited frame in the section and automatically returns to it.
Example
In an e-commerce app, you might have two sections:
A “Browse” section that contains several frames to represent different product types
A “Checkout” section that contains frames to represent the user checkout flow
On the checkout pages, there is a back button that navigates back to the “Browse” section. When users click the back button, they are automatically returned to the last frame, or product type, they were browsing.
Without using sections, the back button needs a fixed frame to return users to, which may not be the frame they came from. This can result in a prototype that doesn’t accurately reflect the experience users will have.
Note
: This video explains a feature using Figma's old interface. For examples of the new interface, UI3, see the content in this article.
Organize frames into sections
To begin, organize frames into sections.
In each section, group together frames that are a part of the same user flow. For example:
In an e-commerce app, you might create sections for “Browse”, “Cart”, and “Checkout”
In a social media app, you might create sections for “Feed”, “Settings”, and “Post”
In a fitness app, you might create sections for “Workouts”, “Goals”, and “Profile”
To create a section:
Click
Section
in the top toolbar, or press
⇧ Shift
Click and drag to create the section on the canvas.
Tip:
Drag the section over existing frames to automatically put them inside it.
Learn more about using sections →
Add a prototype connection to a section
You can set an entire section as a destination for a prototype connection.
When a connection navigates to a section, Figma remembers the last visited frame of that section and returns to it.
To set a connection destination to a section:
Navigate to the
Prototype
tab of the right sidebar, or press
⇧ Shift
Select a layer or object for the connection's hotspot, or starting point of the interaction.
Click the
plus icon on the side of the object's bounding box and drag it to the destination section.

--- Before you start ---
Before you start
Who can use this feature
Supported on
any team or plan
Anyone with
can view
access can view prototypes.
Anyone with
can edit
access can mirror frames.
You will need a
Figma account
to use the Figma mobile app.
New to the Figma mobile app?
Read our guide to the Figma mobile app →
Prototypes replicate how users might interact with your designs. Use the Figma mobile app to preview prototyping interactions on the device you're designing for.
It's only possible to preview frames with prototyping connections. If you don't have any connections set up yet, check out our
guide to prototyping in Figma
Figma mobile app
Use the Figma mobile app to preview both static designs and prototyping interactions. You can preview your prototype using presentation view in the app or by mirroring frames from your desktop.
Presentation view
Sign in to the Figma mobile app.
Use the
Recent
Search
tabs to find the file or prototype you want to view.
Tap the file or prototype to open it.
From the file, press
View prototypes
to present the prototype.
The prototype will play according to its
flow starting point
Note:
Frames must have prototype connections to be interactive in presentation view.
Learn how to build prototypes →
Prototype options
Prototypes have a hidden options menu bar. To access it, double tap and hold anywhere on the screen. To hide the menu bar and access the prototype again, tap anywhere on the prototype.
The menu lets you:
Switch between
flow starting points
Restart the prototype from the
flow's starting frame
View the file for the prototype
Set the prototype content scale to
Fixed
to keep to the frame’s original aspect ratio, or
Responsive
to respect constraints and auto layout settings
Toggle
hotspot hints
Share the
prototype link
Exit the prototype and return to the
Recent
tab
Mirror view
Use the
Mirror
tab of the mobile app to view frames that are selected in the file on your desktop.
View real-time edits to a frame on a mobile device
Preview how assets in your design look scaled to a device screen
The Figma mobile app will work on either wi-fi or cellular data. You don't need to connect to the same wi-fi network to establish a connection between the two.
To mirror frames:
Log into Figma and the Figma mobile app using the same login details.
Open the file you want to mirror on your desktop.
From the file on your desktop, select a
top-level frame
you want to mirror. You must select a frame to mirror to a mobile device.
On your mobile device, navigate to the
Mirror
tab of the Figma mobile app.
The Figma mobile app will display the selected frame, scaled to the width of the device you are previewing it on.
If the frame you selected is part of a prototype, you can interact ‌with any connected frames.
Tip!
If your mobile device isn't supported by the Figma mobile app, you can
mirror prototypes using a mobile browser ↓
Mobile browser
Presentation view
You can preview any design on your mobile by opening a prototype link in your mobile browser. This will allow you to navigate through any prototyping connections.
Figma displays your designs inside a regular browser window, so the browser's header and footer will still be visible. To replicate an in-app experience without an address bar, we recommend using the Figma mobile app.
You can only interact with prototypes on mobile devices using hotspots. Using the browser back action isn't supported on mobile devices.
Copy the prototype link from the browser's address bar in
presentation view
. Or click
Share
in the toolbar, then
Copy link
On your mobile device, click on the link to open the prototype, or paste the URL in your mobile browser.
Figma will scale the prototype to your display. You can now interact with the prototype using any hotspots.
Note:
If you are sharing your prototype via public link access, anyone with the link will be able to view your prototype. If the file isn't shared via public link access, you will only need a free Figma account to view the file.
Share prototypes →
Mirror view
You can also mirror frames via the browser. We recommend this approach if your device isn't supported by the mobile app or you want to preview designs in a web browser.
Open the file you want to preview in the Figma desktop app, or in a browser window.
Visit
figma.com/mirror
from the mobile browser on your device.
Log in using the same account details and the desktop app or browser.
From the file on your desktop, select a
top-level frame
you want to mirror. You must select a frame from your desktop to mirror to a mobile device.
Figma will display the selected frame in the mobile browser.
Troubleshooting
If you are having trouble using the Figma mobile app, we recommend the following:
Make sure you're using a supported device.
Make sure you have selected a
top-level frame
to mirror to your mobile device.
Make sure you're logged into both the desktop version and Figma mobile app under the same account. You may need to log out and sign in again to confirm.
If you're running into issues while previewing, you may need to force quit the app and restart it on your device.
If problems persist, we recommend uninstalling the app and downloading it again. Find the Figma mobile app in the
Apple App Store
Google Play Store
If you're still having issues,
get help from the Figma Support team
Visit the
Figma Forum
to ask questions, share feedback, and connect with the Figma community!

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can view
access to a file or prototype can play prototypes and adjust presentation mode options
Prototypes add interaction and animation to your Figma designs. If you need to present a prototype without an internet connection, you can play the prototype offline.
Offline prototype requirements
To play a prototype offline:
Preload the prototype while online
Keep the preloaded prototype open in presentation view
Note:
Prototypes cannot be played offline on
mobile devices
. Large prototypes that exceed the browser’s download limits may not be preloaded.
Preload prototypes
While online, click
Present
to open the prototype in presentation view.
Open the
options menu.
Toggle on
Advanced settings > Make available offline
Wait for
Available to present while offline
to appear in the prototype header. Once this icon appears, you’re ready to present offline.
Keep the presentation view tab open to present. If the tab is closed, the prototype must be preloaded again in order to play offline.
Learn more about
playing prototypes in presentation view →

--- Who can use this feature ---
Who can use this feature
Only people with an
Full seat
in an organization or workspace can access the branching feature
Anyone with
can view
can edit
access to the branch can review changes
Anyone with
can edit
access to the main file can
merge branches
This article covers one step in the branching process:
Create
Share
Update
Request
Review
Merge
Manage
Branch creators can request a review from a team member or other collaborator before merging a branch. You'll receive an email and notification when someone adds you as a branch reviewer.
Reviewers can view all the changes included in the branch. They can then choose to
Approve
a branch, or
Suggest changes
from the branch's creator.
If you only have view access to the main file, you can still review a branch. If you have edit access to the main file, you can also merge an approved branch.
Open branch
Click the notification or open the link from your email to access the branch's
Branch review
modal.
Open the branch you want to review, click the menu next to the file/branch name in the toolbar, and select
Review and merge changes
Review changes
Branch reviews apply to all changes in a branch. There isn't a way to approve some changes and reject others.
You can use the review process to suggest changes to the branch creator. They can then make those changes and resubmit the branch for review.
In the left sidebar of the
Branch review
window you can see a summary of the branch. This includes the branch name, the main file, and the total number of changes.
View details of the review request in the
Review request
section. This includes a description of the branch added by the branch creator, and the date and time the review was requested.
In the main body of the window you can view a list of components, instances, or layers that have been
, or
. Figma groups changes by page, click the page name to collapse or expand the changes in each page.
Select an object or page to view changes for a specific layer or component.
With a layer or component selected you can:
View the layer, frame, or component name at the top of the modal. Click
in the top left to go back to the review summary.
View changes
side by side
or as an
overlay
Use the buttons to:
Zoom in
Zoom out
Zoom to
Fit
View details of the changes, including any layers or specific properties changed.
If there are multiple changes, use the
and
arrows at the bottom to view other changes.
Approve branch
If you're happy with all of the changes you can approve the branch. If you have edit access to the main file you can also
merge the branch
into the main file.
To add your approval:
Click
Add your review
in the bottom-right corner of the window.
In the
Finish your review
dialog, select
Approve
Add any comments you want to make (optional).
Select
Submit
to approve the branch. You'll see an
Approved
badge next to the branch name in the toolbar.
Suggest changes
If there are changes you'd like the branch creator to make before merging, you can suggest changes. You can add a summary of the changes during the review process.
If there are specific changes or suggestions you'd like to make, you can also
add comments
to the individual designs. Comments are specific to the branch and aren't included when you merge the changes into the main file.
Click
Add your review
in the bottom-right corner of the window.
In the
Finish your review
dialog, select
Suggest changes
Add any general comments you want to make (optional). You can also close out the modal and add comments to designs or layers in the branch.
Select
Submit
add your review. You'll see a
Changes suggested
badge next to the branch name in the toolbar.
Edit review
Edit your review to make changes to your comment. If you've made a mistake or want to change your review, you can
review the branch again
Click
next to the branch name in the toolbar.
Select
Review and merge changes
Find your review in the left sidebar. Click
next to your name.
You'll see a blue border around the comment to show the field is now editable. Click inside the text and make any changes as needed. Click outside the text field to apply your changes.
Review again
If you've made a mistake or want to change your review, you can review the branch again. You can also use this process to review a branch after your suggested changes have been made by the branch creator.
Click
next to the branch name in the toolbar.
Select
Review and merge changes
Click
Review again
at the bottom of the modal.
Select from
Approve
Suggest changes
Add a comment if needed (optional).
Click
Submit
to add your review.

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in FigJam
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
FigJam is the perfect place for hosting collaborative exercises like brainstorms, design critiques, and retrospectives. As a result, you may be left with a load of sticky notes to sift through and categorize before you can create alignment and outline next steps. This is where FigJam AI steps in to help.
Use FigJam AI to:
Sort a selection of stickies by theme
Summarize a selection of stickies
Note
Sorting and summarizing stickies with FigJam AI should only be used as a step in the larger process of sorting and summarizing your work, so your own magic touch may be needed to get the job done.
Sort sticky notes
To sort stickies:
Select the stickies on your board.
Click
Organize
in the selection’s toolbar >
Sort stickies
Sort stickies by
Topic
Color
Author
Stamp count
, or
Stamp type
FigJam AI will create a copy of the selected stickies and categorize them in a new section. From here, you can manually adjust sorting as needed.
Summarize sticky notes
To summarize stickies:
Select two or more stickies on your board.
Click the
Organize
in the selection’s toolbar.
Click
Summarize
Tip:
You can use Jambot to summarize a single sticky note at a time →
FigJam AI will create a new object on the board with a written summary of the stickies. You can
Copy
the text to paste and edit in a new shape or sticky, and click
Link
to copy a link of the summary to your clipboard.
Note
It's currently not possible to edit summaries made with FigJam AI, but you can
Copy
the text to a new shape or sticky and edit.

--- Before you Start ---
Before you Start
Who can use this feature
Users on
Any
plan
The concepts outlined here are valid for
any level of access
. These terms aren't specific to Figma, but they will help you understand some behaviors and dependencies in Figma.
We use the terms
Parent
Child
and
Sibling
to describe relationships between objects in Figma.
These terms are commonly used to explain similar relationships in web development, or programming.
In this article, we'll clarify what we mean when we use these terms.
If you have a background in object-orientated programming (OOP), these relationships are a little different. Parent/child relationships in Figma
don't
really relate to inheritance.
In Figma, these relationships function more like the Document Object Model (DOM). That is, containers with elements inside them.
Parents children and siblings
We use these terms to explain how objects relate to other objects on the canvas.
Parents
are objects - namely frames, components and groups - that contain other objects.
Children
are objects that are contained within a parent.
Siblings
are objects that are contained within the same parent.
In a frame with objects inside it, the frame is a
parent
and any objects in it are
children
A frame by itself is not automatically a parent. It is only a
parent
if there are objects within it.
If a
parent
contains more than one object, the
child
objects are
siblings
Objects — like frames, groups and components — can be both
parents
and
children
Parent and child interactions
While these terms aren't explicitly used in the product, they are important for understanding how objects behave and relate to one another in Figma.
Unlike their biological counterparts, they function as containers (parents) and contents (children) that influence each other. Rather than a defined lineage with explicit inheritance.
Properties
There are parent/child relationships that involve influence. In a lot of circumstances, the parent will be a Frame.
You can add the following properties to a
Frame
that influences all their
child
objects:
Layout
rids
: Create visual structure to your designs
Auto
Layo
: Create dynamic Frames that respond to their contents
Clip Content
: Hide any objects within the Frame that extend beyond the Frame's bounds
You can also add properties to a
child
object:
Constraints
: Define how child objects will respond when you resize the parent Frame
Parenting behavior
When you move an object in the canvas to a new location, Figma will decide whether or not to reparent the object.
Reparenting means that the object is taken out of its current parent and is nested within another parent object. For example, you could move an object from one parent frame and move it to another frame.
Figma uses the same logic for parenting when you are adding new objects to a frame.
The default behavior is:
If an object is smaller than a frame, we will make it a child of the frame
If an object is larger than a frame, then we will not make it a child element
Bypass default behavior
You can choose to bypass the default behavior:
When adding objects, hold down the
Space
bar to prevent Figma from reparenting an object
When moving an object out of a frame's bounds, hold the
Space
bar to keep an object within the current parent

--- Before you start ---
Before you start
Who can use this feature
Available on
paid plans
Anyone with
can edit
access to a file can manage libraries for that file.
This article applies to Figma Design files only. Learn how to
manage libraries in FigJam files
When you add a library to a file, you’ll be able access its components, styles, and variables and use them in the file. Components can be accessed from the
Assets
tab, and styles and variables can be accessed from the styles and variables picker on various properties.
A library must be published before you can add it to a different file.
Adding or removing a library from a file will apply to everyone with access to the file.
Note
: In order to access a library’s styles, components, and variables, users need at least
can view
access to the library.
Add a library to a file
To add a library to a file, the
library needs to be published to team libraries
first.
To add a library:
In a design file, select the
Assets
tab in the left sidebar.
Click the
Libraries
icon to open the
Libraries
modal. The icon’s tooltip may read
Review library updates
if there are updates to libraries you are using in the file, or
Review unpublished changes
if you have unpublished updates in your file.
Locate the library you want to enable. Use the search bar to search your library by name. If available, use the sections under
Browse libraries
to find relevant libraries across your team or organization.
Click the library to view its assets. From there you can:
Click
Add to file
to enable the library in the file
Click
Open file
to view the library file
Click
to close the modal.
Tip:
If a library has a
check mark next to its name, it means the library has been
approved by an admin
. Available on the
Enterprise plan
only.
In the
Libraries
modal, you can browse libraries available to you and add them to the current file. The
Browse libraries
section has a few tabs you can use to browse:
Browse libraries
Recommended
: Contains approved libraries (
Enterprise plan
only) and default libraries provided by the admin of your organization or team.
Teams / Your teams
: Browse libraries in teams you belong to
Your organization
: Browse libraries by workspace.
UI kits
: UI kits are a set of libraries curated by Figma and partners. This tab is available if UI kits are enabled by admins for your team or organization.
Remove a library from a file
To remove a library from a file:
In a design file, select the
Assets
tab in the left sidebar.
Right-click the library you want to remove and select
Remove library from file
Any components, styles, or variables used from the removed library will remain on the canvas.
Access styles, components, and variables in a library
When you make a library available in a design file, everyone in the file can access assets from it.
Styles
Components
Variables
Find and apply styles using the
Style and variables
picker in the right sidebar. Learn how to
apply styles in Figma Design
Drag components into the canvas from the
Assets
tab in the left sidebar. Learn how to
add components to your designs
Variables can be applied to various properties from the right sidebar. Learn how to
apply variables to designs

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all plans
Anyone with
can edit
access to a design file can use the eyedropper tool.
Use the eyedropper tool to apply colors to layers by sampling colors from any layer, image, or background image of a page. You can even sample, apply, and create color variables and color styles using the eyedropper.
Toggle the eyedropper tool
There are a couple of ways to toggle the eyedropper tool depending on the property for which you want to update the color.
Toggle eyedropper for color fill property
Select the layer you wish to edit.
Select the eyedropper tool by using the keyboard shortcut:
Mac:
⌃ Control
Windows:
Note:
If you’re using Mac, you can also use
⌃ Control
to toggle the eyedropper tool. This can be useful if, for example, you’re editing a text layer and want to toggle the eyedropper tool without adding text content.
Toggle eyedropper for other properties
This method works for all properties containing color, such as
stroke
shadow effects
, and
colors in a mixed selection
Select layer you wish to edit.
In the right sidebar, find the property you wish to edit and click the color swatch to open the color picker.
From the color picker, click the
Eyedropper
icon or use the keyboard shortcut:
Mac:
⌃ Control
Windows:
Sample and apply a color
With the eyedropper tool toggled, you can sample and apply colors from any layer or background of the current page. You can also sample and apply color variables and color styles.
Raw color value
Select the layer you want to edit.
Toggle the eyedropper tool, then hover over a layer to view information about the color’s appearance, color, and value. If desired, you can
switch between different color models
Click on the color to apply it to the selected layer.
Color variable or style
You can use the eyedropper tool to sample a color variable or style and apply it to a selected layer.
Select the layer you want to edit.
Toggle the eyedropper tool, then hover over a pixel containing a color variable or color style.
While holding
⇧ Shift
, click on the layer to apply the variable or style to the selected layer.
Switch between color models
While sampling a color with the eyedropper tool, you can press
Tab
on your keyboard to switch to view the color values in a different color model.
You can switch between Hex, RGB, HSL, and HSB. Learn more
about color models
Create a color variable or style
You can use the eyedropper tool to create a color variable or style from a sampled color.
Toggle the eyedropper tool.
Hold the following keyboard shortcut:
Mac:
⌘ Command
⇧ Shift
Windows:
⌃ Control
⇧ Shift
While holding the shortcut, press
Enter
or click on the color from which you wish to create a color variable or style. .
From the modal, use the tabs to choose whether to create a
Style
Variable
Fill out the fields and press
Create
. This will create the style or variable and apply it to the selected layer.
Copy a color to the clipboard
To copy the color values of a sampled pixel:
Deselect everything on the canvas by pressing
Esc
on your keyboard.
Toggle the eyedropper tool.
If desired, press
Tab
to switch to a different color model.
Click anywhere to copy the color information to your clipboard. If a color variable or color style is applied, you can hold
⇧ Shift
to copy the variable or style name and color value.

--- Who can use this feature ---
Who can use this feature
Supported on
paid plans
Anyone with
can edit
can remove styles and components from a library
New to components?
Guide to libraries →
There are a couple of ways to remove a style, component, or variable: you can hide it when publishing, or delete it entirely.
Are you a member of an organization?
Use
Library analytics
to track component usage, including when components are detached.
Hide a style
Hide a style when the style is already published
To hide a style when it is already published in a library, you need to unpublish it. You can only hide a style from the original file where the style is defined.
You can access the original style from any object that is currently using it:
Select an object in the canvas that uses that style.
Click on the style in the right sidebar
Click the
icon to edit the style.
Click
Go to style definition
to open the style in the library.
Note:
You will also see an option to
Move style definition into this file
. This allows you to edit or delete that style without leaving the current file. Moving a style removes it from the original file. If you re-publish the original file, the style would no longer be included.
Hide a style when publishing it for the first time
You can hide a style from a library without deleting the style itself. You can only do this from the original style, the style definition.
Open the file where the style lives.
Click
Assets
in the left sidebar, then click the
Libraries
icon. The tooltip may read
Review library updates
if there are updates to libraries you are using in the file, or
Review unpublished changes
if you have unpublished updates in your file.
Click
Publish # changes
Right-click the style and select
Hide when publishing
Repeat for any other style you want to unpublish.
Click
Publish
to apply your changes and remove the styles.
Note:
If the library is published and up to date, you need to make changes to it to remove the style. Make changes to a library by editing or creating a main component or style. Then follow the instructions above starting with step 2.
Delete a style
If you don't want to use a style at all, you can delete it. This won't update the properties of any layers using those styles, but will detach them from the style. You can only delete the style definition in the file it originates from.
Click an empty spot on the canvas or press
Esc
to deselect all layers.
From Local styles in the right sidebar, select one or more styles:
Hold down
Shift
and click to select a range styles
Hold down
⌘ Command
Control
and click to select multiple non-adjacent styles.
Select
Delete style
Delete all
from the options. Figma will remove the style and you will no longer be able to use it.
Publish your changes to your library
Hide a component
You can hide components when you publish your library. You can only hide components from the file they originate from.
Note:
You can open the file for any component from any file with access to those components. Right-click on an instance of that component in the canvas and select
Go to Main component
Open the library file which contains your main component.
Open the
Assets
panel in the left sidebar.
Right-click on the component and select
Hide when publishing
Figma will move the component(s) to the
Hidden
section.
Publish the changes to your Team library
Tip:
You can also quickly remove a component from your Team library via the
Layers Panel.
Add a period
to the beginning of the component's name.
Hide a variable
Like styles and components, you can hide variables when publishing your library. You can only hide variables from the file they originate from.
Open the library file where the variable is defined.
Click an empty spot on the canvas or press
Esc
to deselect all layers.
From
Local variables
in the right sidebar, click the
Open variables
icon.
From the
Variables
modal, find the variable you’d like to hide and click the
Edit variable
icon at the end of the row.
Check the
Hide from publishing
box and
publish your changes
Hide a variable collection
To hide an entire collection of variables from publishing to team libraries, prefix the collection name with
. For example, rename a Tokens collection to
_Tokens
.Tokens
to prevent it from being published. Remove the prefix to unhide it from publishing.
Learn how to rename a variable collection →

--- Before you start ---
Before you start
Who can use this feature
Anyone on
any team or plan
can enable libraries for files in their drafts.
From your draft files, you can access style and component libraries from any teams of which you're a member.
Tip:
If you're in an organization, you'll get access to any organization-wide libraries in your drafts. You can also choose which other organization libraries you want to access in your drafts.
Manage libraries
Manage which libraries are available in your drafts from your account settings. You can choose to make libraries available in
Design files
FigJam files
, or
All files
Click your name in the top-left corner to open the account menu.
Select
Settings
Under the
Library
heading, select
Enable Libraries for all files in your Drafts
View a list of available libraries in the library modal. In your drafts, you can view and enable:
Styles from published libraries in your drafts or Starter teams.
Styles and components from published libraries in any Professional and Education teams.
Access styles and components from organization-wide libraries.
UI kits
that you have access to.
Click the library name to view the styles and components in that library.
Click
Off
next to the library.
Choose which files to make the library available in:
Design files
FigJam files
All files
To remove a library from your files, click
next to the current setting and select
Off
Access libraries in files
Design files
When you make a library available in a design file, you can:
Find and apply styles using the
style pickers in the right sidebar.
Apply styles to layers in Figma Design →
Drag components into the canvas from the
Assets
panel in the left sidebar.
Add components to your designs →
FigJam files
Access components, along with stickers curated by Figma, from the
library
tool.
Use stickers and components from libraries →

--- Who can use this feature ---
Who can use this feature
Only people with an
Full seat
in an organization or workspace can access the branching feature
Anyone with
can edit
access to the main file can
merge branches
This article covers one step in the branching process:
Create
Share
Update
Request
Review
Merge
Manage
When you want to apply your branch changes to the main file, you can merge the branch. If you have multiple branches and contributors, we recommend coordinating merges to reduce errors or disruption.
If you have view only access to the main file, you will need to
request a branch review
from someone with edit access.
If you have edit access to the main file, you can go ahead and merge the branch. You can still choose to
request a review
from a collaborator.
Caution
: If you have an active memory limit banner in your file, you can't review and merge changes. Figma will disable the
Review and merge changes
setting. To get updates from the main file or merge a branch, you need to
reduce your memory usage
Open branch review
Open the branch you want to merge.
Expand the
menu next to the file/branch name.
Select
Review and merge changes
to open the branch review modal.
You may need to
review updates from the main file
and
resolve any conflicts
. Click
Resolve conflicts
to start the process.
Review changes
At the moment, you need to merge all updates from the branch into the main file. There isn't a way to select or merge specific changes.
View a list of components, instances, or layers that have been
, or
. Figma groups changes by page.
Select an object or page to view changes. You can choose to view these
side by side
or as an
overlay
View the layer, frame, or component name at the top of the modal.
Use the buttons to:
Zoom out
Zoom in
FIT
Zoom to fit
Use
and
arrows at the bottom to move between changes if there is more than one change.
Click
in the top left to go back to the summary.
Side by side
Side by side
view allows you to see both designs at the same time. This is the default display option.
The left side shows what your object looks like
before
your changes (the main file).
The right side shows what that object look will look like
after
the merge (the branch).
Overlay
Overlay
allows you to compare the before and after by placing them on top of one another.
The layer underneath is the element
before
the branch is merged (the main file).
The top on top is the element
after
the merge (the branch).
You can drag the toggle left or right to
adjust the opacity
of the
after
object.
Merge branch
Click
Merge
to apply changes from the branch to the main file. This will also archive the branch.
Figma will show a notification at the bottom of the screen to confirm the merge. There is an option to add a name and description for the merge in the file's version history.
Click
Edit merge description
Add a
Name
for the merge.
Give the merge a
Description
Click
Save
to apply.
You can also come back and add or edit this description in the file's version history.
It’s possible to undo merges and updates by restoring a previous version of the branch or main file. This also applies if you notice something doesn’t look right after a merge or update.
Incomplete updates and merges →

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Only people with
can edit
access to the file can make changes to a layer's position, dimensions, or alignment.
Every shape, text object, or image you add to the canvas has its own layer. This allows you to adjust each layer individually as you create cohesive and complex designs.
In this article, we'll show you how to adjust the alignment, position, dimensions, and rotation of your layers. This applies to individual layers, as well as frames, components, groups, and selections.
You'll find most of these properties at the top of the
Design
panel in the right sidebar. You can also adjust a number of these properties on the canvas itself.
Note:
Alignment, position and dimensions related to auto layout frames are different to the options we've outlined here. Learn how to
adjust these properties with auto layout.
Alignment
Alignment tools allow you to arrange layers on the canvas in relation to one another. Figma will determine your layer's alignment based on your specific selection.
Select one object or layer:
Figma will align the layer to its parent. This could be a group, frame, or the containing frame of a component.
Select multiple layers:
Figma will align layers in relation to each other, or in relation to their parent frame,
or in relation to selected layers in an instance
Looking for text alignment?
Learn more about
Figma's text alignment options
Use the alignment controls in the right sidebar to align an object to its parent layer, or to align multiple objects to one another:
Align left
Align horizontal centers
Align right
Align top
Align vertical centers
Alternatively, use keyboard shortcuts:
Action
Keyboard shortcut
Align top
Alt
Align left
Alt
Align bottom
Alt
Align right
Alt
Align vertical centers
Alt
Align horizontal centers
Alt
Hold
Shift
and click the alignment controls to align multiple objects as a group to their parent frame. If objects live across different frames, they will align to their respective parent frames.
Snap to settings
When resizing an object, moving layers, or moving vector points, use the
snap to
settings to help align them to other elements on the canvas. A red guide appears on the canvas as a visual indicator.
Snap to geometry:
Used only in
vector edit mode
. When this setting is on, clicking and dragging a vector point will align it to other vector points.
Snap to objects:
Align the centers and outermost points of different objects.
Snap to pixel grid:
Align objects to an underlying grid to prevent misaligned pixel errors when exporting elements. The
pixel grid
does not need to be visible for this setting to work.
To turn Snap to settings on and off, open a Figma Design file and go to
> Preferences.
You can also find these settings in the
quick
actio
menu
Snap to settings are applied across your Figma Design files.
If you have
Snap to geometry
Snap to objects
enabled, hold
Control
to temporarily disable them.
To temporarily disable
Snap to pixel grid
with
Control
, make sure you’re in
vector edit mode
and zoomed in to the canvas. To know if you’re zoomed in enough, turn on the pixel grid
⇧ Shift
and zoom in until the grid is visible. Note that the pixel grid does not need to be toggled on to use this shortcut.
Tip!
If you’ve toggled on
Ctrl+click opens right click menus
, click and hold the object before using
Control
to temporarily disable snapping. This prevents accidentally opening the secondary menu.
Distribution
Use distribution to create equal space between layers in a selection. You must have more than one layer or object selected.
When using distribute, Figma will retain the position of the outermost objects or layers:
Distribute horizontal spacing:
both the objects or layers on the outer left and outer right will maintain their position.
Distribute vertical spacing:
both the top and bottom objects or layers will maintain their position.
Tidy up (smart selection)
Tidy up
Use tidy up to quickly align layers on one-dimension as rows or columns, or combine rows and columns to create two dimensional layouts.
You can then adjust the horizontal and vertical spacing between the objects in your selection with smart selections. Learn how to use
smart selection
Depending on your selection, you'll see one of the following options:
Tidy up vertical selection (one dimension)
Tidy up horizontal selection (one dimension)
Tidy up (two dimensions)
One dimensional selections
For a selection on either the horizontal or vertical axis (one dimension), Figma will arrange objects based on the axis they overlap on.
Objects on the x axis will have only their horizontal spacing adjusted and objects on the y axis will have only their vertical spacing adjusted.
Figma will use the most common spacing in the selection to set the
Space between
value.
Note:
When you use tidy up on a one-dimensional selection, Figma won't automatically align the objects along both axes, but you can use the alignment tools in the right sidebar l to make any further adjustments.
Two dimensional selections
When using tidy up on objects in two dimensions, like a grid, the tidy up process is much stricter. Figma will adjust both the vertical and horizontal spacing between objects.
The vertical and horizontal spacing will depend on their starting position and can be the same or unique. Once Figma tidies up the layers, you can adjust the vertical and horizontal spacing
Unlike distribute, which repositions objects within the original selection's bounds, tidy up arranges all objects into a grid that aligns with the top-left corner of your selection.
Distribute or tidy up
If you're using tidy up on a one dimensional selection, you'll notice that this functions similarly to the distribute function. You can think of tidy up as distribute with some extra logic.
The main purpose of the tidy up function is to arrange layers so they
meet both the criteria for a smart selection
. That is, be an equal distance apart and overlap on either axis.
Distribute will only set a uniform distance between layers, it doesn't require layers to overlap on either axis. Tidy up will perform both, if required.
Tidy up lets you align objects along both axis at the same time. Distribute only works along one axis at a time: distribute horizontal spacing or distribute vertical spacing.
For both distribute and tidy up, Figma will show the space between in the
field. This is based on the most common space between value (the mode).
Note:
If you have
Snap to pixel grid
enabled, you may see subtle discrepancies in spacing between layers. Figma will allow up to 1px of rounding.
For example: if you have four layers and the spacing between most of the layers is
, but there is only
space between two of the layers, Figma will still show the space between as
When
Snap to pixel grid
is disabled, Figma may distribute layers with decimal spacing values. For example:
7.5
Position
You can adjust the position of layers in the canvas along any of the two dimensions or axes: horizontal (
X axis
) and vertical (
Y axis
Figma represents a layer's position on the canvas using
and
coordinates. These refer to the top-left corner of the layer's bounds.
Open the
Design
panel in the right sidebar.
Use the
and
fields to adjust the layer's coordinates.
You can also use basic mathematical equations (
) to quickly adjust the values of the X and Y co-ordinates. You can add an equation before or after the existing value, or replace it with a new equation entirely. Learn more about
equations
Note:
If you rotate a layer in the canvas, Figma will base the
and
co-ordinates of that layer on the original top-left corner of the layer's bounds.
Nudge layers
Use your arrow keys to nudge the position of your layers. Figma allows you to set two default nudge amounts:
small nudge
and
big nudge
By default, small nudge is set to
and big nudge set to
. Both of these values are in resolution-independent points. Learn how to
set small and big nudge values
You can also use the arrow keys to nudge your selection. The arrow keys will use your small nudge settings, hold down
Shift
to use the big nudge settings instead.
Left
Down
Right
Dimensions
Every layer in the canvas will have its own dimensions. To view a layer's dimensions:
Select the layer in the canvas or layers panel.
View the dimensions in the blue label under the layer's bounding box.
You can also view the dimensions of any layer using the
and
fields in the right sidebar.
Select a layer to make changes to a layer's dimensions. There are then a few methods:
To adjust the
width
of a layer: hover over the layer's left or right bounds until the
appears. Click and drag to resize.
To adjust the
height
of a layer: hover over the layer's top or bottom bounds until the
appears. Click and drag to resize.
To adjust both the
width
and
height
of a layer: hover over any corner of the layer's bounds until the
appears. Click and drag to resize.
Adjust both the
and
fields in the right sidebar.
Tip:
Create fixed layers and control how layers respond as you resize them with constraints. Learn how to use
constraints
Lock aspect ratio
Locking the aspect ratio of a layer allows you to maintain its width to height ratio whenever the layer is resized.
To enable this setting, select a layer and click
Lock aspect ratio
in the
Layout
Auto layout
section of the right sidebar. You can resize the layer from the canvas or using either the
and
fields in the right sidebar. If you update either of the
and
fields, Figma will update the other accordingly.
To turn this off, select the layer and click
Lock aspect ratio
again.
Some things to note about lock aspect ratio:
When resizing a layer from the canvas with aspect ratio locked, you can temporarily disable the setting by holding
⌃ Control
When resizing a layer from the canvas with aspect ratio unlocked, you can temporarily enable the setting by holding
⇧ Shift
. Once you release the key, the aspect ratio will no longer be locked on the layer.
The aspect ratio setting is not available on child layers of
component instances
. The aspect ratio can be adjusted from their respective main components.
minimum or maximum dimensions
are set on a layer with aspect ratio locked, Figma will set a proportional minimum or maximum value on the opposite dimension property. For example, if a layer with aspect ratio locked has an aspect ratio of 1:2, setting a minimum height of 100px will automatically set a minimum width of 200px
If you’re looking to scale a design while retaining its proportions, learn more about the
scale tool
Rotation
Rotate individual layers, like objects, frames and groups, or a selection of layer. Figma will use the horizontal and vertical center of your selection as the point of rotation.
Every layer you add to the canvas will have a default rotation of
. You can rotate your selection
180°
in each direction:
positive
angle goes counterclockwise towards
180°
negative
angle goes clockwise towards
-180°
Once you pass
180
in either direction, Figma will count down towards
in that direction. For example: going
15°
past
180°
will give you an angle of
-165°
Caution:
Figma uses the rotate CSS transform property to apply rotation to a layer or selection. The CSS transform property uses the opposite directions for determining the angle of rotation, which means you'll see the opposite angle in
Dev Mode
For example: if you rotate a layer
90°
in the
Design
panel, Figma will translate this to
transform: rotate(-90deg)
in the
Dev Mode
Tip!
You can animate layers rotating between frames in your prototypes. Learn how to do this with
smart animate
Right sidebar
Find the rotation field at the top of the
Design
panel in the right sidebar.
Select the layer you want to rotate.
In the right sidebar, use the
field to enter your desired rotation.
Canvas
Hover just outside one of the layer's bounds until the
icon appears.
Click and drag to rotate your selection:
Drag clockwise to create a negative angle (towards
-180°
Drag counterclockwise to create a positive angle (towards
180°
Hold down
Shift
to snap rotation values to increments of 15.
Note:
Figma won't rotate any effects you've applied to a layer or selection.
Change the rotation origin
When rotating objects, Figma uses the horizontal and vertical center of the current selection as the point of rotation by default. You can change an object’s rotation origin so that it will rotate around a different point.
To change an object’s rotation origin:
Select the object you want to rotate.
Use the keyboard shortcut to reveal the rotation origin target:
Mac:
Option
Windows:
Alt
Click and drag the target to move the rotation origin.
Flip layers
Another way to replicate rotating layers is to use the
Flip horizontal
and
Flip vertical
transformations.
Use the right-click menu to apply a flip transformation, or the keyboard shortcuts:
Flip horizontal:
⇧ Shift
Flip vertical:
⇧ Shift
Note:
Figma uses the matrix CSS transform property for flip transformations. You can view the CSS values of the transformation in the
Dev Mode
Once you have applied a flip transformation to a selection, Figma will continue to use the matrix transformation CSS property, even if you later apply rotation to your selection.
Every shape, text object, or image you add to the canvas has its own layer in the canvas. This allows you to adjust each layer individually as you create cohesive and complex designs.
You can adjust the position of layers in the canvas along any of the three dimensions or axes: horizontal (
X axis
), vertical (
Y axis
), and depth (
Z axis
Unlike the
and
axes, there isn't a specific field you can adjust for the
Z axis
. Instead, you adjust the depth (Z axis) or hierarchy of a layer by changing the order in the
Layers
panel.
This allows you to move layers to the front or back of the canvas, as well as move layers in or out of groups or frames. Learn more about
relationships between layers
The
Layers
panel in the left sidebar shows you every layer on the current page and reflects the order your layers are currently stacked: the top layer is at the front and the bottom layer is at the back.
Tip:
If you're familiar with CSS, the layer's depth corresponds to an object's
z-index
Change layer order
There are a few ways to adjust a layer's order.
Layers panel
Adjust the order of the layer by changing the layer's position in the
Layers
panel.
Open the
Layers
panel in the left sidebar.
Click and drag the layer to change it's position in the layer hierarchy:
Move the layer up to bring the layer forward
Move the layer down to send the layer back
Release to apply.
Note:
Layer order works the opposite way inside an auto layout frame. This is because auto layout wasn't designed to support layers that overlap.
If you change the order of layers in an auto layout frame, this will change the position and order of the layer within the the frame. Outside of an auto layout frame, changing the layer order won't affect a layer's position on the
axes.
Learn more about using auto layout.
Keyboard shortcuts
Bring forward:
Mac:
⌘Command
Windows:
Ctrl
Bring to front:
Mac:
⌘ Command
⌥ Option
Windows:
Ctrl
Shift
Send backward:
Mac:
⌘ Command
Windows:
Ctrl
Send to back:
Mac:
⌘ Command
⌥ Option
Windows:
Ctrl
Shift
Right-click menu
Select the layer(s) in the canvas.
Right-click on the selection to open the context menu:
Choose from:
Bring forward
Bring to front
Send backward
Send to back
Tip:
If you make any changes you're not happy with, you can undo the action using the keyboard shortcut:
Mac:
⌘ Command
Windows:
Ctrl
Adjust values
Equations
Some fields in Figma accept equations, this includes the position, dimension, and rotation fields.
You can use equations to resize layers by
adding
subtracting
multiplying
, or
dividing
the existing value. You can also use brackets
within the field for more complex equations, or
for creating exponents.
We've added some examples below but you can use any numbers:
+ 10
to add 10 to the current value
- 20
to remove 20 to the current value
to multiple the current value by 2
to divide the current value by 4
to create an exponent of the current value to the power of 2
(𝑥/2)+6
to divide the current value in two and add 6 (𝑥=current value)
Mixed+100
to add 100 to two or more selected objects with different values
Equations can also be applied to a mixed selection of values. When an equation is entered into the position, dimension or rotation fields, the change will apply to all selected layers.
Note:
You'll need to edit the field and add the equation to the existing number. If you only select the field and add the equation, Figma will replace the existing number instead.
Scrub fields
In addition to manually entering values, you can also "scrub" fields. Scrubbing allows you to quickly adjust a field's value by dragging your active mouse or touchpad.
You can use this for
position
dimensions
, and
rotation
fields, as well as other layer properties and settings in the right sidebar.
Select the layer or object on the canvas.
Hover over the label next to the input field until the scrubbing cursor appears. You can also hover the input field itself and hold down the modifier key:
Mac:
⌥ Option
Windows:
Alt
Click on the icon and drag to change the input value. Drag the cursor left to decrease the value, or drag it right to increase.
Change the speed that you scrub the field by moving the cursor towards the top of the screen to increase the scrubbing speed, or towards the bottom of the screen to reduce it.
You'll see a notification at the bottom of the screen for the current speed, as well as a difference in the cursor's width. There are four scrubbing speeds:
1/2
, and
1/4
Tip:
Figma will continue scrubbing the field, even if your cursor goes off the screen. This works if you're using Figma in the browser or
desktop app

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can create and adjust effects
Apply effects to layers to enhance your designs.
Effects can serve various aesthetic and functional purposes.
For example, adding a shadow to a button can help bring attention to it and signal that the element is interactive.
In Figma, there are six types of effects:
Drop shadow
Inner shadow
Layer blur
Background blur
Noise
Texture
Each layer can have up to eight drop shadows, eight inner shadows, one layer blur, two noise effects, one texture effect, and one background blur. You can also combine effects with
blend modes
and
fills
to create a variety of styles and effects.
Tip:
Want more hands-on experience using effects? Check out this
bite-sized illustration project
to practice while you learn.
Shadow effects
There are two types of shadow effects in Figma: drop shadow and inner shadow.
Tip
Both shadow effects translate to the
box-shadow
property in CSS. Shadow effects on text layers translate to
text-shadow
in CSS. View CSS properties for your selection in
Dev mode
Drop shadow
Drop shadows are a great way to add depth and dimension to your designs. You can do this by creating the shadow of an object on a surface behind it.
Drop shadows can vary in opacity, depending on the effect you want to create.
Use drop shadows to:
Create distance between objects
Set the direction of a light source
Make your designs stand out against a background
Make objects look three-dimensional
Stylize text and icons
Add borders around a layer or object
Inner shadow
Like drop shadows, inner shadows allow you to create depth within two-dimensional designs.
Instead of creating a shadow behind your selection, inner shadows are applied within the layer or object. This contains the shadow within the layer's bounds.
Use inner shadows to:
Create depth within text
Make an object look recessed or indented
Show an active or clicked state of a button
Tip:
Preview effects on the canvas by hovering over each option in the menu before selecting.
Show drop shadows through transparent layers
By default, Figma doesn't display drop shadows through transparent areas of the layer. If you want to display drop shadows through an object:
Make sure the layer meets at least one of the following criteria:
Has only fills with less than 100% opacity
Has a stroke, but no fill
Has a fill or stroke with a blend mode that isn't
Normal
Or, has a
center or outside stroke
with less than 100% opacity
Click the effects icon to open the shadow's property menu.
Check the
Show behind transparent areas
checkbox.
Note:
Inner shadows don't support
show behind transparent areas
Shadow spread
Shadow spread is only supported on rectangles, ellipses, frames, and components.
To apply a spread shadow to a frame or component, you must have:
Clip content
enabled
visible fill
with at least 1% opacity
Caution:
The Figma Plugin API allows you to set a spread value for any object. Figma will not apply the spread value in the canvas, if spread isn't supported on that type of object.
Add shadow effects
You can apply shadow effects to frames, groups, components, or individual layers.
Select the layer or object from the canvas or
Layers
tab of the left sidebar.
Click the
Effects
section in the right sidebar. The
Drop shadow
effect is selected by default. Use the dropdown to switch to
Inner shadow
Click the
Effect settings
icon to adjust the shadow's settings.
Offset the drop shadow along the x axis (horizontal). Use with Y offset to set the direction of the light source.
Offset the drop shadow along the y axis (vertical). Use with X offset to set the direction of the light source.
Fill
: Apply a paint using the color picker and set an opacity for the shadow
Blur:
Adjust the blur or feathering of the shadow. Increase the blur to soften the shadow and blend it with the background. Decrease the blur to create a sharper contrast.
Spread:
Adjust the size of the shadow to represent the distance between the foreground and background objects. See:
Shadow spread
Tip
You can copy a layer's effect settings to paste on another layer or object from the
Effects
section of the right sidebar.
Click the
Effect settings
icon, then press
Esc
to clear the field selection.
Use the keyboard shortcut to copy the settings:
Mac
⌘ Command
Windows
⌃ Control
Select the layer or object you'd like to apply the effect to and paste using the keyboard shortcut:
Mac
⌘ Command
Windows
⌃ Control
You can also duplicate the effect using the keyboard shortcut:
Mac
⌘ Command
Windows
⌃ Control
Blur effects
Caution
Depending on your device and internet connection, files with a large number of blur effects can lead to reduced performance. Background blurs are typically the slowest effect to render. To temporarily improve performance, you can toggle the visibility of individual effects.
Layer blur
Blurs help to imply action or movement, or create the illusion of depth in two-dimensional designs. Use layer blur to:
Anonymize information
Soften or detract focus from the background
Create abstract backgrounds from photographs and images
Replicate camera depth and other photographic effects like bokeh
There are two types of layer blurs:
Uniform
: Applies the same blur across the entire layer
Progressive
: Allows you to control the blur’s size, direction, and intensity where it starts and ends
Background blur
When you apply a background blur to a layer, Figma will blur any layers behind your selection on the canvas. You can think of this like a drop shadow, but instead of the layer creating a shadow, it creates a blur.
You can use background blur to soften or detract focus. This draws attention away from the background and to the selected layer.
Background blur is commonly used for interactive menus in iOS. But you can also use background blur to obscure text or personal information in a screenshot.
There are two types of background blurs:
Uniform
: Applies the same blur across the entire layer
Progressive
: Allows you to control the blur’s size, direction, and intensity where it starts and ends
To‌ see a background blur, your selection will need to have an appropriate opacity. You can set opacity for layers with background blur for any value
between .10 and 99.99%
You may have to adjust the opacity of your layers to get the desired effect. If you set a layer's opacity to 100%, you won't be able to see the background blur at all.
Note
It's only possible to add one layer or background blur to a layer or object.
If you have other layers with background blur applied, Figma will ignore them instead of multiplying the existing background blur.
Apply blur effects
You can apply blur effects to frames, groups, components, or individual layers. It's only possible to add one layer or background blur to a layer or object.
Select the layer or object from the canvas or
Layers
tab of the left sidebar.
Click the
Effects
section in the right sidebar. The
Drop shadow
effect is selected by default. Use the dropdown to switch to
Layer Blur
Background
Blur
Click the
Effect settings
icon to adjust the blur value.
Adjust the layer opacity, if needed.
You can also create Styles for shadow and blur effects. This allows you to save those settings and use them across your design files. Learn how to
create effect styles
Noise
The noise effect applies random pixels to a layer, giving it a subtle grainy texture that mimics the visual characteristics of film photography.
Apply noise effects
You can apply noise effects to any layer type. It’s only possible to add two noise effects per object.
To apply a noise effect:
Select the layer.
Click the
plus in the
Effects
section to add a new effect.
Choose
Noise
from the dropdown menu.
Open the
Effect settings
menu to configure the effect:
Number of colors:
Choose between
Mono
(one),
Duo
(two), or
Multi
(many) to determine how many colors will be included in the noise
Noise size
: Adjust the scale of the noise pixels
Density
: Set the concentration of noise pixels
Color (Mono or Duo only):
Choose the desired color and opacity for the noise pixels
Opacity (Multi only):
Set the opacity for the noise pixels
Texture
The texture effect distresses an object's edge, creating a roughened effect.
Apply texture effects
You can apply texture effects to any layer type. It’s only possible to apply one texture effect per object.
To apply a texture effect:
Select the layer.
Click the
plus in the
Effects
section to add a new effect.
Choose
Texture
from the dropdown menu.
Open the
Effect settings
menu to configure the effect:
Size:
Set the scale of the textured effect
Radius
: Adjust to determine how far past the layer’s boundary the effect will spread
Clip to shape:
Enable this option to limit the texture effect to within the layer’s boundary. While the texture itself will be confined to the shape, drop shadows will still interact with the clipped texture, creating a textured shadow effect.
Reorder effects
If a selection has multiple effects applied, you click and drag the handles to reorder the effects. How effects are ordered in the
Effects
section impacts how the selection is
rendered
Render order
The way Figma renders a selection’s effects depends on the types of effects applied, their order in the
Effects
section of the right sidebar, and whether the selection is a layer or a group. Masks are considered groups in this context. The differences in group and layer shadows are most obvious on layers that overlap. When the shapes don’t overlap, they will appear the same.
Render order for layers
Top:
Layer blur, noise, texture (applied in their specified order)
Stroke paints
Inner shadow
Fill paints
Drop shadow
Bottom
: Background blur
Render order for groups
Top:
Layer blur, noise, texture (applied in their specified order)
Inner shadow
Paints, masks, and effects for individual fills or strokes
Drop shadow
Bottom:
Background blur
How layer blurs and unclipped textures impact rendering
Layer blurs and unclipped texture effects extend past a selection’s boundary. There are some things to keep in mind when applying layer blurs or unclipped textures to a selection:
Noise and clipped textures
Noise and clipped textures normally do not extend past a selection’s boundary but can do so if placed above a layer blur or unclipped texture in the
Effects
section.
For example, to enable a noise effect to reach the edge of a drop shadow, you can place a layer blur or unclipped texture in between them in the
Effects
section.
Blend modes on drop shadows
Typically, blend modes on drop shadows interact with content behind the layer with the drop shadow applied. Applying a layer blur or unclipped texture to the same layer will isolate the blend mode, causing it to only interact with other effects on the layer itself.
Blend modes on fills and strokes
Typically, blend modes on fills and strokes will interact with content behind the layer. Applying a layer blur or unclipped texture to the layer will isolate the blend mode, causing it to only interact with other fills and strokes on the selected layer. You can apply the blend mode to the layer itself in the
Appe
rance
section of the right sidebar to enable the blend mode to interact with other content on the canvas.

--- Who can use this feature ---
Who can use this feature
Available on the
Enterprise plan
Organization admins only.
Organization admins can manage Dev Mode settings for the entire organization, including:
Pin Dev Mode plugins
for every member of an organization
Update the
default code language for Dev Mode code snippets
Set a plugin to auto-run
for members when they open a file
Tip:
You can check who has a Dev seat under the
People
tab in
Admin
Learn more about managing Dev Mode seats as an admin →
Note:
These settings apply to all files in an organization, excluding drafts.
Pin and unpin plugins
Pinning a plugin in Dev Mode automatically adds it to the Inspect panel for all users. If you prefer that all users have the same tools for managing tasks, inspecting designs, or generating code, pinning plugins can help your users find them more easily.
When you pin a plugin in Dev Mode in the organization, Figma will:
Automatically display the plugin in the Inspect panel in Dev Mode. It's not possible to pin plugins for a specific team or group of members.
Add the plugin to the approved list, if enabled.
Learn more about approved plugins →
Pin a plugin
To pin a Dev Mode plugin for the entire organization:
Go to the listing for the plugin that you want to pin.
Click
Copy link
in the
Share
section to add the plugin URL to your clipboard.
From the file browser, click
Admin
in the left sidebar.
Select the
Settings
tab, then click
Dev Mode settings
in the
Extensions
section.
Pinned plugins
is not enabled, enable the setting. You should only need to do this once per organization.
Click
Paste the plugin link in the field provided and click
Add
to confirm.
Click
Save
to apply your changes.
Unpin plugins for the organization
Organization admins can remove pinned Dev Mode plugins at any time. Unpinning a plugin doesn’t prevent people from using the plugin, and people can still pin the plugin to their files if they wish. To prevent organization members from using a plugin, use the
Approve plugins setting
To unpin Dev Mode plugins:
From the file browser, click
Admin
in the left sidebar.
Select the
Settings
tab, then click
Dev Mode settings
in the
Extensions
section.
Next to the pinned plugin that you want to remove, click
Remove
Click
Save
to apply your changes.
Set a default language for code snippets
You can set a default language for code snippets in Dev Mode to match the language and properties used by developers when implementing designs. This helps developers save time and avoid language mix-ups.
You can set a default
language for code snippets in Dev Mode
for the entire organization. When you set a default language for code snippets, the code snippets that appear in Dev Mode’s Inspect panel will use the language you set. Additionally, specific properties may be available based on the language you set as default. For example, some languages let you also set a default unit of measure.
You can also add plugins to provide additional languages for code snippets, such as any codegen plugins that are used internally by your developers.
Setting a default language does not prevent members of your organization from manually selecting a different option when they’re inspecting a design in Dev Mode.
To set a default language for code snippets in Dev Mode:
From the file browser, click
Admin
in the left sidebar.
Select the
Settings
tab, then click
Dev Mode settings
in the
Extensions
section.
Default code language
is not yet enabled, click the toggle to enable the setting.
In the
Language
dropdown menu, select the language you want to set as default or click
Add plugin.
If you want to use a plugin to provide a default language:
Go to the listing for the plugin that you want to use to generate code snippets.
Click
Copy link
in the
Share
section to add the plugin URL to your clipboard.
Paste the plugin link in the field provided and click
Add
to confirm. Figma will add the plugin as an option for default language.
If required, configure any additional properties for the default language, such as the unit of measure.
Click
Save
to apply your changes.
Set a plugin to auto-run
Setting a Dev Mode plugin to auto-run when a file opens is a great way to implement organizational standards for all of your Dev Mode users. For example, if your teams consistently use an internal Figma plugin for development support, you can set that plugin to run automatically, ensuring all Dev Mode users have the same experience.
You can set a specific Dev Mode plugin to run automatically when a Figma file opens. The auto-run setting cannot be used for codegen plugins that provide code snippets to the inspect panel — see
Set default language for code snippets
for those plugins.
Only one plugin can be set to auto-run per organization.
To set a plugin to auto-run for the entire organization:
Go to the listing for the plugin that you want to auto-run.
Click
Copy link
in the
Share
section to add the plugin URL to your clipboard.
From the file browser, click
Admin
in the left sidebar.
Select the
Settings
tab, then click
Dev Mode settings
in the
Extensions
section.
Auto-run plugin
is not enabled, enable the setting. You should only need to do this once per organization.
Paste the plugin link in the field provided and click
Set
to confirm.
Click
Save
to apply your changes.

--- Inspecting designs helps developers or other stakeholders understand the structure and properties of a design so they can more easily translate it to code. ---
Inspecting designs helps developers or other stakeholders understand the structure and properties of a design so they can more easily translate it to code.
How you inspect a design file depends on your
plan type
seat type
, and your
file permissions
. Use the tool below to see how to do common inspection tasks—exporting, measuring, generating code, viewing annotations, and using plugins for development—based on your personal access to the file you’d like to inspect.
No matter your file access, there is an inspect experience available to you.
First, check to see if you have access to Dev Mode in the file you’re inspecting by toggling to Dev Mode at the top of the file or by using the keyboard shortcut
Shift
. If you don't have access to Dev Mode, you’ll be inspecting in Design Mode. You can select if you have
can edit
can view
access to see how to inspect.
Find your inspect experience
Tell us about your file access and we’ll show you how to inspect it.
Dev Mode
Do you have access to Dev Mode?
I have Dev Mode
I don't have Dev Mode
I can't enter Dev Mode
File access
What's your file access?
I have edit access
I have view-only access
I don't have Dev Mode, and I have view-only access
Need access to
Dev Mode
? If you’re on the Starter plan, you’ll need to
upgrade to a paid plan
move your file
to a paid team. If you’re on a paid plan, you’ll need a Full or Dev seat.
With view-only access to a design, you can use inspection tools directly within Design Mode:
Measure distances
You can measure distances between objects, even if they are nested within frames, groups, or components.
Select the first object on the canvas.
Hold down the modifier key:
Mac: ⌥ Option
Windows: Alt
Hover over the second object.
Figma will display a red line between the two objects, as well as horizontal and vertical measurements.
Tip
: Having trouble measuring? Check out the
guide to measuring the distance between objects
Generate code
You can copy auto-generated code snippets for CSS, iOS, or Android.
Select an object on the canvas.
Right-click on the object and select
Copy/Paste as
Copy as code
Select the code option that suits your needs.
View properties
The
Properties
tab gives you a list of properties for objects on the canvas. This includes properties like: layout, color, typography, text strings, component properties, styles, and variables. To view the properties of an object:
Select an object on the canvas.
Click the
Properties
tab in the right sidebar.
Export
Select the layers you want to export. If you want to export the entire canvas of the current page, deselect everything on the canvas.
In the
Export
tab, click the
plus icon to add an export configuration. You can add as many export configurations to a selection as needed.
Configure the export settings. Learn more about
Figma's export formats and settings
If needed, click
Preview
to see how your asset will look. If you have multiple objects selected, the
Preview
setting won’t display.
Click
Export.
Tip
: Want to learn more about exporting? Check out the full
guide to exports in Figma
View or add comments
Comments
help designers and developers collaborate by drawing attention to specific parts of the design. You can leave comments to share more context about how parts of the design should work.
Click
in the toolbar, or press
to enter comment mode. Your cursor will turn into a
Select a location to comment on:
Click the location on the canvas where you'd like the comment to be pinned.
Or, click and drag your cursor to select a region to comment on.
Type your message in the field. Type
mention
a colleague or collaborator.
Click
to send your message.
Use plugins
You’ll need
can edit
access to use plugins in a file.
I don't have Dev Mode, and I have can edit access
Need access to
Dev Mode
? If you’re on the Starter plan, you’ll need to
upgrade to a paid plan
move your file
to a paid team. If you’re on a paid plan, you’ll need a Full or Dev seat.
With
can edit
access to a design, you can use inspection tools directly within Design Mode:
Measure distances
You can measure distances between objects, even if they are nested within frames, groups, or components.
Select the first object in the canvas.
Hold down the modifier key:
Mac: ⌥ Option
Windows: Alt
Hover over the second object.
Figma will display a red line between the two objects, as well as horizontal and vertical measurements.
Tip
: Having trouble measuring? Check out the
guide to measuring the distance between objects
Generate code
You can copy auto-generated code snippets for CSS, iOS, or Android.
Select an object on the canvas.
Right-click on the object and select
Copy/Paste as
Copy as code
Select the code option that suits your needs.
View properties
The
Design
tab gives you a list of properties for objects on the canvas. This includes properties like: layout, color, typography, text strings, component properties, styles and variables. To view the properties of an object:
Select an object on the canvas.
In the Design tab in the right sidebar, scroll to the section with the properties you’d like to inspect.
Export
Select the layers you want to export. If you want to export the entire canvas of the current page, deselect everything on the canvas.
In the
Design
tab, click the
plus icon in the
Export
section to add an export configuration. You can add as many export configurations to a selection as needed.
Configure the export settings. Learn more about
Figma's export formats and settings
If needed, click
Preview
to see how your asset will look. If you have multiple objects selected, the
Preview
setting won’t display.
Click
Export
Tip
: Want to learn more about exporting? Check out the full
guide to exports in Figma
View or add comments
Comments
help designers and developers collaborate by drawing attention to specific parts of the design. You can leave comments to share more context about how parts of the design should work.
Click
in the toolbar, or press
to enter comment mode. Your cursor will turn into a
Select a location to comment on:
Click the location on the canvas where you'd like the comment to be pinned.
Or, click and drag your cursor to select a region to comment on.
Type your message in the field. Type
mention
a colleague or collaborator.
Click
to send your message.
Use plugins
You can run a plugin from the Community or directly from a file in Figma or FigJam.
Click
Resources
in the toolbar.
From the
Plugins
tab, select from your recently used or saved plugins or search for a plugin from the Community.
Click on a plugin to view its details.
Click
Run
to run the plugin in the current file.
Learn more about using plugins in files.
I have Dev Mode
To inspect designs, enter Dev Mode by selecting the
Dev Mode toggle by using the keyboard shortcut
Shift
. From there, you can use the following inspection tools:
Measure distances
You can measure distances between objects, even if they are nested within frames, groups, or components. In Dev Mode, select any parent or child layer on the canvas. When you hover over surrounding layers, Figma displays padding values or distances between the two objects. You can also measure the distance between specific objects:
Select the first object in the canvas.
Hold down the modifier key:
Mac: ⌥ Option
Windows: Alt
Hover over the second object.
Figma will display a red line between the two objects, as well as horizontal and vertical measurements.
Generate code
Click any object on the canvas while in Dev Mode to populate the
Code
section in the inspect panel. Depending on what’s selected, a typographic preview or box model is displayed, followed by autogenerated code snippets for the object.
To change your language and unit selection, or use a codegen plugin:
In the top-right of the
Code
section, select a language or plugin from the dropdown.
If required, click
Inspect settings
and select a unit from the dropdown.
Learn how to use code snippets in Dev Mode.
Note:
Some Dev Mode features like the
Code
section won't appear in the inspect panel if
copying and sharing are disabled on the file
View properties
In Dev Mode, the
Inspect
tab gives you a list of properties for objects on the canvas. This includes properties like: layout, color, typography, text strings, component properties, styles, and variables. To view the properties of an object:
In Dev Mode, select an object on the canvas.
In the Inspect tab in the right sidebar, scroll to the section with the properties you’d like to inspect.
Tip:
When inspecting a component or instance, you'll see a component preview, a link to the main component, as well as any links to relevant documentation and dev resources. The component playground appears in the
Inspect
panel when a component instance is selected. Use the playground to experiment with the components different properties without changing the actual design.
Explore variables
Dev Mode includes a few ways of working with variables when you're inspecting a design:
View details about a variable
, including the value and mode. You can swap modes, and, if the value uses any aliases, the entire alias chain down to the variable's raw value.
Get suggested variables
for raw values in a design, if the values match one or more of your existing variables.
Access the variable collections created in the current file
and view all the variables and modes in a table.
For more details, see
Variables in Dev Mode
Export assets
Dev Mode can automatically detect icons and present them as downloadable assets for developers. You’ll see these assets in the
Inspect
tab above the export settings. Hover over any item, select a file type, and click the download icon.
To set up a custom export:
In Dev Mode, select the layers you want to export.
In the
Inspect
tab, click the
plus icon in the
Export
section to add an export configuration. You can add as many export configurations to a selection as needed.
Configure the export settings. Learn more about
Figma's export formats and settings
If needed, click
Preview
to see how your asset will look. If you have multiple objects selected, the
Preview
setting does not display.
Click
Export
Specify size of image export
Download any selected image on the canvas, and choose between downloading the image at its current size on the canvas or the original image at full resolution.
In Dev Mode, select the image you want to download.
From the
Assets
section in the right sidebar, hover over the image you want to download and click the
Export
icon that appears.
From the dropdown, choose from one of the options:
Source image file
: Download the original image that was used when the image was first imported into Figma.
Layer export
: Download the image at its current layer size.
Tip
: If you’d like to do a
layer export
, you can choose which file format to export the image to. In the
Assets
section, click
the
Open image export settings
icon, then use the dropdown to choose from PNG, JPEG, SVG, or PDF formats.
View or add annotations
With annotations, designers can communicate key details about a design directly to developers. This includes highlighting important properties, visualizing spacing and sizing with measurements, or sharing context with text notes.
In Dev Mode, annotations appear on the canvas as a green dot. Click an annotation to reveal its contents.
Note
: You need a
full seat
and
can edit
access to add annotations to a file.
To add annotations to a design:
Click the Dev Mode toggle in the top-right of the toolbar or use the keyboard shortcut
Shift
Click
Annotate
in the toolbar or use the keyboard shortcut
Shift
Select the layer you’d like to annotate.
Write a note in the text field, or click
+ Property
to select a property from the list. You can include both plain text and properties in an annotation.
To add a measurement to a design:
Click
Measure
in the toolbar or use the keyboard shortcut
Shift
Hover over a layer to see options for where to start your measurement.
Click and drag from your starting point to the layer where you want the measurement to end.
Click and drag the measurement so it doesn’t cover the design.
Use plugins
The
Plugins
tab in Dev Mode shows your recently used plugins, as well as recommended plugins from the Figma Community.
Learn how to use plugins in files
Compare changes
If a frame or component has been updated since you last viewed it, you can compare its version history. This helps you track the latest updates and keep production code accurate.
You can also compare detached components—or instances with design overrides—against the base component.
Select a top-level frame or component.
In the Inspect tab of the right sidebar, click
Compare changes
Tip:
Hold
Shift
and click to select two components on the canvas to compare them with each other.
Learn more about comparing changes in Dev Mode

--- Before you Start ---
Before you Start
Who can use this feature
Available on
plan
Anyone with
can edit
access to a file can edit vector layers
Vector edit mode lets you select, adjust, and change the properties of vector layers,
including
basic shapes
and custom vector networks drawn with the
Pen
Brush
, or
Pencil
tools
Enter vector edit mode
To enter vector edit mode, select one or more vector layers and press
Enter
. While in vector edit mode, you’ll be able to see and interact with the existing points and paths of the vector layer. You’ll also have access to the following vector editing tools in the secondary toolbar:
Lasso
Shape builder
Paint
Bend
Edit vector networks
While in vector edit mode, you can interact with the existing points and paths of a vector network:
Move points:
To move an existing point, select the
Move
tool in the secondary toolbar or press
. Then, click and drag a point to reposition it on the canvas.
Add points
: To add additional points, select the
Pen
tool in the toolbar or press
. Then, click along the vector network’s path to start adding additional points.
Edit multiple vector layers:
You can edit multiple vector layers at once by pressing
Shift
and clicking on a layer to add it to your current selection.
Switch vector layers:
To change to a different vector layer outside your current selection, press the modifier key and click on the layer:
Mac:
Command
Windows:
Control
Create curved paths with bézier handles
The Bend tool allows you to add bézier handles to create a curve in a path.
To add bézier handles to a vector network:
Select the
Bend
tool in the secondary toolbar.
Click on a point or path where you want to add a curve.
Use the bézier handles to adjust the length and slope of the curve.
Tip
: We recommend checking out
The Bezier Game
to practice using the Pen tool and mastering bézier curves.
Handle mirroring options
You can use the Mirroring settings to specify how a set of bézier handles mirror each other:
No mirroring:
Each handle can be moved independently
Mirror angle:
The unselected handle will mirror the angle of the selected handle
Mirror angle and length
: The unselected handle will mirror the angle and length of the selected handle
Note:
To move both handles in the same direction, press
Shift
and select each handle, then click and drag one handle to adjust its position. The other handle will copy the movement.
Select points and paths with the Lasso tool
You can select specific points and paths inside a vector network using the Lasso tool.
Select the
Lasso
tool from the secondary toolbar or press
Click and drag to draw a shape around the points and paths you want to select. You can then manipulate the selected points, or delete them from the vector network.
Add fills to closed regions
You can add fills to any closed regions of a vector network. If there are multiple closed regions within a vector network, you can adjust the fill of each region individually.
To add a fill to a closed region:
Select the
Paint
tool from the secondary toolbar or press
Shift
Hover over the region of the vector network you want to add a fill to. A pattern of diagonal stripes indicates which region is currently selected.
The cursor will change to a droplet icon with a:
plus if you can add a fill to that region
minus if there is an existing fill that you can remove
Click to add or remove a fill to the shape or region.
Figma uses a grey fill by default. You can change the fill using the settings in the
Fill
section of the right sidebar. Learn more about
fill properties
Round the corners of a shape
You can round individual corners of a vector network using the
Corner radius
setting in the right sidebar. If the vector network is an open path, you can use caps to round endpoints. Learn more about
corner radius and smoothing

--- Before you Start ---
Before you Start
Who can use this feature
Users on a
plan
can use paints in their designs
Users with
Edit access
can view and update paint properties in a mixed selection
The
Selection Colors
feature allows you to view and adjust any colors applied to objects in a selection.
Select objects or layers and view or adjust individual colors in the selection.
Select a parent object, like a Frame, Group, or Component. View and adjust the color properties of any child objects.
Note:
You can still adjust the properties of the parent object in the Properties Panel. This allows you to update Fill and Stroke properties of the Frame, without affecting child objects.
Selection colors include:
✅ Fills
✅ Strokes
✅ Solid colors
✅ Gradients (linear, radial, angular, diamond)
✅ Boolean groups*
Selection colors do not include:
🚫 Images
🚫 Hidden fills
🚫 Masks
Note:
Only colors applied to the combined Boolean group will be included in the Selection Colors. Colors applied to any child objects won't show up in the Selection Colors section.
View Selection Colors
View colors in your selection in the Selection Colors section of the Properties Panel.
Figma groups colors into
Color Styles
and
Paints
- any Fills or Strokes that you haven't saved as Styles.
Paints or Styles only appear once in the Selection colors section. By default, we show the three most frequently used Paints and Styles.
Click on a Paint to open the
Color picke
r. This allows you to adjust the paint type, color, hue, opacity, and blend mode. Or, pick another color from your
Document colors
Click on a style or a
variable
to open the Style modal. Variables are displayed inside a grey pill. The Style modal allows you to select from a list of styles or variables created in the file, or ones from libraries that have been added to the file.
Click the
detach
icon
to detach the style or variable
Click the
target
icon
to select all layers that use that color
Click the
Style
icon
to open the Style picker. This allows you to apply a Style to the selected color, or create a new Style.
Use the percentage field to adjust the opacity of a paint
Click the
See all colors
See all styles
link to view the rest of the colors in the selection
Want to swap two colors around?
We won't update the Selection colors section until you close the Color Picker.
Click on the first color you want to swap.
Select the second color in the
Document colors
section of the Color picker.
Without closing the Color picker, click on the second color in the Selection Colors section.
Select the first color in the
Document colors
section.
Close the Color picker.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can rename layers, including components
New to components? Check out our
Guide to components
and
Guide to libraries
articles.
Name and organize your components to ensure consistency across your design system, and make them easier to find in the
assets tab
and when
swapping related component instances
. We recommend defining and documenting a component naming structure within your team or company.
Tip:
Not sure where to start with building a component library? Our
Best practices: components, styles, and shared libraries
article has some great suggestions.
Component organization in the assets tab
In the assets tab, the organization of components mirrors the file's structure. You will see this general path:
file > page > frame
You can click on each library file to see its pages. Figma displays pages in alphanumeric order, not the order they are listed in the original file.
Then click on a specific page name to explore the components within. When you click on a component, you'll see a fly-out with more details, such as the component's description and properties.
Component organization in the swap instance menu
You can view details about a selected instance at the top of the
Design
tab in the right sidebar.
From here, you can click
next to the component's name to open the Swap instance window, which displays related components that you can swap the selected instance to.
We determine related components by:
How the main component is named
. For example, we will display
UI/Button/
Active
UI/Button/
Hover
and
UI/Button/
Inactive
together.
How the main component is arranged in the original file
. For example, components within the same frame or section are considered related.
Organize components by name
To add another layer of organization, you can use naming conventions to categorize your components and add consistency across your files. We recommend you use the slash-separated convention, such as
Component/State
Icon/Name
This might look like:
Button/Active
Button/Hover
Button/Inactive
Icon/Alert
Icon/Profile
Icon/Close
Tip:
Need to rename multiple components at once?
Learn how to rename layers in bulk.
Organize components via file structure
To illustrate the importance of component organization, the following example will walk through how you can define your file structure and name its pages and frames to determine the location of your components within.
In a file named
Figma UI
, we'll create components that make up the Figma UI.
In the file, we'll create a page called
Icons
, which houses all of our icon components.
We support two sizes for each icon, 16px and 32px. We'll create two sections for each size, and name them accordingly
and
, then place the icon components into their corresponding sections.
To make it easier to differentiate between the icon sizes, we'll make sure to include the icon's size in its name. For example,
icon-16-home
and
icon-32-home
In another file, we've created a dialog window that needs a close
icon. We've already created and published this close icon component in our Figma UI file, so we'll use an instance of that component in our other file.
Note:
For this approach, you will need to
publish your library
and
add it to the other file
. The ability to publish libraries is only available on our
paid plans
From the other file, we'll go to the assets tab and locate our Figma UI library file. We'll click the file name, open the Icons page, and select either the 16 or 32 section.
We need the 32px version of that icon, so we'll select that one and then drag that component from the
Assets
tab into the file.

--- Who can use this feature ---
Who can use this feature
Available on
all plans
Requires
can edit
access to a file
The canvas in Figma is the backdrop on which all of your frames, groups, and other layers live.
The default background color of the canvas is determined by your current theme—light or dark—when you create a file.
In light mode, the background defaults to light-gray:
#F5F5F5
In dark mode, the background defaults to an off-black color:
#1E1E1E
When you create a new page in your file, the new page inherits its background color from the current page’s background color.
Note
: Changing the background color of the canvas sets the color for everyone who has access to the file.
To change the background color:
Deselect any layers on the canvas.
From the
Page
section of the properties panel on the right side of the screen, click the color fill to select a new color. You can also enter a specific hex value if you prefer.
If needed, set the opacity on the background by clicking
100%
and entering a new value.
Tip
: You can toggle the visibility of the background color by clicking the
Hide
icon.
Note
: The canvas background color cannot be changed while in Dev Mode.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can flatten objects
Flattening an object merges its layers into a single vector layer, simplifying the design, reducing the file size, and improving asset compatibility.
You can flatten a selection of vector layers to merge them into a complex vector path or flatten a text layer to customize aspects of a typeface for logos or wordmarks. Flattening a container layer, like frames or sections, will merge its child layers together and remove the container layer from the canvas.
Unlike
boolean operations
, flattening is a destructive action. Once an object is flattened, its individual layers cannot be separated again. If you flatten something by mistake, you can use the file’s
version history
to restore a previous version or use the undo shortcut:
Mac:
Command
Windows:
Control
Flatten an object
To flatten a selection of objects, right-click on it and select
Flatten
or use the keyboard shortcut:
Mac:
Option
Shift
Windows:
Alt
Shift

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
With Figma AI, you can give your layers contextual names in a few clicks. This helps you organize your files and simplifies the process of
naming layers in bulk
How it works
Figma AI will use a layer's contents, location, and relationship to other selected layers to choose a name.
If you have the same unnamed layer across multiple top-level frames on the page, Figma will also rename any matching layers. This makes sure any prototyping settings, like
Smart animate
and
scroll position
, continue to work as expected.
Figma AI will only rename layers that use Figma's default naming convention. If you've already renamed layers and include them in your selection, Figma AI will keep those layer names.
Figma AI will only rename certain types of layers:
Frames
Groups
Rectangles and rounded rectangles that contain an image fill
Text layers
Instances that still use the same default name as their main component. This will only apply to the container name, Figma AI will ignore any instance sublayers.
Figma AI will not rename these types of layers:
Layers you've already renamed. Figma will keep the existing layer name, even if you include them in your selection.
Hidden or locked layers. You can lock or hide any layers you don't want Figma AI to rename.
Any layers nested within an instance. If you want to rename instance sublayers, you can update the layer names manually, or at the component level.
Individual vector shapes, such as ellipses, stars, polygons, and vector networks. This also include rectangles and rounded rectangles that don't contain an image fill.
Rename layers with Figma AI
There are a few ways to rename layers. Once you've made your selection, you can:
Right-click the selection and select
Rename layers
Click
Actions
in the toolbar and select
Rename layers
Open the quick actions menu and type
Rename layers
If the layers in your selection have already been renamed, you'll see a
No layers need renaming
message above the toolbar. Select
Rename anyway
to perform the action again.
Tip:
You can further
customize your layer names with regular expressions and bulk renaming
. This is helpful if you want to use specific layer naming conventions, like a prefix or suffix.

--- Who can use this feature ---
Who can use this feature
Only people with a
paid seat
in an organization or workspace can access the branching feature
Anyone with
can edit
access to a branch can receive and apply updates from the main file
This article covers one step in the branching process:
Create
Share
Update
Request
Review
Merge
Manage
If changes are made in the main file, Figma will notify any branches that updates are available. If you have edit access to the branch, you can review and apply those updates to your branch.
It's not possible to choose which changes from the main file you want to apply. You'll need to receive all updates from the main file.
If there are changes to layers you are editing in your branch, you may need to resolve conflicts. You can do this as soon as new changes are available, or when you merge the branch.
Caution
: If you have an active memory limit banner in your file, you can't review and merge changes. Figma will disable the
Review and merge changes
setting. To get updates from the main file or merge a branch, you need to
reduce your memory usage
Review and apply changes
When you accept updates, Figma applies any changes to existing layers, components, or styles in your branch. If new assets were created in the main file, Figma will also add these to your branch. If you've created new assets in your branch, these changes won't have any affect on those assets.
Expand the
menu next to the file/branch name in the left sidebar.
Select
Update from main...
to preview any updates.
View a list of items that have been
, or
. You can see a preview of the latest versions, but it's not a before and after of what's changed.
Select
Apply changes
to apply all updates to your branch.
Resolve conflicts
If other collaborators have been continuing to make changes to the main file, you may have conflicting changes. This means one or more of the elements you've made changes to has been updated in the main file.
Figma will let you know if there are any conflicting changes from the
Update from main file
modal.
Click
Resolve conflicts
to view any conflicts.
View a list of conflicts in the left sidebar.
Select an option from the list to review the conflicting changes side-by-side. The version from the main file (source) is on the left and the branch on the right.
Select which version you would like to use. Figma will add a badge next to the conflict to show whether you selected the
main
branch
Repeat the process for the remaining conflicts. You'll need to choose a version for every conflict.
To quickly select the same option for every conflict, use the
Resolve all
menu. Choose from:
Pick main file
to use the latest changes from the main file
Pick branch
to keep the changes in your branch.
When you have a selection for every conflict, click
Next
to move to the next step.
You can now preview any other updates from the main file, if there are any. Click
Apply changes
to apply those updates.
Figma will apply updates from the main file return you to the branch. You can then continue to edit your branch. If you're receiving updates as part of a
branch merge
, you can complete the rest of the process.
Reverse or undo updates
If you want to undo or reverse a branch update, you can restore a previous version of the branch. If you notice something doesn’t look right after a merge or update, read our
Incomplete updates and merges
article.
From the branch, click the
next to the file/branch name in the left sidebar.
Select
Show version history
to open version history in the right sidebar.
Select a version before the
update from the main file.
Right-click the version or click the
and select
Restore this version
Figma will add two autosave checkpoints to the file's version history. A checkpoint that saves the current version. This is an autosaved version with a timestamp that matches the current time. A checkpoint at the same timestamp for the version you just restored.
Click
Done
in the toolbar to exit version history.

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
. Publishing components to a library is supported on paid plans.
Anyone with
can edit
access to a file can create and use variants and component sets in that file.
Component libraries define and outline the ideal implementation of a design system.
These components often contain generic information designers need to change, like the text on a button or the contents of a menu.
The
main component
defines the properties of the element
The
instance
is a copy of the component you can reuse in your designs
You can make changes to any instance of a component you add to your file. These changes allow you to customize an instance to suit its new context, or explore iterations of a design.
Apply changes
To make a change to an instance:
Select the instance.
Edit or adjust the property you’d like to change. For example, to
change the fill of a layer
, edit the
Fill
section of the right sidebar.
Supported properties
Figma lets you change text, fill, stroke, and effect properties.
You can apply the following changes:
Change text properties, including font, weight, size, line height, letter spacing, and resizing
Change the fill or stroke of any layers, including the fill type, value, and opacity
Add, edit, or remove any shadow or blur effects
Add, edit, or remove layout guides
Swap nested instances of other components, like icons
Add, edit, or remove export settings
Change the layer name
It’s not possible to make changes to the underlying structure of an instance. You can’t override:
The order, or z-index, of any layers within the instance
Position of any layers within the component, including items in an auto layout frame
Any constraints applied to the layers
The bounds of any text layers
For changes like reordering layers, you must
detach the instance
, or make the changes directly to the main component
Change preservation
Figma attempts to preserve your changes when you select a different variant or swap between instances.
Figma uses the following criteria to determine whether to preserve a change on an instance:
The layer names of the current instance and the variant or instance you’re selecting must match. This applies both when swapping instances and selecting variants.
When selecting variants, Figma also checks if the layer properties you’ve changed originally matched between variants. If so, Figma will preserve your changes.
In our example below, Figma preserves the fill change on Step 3, but not on Step 4. This is because the
default primary
button and
hover
primary
button both started with the same fill of
#1BC47D
. Our change was to change the hex code from
#1BC47D
#F531B3
Figma doesn’t preserve our change in Step 4 as the
hover secondary
variant has a fill of
#FFFFFF
, which is different to the fill we applied our original change to (
#1BC47D
The criteria is less strict for preserving text changes. Figma keeps any changes you’ve made to text layers if the name of the text layer is the same between components. Figma will also check if the text layer’s hierarchy is similar.
Reset changes
Reset the instance to restore the properties of the main component. You can choose to reset the entire instance, or just a specific property.
Select the instance to view changes for the entire instance, or a specific layer to view changes for that layer only.
Click
More actions
next to the component name in the right panel.
Figma opens a menu that lets you view any changes for your selection. Figma only lists properties that have changes applied.
Select
Reset > Reset [property]
to reset a specific property.
Select
Reset > Reset all changes
to reset all properties for that layer.
Figma resets the property to match the main component.
Push changes to main component
You can choose to push your changes back to the main component, which updates any other instances of that component.
You can only push changes if the main component is in the same file as the instance. It’s not possible to push changes to components in another file, including published libraries.
Note:
It’s not possible to push changes to a component that’s nested within another component. You need to make those changes to the main component itself.
Select the instance with your changes applied to it. You need to select the instance itself, not a specific layer within it.
Click
More actions
next to the component name in the right panel.
Select
Push changes to main component
Note:
If you are working in a published library file, you need to
publish your changes
to allow other instances to receive those updates.

--- Before you Start ---
Before you Start
Who can use this feature
Users on
any plan
Users with
edit access
to a Figma Design file can resize objects with the scale tool
Use the scale tool to proportionally resize layers and objects. This tool preserves aspect ratios and ignores
constraints
of any nested layers in order to scale them proportionally. Any blurs or strokes will scale as well.
Note:
To preserve the aspect ratio on a layer without scaling it, you can
lock and unlock aspect ratio
on the layer.
You can scale any object, with the exception of
locked layers
and layers nested inside a component instance. Learn more about
instance overrides
Scale
To resize an object using the scale tool:
Activate the scale tool by pressing
or by clicking
in the toolbar and selecting
Scale
Select an object.
Scale the object by doing one of the following:
Click and drag
: Hover over the object’s bounding box to make the
cursor appear. Then, click-and-drag to resize.
Scale multiplier
: Use the scale multiplier, in the
Scale
panel of the right sidebar. Open the dropdown to select a multiplier, or type a multiplier in the text field and press
Enter
Return
to apply.
Dimensions fields:
Use either the width or height fields, in the
Scale
panel of the right sidebar. Type a number in either field and press
Enter
Return
to apply. The other dimension field will automatically update.
Set scale direction
The anchor box in the scale panel allows you to set which direction an object scales when using the scale multiplier or dimension fields.
You use the anchor box to set the object’s anchor point, which tells Figma which side of the object to stay put. Once you scale your object, it scales in the opposite direction of the anchor point.
For example, if the anchor point is set to center, the object’s center stays put and resizes in all directions. If you set the anchor point to the top-left, an object will resize down and to the right.
To change an object’s scale direction:
Activate the scale tool
Select the object.
Click on one of the anchor points in the anchor box.
Use the scale multiplier or dimension fields to scale the object.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can use boolean operations
Boolean operations let you combine multiple layers into a single object with shared properties called a boolean group. You can use boolean operations to create icons, illustrations, and more.
Boolean operations are non-destructive actions, which means you can still select and modify the layers in the boolean group. This flexibility allows you to keep iterating on designs without having to ungroup the layers or start over from scratch. You can apply boolean operations to shape layers, vector paths, and text layers. You can’t apply them to sections or frames.
Note:
Boolean operations now use a layer’s stroke and fill to calculate the geometry of the resulting shape. When working with existing boolean groups, you may be prompted to update the boolean operation to include the shape’s full geometry.
Types of boolean operations
There are four boolean operations: union, subtract, intersect, and exclude.
Union selection
The union selection operation combines the selected layers. If the layers overlap, the new object’s outer path is created by merging the outer edges of the layers. The layer at the top of the layer hierarchy will be used to determine the object’s fill, stroke, and effect properties but you can modify these properties at any time. Any strokes or effects will be applied to the object’s outer path.
Union selection keyboard shortcut:
Mac:
Option
Shift
Windows:
Alt
Shift
Subtract selection
The subtract selection operation removes any areas overlapping the bottom layer of the current selection. The layer at the bottom of the layer hierarchy will be used to determine the object’s fill, stroke, and effect properties but you can modify these properties at any time. If the resulting object has both an inner and outer edge, any strokes or effects will be applied along both edges.
Subtract selection keyboard shortcut:
Mac:
Option
Shift
Windows:
Alt
Shift
Intersect selection
The intersect selection operation creates a new object from where the selected layers overlap. Anything outside the overlapping area is removed, leaving just the areas where all layers intersect. The layer at the top of the layer hierarchy will be used to determine the object’s fill, stroke, and effect properties but you can modify these properties at any time. Any strokes or effects will be applied to the object’s outer path.
If you apply the intersect operation to non-overlapping layers, the layers will disappear from view on the canvas until you move them to where they can overlap.
Intersect selection keyboard shortcut:
Mac:
Option
Shift
Windows:
Alt
Shift
Exclude selection
The exclude selection operation creates a new object by removing the overlapping areas, keeping just the non-overlapping parts. The layer at the top of the layer hierarchy will be used to determine the object’s fill, stroke, and effect properties but you can modify these properties at any time. If the resulting object has both an inner and outer edge, any strokes or effects will be applied along both edges.
Exclude selection keyboard shortcut:
Mac:
Option
Shift
Windows:
Alt
Shift
Apply a boolean operation
To apply a boolean operation, select at least two supported layer types, then choose an operation from the
Boolean operations
menu.
Edit a boolean group
Boolean operations are non-destructive actions. This means that you can still select and modify the dimensions, position, rotation, and corner radius of layers inside the boolean group.
You won’t be able to change the fill, stroke, effects, or opacity properties of individual layers inside the group. To break up a boolean group and revert the layers back into individual objects, right-click on the group and select
Ungroup

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Requires
can edit
access to a file to adjust layers and prototype from the properties panel
Requires
can view
access to a file to comment, explore file and layer properties, and export layers from the properties panel
In Figma Design, a file has three main interface elements that are detached from the canvas:
The
navigation panel
on the left side of the screen
The
toolbar
at the bottom of the screen
The properties panel on the right side of the screen
In this article, we're going to explore the properties panel.
How the properties panel changes based on your access to a file
The properties panel has different capabilities depending on your level of access to a file, and your
seat type
Edit access
: Edit the design properties of layers, and add prototype flows and interactions
View-only access
: View and search comments, inspect layer properties and code output, and export
Use the properties panel with edit access
There are two tabs available in the properties panel when you have edit access to a file:
Design
and
Prototype
Tip
: You can add labels to the properties panel to make it clearer what each property does. To turn on labels, click the
dropdown menu next to the 100% zoom percentage in the properties panel and select
Property labels
Design
The
Design
tab lets you view, add, remove or change the properties of objects within your design.
If nothing is selected on the canvas, you'll be able to do the following from the
Design
tab:
Access styles and variables that are local to the file
Update the background color of the canvas
Export the entire page
When you select a layer, you can access many different property controls for editing the layer. For example:
Alignment, rotation, and position
Frame size and orientation
Corner radius
Constraints
Layout guides
Component properties
Instance
Auto layout
Blend Modes
Text
Fill
Stroke
Effects
Export settings
Prototype
Use the
Prototype
tab to start building prototypes. Select any object to begin, then:
Add a
flow starting point
: A flow is a path users take through the network of connected frames that make up your prototype. Add a starting point to choose the first frame of the journey.
Add an
interaction
: Open up the
Interaction Details
modal, where you can define the trigger, action, and any animations for the interaction.
Define
scroll behavior
: Select how the prototype responds to scrolling.
Show
prototype settings
: Allows you to adjust the device and background of your prototype.
Tip
: You can also add interactions directly on the canvas by selecting the
Prototype
tab, then clicking and dragging connections between objects.
Learn more about prototyping in Figma →
Use the properties panel with view-only access
People with
can view
access to a file, or who have a View seat on a paid plan, have two tabs in the properties panel:
Comment
and
Properties
View-only access is great for people who don't need to edit designs or for developers who need to access designs, but don't need the full suite of Dev Mode features. People with this access to a file can collaborate on designs, view design properties, copy basic code, and export assets.
Comment
Select
Comment
in the right sidebar to add new comments or view existing ones. You can use comments to add or respond to feedback, collaborate, and iterate faster—all from the original design file.
From the
Comment
tab, you can see all the existing comments in a file. Or, find a particular comment or set of comments within a file:
Type a keyword in the Search field to find a particular comment.
Use the Filter to view comments by when they were posted or see only the ones you haven’t read yet. Here, you can filter to only view a certain set of comments.
Learn more about
adding comments to a Figma Design file
viewing and manage comments.
Properties
The
Properties
tab of the right sidebar lets you inspect particular layers on the canvas, as well as export designs.
To begin, select a layer on the canvas. You can do this by either selecting the element on the canvas itself or by selecting it from the
Layers
panel on the left sidebar. You can select any type of layer, such as a shape, text, group, or frame.
Under
Properties
, you’ll see the name of the selected layer and details about it, such as its layout and colors.
Right-click the layer on the canvas to:
Copy the layer
Copy/paste as code (CSS, iOS, or Android), SVG, PNG, copy the link, or copy its properties
Select a different layer within the layer you selected
Looking to measure distances between objects? You can use keyboard shortcuts to quickly access spacing and padding information.
Learn how to add measurement guidelines →
At the bottom of the
Properties
tab, you can add an export configuration to export designs in a variety of file formats and sizes. Exporting helps you share content with others, move content between tools, and save copies of your designs outside Figma.
Learn how to export content from Figma →

--- Who can use this feature ---
Who can use this feature
Available on
paid plans
Only people with
Can edit
access to both the origin file and the destination file can move components between files.
Want to move styles to another file?
Check out our
Manage and share styles
article for step-by-step instructions.
Move published components and component sets between files, without breaking links to instances. Use this process to split up large libraries into smaller files.
You can only use this process to move published components. You can still copy and paste main components and their instances between files. Figma will keep connections between components and instances as long as they remain in the same file.
Warning:
Before attempting to move published components, please familiarize yourself with the process from start to end. Keep in mind, the only way to reverse this action is to repeat the entire process by moving the components back to their original file. It's not possible to reverse this action by using the undo keyboard shortcut or restoring the file to a previous version.
This is a multi-step process: cut and paste the components and publish the changes to the library. You must do both of these steps to move the component and update any connected instances. We also recommend review your components—for hidden components and deleted variants—before you move them.
How does it work?
Every component has a unique id. Figma uses this id to maintain the connection between the main component and any instances of that component.
When you cut and paste a component between files, Figma treats the pasted component as a new component. The new component has a unique id that's different from the original main component.
When you publish the duplicate to a library, Figma notifies any subscribed files of the changes. It's only when you accept these updates that Figma swaps to instances from the destination library.
Because of how this works behind the scenes, it's not possible to undo or reverse this process. The only way to
undo this action
is to move components back to their original file.
Using library analytics?
Figma treats moved components as new components in your organization's Library analytics. Learn more
about library analytics
View glossary of terms
Published component
: A component that is published to a team or organization library. Instances across files, projects, or team can receive updates from published components.
A component 'created in this file'
: A main component created in the current file.
Origin file:
Specific to the action of moving a component. The origin file is the file where components live(d) before being moved to a new location.
Destination file:
Specific to the action of moving a component. The destination file is the file where components are moved to, this can be a new or existing file/library.
Subscribed file
: A Figma Design or FigJam file with styles and instances that are linked to an active published library.
1. Review components
Before you start moving components, there are a few things to consider. We recommend reviewing any applicable steps to make sure your components work as intended in their new location.
1. Publish any hidden components you want to keep
Hidden components are components that you haven't published to your library. It's not possible to move hidden components between files.
If you have components that use nested instances of a hidden component, you need to
publish hidden components
, before you can move them to another file. Once you've moved those components and published the changes to the library, you can hide them again.
The entire process looks like this:
Publish hidden components to library
Cut and paste components into the destination file
Publish the destination file as a library
Hide components to remove them from the library
2. Check nested instances and overrides
If you have main components that use nested instances, you need to consider where the main components live. Especially if there are overrides applied to them.
If the main components are within the same file, we recommend you move and publish components together. If the main components for nested instances are hidden, you'll need to publish them first.
If components use main components from another published library, Figma will keep the connection to that library.
We recommend publishing components from the destination library, before you start making changes to those components.
Let's explore an example
You have a main component of a dialog window. In that component, are nested instances of a button component and an icon component. Both the icon and the button are hidden components.
In an instance of the dialog component, the generic information icon was swapped with a warning icon and color overrides were applied to both the icon and primary button.
To successfully move these component and preserve overrides:
Publish icon and button components to the library. Learn how to
publish hidden components
Cut all components from the current file — this includes the icon and button components and the dialog component that uses instances of those components.
Paste those components into the destination file.
See below
Publish the destination file as a library.
See below
Accept updates from the library
in any subscribed files.
Hide both the icon and button main components. Learn how to
hide components when publishing
3. Restore any deleted variants you want to keep
To move a component set, you need to cut and paste them between files. Figma will only copy the variants that exist at the time you cut and pasted them.
If you have deleted a variant, but want to use it again in the future, you need to restore the variant from the origin file. We recommend doing this before moving the component set. You can restore a deleted variant after you've moved the component set, as long as the origin file still exists.
Restore deleted variants from any instances. This will restore those variants as main components in the origin file.
Publish these restored components to the library in the origin file—you can only move published components.
Move the restored components to the destination file using the
cut and paste method
Drag any restored component into the existing component set.
2. Cut and paste components
You can now move
published components
and component sets between files and their libraries using cut and paste. You can choose to keep any existing connections between components and instances, or treat them as entirely new components.
You can paste main components into a branch of a file. Figma won't update the libraries and any subscribed files until the branch is merged and the library published.
To move a component or component set:
Open the file where the main component lives, this is the
origin
file.
Select the main components or component sets you want to move.
Use the cut shortcut to add them to your clipboard:
Mac:
⌘ Command
Windows:
Ctrl
Open the file and you want to move components to, this is the
destination
file.
Make sure you have nothing selected, then paste components into the file.
Mac:
⌘ Command
Windows:
Ctrl
Note:
It's possible to make changes to the components before publishing. We recommend publishing the library first, before making any structural changes to components and variants.
3. Publish library changes
When you move published components between files, Figma will prompt you to publish your changes to any affected libraries. When changes have been made to a library, the
Libraries
icon in the left sidebar will display a blue badge.
You need to publish these changes to complete the move process. Figma will push updates to all subscribed files when you publish your changes.
Click the
Review unpublished changes
icon to open the
Libraries
modal.  The icon’s tooltip may read
Review library updates
if there are updates to libraries you are using in the file.
Select the
This file
tab then click
Publish
next to the library.
Figma lists any changes to the library, including every component you've moved to this file. For each component, choose to
Move to this file
Publish as a copy
Select
Move to this file
for all moved components. This makes sure Figma keeps connections between the main components and any existing instances.
Select
Publish as copy
to publish them as new main component. This will break the connection between the component and any instances, instances won't receive further updates.
Add a description of your changes, Figma shows this in the file's version history.
Click
Publish
to publish your changes to the library.
Learn how to publish updates to a library.
4. Accept updates from library
Figma will push updates to any file that uses those styles and components. When updates are available for a style, component, or variable on the current page, the
Libraries
icon in the left sidebar will display a blue badge.
Learn about reviewing and accepting updates from libraries.
Instances will stay linked to deleted components in the origin file until you review and accept updates. Accept updates in subscribed files to update instances.
Subscribed files
If you select or edit an instance before receiving updates, this will still point to the deleted main component in the origin file. Once you receive updates from the library, Figma will point to the main component in the destination file.
Instances in the origin file
Instances of the moved component in the origin file won't receive updates until those components are published in the destination file.
Click
Update
to receive updates and make sure those instances are now linked to components in their new location.
Instances in destination file
If instances in the destination file are linked to components you've moved from the original file, Figma will automatically update them to point to the newly moved components.
Note:
If the new library isn't enabled in a subscribed file, Figma will enable the library in that file when instances receive updates.
Reverse or undo move component
It's not possible to undo the action of moving components using any of these methods:
Using the undo keyboard shortcut
Restoring deleted components from an instance
Restoring an earlier version of the file's version history
While you can still take these actions in a file, this won't return components to their original location and you may end up with other unintended consequences.
We recommend using the
move component process outlined above
to move components back to their original location.

--- Who can use this feature ---
Who can use this feature
Only people with a
paid seat
in an organization or workspace can access the branching feature
Anyone with
can view
can edit
access to the main file can
view branches
This article covers one step in the branching process:
Create
Share
Update
Request
Review
Merge
Manage
View and manage branches of a Figma Design file from the branches modal. You can identify design files with branches using the
icon.
View branches
You can view a file's branches from the main file, a branch, or from the file browser.
From a file
Click the
next to the file/branch name in the toolbar.
Select
See all branches
to open the branches modal.
If you have
can edit
access to the main file, you can take further action on branches from the file name menu:
Select
Duplicate as new file
to create a new file from the branch. This will create a separate file, so you won't be able to apply any changes from that file back to the main file.
Select
Rename
to change the name of the branch (from branch only)
Select
Archive
to archive the current branch without merging (from branch only)
From the file browser
If a file has branches, you'll see an icon on the top-left of the file tile, and the total number of branches underneath the file name.
Click to view the main file
Use the dropdown to select one of the branches
Manage branches
View all branches in the
Branches
modal. You'll see three tabs for
Active
and
Archived
branches, as well as branches you created (
Yours
). The Archived tab includes both merged and archived branches.
If you have can edit access to the main file, you can do the following from the
Branches
modal:
Open a branch
Merge a branch
Archive a branch
Copy link to branch
Rename a branch
Restore an archived branch
Open branch
You can open, view, and explore any active or archived branches. You can view any pages, comments, and a full version history for that branch.
Find the branch you want to open. You can find merged branches in the
Archived
tab.
Hover over the branch and click
Open
. Figma will open that branch in the editor.
Archive branch
Archive any historic, abandoned, or incomplete branches.
Find the branch you want to archive.
Click
to open the menu.
Select
Archive
to move the branch to the
Archived
tab.
Copy link to branch
Copy a link to the branch to share the file URL with a co-worker or collaborator.
Open the branches modal.
Next to the branch you want to share, click
to open the menu.
Select
Copy link
to add the URL for the branch to your clipboard.
Rename branch
Open the branches modal.
Next to the branch you want to share, click
to open the menu.
Select
Rename
from the options.
The branch name will now be an editable field. Enter the new name in the field provided.
Press
Enter
or click outside the field to apply your changes.
Restore an archived branch
Restore an archived branch. This allows you to continue to edit the file, as well as merge your updates into the main file. It's not possible to restore a merged branch.
Select the
Archived
tab.
Find the archived branch.
Click
to open the menu.
Select
Restore
to continue to edit the branch.

--- Who can use this feature ---
Who can use this feature
Available on
any team or plan
Anyone with
can edit
file access can copy and paste properties.
Copy and paste properties to reuse attributes between layers.
Copy and paste single properties
You can copy and paste individual fill, stroke, and effects properties between layers.
Select a layer on the canvas.
Click to highlight the property on the right sidebar.
Press
⌘Command
(Mac) /
Ctrl
(Windows) to copy the property.
Select another layer on the canvas.
Press
⌘Command
(Mac) /
Ctrl
(Windows) to paste the property.
Copy and paste all properties
Use
Copy properties
and
Paste properties
to copy all properties of an object. When you paste all properties, Figma will apply any properties that are supported by that layer.
Right-click on the layer in the canvas.
Select
Copy/Paste as > Copy properties
Right-click on the layer to which you want to add the properties.
Select
Copy/Paste as > Paste properties
Tip
Use keyboard shortcuts to copy and paste properties between layers.
Mac:
Copy properties:
⌥Option
⌘Command
Paste properties:
⌥Option
⌘Command
Windows:
Copy properties:
Ctrl
Alt
Paste properties:
Ctrl
Alt
When pasting text properties, you have two options:
Highlight a specific text string to select it, then paste the properties directly onto the selected text.
Place your cursor within a text string and paste. Figma will automatically apply the properties to the surrounding text that shares the same property as the cursor's location, without needing to highlight any text.

--- 177_Add_descriptions_to_styles_components_and_variables.txt ---
Documentation makes sure the people using your design system have the right information and context. It can help guide proper application, variant and state usage, and accessibility and contrast requirements.
Documentation is not just for designers, it’s also important to consider other people who will be using your design system. This includes the developers who will be implementing your designs.
At the moment, there are a few ways to incorporate design system documentation in your Figma libraries:
Give
styles
components
, and
variables
meaningful names
Add short descriptions to styles, components, and variables
Add links to external documentation to components
Add descriptions to any library updates
Tip!
Looking for more guidance around style and component libraries? Check out these best practice guides:
Components, styles, and shared libraries
Component architecture in Figma
Components
You can attach a short
description
and a
link
to your components. This allows you to better communicate a component’s intended use.
Figma will look at component descriptions when returning search results. So you can use descriptions to tag components with relevant keywords. It won’t be possible to capture every detail in this description field, so have a think about what information will be most important.
If you have design system documentation in an external tool, you can add a link to that documentation.
Note:
If you combine existing components as a component set, Figma will apply any existing links and descriptions to the individual variants. You can view and edit this description when you have the variant selected.
Add descriptions and links
Add a description and any links to your main components. You’ll need edit access to the library file to add or update descriptions. You can add descriptions and links to:
Main components, including those with component properties
Entire component sets and individual variants in a component set
Open the file where your component library lives. If you have an instance selected, you can select
Go to main component in library
to view the component in the library file.
Select main component, component set or a specific variant within the component set.
Click
to open the
Component configuration
details:
Add a
description
for this component. Figma will look at this description when searching for components, so you can use this field to tag relevant keywords.
Add a
link
to external documentation, or another file with further explanations or guidance.
Click
or anywhere outside the modal to apply changes.
Figma will show descriptions and links in common style and component locations in files.
View component descriptions and links ↓
Styles
There are a few tools you can use to help guide people toward the right styles for their designs.
You can use the slash or dash naming process to organize your styles into groups. We recommend giving your
styles
names that are relevant to their use case.
You can also add descriptions to styles. Descriptions allow you to show extra information about a style’s intended usage. You can
view a style’s description
when you hover over the style in the style picker.
Add style descriptions
Add a description to the style definition in the library file. You need to
create a style
before you can add a description to it.
Click an empty spot in the canvas.
In the
Design
panel, view any style definitions in the file.
Hover over the style and click
when it appears:
In the
Edit style
menu add a
Description
using the field.
Click outside the menu or use the
to close the menu.
Tip!
You can find and open the style definition from any layer that uses that style:
Select a layer that supports that style.
Click
to open the style picker.
Right-click the style and select
Edit style
Variables
You can use the slash naming process to organize your variables into groups. We recommend giving your
variables
names that are relevant to their use case.
You can also add descriptions to variables. Descriptions allow you to show extra information about a variable's intended usage.
From the file where the variable lives, click an empty spot on the canvas to deselect any objects.
From the right sidebar, find the
Local variables
section.
Click
Open variables.
Find the variable from the Variables modal. Hover over the variable row, right-click, and select
Edit variable
Enter your description into the description box.
Libraries
You can also add descriptions when publishing updates to your library. These descriptions show in both the library modal and in the file’s version history and are great for communicating high-level changes to your library.
We recommend using these descriptions in addition to component and style descriptions. Style and component descriptions are visible to anyone who interacts with the style or description. Library descriptions are only available at a file and library level, so have much less visibility.
Figma will show a notification in any files with styles and components from that library. You can view a list of updated styles and components and the description (if included).
Review and accept library updates →
View descriptions and documentation
You can view descriptions and links when interacting with styles and components in these places:
Instance menu in right sidebar
Assets panel in left sidebar
Style picker from properties in the right sidebar
Inspect panel in Dev Mode
Properties panel (if you have view only access to the file)
Instance menu in right sidebar
View component details in the instance section of the
Design
panel in the right sidebar. You need
edit
access to the file to access the
Design
panel.
Figma shows a preview of the description underneath the component / instance name.
Click
Show more
to view the full description and link in the documentation window. Click outside of the modal or use the
button to close.
Collaborators can also click
to view the original library file. This is great if you have additional guidance for how to use components.
Assets panel
You can view component names and descriptions in the
Assets
panel. Figma will also use component descriptions when you search for a component.
Hover over the component in the
Assets
panel of the left sidebar to view the component’s details. You can see both the component
name
and
description
from list or grid view.
You need to have
can edit
access to a file to open the
Assets
panel. You’ll only need view access to the library to use components from that library.
Libraries picker
View the name and description of a style or variable from the
Libraries
picker.
From the Fill or Stroke section of the right sidebar, click
Apply styles and variables
to open the
Libraries
picker.
Hover over a style or variable to view its description in a tooltip:
Dev Mode
If you have access to
Dev Mode
, you can view style and components descriptions in the
Inspect
panel. View component descriptions in the
Component
section, underneath the component preview.
Properties panel (view only access)
If you have view access to the file, and don't have access to Dev Mode, you can view component descriptions in the
Properties
panel of the right sidebar.
View the name of the component or instance. If the component lives in another file, you’ll also see the
Go to main component in library
icon to view the component in the library file.
View the description. If the component or instance is a variant, you’ll see descriptions for both the component set and the variant.
View other documentation and properties attached to the component.

--- Before you Start ---
Before you Start
Who can use this feature
UI kits are available on
all plans
You will need access to the SF Pro font to correctly use Apple’s UI kit
SF Pro font is available on MacOS only
UI kits
are a set of libraries curated by Figma and partners (Google and Apple), optionally available from the assets tab in Figma Design files. UI kits contain high-quality components, styles, and example screens kick-start your designs, even if you don’t have a design system of your own.
In order to use
iOS and iPadOS 18 UI kit
, or any UI kits by Apple, you will need to:
✅ Accept Apple’s end user licensing agreement (EULA)
✅ Accept the SF Pro font (optional)
Review and accept the license agreement for Apple Design Resources
The first time you insert a component from Apple’s UI kit, you’ll be prompted to review the license agreement for using Apple Design Resources.
Select
Agree
to continue using Apple’s UI kit.
To download the license agreement document as a PDF, hover over the icon next to the UI kit in the Assets view, and click
License Agreement for Apple Design Resources
Review and accept the license agreement for SF Pro font (optional)
After accepting the Apple Design Resources licensing agreement, you’ll be prompted to review the licensing agreement for SF Pro font. This is not a requirement to use Apple’s UI kit.
Select
Agree
to use the font, and the SF Pro and SF Compact fonts will become available in Figma by default.
If you
Disagree
, you’ll be prompted to replace the font on the canvas with another one. If you change your mind and would like to use SF Pro and SF Compact, apply one of the fonts to a text layer. You’ll be prompted to review the licensing agreement.
If SF Pro or SF Compact is installed on your computer and
available to use in Figma
, then Figma will prioritize your font first.
Tip
: If you want access to SF Mono or SF New York fonts, you can download them to your computer from
Apple’s fonts page
(macOS only).
You will need
Figma's font installer
if you’re using Figma in the browser. If you’re using Figma in the desktop app, the font installer is not needed.
If you’re an organization admin, you can add SF Pro as a shared resource for your entire organization. That way, SF Pro is available from all files of the organization, and individuals won't need to download and install the font on their own. Learn how to
add a font to your organization

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
Anyone with
can edit
access to a file can apply fills and strokes
You can use a pattern as a layer’s fill or stroke. The pattern’s source references another object on the canvas in the same file. This could be a single layer, or multiple layers in a group or frame.
Change a layer’s fill or stroke to a pattern
Select a layer on the canvas.
Click the swatch in the
Fill
section of the right sidebar to open the color picker.
Select
Pattern
from the fill options.
Click
Select source
, then select another object on the canvas.
Use the pattern options to set the tile type, scale, spacing, alignment, and opacity.
Pattern fills are dynamic. If you update the pattern’s source object, the pattern will automatically update on each layer where its used.
Tip:
You can use
transforms
and
boolean operations
to create unique shapes for your patterns.

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in FigJam and Figma Slides
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
After hosting an engaging team brainstorm or user research session in FigJam, you may have a lot of content to sift through before you can share your findings in a Figma Slides deck. With Figma AI, you can generate a slide deck outline from a FigJam board, giving you a good starting point that you can use to build the rest of your presentation.
Generate a slide deck outline
You can generate a slide deck outline from any FigJam board you have
can view
access to. There are a few ways to generate a slide deck outline:
From Figma Slides
Click
New slide
in the left sidebar to open the template picker.
Click
Start with an outline
Choose a FigJam board to summarize.
If the FigJam board you selected has multiple pages, use the dropdown menu to select a specific page or choose
All pages
to summarize the entire board.
Click
Next
Select a template to use for the deck or click
Create outline without template
Figma AI sorts and summarizes the content on the FigJam and generates a slide deck outline. You can modify the generated slides and add additional slides to the deck, as needed.
From FigJam
Open the board you want to use.
Do one of the following:
Go to
Main menu
File
Create Figma Slides outline
Click
More actions
next to a page and select
Create Figma Slides outline
Click
Share
in the top toolbar and select
Create Figma Slides outline
Select sticky notes on the board, right-click and select
Create Figma Slides outline
You’ll be redirected to the template picker in Figma Slides. Select a template to use for the deck or click
Create outline without template
Figma AI sorts and summarizes the content on the FigJam board and generates a slide deck outline. You can
modify
the generated slides and add additional slides to the deck, as needed.

--- Before you start ---
Before you start
Who can use this feature
Users on
any team or plan
can access the toolbar in Figma Design files.
Users will need
can edit
access to use every tool in the toolbar. Users with
can view
access can use some functions in the toolbar.
The toolbar is your hub for interacting with—and adding objects—to the canvas. Here is an overview of the different tools in the toolbar.
Move, Hand, and Scale
When you open a design file, Figma selects the
Move
tool by default. Click the
arrow to the right of the
Move
tool to access the
Hand
and
Scale
tools.
Move
: Select and move objects around on the canvas
Hand
: Click around a file without selecting and moving objects
Scale
Resize entire objects or layers
If you're using Figma on a device with a touch screen, the
Hand
tool lets you pan around a file using your fingers.
Tip
: You can press and hold the space bar to temporarily activate the
Hand
tool.
Frame, Section, and Slice
The
Frame
tool is selected by default. Click the
arrow to access the
Section
and
Slice
tools.
Frame
Frames
are the main building blocks of Figma. A frame is a container that holds design elements such as shapes, text, and images. You can use them to organize and structure design elements on the canvas. Create a frame with your own dimensions in the canvas, or select a frame size from Figma's presets in the properties panel on the right-hand side of the screen.
Section:
Sections
let you organize files for easier navigation, link others to a collection of designs, or mark content as "Ready for development" to help with the developer handoff.
Slice:
The
Slice
tool allows you to specify a region of the screen you want to export.
Shape
The
Shape
tool gives you a number of default shapes to use. The
Rectangle
tool is selected by default. Click the
arrow to choose from:
Rectangle
Line
Arrow
Ellipse
Polygon
Star
Place Image
Tip
Place Image
lets you select one or more images on your computer and insert them on the canvas. In Figma, an image is
imported as a fill on a shape
, which is why
Place Image
is located in the
Shape
tool.
Pen and Pencil
Pen
: Create vector shapes and icons. You can build complex
Vector Networks
using vector paths, anchor points, and bezier curves.
Pencil
: Add freehand drawings or annotations to your design files. Figma will apply some basic smoothing to any paths you create with the
Pencil
tool. Select a drawing and press the Enter / Return key to edit the drawing in Vector Edit mode.
Text
Text
is one of the crucial components of interface design. Everything from the placement and arrangement of text, to the choice of font, has a part to play.
Select the
Text
tool, or press the
key to add text layers to your file.
Click once in the canvas to add a text layer that grows horizontally
Click and drag to create a text layer with a fixed size
Learn more about
creating text layers
Comment
The
Comment
tool lets you annotate the canvas with your thoughts, ideas, and feedback.
Use comments to give or respond to feedback
, tweak your designs, and iterate faster—all without leaving the design file. Comments are accessible to anyone with view or edit access to the file.
Actions menu
The
Actions
menu is a collection of productivity tools in design files to help you stay in the flow. From here, you can access:
AI tools
, like generating a design, replacing content, or creating images
A search tool
for finding library assets by name or by description
Plugins
and
widgets
Commands for common actions in Figma, like collapsing all layers in the navigation panel, or toggling rulers on and off
Enter Dev Mode
Dev Mode
is a developer-focused interface for inspecting and navigating designs. To enter Dev Mode, click the
Dev Mode
toggle or use the keyboard shortcut
Shift

--- 🚧 The Dev Mode MCP Server is currently in ---
🚧 The Dev Mode MCP Server is currently in
open beta
. Some functions and settings may not yet be available. The feature may change and you may experience bugs or performance issues during the beta period.
Before you start
Who can use this feature
The Dev Mode MCP Server is in open beta.
Available on a
Dev or Full seat
on the
Professional, Organization, or Enterprise plans
You must use a code editor or application that supports MCP Servers (i.e. VS Code, Cursor, Windsurf, Claude Code)
You can only use the Dev Mode MCP server from the Figma desktop app.
Download the Figma desktop app →
The Dev Mode MCP Server brings Figma directly into your workflow by providing important design information and context to AI agents generating code from Figma design files.
MCP Servers are part of a standardized interface for AI agents to interact with data sources using the
Model Context Protocol
With the server enabled, you can:
Generate code from selected frames
Select a Figma frame and turn it into code. Great for product teams building new flows or iterating on app features.
Extract design context
Pull in variables, components, and layout data directly into your IDE. This is especially useful for design systems and component-based workflows.
Code smarter with Code Connect
Boost output quality by reusing your actual components. Code Connect keeps your generated code consistent with your codebase.
Learn more about Code Connect →
Step 1: Enable the MCP Server
Open the
Figma desktop app
and make sure you’ve updated to the latest version.
Create or open a Figma Design file.
In the upper-left corner, open the Figma menu.
Under
Preferences
, select
Enable Dev Mode MCP Server
You should see a confirmation message at the bottom of the screen letting you know the server is enabled and running.
The server runs locally at
http://127.0.0.1:3845/sse
. Keep this address handy for your configuration file in the next step.
Step 2: Set up your MCP client
Once the server is running locally on the Figma desktop app, MCP clients will be able to connect to your server. Follow the instructions for your specific client to add the Dev Mode MCP server.
VS Code
Cursor
Windsurf
Claude Code
Other editors
Go to
Code → Settings → Settings
or use the shortcut
⌘ ,
In the search bar, type “MCP”.
Select
Edit in settings.json
Add the following configuration:
"chat.mcp.discovery.enabled": true,
"mcp": {
"servers": {
"Figma Dev Mode MCP": {
"type": "sse",
"url": "http://127.0.0.1:3845/sse"
"chat.agent.enabled": true
Copy
Open the chat toolbar
⌥⌘B
and switch to
Agent
mode.
Open the
selection tool
menu and look for a section labeled:
MCP Server: Figma Dev Mode MCP
. If no tools are listed, restart the Figma desktop app and VS Code.
Note:
You must have
GitHub Copilot
enabled on your account to use MCP in VS Code.
For more information, see
VS Code’s official documentation
Open
Cursor → Settings → Cursor Settings
Go to the
MCP
tab.
Click
+ Add new global MCP server
Enter the following configuration and save:
"mcpServers": {
"Figma": {
"url": "http://127.0.0.1:3845/sse"
Copy
For more information, see
Cursor’s official documentation
Open
Windsurf → Settings → Windsurf Settings
or use the shortcut
⌘ ,
Navigate to
Cascade settings
and select
Open plugin store
Search for
Figma
and install the plugin.
Open
Cascade
and you should see the Figma MCP server and available tools.
For more information, see
Windsurf’s official documentation
Note:
For Windsurf, change the
url
property in the configuration file to
serverUrl
to avoid errors.
Open your terminal and run:
claude mcp add --transport sse figma-dev-mode-mcp-server http://127.0.0.1:3845/sse
Copy
Use the following commands to check MCP settings and manage servers:
List all configured servers
claude mcp list
Copy
Get details for a specific server
claude mcp get my-server
Copy
Remove a server
claude mcp remove my-server
Copy
For more information, see
Anthropic’s official documentation
Other code editors and tools that support SSE (Server-Sent Events) can also connect to the Dev Mode MCP server.
If you're using a different editor or tool, check its documentation to confirm it supports SSE-based communication. If it does, you can manually add the Dev Mode MCP server using this configuration:
"mcpServers": {
"Figma Dev Mode MCP": {
"url": "http://127.0.0.1:3845/sse"
Copy
Note:
The Dev Mode MCP server communicates over the SSE protocol. Use your editor’s steps for setting up an SSE-compatible MCP server, and use the URL:
http://localhost:3845/sse
Once configured, refresh or start the server. You should see a successful connection and the available tools. If the connection failed or you do not see any tools, double check that the server is active in the Figma desktop app.
Step 3: Prompt your MCP client
The Dev Mode MCP server introduces a set of tools that help LLMs translate designs in Figma. Once connected, you can prompt your MCP client to access a specific design node.
There are two ways to provide Figma design context to your AI client:
Selection-based
Select a frame or layer inside Figma using the desktop app.
Prompt your client to help you implement your current selection.
Link-based
Copy the link to a frame or layer in Figma.
Prompt your client to help you implement the design at the selected URL.
Note:
Your client won’t be able to navigate to the selected URL, but it will extract the node-id that is required for the MCP server to identify which object to return information about.
As you use the Dev Mode MCP server, you may see a popup inside Figma asking you for feedback. To give us feedback,
please use this form
MCP best practices
The quality of the generated code depends on several factors. Some controlled by you, and some by the tools you’re using. Here are some suggestions for clean, consistent output.
Structure your Figma file for better code
Provide the best context for your design intent, so the MCP and your AI assistant can generate code that’s clear, consistent, and aligned with your system.
Use components
for anything reused (buttons, cards, inputs, etc.)
Link components to your codebase
via Code Connect. This is the best way to get consistent component reuse in code. Without it, the model is guessing.
Use variables
for spacing, color, radius, and typography.
Name layers semantically
(e.g.
CardContainer
, not
Group 5
Use Auto layout
to communicate responsive intent.
Tip:
Resize the frame in Figma to check that it behaves as expected before generating code.
Use annotations and dev resources
to convey design intent that’s hard to capture from visuals alone, like how something should behave, align, or respond.
Write effective prompts to guide the AI
MCP gives your AI assistant structured Figma data, but your prompt drives the result. Good prompts can:
Align the result with your framework or styling system
Follow file structure and naming conventions
Add code to specific paths (e.g.
src/components/ui
Add or modify code in existing files instead of creating new ones
Follow specific layout systems (e.g. grid, flexbox, absolute)
Examples:
“Generate iOS SwiftUI code from this frame”
“Use Chakra UI for this layout”
“Use
src/components/ui
components”
“Add this to
src/components/marketing/PricingCard.tsx
“Use our
Stack
layout component”
Think of prompts like a brief to a teammate. Clear intent leads to better results.
Trigger specific tools when needed
The MCP supports different tools, and each one provides your AI assistant with a different kind of structured context. Sometimes, the assistant doesn’t automatically pick the right one, especially as more tools become available. If results are off, try being explicit in your prompt.
get_code
provides a structured
React + Tailwind
representation of your Figma selection. This is a starting point that your AI assistant can translate into any framework or code style, depending on your prompt.
get_variable_defs
extracts the variables and styles used in your selection (color, spacing, typography, etc). This helps the model reference your tokens directly in the generated code.
For example, if you’re getting raw code instead of tokens, try something like:
“Get the variable names and values used in this frame.”
Add custom rules
Set project-level guidance to keep output consistent—just like onboarding notes for a new developer. These are things like:
Preferred layout primitives
File organization
Naming patterns
What not to hardcode
You can provide this in whatever format your MCP client uses for instruction files.
Examples:
Cursor
Claude Code
General rules
---
description: Figma Dev Mode MCP rules
globs:
alwaysApply: true
---
- The Figma Dev Mode MCP Server provides an assets endpoint which can serve image and SVG assets
- IMPORTANT: If the Figma Dev Mode MCP Server returns a localhost source for an image or an SVG, use that image or SVG source directly
- IMPORTANT: DO NOT import/add new icon packages, all the assets should be in the Figma payload
- IMPORTANT: do NOT use or create placeholders if a localhost source is provided
Copy
# MCP Servers
## Figma Dev Mode MCP Rules
- The Figma Dev Mode MCP Server provides an assets endpoint which can serve image and SVG assets
- IMPORTANT: If the Figma Dev Mode MCP Server returns a localhost source for an image or an SVG, use that image or SVG source directly
- IMPORTANT: DO NOT import/add new icon packages, all the assets should be in the Figma payload
- IMPORTANT: do NOT use or create placeholders if a localhost source is provided
Copy
- IMPORTANT: Always use components from `/path_to_your_design_system` when possible
- Prioritize Figma fidelity to match designs exactly
- Avoid hardcoded values, use design tokens from Figma where available
- Follow WCAG requirements for accessibility
- Add component documentation
- Place UI components in `/path_to_your_design_system`; avoid inline styles unless truly necessary
Copy
Adding these once can dramatically reduce the need for repetitive prompting and ensures that teammates or agents consistently follow the same expectations.
Be sure to check your IDE or MCP client’s documentation for how to structure rules, and experiment to find what works best for your team. Clear, consistent guidance often leads to better, more reusable code with less back-and-forth.
Break down large selections
Break screens into smaller parts (like components or logical chunks) for faster, more reliable results.
Large selections can slow the tools down, cause errors, or result in incomplete responses, especially when there's too much context for the model to process. Instead:
Generate code for smaller sections or individual components (e.g. Card, Header, Sidebar)
If it feels slow or stuck, reduce your selection size
This helps keep the context manageable and results more predictable, both for you and for the model.
If something in the output doesn’t look quite right, it usually helps to revisit the basics: how the Figma file is structured, how the prompt is written, and what context is being sent. Following the best practices above can make a big difference, and often leads to more consistent, reusable code.

--- Who can use this feature ---
Who can use this feature
Available on
all paid plans
Note:
Figma’s AI features are currently free while
in beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
To make improvements to Figma's AI features over time, we will be training models that better understand design concepts and patterns, and Figma’s internal formats and structure through Figma content. Admins can control whether their teams use these features and whether they participate in content training.
Learn more about AI tools in Figma
How AI management works for admins
Admins have control over AI use and content training, which they can adjust with two new settings. Admins can turn these settings on or off at anytime. These settings control:
Access to AI features
For all paid plans: AI features are set to ‘on’ by default
Content training
For Professional, content training is set to ‘on’ by default — admins can opt out
For Organization and Enterprise, content training is set to ‘off’ by default
These are team-level settings for Professional plans and organization-level settings for Organization and Enterprise plans.
Our customer agreements with Organization and Enterprise are typically more complex and include specific requirements and restrictions, which is why we’ve chosen a different default setting for those plans. Additionally, these two new settings will default to ‘off’ for teams that turned off "Figma and FigJam AI" prior to June 26, 2024.
Adjust access to AI features across Figma
Note:
The
AI features
toggle applies to all AI features across Figma products, including
Figma Make
Separately, Figma Make has a toggle where admins can enable or disable Figma Make publishing.
Learn more about managing Figma Make publishing for an organization
Admins can adjust the AI features setting at any time and any changes are applied immediately. When the
AI features
toggle is off, users within that team or organization cannot access or use any AI features in any of the team or organization’s files. When it’s on, users can use AI features that they have access to.
Learn what AI features are available by product and plan →
Select your plan for detailed instructions:
Professional teams
Organization or Enterprise plan
Team admins can adjust access to AI features in the team’s settings.
From the
file browser
, open your team and click
Admin
in the left sidebar.
Open the
Settings
tab and scroll to
section.
Toggle
AI features
on or off.
When AI features are toggled on:
users with a full seat can use any AI feature, as long as they are in a file they can edit.
When AI features are toggled off:
users won’t be able to access AI features within the team. This won’t prevent them from using AI features in spaces outside the team.
Organization admins can adjust access to AI features in the organization’s admin settings. Workspace admins and team admins do not have access to this setting.
From the
file browser
, open your organization and click
Admin
in the left sidebar.
Open the
Settings
tab and scroll to
section.
Toggle
AI features
on or off.
When AI features are toggled on:
members with a full seat can use any AI feature, as long as they are in a file they can edit. Guests of an organization cannot use AI features, even if the toggle is on.
When AI features are toggled off:
members won’t be able to access AI features within the organization. This won’t prevent them from using AI features in spaces outside the organization.
Adjust AI content training settings
Admins have control of whether their team’s content data is used for training.
Learn more about Figma’s approach to AI →
Note:
If an admin turns off content training, new content and edits will not be used to train AI models.
Select your plan for detailed instructions:
Professional teams
Organization or Enterprise plan
By default, content training is turned
for Professional teams.
Admins of a Professional team can toggle off content training at any time in the team's settings. Content training does not affect access to AI features.
From the
file browser
, open your team and click
Admin
in the left sidebar.
Open the
Settings
tab and scroll to
section.
Toggle
Content training
on or off.
By default, content training is turned
off
on Organization and Enterprise plans.
Content training does not affect access to AI features.
From the
file browser
, open your organization and click
Admin
in the left sidebar.
Open the
Settings
tab and scroll to
section.
Toggle
Content training
on or off.
Data privacy and security
We know how important your data is to you, your company, and your clients. Our model development process is designed to protect your privacy and confidential information.
We take additional steps to train our models so that they learn general design patterns and Figma-specific concepts and tools—not your content, concepts, and ideas. For example, we de-identify content and redact sensitive information including from text and images.
You can learn more about how we protect your data
here.
Frequently asked questions
I'm a
Figma for Education
Figma for Government
account. What does this mean for me?
AI features and settings will not be enabled for users who are a part of an Education plan. If you have any questions, please contact
education@figma.com
Organizations using the
Figma for Government
solution will not have AI features or settings enabled.
Figma does not use
any data from Figma for Education or Figma for Government accounts to train AI models.
I turned off AI features prior to June 26, 2024. What happens to my settings?
Content training is ‘off’ by default for teams who turned off the “Figma and FigJam AI” setting prior to June 26, 2024, no matter the plan type. The AI features setting will remain off.
How does the content training setting work and what happens after I turn it off?
Content helps us build better, more useful experiences, but sharing it with Figma for AI training is optional. Admins can control whether or not content is used for AI model training with the content training setting. For Starter and Professional accounts, this is a team-level setting.
Content training went into effect on August 15, 2024. If an admin turns off content training after this date, new content and edits will not be used to train AI models.
What 3rd party models does Figma’s AI use?
We work with multiple vendors, such as OpenAI, to operationalize, build and fine-tune AI models, as well as process data to power Figma’s AI features. You can find the list of the sub-processors used to power AI features
here
Do you use content from my drafts to train AI models?
Drafts organized into teams are treated the same as other files in that team and will only be used to train AI models if content training is set to ‘on’. Content training is an admin setting. If you prefer that Figma not use content in your drafts to train AI models, please:
Turn off content training or ask your admin to do so
Move your drafts into a Starter or paid team where content training is set to ‘off’
How does Figma protect my privacy and confidential information?
We know how important your data is to you, your company, and your clients. Our model development process is designed to protect your privacy and confidential information.
For all customer data, we:
Encrypt all data at rest and in transit
Use security measures designed to protect against unauthorized access to customer data
Enforce tailored permissions and user access controls around who can view and access your data
When working with 3rd party companies to process data, we:
Do not permit 3rd party model providers to use data that customers upload or create on the Figma platform for training their own models
Limit how long vendors can store data. OpenAI and our other 3rd party model providers store data temporarily, or in some cases not at all, in order to process requests and enable AI features
We take additional steps to train our models so that they learn general design patterns and Figma-specific concepts and tools—not your content, concepts, and ideas. For example, we de-identify content and redact sensitive information including from text and images.
Read more about Figma’s security practices
here
Have another question?
Learn more about
Figma’s approach to AI →
Review our updated
AI Terms →
Read about
Figma’s Security →
If you have any other questions about AI settings, please
submit a request to our Support team
using the below form fields so we can best support you:
Under
Please choose your issue
, select
Data privacy and content training
Under
I need help with…
, select
Content training

--- Before you start ---
Before you start
Who can use this feature
Available on
any plan
Anyone with
can edit
access can create and edit vector networks
Vector networks are shape layers consisting of vector paths. These paths tell Figma how to render that shape on the canvas, including where to apply the layer’s stroke and fill properties.
Many vector tools only allow you to draw vector paths in a single direction, often ending at the original starting point. Vector networks are unique in that they don’t require a specific direction. They can have multiple paths that branch out in various directions without the need for creating and combining separate paths.
Use vector networks to create your own unique shapes, detailed
icons
, and even intricate
illustrations
. The Pen tool allows you to precisely create you own vector networks from scratch. Or you can use vector edit mode to modify any vector layer, including
basic shapes
and vector paths drawn with the
rush or Pencil tools
, to create a vector network. Learn more about
vector edit mode
Note:
This video uses Figma’s old interface. For examples of the new interface, see the content inside this article.
Create vector networks using the Pen tool
The Pen tool allows you to create vector networks with great prevision by placing points exactly where you want them on the canvas.
To use the Pen tool:
Select the
Pen
tool in the toolbar or press
Position the Pen tool where where you want the vector network to begin and click to add the first point.
Continue repositioning the Pen tool and clicking to add additional points and paths. To add curves to the path, click and drag your cursor to determine the length and slope of the curve. You can also use the
Bend
tool to create curved paths with bézier handles.
Complete the path by doing one of the following:
To close the path, position the Pen tool over another point in the vector network. A small circle appears next to the cursor, indicating that the path will be closed at that point. Click to close the path.
To leave the path open, press
Escape
to deselect the vector network.
Once created, you can use vector edit mode to continue to refine and modify the vector network. Learn more about
vector edit mode
Add caps to endpoints
You an add styling to the end point of any open paths. Figma displays the cap property differently depending upon the type of vector path you have selected.
Vector paths with two endpoints
Figma will display cap properties in the right sidebar if a vector path with only two endpoints is selected. You are able to set each end cap independently of the other.
Vector paths with more than two endpoints
Figma will display cap properties in the
advanced stroke menu
if a vector path with more than two endpoints is selected.
You cannot edit end caps independently when the entire vector path selected. To edit end caps independently, select a single vector point while in
vector edit mode
and adjust the cap type.
There are six different types of cap styles you can choose from:
None
: Adds no cap to the end of the path. The end of the path are squared off, without adding any length to the path.
Line arrow
: Adds two 45-degree lines to either side of the end point(s). This uses the same stroke weight as the path itself. You cannot change the length of the arrow head lines.
Triangle arrow
: Add a triangle arrowhead to both end points. You'll need to enter
vector edit mode
to apply an arrow to only one end of the path.
Reversed triangle:
A reversed or flipped version of the triangle arrow, with the arrow point facing inward toward the path.
Circle arrow:
A solid circle cap.
Diamond arrow:
A solid diamond cap.
Round (default)
: Adds a cap half the stroke weight, as well as rounding the end point of the path to 50% the width.
Square
: Adds a cap half the stroke weight, while squaring the end point of the path.

--- Matching objects are identical objects that exist across more than one frame. For example, many app designs use an identical header across the top of each frame. ---
Matching objects are identical objects that exist across more than one frame. For example, many app designs use an identical header across the top of each frame.
Use matching objects to save time when selecting, editing, and prototyping.
Matching objects are used with:
Smart animate
: Create advanced animations between matching objects when prototyping
Multi-edit
: Edit objects in bulk
State management
: When prototyping, share the state of interactive components, frames with scroll, and videos when navigating between frames with matching objects
Matching interactions
: Select and edit prototyping interactions on matching objects in bulk
In order for two objects to be considered matching, they must:
Match layer names
Match parent frames
Match layer hierarchy
Matching object requirements
Figma uses the following terms to help define matching object requirements:
Parent objects
: Objects such as frames, components, and groups, that contain other objects.
Grandparent objects
are objects that contain the parent object.
Ancestors
are any other objects in the hierarchy that contain child, parent, or grandparent objects.
Children
, or
child objects
: Objects that are contained within a parent.
Top-level frames
: Frames placed directly on the canvas. They do not have any parent objects.
Learn more about parent, child and sibling relationships.
Note:
Top-level frames can be matching objects, but only for
smart animate
state management
. You cannot use
multi-edit
select matching interactions
on top-level frames.
Objects in
sections
can only match with other objects within that section.
Layer names
Objects must have the same layer name.
There is one exception to this rule:
Text layers
Text layers don’t always require identical layer names. When you create a text layer, the name of the layer will reflect the content of the text itself. You have the option to rename the text layer.
If the text layers were explicitly
named or renamed from the Layers panel
, the names must match.
If the text layers were implicitly named based on the text content, their
text styles
must match. If there are multiple matching text objects, the best match will be selected based on the x and y coordinates of the text layer in the frame.
Parent frames
All parent and ancestor frames of the objects must have matching names. The names of top-level frames do not need to match.
Note:
Top-level frames and variant names in a component set do not need to match.
Layer hierarchy
In order to be considered matching, objects must have the same position in layer hierarchy across top-level frames. For example, an object that has a parent and grandparent layer in one frame must also have a parent and grandparent layer in the second frame.
Tip
When all requirements match, and there are two or more objects with the same name in a frame, the index of the object within the parent frame is used to determine which one matches.
Identify matching objects
To highlight matching objects on the same page:
Click to select an object.
Hold
Shift
to highlight all matching objects in light blue.
Alternatively, you can identify matching objects from the
Prototype
tab.
Open the
Prototype
tab in the right sidebar.
Hover over an object or layer in the canvas.
Figma will highlight the matching object in any other frames it exists in.

--- Who can use this feature ---
Who can use this feature
Supported on
any team or plan.
Anyone with
can view
access to a file can add and view comments.
Comments
takes collaboration to the next level. You can use comments to respond to feedback, tweak your designs and iterate faster—all from the original design file.
You and your team can
add comments
to the canvas or to specific frames and layers in files and prototypes. Figma displays comments right where you added them on the canvas.
View and reply to comments
from their location in the canvas, or from the right sidebar. To add or manage comments, click
in the toolbar or press
Note:
You can't edit layers or layer properties in the canvas when adding comments. Press
Esc
or select another tool in the toolbar to continue editing a file.
Edit comments
You can edit the content of any comment you've posted. This is handy if you've noticed a typo, want to add a clarification, or
mention a collaborator
Select the comment in the canvas, or from the right sidebar in comment mode.
Click
to open the comment menu.
Select the
Edit...
option to edit the content of your comment.
Click
Save
to apply your changes or
to exit and discard.
Change comment location
Comments can be pinned to a specific frame or layer, or specific co-ordinates on the canvas. This allows you to draw attention to a specific part of the canvas, whether this is a frame, object, or layer.
You can change where the comment is pinned. To move a comment:
Select the comment in the canvas, or from the right sidebar in comment mode.
Click on the comment pin in the canvas.
Drag the comment pin to its new location.
Move layers with comments
If you've pinned a comment to a specific layer, you may be able to move both the layer and its comments. Your method for moving the layer, and the layer's final destination, impact the comment's location.
Cut and paste
If you cut a layer or frame and paste this in a new location, Figma disconnects the comment from that layer. You can still view and respond to that comment from the right sidebar.
If the comment wasn't pinned to the layer, you can also access that comment from it's original co-ordinates on the canvas.
Figma won't move comments if you cut and paste layers between files. Any comments will remain as detached comments in the original file.
Move between pages
If you use the
Move to page
option to move a layer within a file, Figma also moves any comments. Right-click on the object and choose
Move to page
If the comment was linked to the canvas—not the layer or frame itself—Figma won't move the comment.
Duplicate files
If you duplicate a file, Figma won't copy comments to the new file. Comments are only kept on the original file.

--- Who can use this feature ---
Who can use this feature
Supported on
Education
Professional
, and
Organization
, plans
Anyone with
can edit
access to a file can insert components into a file.
New to components and libraries?
Guide to style and component libraries →
Components let you create and reuse elements of your designs to speed up the process and keep things consistent.
When building interfaces, we often switch between instances of these components for objects like icons, buttons, and cards.
The Instance menu lets you quickly search, preview, and swap one component for another. There are a few ways you replace or swap instances in Figma.
Want to swap instances in bulk?
Use the
Swap libraries
feature to replace instances in the current file with components from another library.
Swap libraries →
Note:
Figma will try to preserve any overrides when you select a different variant, or swap between instances in the Instance menu.
Learn more about override preservation →
Instance menu
The Instance menu allows you to find component replacements from the current file and any
libraries added to the file
When you have a component selected, access the Instance menu in the right sidebar.
Figma orders components in the Instance menu based on the component's
Name
and
Location
Related components are components that share the same hierarchy. This includes components in the same file, page, and frame.
For example: you can have a
file
containing your app's UI design system, a
page
for each operating system, and
frames
within each page where your components are grouped by type.
Figma also groups related components organized using the slash naming structure.
For example: Figma considers
UI/Button/Active
UI/Button/Hover
, and
UI/Button/Inactive
as related components.
Learn how to name and organize components →
To swap an instance using the
Instance
menu:
Select the instance you want to replace. Figma will display the name of the component in the right sidebar.
Click the name of the component to open the Instance menu.
Use the menu to navigate through components:
Select from the group of related components for your selection.
Use the
field to search a component by name.
Click
to switch between
libraries added to the file
Click
to navigate to a different group of components.
Use the
and
to switch between grid and list view.
Select an instance to replace the current selection.
Assets panel
The
Assets
panel in the left sidebar allows you to search for components to add to your file. You can find components from any libraries you have access to.
You can drag a component onto the canvas to create an instance of that component. If you use the modifier key while dragging a component from the Assets panel, you can replace the existing component.
Open the
Assets
panel and find the component.
Hold down the modifier key: If the component
isn't nested
within another frame or component
Mac
⌥ Option
Windows
Alt
If the component
is nested
within another Frame or component
Mac
⌥ Option
⌘ Command
Windows
Alt
Control
Drag the component above the instance you want to swap in the canvas.
Release the mouse, then release the modifier key. If you release the modifier key first, Figma will only add the new component, not replace.
Note:
Figma only preserves text overrides. To keep any changes you've made to text layers,
rename the layers
so they're unique. If you swap a component with other overrides applied, we won't apply these to the new component. Learn more about
overriding properties of an instance
Quick insert
Swap instances of components from your keyboard using quick insert. Quick insert opens the Resources modal where you can find and view components from libraries that have been added to the file. The components found in the Resources modal mirror what you see in the Assets panel.
Select the layer or instance you want to swap.
Use the shortcut
Shift
to open quick insert.
To locate a component, do one of the following:
Use the search field to find a specific component. U
se your mouse or arrow keys to navigate to the relevant component.
Use the
and
icons to switch between grid and list view.
Select from a library that's been added to the file. If a library is not displaying, you may need to add it first.
Manage libraries in design files →
Hold down
⌥ Option
(Mac) or
Ctrl
(Windows).
Right-click menu
You can also use the right-click menu to switch between related components. This will only allow you to select components in the same frame or hierarchy.
Right-click on the instance in the canvas.
Hover over the
Swap Instance
option.
Select an instance from the list of related components.

--- As Figma extends its feature set with variables, you might be wondering: What is the difference between variables and styles? When should I choose one over the other? Are styles becoming obsolete? ---
As Figma extends its feature set with variables, you might be wondering: What is the difference between variables and styles? When should I choose one over the other? Are styles becoming obsolete?
After all, they seem to function similarly on the surface:
Both act as sources of truths.
Both can be published to team libraries and reused throughout designs.
Both support efficient design system management because updates to a variable or style will prompt updates for all designs using them.
Styles and variables have key differences that make them valuable in different situations.
In this article, we’ll highlight their differences and help you decide whether to use on, or both, in your designs.
Foundational differences
There are a couple of key differences between styles and variables: the types of values they use, their appearance on canvas, and the use of modes.
Styles
can store a variety of properties:
A property with a single raw value, like a solid fill
#FFFFFF
A property with multiple raw values, like a color gradient
Other formats like blend modes, images, GIFs, videos
Styles are built to hold a combination of values, where all values get expressed all at once. For example, you can store font family, font size, and font weight properties in one text style simultaneously. When you apply the text style on a text layer, all properties will be used on the text layer at the same time.
In another example, let's take a look at color styles which can be a combination of different fill types and variables, and are organized in a top-to-bottom stack. A color style is like looking at a “stack” of cards from above, where each card is a fill. If the color at the top is transparent enough, you can see the color below it. You can also manually rearrange the fill to change what you see from the top.
Variables
can store single, raw values. For example, raw values can include solid fills like
#FFFFFF
, numbers like
-32.75
, and boolean values
true
and
false
Variables are built to hold one or more single, reusable values, but only one value can be expressed at a time. Each value corresponds to a different
variable mode
. This is true of all variable types. Unlike styles, a variable is like set of cards with where you can view only one card, and what card you get to see depends on its context.
For example, let’s say we have a collection of variables with light and dark modes. We apply them to various layers in a frame, and set the frame to dark mode. All layers with the variables will express the values from dark mode. If we switch the frame to light mode, the variables will switch their expressed values to light mode.
Even though modes are built for variables, Figma allows us to apply them to styles.
Say we have a number variable for a default font size. The variable has two single, raw values:
for a mobile mode and
for a desktop mode. We apply this variable to a text style’s font family property, as well as other variables and values to other properties.
Now, we can switch the mode on any text layer using this text style, because it uses a variable with multiple modes.
Learn how to back styles with variables.
Takeaways
A variable stores raw, reusable values. Styles stores a composite of different values.
If a variable has multiple values (i.e. modes), it can only express one value at a time. A style’s composite of values are expressed all at once.
If you want to create different contexts for your design elements (such as light and dark modes) you will need to use variables and variable modes.
Scalability and management
One of the most powerful ways of managing and scaling a design system is through aliasing tokens.
design token
is an industry term to refer to reusable values, meant to help design and code stay in sync.
Aliasing
is a method of organizing a design system by allowing any design token to inherit the value of another design token.
Variables allows you to do exactly this.
For example, let’s say the variable "brand-400" (which is one of our design tokens) has a value of
#EAEA00
. We want the variable "icon-default" (another design token) to be an alias of brand-400, meaning it will inherit whatever value brand-400 has.
If the value of brand-400 ever changes, then icon-default will follow suit, as long as it’s still bound to brand-400’s definition.
Styles don't support aliasing. In other words, they cannot be applied to variables and other styles. Variables can be applied to both.
Because variables support aliasing, it offers more robust support for complex, scalable token structures. They allow you to define primitive values that can flow through other tokens and elements of your design system. It also makes updating and managing design systems more efficient.
For example, let’s say we create a variable that acts as a global token, and we use it to define other variables at varying levels. If the global token changes, then everything downstream changes.
If we only want
some
tokens to change, this structure allows us to choose the correct token upstream and change it without having to manually rework everything downstream.
Aliasing is supported for all variable types. Learn how to
alias variables
Takeaways:
Variables can be applied to styles and other variables, but styles cannot be applied to either
Variables help scale a growing design system and make managing a design system more efficient
Supporting features
Scope variables
Scoping is fully supported for number variables but will be expanded to other variable types in the future.
Scope variables to limit which properties a variable can be applied to.
For example, you can limit a color variable to only stroke fills, so you wouldn’t be able to apply the variable to any other fill properties. This gives you better control over where it can be used and cuts out the guesswork when designing.
Learn how to scope variables.
Takeaways:
Since scoping is available to variables but not styles, use variables if you want to take advantage of scoping capabilities
Scoping is currently available for number variables and will expand to other types in the future
Prototype with variables
In prototyping, variables are used to store object states or properties. Prototype interactions are used to modify variable values, which can change the appearance, content, or visibility of objects in a design—all in a few simple frames.
Learn how to use variables in advanced prototypes.
Code syntax with variables
Code syntax is currently in development and will be available soon.
When you open a variable’s editing modal, you’ll see a section titled
Code syntax
. Code syntax represents variables in code using valid variable names. This information will appear in
Dev Mode
and will help designers and developers create a seamless handoff experience.
Learn more about code syntax.
Takeaway:
If you're looking to improve your handoff experience, you can take variables and code syntax into consideration
Final thoughts
Whether you choose to use variables or styles depends largely on your goals. You might focus solely on variables to take advantage of design token scalability. Or you might find that sticking to styles is suitable for your projects. Or you might end up using some combination of both!
Styles will remain ‌a key feature in Figma Design. Despite their similarities, variables are not a replacement for styles. Rather, they are additive to Figma’s core feature set.

--- Who can use this feature ---
Who can use this feature
Available on
any team or organization plan
Available in Figma Design, FigJam, and Figma Slides.
Anyone with
can edit
access to a file can add emoji and smart smart symbols to text layers.
Add emojis
You can add emoji to text layers, layers that support text, and comments. Figma uses the Apple emoji style.
Add emoji to any text layers by typing
followed by the emoji code. If you don’t know the name of an emoji, you can search by entering keywords like
:heart
:plus
You can also use your computer’s emoji picker or keyboard. Select your operating system for more instructions.
Apple (Mac)
Windows
Use the emoji picker to add emoji to text layers.
Create a text layer in the canvas.
Use the keyboard shortcut
Ctrl
Command
Space
to display the Emoji picker.
Type the name of your emoji in the field provided.
Select the emoji from the search results to add it to the text layer.
To add emoji, you first need to enable Microsoft's Touch Keyboard:
Right-click on the Windows task bar.
Click the
Show touch keyboard
button.
Now you can add emoji using the touch keyboard:
Create a text layer.
Click the Touch Keyboard icon.
Select the Emoji option.
Select the emoji you would like to use.
Add smart symbols
Enable
Use smart quotes/symbols
in Figma Design files to quickly convert characters to special symbols. For example, if you type characters like
and
next to each other with no spaces in between, Figma will convert the characters to
. This setting will also convert straight quotation marks like
" "
to curly ones
〝 〞
To enable this setting, open the Main menu from a Figma Design file and navigate to
Preferences
Use smart quotes/symbols
Here are some character combinations and their resulting smart symbols:
Characters
Result
(c)
(r)
(tm)
[ ]

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any plan
The number of modes you can create per collection
depends on your plan
Looking for more resources on variables? Check out our
guide to variables
Variables are raw values—like color, numbers, and strings—that can change in value depending on the context of a design, such as light and dark modes, or mobile and desktop modes.
Like styles and components, variables can also be published to team libraries. When you update the value of a variable, you can update designs across files accordingly. This helps to create consistent designs across projects and makes updating design systems more efficient.
Types of variables
There are four types of variables. Each one can be applied to specific properties and elements.
Variable type
Defined by
Color
Solid fills
Number
Number values
String
Text strings
Boolean
True, false values
Color variable
Color variables use solid color values, such as
#000000
#FFCD29
They are great for handling theming, such as Dark and Light modes. They can also help you organize your brand's color palette. If you have a complex design system and wish to implement design tokens, you can alias color variables to do so.
Color variables can be applied to:
Color styles
Fill colors
Gradient stops
Shadow effects
Stroke colors
Other color variables
Number variable
Number variables use number values such as
. You can use whole numbers or any decimal number up to the hundredth place, such as
12.75
They are great at handling responsive designs and varying text properties between different languages. You can also number variables inside text styles so that you have reusable pre-defined styles so you don’t have to memorize which property combinations go together.
Certain properties have a smaller range of numbers they support. Check the toggle below for details.
Number variables can be applied to:
Corner radius and individual corner radius
Dimensions, including minimum and maximum width/height
Font properties
Font size
Font weight (numbers only, e.g. 400, 700)
Line height
Letter spacing (interpreted as Px, not %)
Paragraph indent
Paragraph spacing
Layer opacity (numbers >100 will default to 100)
Layout guides
Uniform grid size
Row and column count (whole numbers only)
Width, height, margin, offset, and gutter
Padding and gap between
Shadow and blur effects
: X, Y, blur and spread values
Stroke weight
: all, top, bottom, left, and right
Text content
Text styles
Other number variables
String variable
String variables use a sequence of characters such as
Inter
Hello world!
, or
94102
. They're great for switching languages between different localized designs, combining with other variables to create text styles, and switching component variants in prototyping.
String variables can be applied to:
Font properties
Font family
Font style and weight (name only, e.g. regular, bold, black italic)
Layer visibility
, if the string has a value of “true” or “false”
Text content
Text styles
Variant instances in prototyping
Other string variables
Tip:
Be sure to use exact spelling when creating string variables for font family and font style or weight. However, Figma will recognize the value if it includes hyphens (-), underscores (_), different casings (DM Sans, dm sans), and with or without spaces.
Boolean variable
Boolean variables use
true
and
false
values. They are great for hiding and showing layers for specific contexts of your designs.
Boolean variables can be applied to:
Instances with variant property
with true and false values
Layer visibility
Tokens and aliasing
A variable can reference another variable. That is, you can apply a variable to another variable. Also called, "aliasing," this gives you the ability to implement design tokens.
Any variable can reference another variable of the same type. For example, color variables can reference other color variables. Text variables can reference other text variables. Learn how to
alias variables
Collections and groups
Both collections and groups are used to organize variables and make them easier to find.
A collection is a set of variables and modes. Collections can be used to organize related variables together. For example, use one collection to localize text in different languages, and another collection for spatial values.
You can further organize variables by adding them to groups within a collection. For example, use one group for colors used for text, and another for colors used on strokes.
Note:
You can create up to 5,000 variables per collection.
Variable modes
A mode is a list of values for a variable in a collection, storing one value per variable. Modes also represent the different contexts of our designs.
If a variable has multiple definitions, each definition is associated with a mode. When the variable is applied to a layer's property, the layer expresses the value based on the mode it's currently in, allowing us to quickly switch our designs between contexts.
For example, we might have a color variable storing two color values: a blue color under one mode, and a white color under a different mode. We apply this variable to a text layer, which will either appear as blue or white depending on the mode it’s in.
Here are a few ways you can use modes to switch contexts:
Different color themes, like light and dark modes
Different languages to see how copy flows in designs
Devices sizes to see how elements look with different spacing and padding
Learn how to
switch design contexts with variable modes
Considerations
Styles and variables
Both variables and styles act as a source of truth and can be reused throughout designs for efficiency and consistency.
When deciding whether to use a variable or style, keep in mind:
A style is great for creating a composite of values. Also, styles cannot be used in other styles or variables.
Variables can be used to create multiple modes—such as light and dark modes. Also, variables can be applied to styles and other variables, allowing the ability to implement design tokens.
Learn the difference between
styles and variables
Ready to continue your variables journey?
Learn how to
create and manage variables.

--- Who can use this feature ---
Who can use this feature
Available on the
Organization and Enterprise plans
Requires a
Full seat
Branches are controlled environments that allow you to explore changes to designs, prototypes, and libraries, without editing the original file.
You can submit branches for review and, once approved, merge your changes to apply them to your files.
One popular use case is for maintaining and contributing to style and component libraries. But you can use branching outside of designs systems too!
Share designs with collaborators and stakeholders
Prepare designs for developer handoff
Isolate experiments and usability tests
Explore use cases and best practices in our
Branching in Figma guide →
How branches work
Create branches
You and your team can create as many branches as you like. To create a branch, you need a Full seat and view or edit access to the main file.
Within the branch, you can safely explore changes and iterations, without disrupting anything or anyone in the main file. You can add, edit, or remove individual layers, components, or entire designs. Figma will keep track of all your changes.
Caution:
The
Allow viewers to copy, share, or export from the file
setting
must be enabled for viewers to create branches. If this is disabled, viewers will not see the option to create or edit branches.
From the main file, click the
next to the file name in left sidebar.
Select
Create branch...
from the options.
Give the branch a name. Figma will use this to identify the branch in the editor, including in the main file's version history.
Figma will create a new branch that is an exact replica of the main file in its current state. In the left sidebar, you will see the
File name
Branch name
You can now make any changes to your branch without affecting the main file.
Share branches
Branches are an extension of the main file. Anyone with access to the main file can access branches. Anyone you invite to a branch, gets access to the main file.
You can invite someone to a branch, or share the branch’s unique link.
Share branches →
Tip!
You can tell if a file link is for a main file or a branch as all branches will include a
/branch/
variable and a unique string for that branch.
Get updates from the main file
If you’re working with collaborators, it’s likely designs in the main file will change and evolve.
Figma will let you know if there are any updates available in the main file. You can then review any changes made in the main file and choose to apply them to your branch. This makes sure you're using the latest version of the designs.
It's not possible to pick and choose which changes you want to apply. You can choose to ignore these updates for now and resolve any conflicts when you merge instead.
Get updates from main files →
Request branch reviews
When you're finished making changes in your branch, you have the option to request a review. This allows other people to view your changes before they’re merged.
If you don’t have edit access to the main file, you need to request a review and allow someone who does to merge the branch.
If you have edit access and don’t require a review, you can skip straight to the merge process.
Request a branch review →
Review and approve branches
Reviewers can preview the branch changes alongside the main file. View what’s been added, edited, or removed by page and compare changes side-by-side, or as an overlay.
Reviews can do any of the following:
Approve changes
Approve and merge branch (people with edit access to the main file)
Suggest further changes
Review branch changes →
Merge branch to main file
When you're satisfied with your changes, you can
review and merge
your branch with the main file. You'll have the option to resolve any conflicts before applying changes from your branch to the main file.
If someone else has already reviewed and approved the changes, the merge process is a few clicks to complete.
Merge branch into main file →
View and manage branches
View all branches in the
Branches
modal. You'll see three tabs for
Active
and
Archived
branches, as well as branches you created (
Yours
). The Archived tab includes both merged and archived branches.
If you have can edit access to the main file, you can do the following from the
Branches
modal:
Open the branch
Copy a link to the branch
Merge or archive a branch
Rename the branch
Restore an archived branch
View and manage branches →
Note
: There are a few steps involved in receiving updates and merging changes. And while uncommon, it’s possible for something to go wrong at one of those steps.
There are a few things you can do if something doesn’t look right after a merge or update.
Incomplete merges or updates →
Things to note
Version history
View activity related to branching and merging in the file's version history. Figma will create checkpoints when you
create a branch
and
merge a branch
Figma will create an extra checkpoint in the file's version history before merging the file, this preserves a record of any other changes made to the main file before it was merged.
Everything that happened in the branch will be contained in that single checkpoint. You can view the detailed version history of a branch when viewing the branch itself.
Branch created
Updated from main
Branch merged
Comments
Comments from the main file don't appear in any branches
Comments do not count towards changes when checking for updates from the main file
Comments from the branch don't end up in the main file when you merge
Publish libraries
You can only publish to a library from the main file. If you've made changes in a branch that you want to share, you'll need to
merge the branch
before publishing.
Publish to the Community
You can only publish to the Community from the main file. If you want to publish the branch, you can duplicate it to create a new file that's separate from the main file.
In the left sidebar, click the
next to the file name.
Select
Duplicate as new file
from the options.
Figma will duplicate the branch and add it as a file to the existing location. The name of the file be
Main file name : branch name (Copy)
More branching resources

--- Before you start ---
Before you start
Who can use this feature
Available on
any team or organization plan
Anyone with
can edit
access to a file can create and edit text.
Text is a crucial component of interface design. In this article, we’ll cover how to create, edit, and style text in Figma Design. Learn more about using text in
FigJam
Figma Slides
Terminology
There are a few different terms we'll use to talk about text in Figma Design:
Text layers
: Any layers you create with the text tool.
Text contents
: The text content that goes inside of a text layer.
Type properties
: Any text-specific properties in the
Typography
section of the right sidebar. For example: font size, line height, OpenType features, and more.
Other text properties
: Other properties you can apply to text layers, that aren’t related to typography. For example: resizing behavior, fill, stroke, and effects.
Create text layers
Select the
text tool from the toolbar, or using the
keyboard shortcut.
There are two ways you can create a text layer. Click to create an automatically resizing text layer, or click-and-drag to create a text layer with fixed dimensions.
Click to create
Click and drag
Click on the canvas to create a new text layer. This will create a layer with
text resizing
set to
Auto width
. This allows the width of the text box to grow as you add more text. You may know this as point text or paragraph text.
Single click anywhere on the canvas.
Start typing to create a text layer.
Press
Enter
Return
to create a new line.
When the text tool is selected, click and drag on the canvas to create a new text layer.
This creates a layer with
text resizing
set to
Fixed size
. This allows you to enter longer strings of text and have them wrap and overflow on to a new line. This is also known as area text.
Click somewhere on the canvas.
Drag to create a Text layer with specific dimensions.
Type text on a path
You can create text layers that follow the path of a vector object, such as a shape or brush stroke. Use this to create text that flows along curves, circles, or other custom shapes.
To type text on a path:
Select the
Text
tool.
Hover your cursor over the path of a vector object until the text on a path icon appears.
Click to add a new text layer and start typing.
Note:
When you add text to a path, the vector object’s fill and effects are automatically transferred to the text layer. You can modify these properties at any time using the settings in the right sidebar.
As you type, the text layer will wrap around the chosen path. You can use the blue handle to determine where the text layer begins. To switch the text layer to the other side of the path, select
Flip text orientation
In the
Typography
section of the right sidebar.
Edit text content
Double-click on a text layer, or press
Enter
with a text layer selected to edit its contents.
Type directly in the field, or paste in your content. You can
check your spelling in the language of your choice
as you go. You can also add
emoji
icons
lists
, and
hyperlinks
to text.
If you’re writing across languages, you can
switch to bi-directional or right-to-left text
, or
use Noto fonts for text in Chinese, Japanese, and Korean
Note
: Once you're editing a text layer, you can update the contents of other text layers without having to double-click. With a text layer selected, click on another text layer to start editing its contents.
Multi-edit text
You can update the content of multiple text layers at the same time.
Select
the text layers you want to update.
Click
Multi-edit text
, or press
Enter
Return
Edit the contents. Any changes you make will apply to all text layers you have selected.
Select fonts
Browse, preview, and select fonts
in the
Typography
section of the right sidebar. There are three ways to use fonts in Figma Design:
Choose from Figma’s selection of free
Google Fonts
Use fonts that are installed on your computer
. Use the Figma desktop app, or
download the Figma font helper
if you are working in the browser.
Figma only supports .TTF and .OTF font files.
If you are on the Organization or Enterprise plan, you can
upload and share fonts
across teams and workspaces.
Caution
: If you are using fonts installed on your computer across teams and files, make sure you are all using the same version of the font. If you can’t edit text, get a missing font alert in some files, or notice text reformatting when editing, editors may be using different versions of the font. Learn how to
troubleshoot font issues
Edit type properties
Adjust any type properties—including font size and weight, spacing, alignment, formatting, and more—in the
Typography
section of the right sidebar.
Explore typography properties
Use OpenType features
Use variable fonts
Define a set of type properties as
text styles
to reuse them across your designs.
Adjust other properties
Adjust other properties of the text layer that aren’t specific to the text’s typography settings.
Layout:
Adjust the text layer's
dimensions and resizing behavior
Color
: Add color, gradients, and images to text using the layer’s
Fill
properties.
Stroke
: Add an outline around individual characters in a text layer using
Stroke
Want to adjust the background color of a text layer?
Applying a fill to a text layer will only update the color of the text. To add a fill behind text, you can add the text layer to a
frame
and update the
Fill
of the frame instead.
Troubleshooting
Running into issues with text? Check out these troubleshooting guides:
Add fonts to Figma Design
Fix the missing font alert in Figma Design
You can’t edit a text layer, but you can edit other layers in the file. This means
editors are using different versions of the same font
The text layer moves, reformats, or changes when you try to edit it. This means
editors are using different versions of the same font
Icon fonts show up as a text description when you select or edit the text layer. This means
editors are using different versions of the same font
Adobe fonts are missing in Figma Design
Uninstall the Figma font helper
Note:
Browsers and operating systems can render text differently, which can make designing across systems and platforms unpredictable.
To make sure your designs look consistent, regardless of browser or operating system, Figma uses custom text rendering.
This means there may be subtle differences between your designs in Figma and the final implementation.
More text resources
Convert text to vector paths
Kick start your typographic system
Introduction to Design Systems: Define your design system (Typography)

--- Before you start ---
Before you start
Who can use this feature
Anyone on any plan can create styles. To publish styles to libraries, you'll need to be on an
Education, Professional, Organization, or Enterprise plan
Anyone with
can edit
access to a file can create and edit styles.
Anyone with
can view
access to a published file can use styles from that library in files they can edit.
Styles allow you to define a set of properties or attributes and reuse them across your designs. You can create styles for colors, text, effects, and layout guides.
View styles
View styles available to you in this file from the style picker, or view styles that live in the file from the right sidebar when nothing is selected. Styles living in a file are do not include styles from other libraries that are in use.
To view styles from other published files, you can view them in the style picker for a selected property if the style's library is enabled. Learn more about
enabling libraries in a file
Right sidebar
Once you have created at least one style within a file, you can view a list of styles living in the file from the right sidebar:
From the file, navigate to the
Design
panel in the right sidebar.
Deselect everything on the canvas:
Click on an empty spot in the canvas
Press
Esc
to deselect your current selection
From there, view styles living in the file from the
Styles
section.
Style picker
View styles from the current file and styles from other libraries from the style picker.
Click the
styles icon next to the relevant property in the right sidebar. Figma will open the style picker which lets you to view any styles available for that property.
The default order for styles in the style panel is:
Alphabetically by team name
Alphabetically by file name
Individual styles are in the same order as they appear in the right sidebar
You can toggle between
list and
grid views.
Manage styles
To make changes to a style, you will need to edit the style definition in its original file. It's not possible to make changes to the style from another file.
Group styles
To make finding and selecting styles easier, you can organize your styles into groups. This can be done by using the
naming convention and by creating folders.
Group by folder
You can group styles by creating folders from the
Design
tab of the right sidebar. Folders will be reflected from the
Local styles
section of the right sidebar and in the style picker when you click
for a given property.
To create a folder:
Select one or more styles:
Press
Shift
and click to select a range styles
Press
⌘ Command
Control
and click to select multiple non-adjacent styles.
Right-click the selected style(s) and click
Add new folder
Name the new folder and press
Return
Enter
to save.
Once created, the styles in the folder will be renamed according to their new heirarchy within the styles list. For example, if we have a style
Brand / Fuchsia
that was moved to the
Blog
folder within the
Brand
folder, it'll be renamed to
Brand / Blog / Fuchsia
To delete a folder and the styles in it, right-click the folder name and select
Delete.
You can also move all styles to another location to keep the styles and delete the folder.
Group by name
Grouping styles using the slash naming convention involves adding a prefix to your style names so Figma groups them under the same heading.
In the example below, we use the slash naming convention to name and organize our styles:
Blog/color
Brand Style Guide/Color
Secondary/Color
Tip
Styles appear in the styles panel in the order they appear in the
Local styles
list. To change the order your styles appear, you can update by clicking and dragging them in the
Local styles
list from the file in which they were created.
Reorder and move styles
When you view the
Styles
section in the right sidebar, you can see every style in the current file, grouped by the style type: text, color, effect, and layout guides.
By default, Figma will show styles in the order they were added. To make them easier to find and navigate, you can change the order or folder in which they appear.
Select one or more styles:
Press and hold
Shift
and click to select a range styles.
Press and hold
⌘ Command
Control
and click to select multiple non-adjacent styles.
Drag the style to change the order or move them to a new folder.
Moving a style from one folder to another changes the name for the style to reflect its place in the hierarchy. For example, moving the color style
Brand Style Guide / blue
to the
Blog
folder will also change the style name to
Blog / blue
Note:
You can only adjust the order for styles that live in the current file you're in, Figma sorts styles in the style picker differently.
Edit styles
You can edit styles that live in the file from the right sidebar and from the style picker.
Right sidebar:
hover over the style, then click the
adjust
icon when it appears.
Style picker:
right-click on the style and select
Edit style
from the options.
View styles and their properties at the top of the
Edit style
panel.
View or update the
Name
of the style.
Add or update the style description, which displays when hovering over the style in the style picker.
View or make changes to any properties of the style.
Click on the
icon to hide or show the property on any objects the style is applied to
Click the
icon to remove the property from the style
Any changes you make to the style here will update any objects in the file that use this style.
Tip:
Access the original style when you view the style in the right sidebar. Right-click the style and select
Go to style definition
to open the file and edit the style there.
Copy and paste styles
You can copy existing styles from one file and paste them into another.
To copy and paste a style:
Click an empty spot on the canvas to de-select all layers.
Locate the style you wish to copy under the Styles section in the right sidebar.
Right-click the style and select
Copy style
from the dropdown menu, or use the keyboard shortcut:
Mac:
^Command
Windows:
Control
Open the destination file where you want to paste your style.
Right-click the canvas and select
Paste here
, or use the keyboard shortcut:
Mac:
^Command
Windows:
Control
Your pasted style will appear at the bottom of the Styles list in the destination file.
Move styles between files
Warning:
Before attempting to move styles between files, keep in mind that the only way to reverse the action is to repeat the entire process. It's not possible to reverse this action by using the undo keyboard shortcut or by restoring the file to a previous version.
To move styles between files:
Open the library file where the styles currently live. This is the source file.
Select styles or style folders:
Hold
Shift
and click to select a range of styles.
Hold
⌘ Command
Control
and click to select multiple non-adjacent styles.
Right-click the selected styles >
Cut styles
to add them to your clipboard. You can also use the shortcut:
Mac:
⌘ Command
Windows:
Control
Open the file you want to move the styles to. This is the destination file.
Right-click on the canvas >
Paste here
to paste the styles into the file. You can also use the shortcut:
Mac:
⌘ Command
Windows:
Ctrl
Publish library changes
When you move published styles between files, Figma prompts you to publish your changes to any affected libraries.
You must publish these changes to complete the move process. Figma pushes updates to all subscribed files when you publish your changes.
Click
Publish
in the notification window, or use the shortcut to open the library modal:
Mac:
⌥ Option
Windows:
Alt
Add a description of your changes. Figma shows this in the file’s version history.
Click
Publish.
Figma pushes updates to any file that uses those styles. You'll see the usual bell notification and a prompt to receive updates from the library. Learn how to
review and accept updates from libraries
Reverse or undo a style move
It's not possible to undo the action of moving styles using any of these methods:
❌ Using the undo keyboard shortcut
❌ Restoring an earlier version of either file
To reverse a style move, we recommend repeating the method outlined in the previous sections to move the style back to its original file. Be sure to publish and accept the changes afterwards.
Duplicate styles
To save time when creating styles for your design system, you can duplicate existing styles instead of creating new ones each time.
To duplicate a style:
Click an empty spot on the canvas to de-select all layers.
Locate the style you plan to duplicate under the Styles section in the right sidebar.
Right-click the style and select
Duplicate style
from the dropdown menu.
The duplicated style will appear in the Styles list directly below your selection.
Delete styles
If you would like to remove one or more styles, you can do this directly from the panel.
Select one or more styles:
Press and hold
Shift
and click to select a range styles.
Press and hold
⌘ Command
Control
and click to select multiple non-adjacent styles.
Select
Delete style
from the options.
Figma will remove the style and you will no longer be able to use it. Any objects using that style will keep their properties, but are detached from the style.
Share styles
To access your styles in other files and projects, you can publish them to a
team library
. You can publish styles on their own, or alongside any components.
Note:
Publishing assets—styles, components, and variables—to team libraries is available on
paid plans
Publish styles to a library
Open the
Assets
panel in the left sidebar and click the
Library
icon. Or, use the keyboard shortcuts:
Mac:
⌥ Option
Windows:
Alt
In the
This file
section, click
Publish
next to the file name.
Add a
description
of the changes you've made to the file. Figma will include your description in the
version history
of the file.
Click
Publish
to share them as a library.
When you publish changes to a library, Figma will prompt anyone using this library to receive updates. This makes sure any layers that use these styles use the most recent version.
Use styles from a library
When you enable a library for a file, anyone with
can edit
access to that file can access those styles and components.
View any style from that library in the style picker.
View any styles from that library as a separate palette in the color picker.
Use any styles that are shared with you. Learn how to
apply styles
Edit styles from files you have
can edit
access to.

--- Who can use this feature ---
Who can use this feature
Available on
any plan
When you're getting into a state of flow, the line between tool and designer blurs, giving you the freedom to explore the problems you're trying to solve. To save you from any unnecessary clicking and scrolling, we've put some handy keyboard shortcuts at your fingertips.
Note:
It's currently not possible to create custom keyboard shortcuts. This is something to consider if you have applications with conflicting shortcuts. For example: a shortcut to open your password manager.
Keyboard shortcuts
You have access to a range of keyboard shortcuts in Figma Design and FigJam files.
View shortcuts panel
Open the keyboard shortcuts panel to view a selection of shortcuts. You can see which shortcuts you've already used, or discover new ways to speed up your workflow.
There are two ways to open the shortcuts panel:
Click
Help and resources
in the bottom-right and select
Keyboard shortcuts
Use the keyboard shortcut:
Mac:
Control
Shift
Windows:
Ctrl
Shift
Figma will open the shortcuts panel along the bottom of your screen. Use the tabs at the top of the panel to explore shortcuts related to each set of actions. To
view your current keyboard layout or select another one
, select the
Layout
tab.
You can continue to use in Figma while viewing the keyboard shortcuts panel. Try out a new shortcut and watch the panel update.
Click
to close the panel.
Figma Design
FigJam
Shortcuts you've already used are shown in
blue
, shortcuts you haven’t are shown in
white
Shortcuts you've already used are shown in
purple
, shortcuts you haven’t are shown in
white
Note:
Figma shows shortcuts based on your device. On some devices you’ll see a key’s symbol instead of the full name. Hover over the symbol to see the full expression.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all plans
Requires
can edit
access to a file
Groups
and
frames
allow you to combine layers together so that they can be treated like a single layer.
Groups
By default, groups take on the combined dimensions of their children.
To make a group, select some layers and choose “Group”, or use:
Mac:
Command
Windows:
Control
The first time you click on a layer in this group, the entire group will be selected.
To select a single layer within this group, double-click the item, or choose it from the layers panel.
As the layers within a group are moved around, the bounds of the group will adjust to fit the layers within.
You can move things into and out of this group by dragging layers within the layers panel.
You are allowed to nest groups inside other groups.
To un-group, select the group and choose “Ungroup”, or use:
Mac:
Shift
Command
Command
Delete
Windows:
Shift
Control
Control
Backspace
Frames
Sometimes, it is useful to have a layer whose size is explicitly set by you. These are called Frames.
To make a frame, choose the Frame Tool
and drag out an area of the screen, or use:
Mac:
Command
Option
Windows:
Control
Alt
To add layers to this group, just drag them in.
To remove layers from this group, just drag them out.
Selecting and moving items within a Frame works exactly the same way as groups.
To un-group, select the group and choose “Ungroup”, or use:
Mac:
Shift
Command
Command
Delete
Windows:
Shift
Control
Control
Backspace
Frames are drawn directly on the canvas and we draw them in a special way to make them easier to see and work with.

--- Who can use this feature ---
Who can use this feature
Users on
any
plan
can create Components. Users on a Starter team can't publish Components to a Library.
Users with can
edit
access to a file can create and edit components.
Users with
can view
access to a file can use components from a
library
, if they have access to it.
You can create a component out of any collection of objects or layers. Components can be as simple as shapes, buttons or fields, or more complex design like cards and menus.
Tip!
As you create components and build out your design system, you'll find the need for components that are similar to each other, with only slight differences.
Variants allow you to group and organize similar components into a single container. This simplifies your component library and makes it easier for everyone to find what they need.
Learn how to create and use variants →
Create a component
You can create a single component out of selection of layers. Or, create individual components in bulk from a selection of objects.
Create a single component
There are a few ways to create a component. First, you'll need to select the layers you'd like to include in the component.
Select the layers you’d like to be included in the component.
You then have a few different methods for create a component:
Click the
next to the selection's name in the properties panel >
Create component.
Right-click on your selection and choose
Create component
Use the keyboard shortcuts:
Mac
⌥ Option
⌘ Command
Windows
Ctrl
Alt
Figma will nest the layers within a special component frame
Identify components in the
Layers
panel using the purple
icon.
the right sidebar, click
Component configuration
next to the component name to add a
Description
and
Documentation link
for collaborators.
Collaborators and developers can view
descriptions and documentation in various places
Tip!
Figma will create a custom button if you add a link from any of the following domains:
Github
Notion
Storybook
Zeroheight
Confluence
Dropbox Paper
Create components in bulk
By default, the
Create component
action will create a single component from your selection.
You can also create components in bulk. This allows you to select multiple groups or frames and create components out of them. Create multiple components from:
Objects and layers in frames
Objects and layers in groups
Single layers, like a path or vector network
Layers in a boolean operation
Note:
If you select more than one layer that isn't on one of the above configurations, Figma will create a component for each individual layer.
Select the layers you want to create components from,
Click
next to the selection's name in the properties panel.
Select
Create Multiple components
from the options.
Figma will create a component for each frame, group, boolean operation, or path.
Tip!
You can hand off components for development without reorganizing your file.
Create a section for your component
. Then,
mark the section as
Ready for dev
Delete a component
You can delete a component at any time.
Deleting a main component does not remove instances of that component from your files.
Select the component you want to delete.
Press
delete
Restore a component
If you have an existing instance of a deleted component, you can use that instance to restore the component.
Learn more about instances →
There are a few ways to restore a component from an instance:
From the right sidebar
Select an existing instance of the deleted component.
Do one of the following to restore the component:
If you are in the library file that contained the main component, click the
Restore Component
button from the properties panel in the right sidebar.
If you are in a file that did not contain the main component, click the
Go to main component in library
icon. Then click the
Restore
button in the dialog window.
From the right-click menu
Right-click on the instance in the canvas.
Do one of the following to restore the component:
If you are in the library file that contained the main component, hover over the
Main component
option and click
Restore main component
If you are in a file that did not contain the main component, click
Go to main component
. Then click the
Restore
button in the dialog window.

--- Note: ---
Note:
Figma’s AI features are currently free while in
beta
, but usage limits may apply. When made generally available, Figma AI will become a paid feature. We’ll update you on pricing before that happens.
Before you start
Who can use this feature
Available in Figma Design and Figma Sites
Available on
paid plans
Requires
can edit
file access
Learn more about who can access AI features in Figma
With Figma AI, you can generate and populate realistic text in your designs. This allows you to save time populating placeholder content for repetitive elements like lists, posts, cards, and tables.
Note:
This article is about the
Replace content
feature. For information on other text-related AI features, check out the
Rewrite, translate, and shorten text
article.
How it works
Replace content uses AI to replace placeholder text with realistic text content. You can replace content on a single item, or on multiple duplicate items.
For example, let’s say you’re designing a professional networking app and have a card with text layers for a person’s name, title, and bio. Use
Replace content
to replace the filler text (”name”, “title”) with real examples (”Jules”, “Product Designer”).
Note:
You can’t use
Replace content
to generate or replace placeholder images for content. To generate images using Figma AI, use
Make image
instead.
Use Replace content
To use
Replace content
in Figma Design or Figma Sites:
Select one or multiple objects with text.
From the
Actions
menu, select
Replace content
Enter a prompt to provide additional context.
Click
Replace content
Tip:
If you duplicate a layer with with placeholder text multiple times, a banner will pop up with a suggestion to use
Replace content
in the duplicated layers, updating the placeholder text to realistic examples.

--- Accessible prototypes in Figma allow you to navigate through content using a screen reader. To use accessibility mode in a prototype, you’ll first need to install a supported screen reader. ---
Accessible prototypes in Figma allow you to navigate through content using a screen reader. To use accessibility mode in a prototype, you’ll first need to install a supported screen reader.
Accessible prototypes are only available in the desktop browser and on the Figma desktop app. Accessibility mode does not work for mobile or mobile web prototypes.
View a list of supported browsers →
Supported screen readers
Mac
VoiceOver:
View the VoiceOver user guide for macOS
Windows
JAWS (Job Access With Speech):
View Freedom Scientific's JAWS documentation
NVDA (NonVisual Desktop Access):
View the NV Access NVDA user guide
Activate accessibility mode
After a screen reader is installed and enabled, you can activate accessibility mode in a Figma prototype a few different ways:
Keyboard controls
Press
Tab
to focus on the hidden
Skip to content
button. This button is the first interactive item on the page.
Press
Enter
to turn on accessibility mode for the current prototyping session.
A self-dismissing message that reads “Now adapting content for screen readers” displays at the bottom of the page. If enabled, your screen reader will also verbalize this message.
Note:
The
Skip to content
button is also available in screen reader menus, such as VoiceOver’s Form Controls rotor.
Accessibility settings
Select
Options
Accessibility settings
in the toolbar.
Toggle
Adapt content for screen readers
to turn accessibility mode off.
Deactivate accessibility mode
To deactivate accessibility mode:
Select
Options
Accessibility settings
in the toolbar.
Select
Adapt content for screen readers
to turn accessibility mode off.
Figma Design to HTML mapping
While in accessibility mode, Figma Design elements are translated to HTML or HyperText Markup Language. Screen readers interpret HTML tags to understand the content and sections of a document, as well as which elements are available for a user to interact with on a page. Semantic HTML tags also allow a screen reader to communicate content that may be highlighted visually to a user.
When considering how your Figma Design elements translate to HTML:
The prototype actions
Navigate to
and
Open link
are seen by screen readers as links; all other actions are seen by screen readers as buttons
Any element in a prototype with an
On click
interaction is seen by the screen reader as an accessible button or link, depending on its triggered action
The screen reader navigates through links and lists within design text
Ordered and unordered lists are read as structured and nested lists
Inline links are seen by screen readers as accessible links
Any shapes with an image fill appear as an image and have their alt text populated with the layer’s name
Top-level frames, components, and component instances become labelled sections using layer names as the accessible label
Using
Tab
to navigate follows the layer order of your prototype. If your content isn't read in the order you expect, open the Figma Design file and
change the layer order in the left sidebar
. For frames with auto layout, navigation follows the order of the layout—either top to bottom or left to right.
To learn more about accessible prototypes in Figma, check out
this playground file
and try it out yourself!

--- Before you Start ---
Before you Start
Who can use this feature
Available on
all plans
Anyone with
can view
can edit
access to a file can select objects in the canvas or the Layers panel
Anyone with
can edit
access to a file can can select matching layers
Before you can update any properties associated with an object or layer, you will need to select it. We'll cover all the basics for selecting objects, as well as some lesser-known tips and tricks.
Select individual layers
You can select layers in the canvas itself, or from the Layers panel. Click on an object in the canvas to select it.
Select nested layers
If you're working on more complex designs, you may have objects nested within groups or frames.
We refer to nested objects as
children
, and the frames or groups that they nest within as
parents
. Learn more about
parent, child and sibling relationships
When you click on an object that is part of a group or frame, we'll select the parent by default.
Double-click
on the object - or press the
enter
key - to select one level of nesting down. Repeat this process until you select the correct child elements.
Deep select
If there are many levels of nesting, you can use
deep select
to select a nested child layer or the top-level frame. Hold down the modifier key to select the top-level frame or a nested layer or object by clicking it on the canvas.
Mac:
⌘ Command
Windows:
Control
Select layer menu
There are a couple of different ways to select nested objects. The
Select Layer menu
allows you to choose which specific layer you'd like to select on the canvas.
Right-click to open the context menu.
Hover over the
Select layer
option.
Select a layer from a list of layers underneath the cursor's location. We show the layer name and icon in the same order as the Layers panel.
Tip:
Move between nested objects using the keyboard shortcuts:
Select Child
enter
Select Parent
shift
enter
Select Next Sibling
tab
Select Previous Sibling
shift
tab
Layers panel
Every object in the canvas has a corresponding layer in the Layers panel.
Click the
Layers
tab in the left sidebar to open the layers panel. Or, use the keyboard shortcut:
Mac:
Option
Windows:
Ctrl
If you hover over the layer in the panel, a blue box will highlight that layer's location on the canvas.
Click on the layer name in the layers panel to select it.
If there are any frames or groups on the canvas, we will nest the child objects within the parent. Click the arrow next to a frame, group, or component to view any child layers.
Can't see the layer highlight on hover?
Adjust your preferences in the menu: select
Preferences > Highlight on hover
Select multiple layers
You can also select more than one object or layer at a time.
This is great when you want to:
Update a property across more than one layer
Resize layers in bulk
Move a collection of objects
Create a group, frame, or component from the selection
Note:
When you select more than one layer, you can access
Selection Colors
in the right sidebar.
This allows you to update individual Fills, Styles and Strokes in a mixed selection. Learn more in our
View and adjust colors in a mixed selection
article.
Canvas
Select an object in the canvas.
Hold
Shift
and click on another object.
This will allow you to select as many objects as you like.
Tip:
Click an object a second time while holding
Shift
to remove it from from the current selection.
Selection marquee
The marquee tool allows you to select all objects in a specific area of the canvas.
Click and hold on an empty part of the canvas.
Drag the cursor across any objects you'd like to select.
A blue box will appear around each object are in the selection.
To select nested layers, hold down the modifier key and drag the marquee across the objects:
Mac:
Windows:
Ctrl
To remove an object from the selection, hold down the
Shift
key and click on the object.
Note:
It's possible to select nested objects without selecting the parent object. This is something to be mindful of, especially when selecting objects to move them!
If you select a top-level frame, only other top-level layers will be selected.
When you select a parent object, this also selects any child objects. This allows you to move everything at once.
Select multiple layers in the Layers panel
When you select layers in the Layers panel, there are some different rules:
To select
every layer between two layers
Click on the first layer to select
Hold
Shift
Select the last layer.
Figma will select every layer between those two layers in the Layers panel.
To select
individual layers
Click on the first layer to select
Hold down the modifier key
Mac:
Windows:
Ctrl
Select any other layers you want to select
Select matching objects
Matching objects are identical layers that exist across more than one frame or group.
You can select all matching objects at once to save time when editing or prototyping them. For example, many app designs use a search bar across the top of each frame. You can quickly select them and make edits to them at the same time.
Learn how to identify matching objects →
To select matching objects:
Select an object inside a frame or group. The frame or group should sit a the top-level on the canvas or inside a section.
Select matching layers using one of the following:
Click
Select matching layers
in the toolbar.
Keyboard shortcut:
Mac:
⌥ Option
⌘ Command
Windows:
Alt
⌃ Control
While pressing
⇧ Shift
, click and hold your cursor on the canvas and drag it over the matching frames to create a selection marquee. Only matching objects are added or removed from the selection.
While pressing
⇧ Shift
, click matching objects to add them to the selection. You won't need to double-click objects nested deep inside other groups or frames.
All selected objects are wrapped in a blue bounding box. You can then make edits to them all at once.
Learn how to edit objects in bulk →
Note:
Objects with sections can only match with other objects in that section.
Select all layers
The
Edit
menu lets you select multiple objects based on their properties. This allows you to select all layers in your file that have the same properties.
This is helpful when you want to adjust the properties of all those layers at once.
Select a layer or layers in the
Layers panel.
Go to the
File menu
and select
Edit
from the options.
Choose to
Select All
other layers that have the same:
Properties
Fill
Stroke
Effect
Text Properties
Font
or another Instance
Want to select everything on the canvas?
Use the keyboard shortcut
⌘ Command
Ctrl
Collapse all layers
When you expand a layer to reveal its nested layers,
Collapse layers
appears in the top right corner of the Layers panel. Click
to collapse all expanded layers.
If you've already selected a layer when you collapse layers, all expanded layers except for your selection will collapse.
Locked and hidden layers
If you hide a layer we won't show it in the
Select layer
menu. You will need to
toggle visibility on
to select it.
If you lock an object or layer, you can't select it via the normal left-click selection process. However, you can select it via the
Select layer
menu.
We include
locked layers
in the
Select layer
menu with a padlock icon.
Tip:
Smart Selection
allows you to select two or more objects in the canvas. From there you can adjust their arrangement, or the spacing between them.
Create a 1D Smart Selection from a list of objects that align on one axis, like a column or row. Or, a 2D Smart Selection of objects in a grid or gallery-like structure.
Deselect objects or layers
To clear your selection entirely:
Click anywhere on the canvas
Use the keyboard shortcut:
Esc
To remove an object from a selection:
Hold down the
Shift
key and click on the object again
Note:
If you click on a parent object, this will deselect the parent and any child objects within it.
To select the inverse of your current selection:
Use the keyboard shortcut:
Mac:
Shift
Windows:
Ctrl
Shift
This removes the current selection, then selects everything on the canvas you didn't select before.
Select objects in view-only mode
For collaborators with
can view
access, the experience of selecting objects is a bit different.
When you make your selection on the canvas, Figma will:
Outline your selection using a solid purple box.
Outline the parent of your current selection using a dashed purple box.
Show the name of the selected layer(s) at the top of the
Properties
panel in the right sidebar.
If applicable, show the
Parent Component
underneath the selected layer in the
Properies
panel. Click the
in the
Properties
panel to select the parent component.
Show the
properties
layout
, and
colors
for the selected layer.

--- Before you Start ---
Before you Start
Who can use this feature
Available on
any team or plan
Anyone with
can edit
access can paste assets into a design file
Anyone with
can view
access to a file can copy and export assets unless copying and sharing has been restricted by the file owner. Learn how to
restrict copying and sharing on a file →
If your workflow requires the use of multiple design tools, it’s helpful to know how to quickly move assets between tools.
Because SVG is a lossless format, we recommend importing and exporting assets as SVGs when moving content between design tools.
Paste assets into Figma from other tools
You can quickly import assets from other design tools by copying and pasting them directly into a Figma Design file. Learn more about
importing content into Figma →
To paste assets into a Figma Design file:
Open the tool you want to select your asset from.
Copy the asset to your clipboard as an SVG.
In the desired Figma Design file, right-click the canvas and select
Paste here
to paste the asset.
Note:
SVG marker and pattern elements will not be included in the import.
Copy assets from Figma to other tools
You can quickly export assets from Figma by copying them as SVGs and pasting them into a different design tool. Learn more about
exporting content from Figma →
To copy assets from a Figma Design file:
In Figma, select the object you want to copy.
Right-click on the selected object, go to
Copy/Paste as
, and select
Copy as SVG
to copy it to your clipboard.
Paste the asset into the desired tool.
You also can use the following integrations to quickly bring your files into other tools:
Zeplin and Figma
Principle and Figma

--- Before you start ---
Before you start
Who can use this feature
Available on
all plans
Users with
can edit
to a file can use layout guides and constraints
Note
: The Figma feature "layout grid" has been renamed to "layout guide" as of May 2025, and is a different feature from the
grid option in auto layout
Constraints
allow you to define how objects react when you resize their parent frame.
Constraints
can control both an object's relative position and size.
Layout guides
are visual aids that help you align objects within frames. When you use a
layout guide
within a frame, Figma aligns objects in that frame to the guide.
You can combine layout guides with constraints to create powerful and flexible layouts. This gives you more granular control over how objects respond as you resize them.
Layout guides can have
fixed
dimensions or
stretch
as you resize the frame. The type of layout guide will determine whether Figma prioritizes the guide or any constraints.
In our example below, we have applied
center
constraints to the plus icon in our cards. We can see how Figma determines that object's position, depending on the type of layout guide we use.
Stretch layout guide
If your guide is set to
Stretch
, Figma will base an object’s constraints on the guide's nearest column or row.
Stretch
layout guides adapt to the size of the frame. This allows your designs to respond when you resize the frame. Figma will set the
width
and
height
of the guide so that it corresponds to the frame size.
When you use stretch, Figma takes into account the object's constraints, relative to the layout guide.
In our example below, the cards in our design uses a stretch layout guide. Our left screen uses the frame preset for the iPhone 11 Pro, and the right uses the iPad Pro 11".
We can see that Figma has stretched the layout guide to match the card's new dimensions. We can also see that the plus icon is still in the center of the right guide column.
Fixed layout guide
Fixed
layout guides let you choose how many columns and rows are in your guide. You can then define both the
width
of the columns and the
height
of the rows.
You can then fix the position of a fixed layout guide in the parent frame:
Row:
Fix the guide to the
top
center
of the frame.
Column:
Fix the guide to the
left
or the
center
of the frame.
When you use a fixed layout guide, Figma will honor constraints in relation to the frame and not the guide.
In our example below, the cards in our design use a fixed layout guide. Our left screen uses the frame preset for the iPhone 11 Pro, and the right uses the iPad Pro 11".
Our plus icon uses
center
constraints. We can see that Figma has set the object's position in relation to the frame and not the layout guide.
Tip
: You can nest frames within other frames for even greater control. This allows you to define different behavior between Frames or objects.
If you’re familiar with HTML, this works like a
<div>
element works in a webpage. Learn more about
Grid Systems for screen design

--- Before you start ---
Before you start
Who can use this feature
Creating styles is available on
all plans
can create styles. Publishing styles is available on Education, Professional, Organization, and Enterprise plans.
Anyone with
can edit
access to a file can create and edit styles.
Anyone with
can view
access to a published file can use styles from that library in files where they can edit.
Styles allow you to define a set of properties of an object, that can be reused across your designs.
Create styles for:
Text
: font family, size, line height, spacing
Text styles can be applied to an entire layer or portions of text. This is perfect for defining the styles of headers, body text, and text within paragraphs—such as linked text.
Because text styles can’t be created for text alignment, you must set alignment for each block individually.
Colors
: fill, stroke, image, gradient
When creating a style for a gradient, both the colors used and the gradient direction, or angle, will be saved to the style.
Effects
: drop shadow, inner shadow, layer blur, background blur
A style can include more than one effect and all applied properties will be saved to the style.
Shadow styles are represented as icons in the
Effects
section of the right sidebar and vary according to their direction. These icons can also vary between drop or inner shadows and their x, y values.
Layout guides for frames
: row, column, uniform grid
This is useful for replicating a specific format or structure across multiple designs.
Guide styles are represented as icons in the
Layout guides
section of the right sidebar and vary according to type:
Uniform g
rid, Columns,
Rows
. Learn more about
layout guides
From local styles
Local styles are style definitions that exist in the current file. You can access local styles in the right sidebar when nothing is selected, or from the style picker. Styles are grouped by type:
Text
Color
Effect
Layout guide
To create a new local style:
In the right sidebar, click
next to
Local styles.
Select the property you’d like to create a new style for.
Give the style a name and description and click
Create style
. Descriptions display when hovering over the style in the style picker.
From an existing object
Select the object or frame you’d like to create a style for.
In the right sidebar, click
next to the section corresponding to the style you want to create.
Click
in the style picker. In the
Create new style
modal, you can click
Show more options
to view and edit style properties.
Give your style a name and description and click
Create style
. Descriptions display when hovering over the style in the style picker.
Tip!
You can give Styles both a name and a description. We recommend using the name and description to communicate how Styles should be used in your designs, versus simply using a description of the color.
To make finding and selecting styles easier, you can also organize your styles into folders. Learn more about
naming, managing, and sharing styles
Tip:
If you are using Figma’s new design, UI3, then you can create a new style using the
eyedropper tool

--- Before you Start ---
Before you Start
Who can use this feature
Supported on
any team or plan
Anyone with
can edit
access can toggle layer visibility off and on.
You can toggle a layer's visibility in the
Layers
panel. You can still change the position, or adjust the properties of a hidden layer.
Visibility for layers (and properties) is shown with an
icon.
Tip!
Press
⌘ Command
Control
⇧ Shift
view and select hidden layer outlines →
Hide and show layers
There are a few ways to toggle a layer's visibility.
Keyboard shortcuts
Toggle a layer's visibility off and on using the keyboard shortcut:
Mac:
Command
Shift
Windows:
Control
Shift
Layers panel
Toggle a layer's visibility in the
Layers
panel. You can toggle layers individually, or hide all child objects in a group or Frame.
Hover over the layer, group or Frame in the
Layers
panel.
Click on the
visibility icon to toggle the layer's visibility off.
The eye will close and the layer will be hidden in the canvas. It will also appear as inactive (greyed out) in the
Layers
panel.
Click
to toggle the layer's visibility on again.
Right sidebar
You can also toggle a layer's visibility in the right sidebar. Select layers on the canvas and click
in the
Appearance
section of the panel.
Note:
When you hide a layer, you won't be able to select it in the canvas. This includes using the
Select layer option
in the right-click menu. You can still select the layer in the Layers panel and by
showing outlines
